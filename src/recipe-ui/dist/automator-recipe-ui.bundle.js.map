{"version":3,"sources":["webpack:///webpack/bootstrap 8541b23cc42f281a508a","webpack:///./src/components/Utilities.js","webpack:///external \"jQuery\"","webpack:///./src/components/Actions.js","webpack:///./src/components/Field.js","webpack:///./src/components/Triggers.js","webpack:///./src/components/Validation.js","webpack:///./src/components/ItemCreatorIntegrations.js","webpack:///./src/components/ItemHeaderMenu.js","webpack:///./src/components/RecipeNotices.js","webpack:///./src/components/Modal.js","webpack:///./src/components/MetaboxItems.js","webpack:///./src/components/ItemHeaderIcon.js","webpack:///./src/components/ItemHeaderTag.js","webpack:///./src/components/Publish.js","webpack:///./src/components/RecipeTypeSelector.js","webpack:///./src/components/ItemHeaderSentence.js","webpack:///./src/components/MetaboxFooter.js","webpack:///./src/index.js","webpack:///./src/css/uncannyowl-automator.svg","webpack:///./src/css/uncannyowl-automator.ttf","webpack:///./src/css/uncannyowl-automator.woff","webpack:///./src/css/main.scss","webpack:///./src/components/FieldsGroup.js","webpack:///./src/components/FieldsRepeater.js","webpack:///./node_modules/html5sortable/dist/html5sortable.cjs.js","webpack:///./node_modules/sprintf-js/src/sprintf.js","webpack:///./src/components/UserSelector.js","webpack:///./src/components/ItemOptions.js","webpack:///./src/components/Markdown.js","webpack:///./src/components/ItemCreatorAdd.js","webpack:///./src/components/Closures.js","webpack:///./src/components/itemCreatorTaskSelector.js","webpack:///./src/components/MetaboxNotice.js","webpack:///./src/components/SendFeedback.js","webpack:///./src/components/RecipeTitle.js","webpack:///./src/components/Taxonomies.js"],"names":["createDataOnLoad","recipeObject","itemsObject","groupItemsByIntegration","sortArrayOfObjectsAlphabetically","getItemsByIntegration","userSelectorObject","filterAutomatorItemsByRecipeType","restCall","AJAXRequest","getCurrentFieldsValues","getField","getGlobalItem","getDOMElements","getTokens","getFieldTypes","parseStringWithTokens","isDefined","isEmpty","compareStrings","inArray","arrayDifference","vsprintf","isString","isObject","removeSpaces","replaceCurlyBraces","consoleLogLabel","consoleLogResult","escapeHTML","abbreviateText","getUniqueId","addParametersToURL","decodeEntities","callback","completeProcess","allRecipes","UncannyAutomator","recipes_object","triggers","actions","wp","recipe","type","RecipeTypeSelector","action","attributes","response","validActions","requiredData","Object","keys","$","each","index","theRecipe","ID","id","trigger","itemType","closures","closure","items","concat","apply","recipeIsAnonymous","item","itemToAdd","globalItem","meta","integration","code","itemCode","options","option","option_code","options_group","extend","groupsOfOptions","groupKey","fields","allFieldsOnThisGroup","hasMoreThanOneOption","length","field","sanitizeFieldData","fieldObject","isGroup","itemId","isRequired","required","isReadOnly","read_only","supportsTinyMCE","supports_tinymce","supportsCopyToClipboard","copy_to_clipboard","isAjax","is_ajax","groupId","optionCode","fieldType","input_type","label","description","placeholder","isHidden","is_hidden","tokenName","token_name","defaultValue","default_value","currentValue","relevant_tokens","includes","supportsTokens","supports_tokens","supportsCustomValue","supports_custom_value","customValue","custom_value_description","customValueDescription","supports_multiple_values","supportsMultipleValues","targetField","fill_values_in","endpoint","integrationId","fieldInstance","map","fieldData","FieldsGroup","JSON","parse","e","add_row_button","addRowButtonLabel","remove_row_button","removeRowButtonLabel","FieldsRepeater","Field","push","buttons","button","show_in","isValid","integrationCode","isLive","post_status","isMissing","tokens","inlineCss","inline_css","filterTokens","filter_tokens","support","optionKey","getAttributes","fieldAttributes","canLogNewUserIn","can_log_in_new_user","integrationName","integration_name","sentence","recipeTriggers","filter","validate","missingAttributes","stringify","console","error","isRecipeValid","hasLive","has","itemID","itemData","itemIsValid","optionsGroupID","optionsGroupData","groupIsValid","fieldValidation","message","i18n","validation","oneTrigger","userSelector","oneAction","liveItems","value","matchFilters","key","entries","integrations","forEach","integrationID","available","unavailable","proFeatures","allItemsArePro","every","is_pro","hasAvailableItems","hasUnavailableItems","hasTriggers","hasActions","propertyToCompare","Array","isArray","sort","a","b","compare","valueA","valueB","localeCompare","step","source","existingUser","newUser","dev","debugMode","collapseGroup","log","groupEnd","endPoint","data","onSuccess","onFail","validEndpoints","ajax","method","url","restURL","param","doing_rest","dataType","beforeSend","xhr","setRequestHeader","nonce","success","requiresRecipesObject","renderUI","statusCode","jqXHR","textStatus","errorThrown","fail","join","ajaxurl","status","location","reload","bgColor","values","groupOfFields","fieldId","getFieldID","fieldValue","getValue","getSelectCustomValue","getReadableValue","optionsGroupId","optionsGroup","theItem","integrationItems","element","validElements","cssSelector__metabox","$metabox","metabox","$items","find","cssSelector","$item","$contentContainer","contentContainer","cssSelector__tokenInSentence","groupID","cssSelector__fieldsContainer","$tokenInSentence","$fieldsContainer","$optionsContainer","tokenInSentence","fieldsContainer","optionsContainer","lastItem","last","tokensList","commonTokens","name","global","common","icon","siteName","userID","userUsername","userFirstName","userLastName","userEmail","userDisplay","userResetPassLink","adminEmail","siteUrl","recipeName","currentDate","currentTime","userMetaKey","autoLoginLink","tokensGroupAdvanced","advanced","jQuery","itemTokens","group","fieldRows","row","rowIndex","rowNumber","title","token","tokenIdentifier","tokenId","tokenType","itemSentence","tokensGroup","html","eval","replace","trim","filteredTokensList","tokenGroup","filteredTokens","validFieldTypes","string","plain","brackets","elements","normal","parts","tokensRegex","RegExp","normals","mappedString","tokenNumber","full_match","tokenParts","split","tokenPlaceholderText","tokenValueID","optionsID","text","hasFields","readableText","originalText","stringParts","normalNumber","sentenceSection","match","exec","part","elementAttributes","startsWithSpace","slice","endsWithSpace","CSSClass","abbreviatedText","isAbbreviated","append","get","variable","isEmptyObject","string1","string2","settings","caseSensitive","toString","toLowerCase","needle","haystack","array1","array2","not","format","arguments_array","require","start","end","labelStyle","groupCollapsed","tagsToReplace","replaceTag","tag","partLengths","Math","floor","textParts","substring","random","substr","parameters","window","href","URL","urlParameters","search","encodeURI","i","x","parameter","setAsURL","refresh","pageTitle","document","history","pushState","encodedString","$textarea","createElement","innerHTML","Actions","empty","UserSelector","MetaboxItems","ItemCreatorAdd","MetaboxFooter","Closures","createDOMelements","customValidationFunction","setAttributes","createFormElement","formElement","formElementClass","addClass","uniqueFieldID","isChildField","fieldContainer","prop","hasSelectedOption","numberOfOptions","defaultOptionExists","hasDefaultValue","option_value","option_name","$normalOptions","option_data","selectOption","hasValue","appendTo","val","$otherOptions","select","otherOptions","attr","customValueField","hasCustomValueDescription","undefined","customValueToken","parentOptionCode","defaultOption","prependTo","hasPlaceholder","prepend","selectHasSelectedOption","$noResults","Option","noResults","on","fieldContainerClass","checkboxLabel","checkboxPseudo","hasLabel","isToggle","toggle","checkboxToggleOn","off","checkboxToggleOff","color","align","$fields","$fieldContainers","$formRadioContainer","$field","add","$fakeRadio","formVariable","formVariableFieldContainer","formVariableFieldContainerRender","formVariableToggle","formVariableToggleIcon","formVariableDropdown","fieldLabel","fieldLabelAsterisk","fieldError","hasDescription","fieldDescription","customValueFieldContainer","removeClass","initLibraries","onChange","onFocus","renderError","getFieldContainer","onChangeAJAXCallback","doAJAX","parentField","onChangeTimeout","clearTimeout","setTimeout","event","currentTarget","ready","getMetaValue","startLoadingAnimation","parentFieldValue","targetFieldValue","recipe_id","integration_id","item_id","group_id","field_id","target_field","stopLoadingAnimation","targetFieldAttributes","setSelectOptions","setValue","isReady","is","getSelectOptionByValue","trueLabel","falseLabel","$checkedRadio","$radioContainer","closest","metaValue","doTrigger","allOptions","wantsToCheck","isChecked","triggerChange","removeSelectOptions","optionsDOM","optionDOM","rerenderSelect2","hasClass","CSSclass","initSelect2","initTokenSelector","theme","searchInputPlaceholder","language","templateResult","template","Number","isInteger","parseInt","postIDPlaceholder","templateSelection","escapeMarkup","markUp","getSelect2Settings","select2","$input","TokenSelector","editor","tinymce","remove","initialize","mediaButtons","wpautop","toolbar1","toolbar2","quicktags","getContent","Defaults","fn","amd","defaults","SearchDropdown","_renderSearchDropdown","prototype","render","decorated","$rendered","arguments","$search","fieldTokens","$this","responsive","margin","fieldElementType","classes","tokenReady","hiddenField","isTinyMCEinstance","TinyMCEinstanceID","list","getTokenList","hasTokens","config","inputHeight","init","mainFormElement","input","formDropdown","formDropdownContainer","formDropdownSearch","formDropdownSearchInput","formGroups","tokenGroupID","groupContainer","groupSource","groupIcon","groupName","groupToggle","groupToggleIcon","$tokenIcon","icon_svg","icon_16","icon_32","tokenGroups","individualTokenID","individualToken","tokenItem","getPosition","usefulElements","space","above","container","offset","top","scrollTop","below","height","dropdown","container_relative","dropDownHeight","hasSpaceBelow","setDirection","position","setScroll","open","maxHeight","css","addToken","cursorPosition","selectionStart","newCursorPosition","instance","newValue","focus","setSelectionRange","execCommand","hideDropdown","focusInput","resetDropdown","groups","no_results","search_input","bind","toggles","insert_tokens","resize","mirrorContent","toggleClass","bindClicksOutside","groups_title","target","hasResults","optionName","input_area","Triggers","ItemCreatorIntegrations","validateRecipe","validateItem","validateItemFields","validateField","getTokensFromString","replaceTokensInString","getExampleValueByFieldType","parseURL","initURLChecker","canSubmit","itemElement","optionsGroupElements","form","validateChildren","isFormValid","radioInput","first","selectedRadio","radioValue","field_type","fieldTypes","messages","invalid","textarea","int","multipleTokens","float","email","single","multiple","checkbox","radio","invalidType","tokensInString","$childrenFields","customValidation","int_regex","simulate_int","test","float_regex","simulate_float","email_regex","emails","simulate_email","allEmailsAreValid","hasMultipleEmails","hasMultipleVariables","validateURL","simulatedURL","$container","$error_container","regex","allTokens","matchedToken","output","regexCondition","changed","newURL","regexURL","tokensInValue","simulate_url","siteURL","checkURL","input_attributes","validationNotice","validationNoticeHeader","validationNoticeURL","preURL","$currentItem","header","createHeader","itemContent","createIntegrations","discoverMore","createDiscoverMoreIntegrations","replaceWith","insertAfter","itemCreatorAdd","titleContainer","titleContent","ItemHeaderMenu","filterByNonEmptyIntegrations","sortIntegrationsAlphabetically","integrationElement","createIntegration","itemCreatorTaskSelector","logo","isProOnly","proOnly","pro","isAvailable","requiresPro","uncannyAutomatorPro","$logoImg","icon_64","learnMore","hasItems","createItemActions","btn","btnIcon","dropdownUl","deleteAction","deleteText","delete","globalItemData","support_link","supportAction","supportText","isOpen","modal","Modal","confirmationModal","warning","deleteWarning","cancel","confirm","setEvents","afterSetEvents","show","onConfirm","getElements","confirmButton","box","destroy","publish","statusToggle","afterHide","RecipeNotices","createContainer","emptyContainer","createWarning","errorMode","createError","noticeContainer","class","thisRecipeNotices","notice","content","automatorContainer","isVisible","fadeDuration","create","modalBox","size","modalTitle","modalContent","modalWarning","modalButtons","cancelButton","events","emptyFunction","afterShow","onCancel","hide","thisModal","unbind","fadeIn","fadeOut","createItem","createNotice","ItemHeaderIcon","itemTag","ItemHeaderTag","titleSentence","ItemHeaderSentence","itemMissing","createItemIcon","$icon","createItemTag","Publish","timesPerUser","editLink","hiddenBox","saveButton","createMetabox","footer","timesRow","timesRowVisible","timesRowIconBox","timesRowIcon","timesRowName","timesValue","unlimited","timesRowValue","timesRowEdit","edit","timesRowHidden","timesRowHiddenBox","timesRowField","leaveEmpty","simulatedValue","oneOrBigger","timesField","timesRowButtons","timesRowSaveBtn","save","timesRowCancelBtn","getFormElement","recipeTypeRow","recipeTypeRowVisible","recipeTypeRowIconBox","recipeTypeRowIcon","recipeTypeRowName","recipeType","recipeTypeRowValue","recipeTypeLearnMore","userRecipeName","anonymousRecipeName","createdRow","createdRowVisible","createdRowIconBox","createdRowIcon","createdRowName","createdOn","createdRowValue","footerRow","footerRowLeft","footerMoveToDraft","moveToTrash","footerRowRight","recipeStatusToggle","liveRecipe","draftRecipe","recipeStatusToggleDOM","validateStatus","slideToggle","numberOfTimes","post_ID","recipe_completions_allowed","keyCode","makeLive","postStatus","canMakeLive","proToPublish","doWhenReady","listenSubmission","$recipeTypeSelector","userRecipeDescription","anonymousRecipeDescription","cantChangeLaterNotice","$elements","submitButton","preventDefault","saveRecipeType","showError","errorTryingToSaveOtherValue","errorDidNotSelectType","recipe_type","$triggersMetaboxTitle","triggersMetaboxTitle","userTriggers","anonymousTrigger","errorSomethingWentWrong","errorMessage","$error","$oldErrorContainer","createItemSentence","$token","optionGroupDOM","ItemOptions","itemToggle","liveRecipeItem","draftRecipeItem","itemStatusToggle","isValidItem","statusWarning","sentence_human_readable","shouldCreateMetaboxFooter","createFooter","recipeActions","addAnother","$anonymousNotice","createAnonymousNotice","$notice","anonymousOnlyOneTrigger","SendFeedback","RecipeTitle","Taxonomies","createFields","$label","$formGroup","$fieldElement","$description","fieldsValue","validationObject","sortable","rowFieldsTemplate","fieldsRows","rowFields","emptyRow","$table","getFieldsTable","makeRowsSortable","listenSave","updateAttributesFieldsFromRow","forcePlaceholderSize","handle","itemSerializer","serializedItem","sortableContainer","newOrder","detail","destination","newFieldRowsOrder","oldIndex","reRender","heading","$heading","headingColumn","$headingColumn","$headingContainer","$rows","numberOfRows","$row","$fieldCell","$actions","removeRowLabel","removeRow","$removeRowButton","deleteRow","$addRowButton","addRow","$actionsContainer","fieldsData","splice","rowsValidation","rowValidation","$content","getSelectSourceNodes","getOptionsNodes","getSentenceNodes","$userSelector","userType","existing","new","getHeaderNodes","$userTypeButtons","$option","userSource","getOptionsFields","optionsFields","roles","resources","administrator","$groupOfFields","uniqueField","uniqueFieldLabel","uniqueFieldOptionEmail","uniqueFieldOptionId","uniqueFieldOptionUsername","valueField","uniqueFieldValue","valueFieldLabel","valueFieldPlaceholder","$uniqueFieldFormElement","$valueFieldFormElement","fallbackField","createNewUserFieldLabel","fallback","createNewUserFieldOptionCreateUser","createNewUserFieldOptionDoNothing","$fallbackFieldFormElement","$doNothingNotice","doNothingMessage","$subOptionsContainer","newUserFields","firstName","lastName","username","displayName","password","passwordDescription","role","logUserIn","yes","no","$fieldFormElement","newUserFallbackField","existingUserFieldLabel","existingUserFieldOptionExisting","existingUserFieldOptionDoNothing","$newUserfallbackFieldFormElement","fieldsValues","prioritizedField","prioritizedFieldLabel","prioritizedFieldDescription","$prioritizedField","$buttonsContainer","$saveButton","$cancelButton","areAllFieldsValid","isFieldValid","recipeId","$summaryContainer","$sourceRow","$sourceRowToken","$dataRow","$dataRowSentence","summary","matches","withEmail","$fallbackRow","otherwiseText","createNewUser","doNothing","selectExistingUser","$fallbackRowSentence","otherwise","sentenceTitle","setOptions","$output","optionId","initTinyMCE","itemOptions","createButtons","automatorButtons","developerButtons","$buttonElement","css_classes","doOnClick","on_click","modules","Markdown","formValidation","optionValue","getOptionValue","hasSelect","hasRepeater","parseItalicsAndBold","parseAnchors","wholeMatch","m1","m2","m3","m4","m5","m6","m7","linkText","linkId","result","$containerBox","$button","createClosure","wasAdded","checkboxAttributes","select_option_name","closureInRecipe","getClosureByCodeFromItemsObject","itemid","checkboxField","$checkbox","recipePostID","item_code","default_meta","$newItem","$toggleContent","$itemHeader","$itemContent","$title","$itemTag","$titleSentence","createItemsList","$header","$itemActions","$itemIcon","$integrationTag","searchPlaceholder","unlockItems","unlockTriggers","unlockActions","$taskSelector","$searchField","$itemsList","isPro","restRequestCode","defaultMeta","query","createCancelButton","MetaboxNotice","noticeType","noticeMessage","build","sendFeedbackContainer","version","utmSource","sendFeedbackButton","sendFeedback","sendFeedbackButtonIcon","close_btn","dont_show_again_checkbox","overlay","mainContainer","localStorage","uapSendFeedbackWelcome","publishedTitle","createStatus","bindChanges","notSavedAlert","uapContainer","saving","savingIcon","savingText","saved","savedIcon","savedText","stop","typingTimeout","setStatusSaving","updateTitle","post_title","getTitle","setStatusSaved","revertChanges","Categories","Tags","allCategories","listenCheckboxes","saveCategory","MutationObserver","mutations","mutation","addedNodes","addedNode","observe","childList","checkboxData","getCheckboxData","setStatus","term_id","category_id","set_category","revertCheckboxValue","enable","tagsTextarea","listenModificationsToTags","tagsList","saveTags","tags","getTags","tagsCommaSeparated","tagsArray","asArray","commaSeparated"],"mappings":"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A;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,WAAW,kBAAkB;AAC7B,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C,WAAW,OAAO;AAClB;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,+BAA+B;AAC1C,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA,0BAA0B,UAAU;AACpC;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB;AACA,+CAA+C,8CAA8C;AAC7F;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB;AACA,8CAA8C,6CAA6C;;AAE3F;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA,0CAA0C,sEAAsE,uBAAuB,GAAG;AAC1I,+CAA+C,6DAA6D,4BAA4B,GAAG;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,sDAAsD,EAAE;AAC5G;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,iBAAiB;AAC5B,WAAW,OAAO;AAClB;AACA;AACA;AACA,sCAAsC,2CAA2C;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,uCAAuC,oBAAoB,EAAE;AAC7D,CAAC;;AAED;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,uCAAuC,oBAAoB,EAAE;AAC7D,CAAC;;AAED;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,YAAY;AACvB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA,wDAAwD,sBAAsB,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,oDAAoD,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,yBAAyB,EAAE;AACjH,gDAAgD,2CAA2C,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,gDAAgD,2CAA2C,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA,yCAAyC,6BAA6B,EAAE;AACxE;AACA;AACA,yCAAyC,6BAA6B,EAAE;AACxE;AACA,yCAAyC,6BAA6B,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,uCAAuC,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,6CAA6C,uCAAuC,EAAE;AACtF;AACA;AACA,iBAAiB;AACjB;AACA;AACA,6DAA6D,yBAAyB,EAAE;AACxF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"automator-recipe-ui.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8541b23cc42f281a508a","import {\n    validateField\n} from './Validation';\n\nimport RecipeTypeSelector from './RecipeTypeSelector';\nimport Field from './Field';\nimport FieldsGroup from './FieldsGroup';\nimport FieldsRepeater from './FieldsRepeater';\n\n/**\n * Create the data required for Automator to render\n * \n * @since 2.1.6\n * \n * @param  {Function} callback The function to invoke after the data is ready\n * @return undefined\n */\nexport function createDataOnLoad( callback = '' ){\n\tconsoleLogLabel( 'Start creating the main object' );\n\n\t// Check if there is a callback defined\n\tcallback = ! isEmpty( callback ) ? callback : () => {};\n\n\t// Create a function to continue with the process once we know what's\n\t// the recipe type\n\tconst completeProcess = () => {\n\t\t// Filter Automator items\n\t\tfilterAutomatorItemsByRecipeType();\n\t\t// Group the triggers and actions by integration\n\t\tgroupItemsByIntegration();\n\n\t\t// Get recipe items on page load\n\t\trecipeObject( 'create', {\n\t\t\tallRecipes: UncannyAutomator.recipes_object\n\t\t});\n\n\t\t// Remove unnecessary data\n\t\tdelete UncannyAutomator.recipes_object;\n\t    delete UncannyAutomator.triggers;\n\t    delete UncannyAutomator.actions;\n\n\t    consoleLogLabel( 'Ended creating the main object' );\n\n\t    // Invoke the callback\n\t    callback();\n\t}\n\t\n\t// Check if WP is ready\n\tif ( ! isDefined( UncannyAutomator.wp ) || ! UncannyAutomator.wp ){\n\t\t// Define recipe type manually\n\t\tUncannyAutomator.recipe.type = 'user';\n\n\t\t// Complete the process\n\t\tcompleteProcess();\n\t}\n\telse {\n\t\tif ( ! isEmpty( UncannyAutomator.recipe.type ) ){\n\t\t\t// Complete the process\n\t\t\tcompleteProcess();\n\t\t}\n\t\telse {\n\t\t\t// Call to Recipe Type Selector\n\t\t\tnew RecipeTypeSelector(() => {\n\t\t\t\t// Complete the process\n\t\t\t\tcompleteProcess();\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * Update all the objects used for the UI using the recipes_object object\n *\n * @since 0.5\n *\n * @param {string}   action - Action to perform. Valid actions: 'create', 'delete',\n * @param {object}   attributes - Data, check each switch to see the required data\n *\n * @return {boolean} TRUE if the action was made successfully\n */\n\nexport function recipeObject( action = null, attributes = {} ){\n    // Create response variable and set default value\n    let response     = false;\n\n    // Define valid actions\n    let validActions = [ 'create', 'validate' ];\n\n    // Check if the action is not undefined and if it's a valid action\n    if ( isDefined( action ) && inArray( action, validActions ) ){\n        switch ( action ){\n            case 'create':\n                // Define required attributes properties\n                let requiredData = [ 'allRecipes' ];\n\n                // Check if the attributes object has all the required properties\n                if ( inArray( requiredData, Object.keys( attributes ) ) ){\n                    // Get this recipe in the allRecipes object\n                    let recipe;\n\n                    // Create allRecipes variable\n                    let allRecipes = attributes.allRecipes;\n\n                    $.each( allRecipes, function( index, theRecipe ){\n                        if ( theRecipe.ID == UncannyAutomator.recipe.id ){\n                            recipe = theRecipe;\n                        }\n                    });\n\n                    // Add element to all triggers, actions and closures to define the itemType. We're going to need this later\n                    $.each( recipe.triggers, ( index, trigger ) => trigger.itemType = 'trigger' );\n                    $.each( recipe.actions,  ( index, action  ) => action.itemType  = 'action'  );\n                    $.each( recipe.closures, ( index, closure ) => closure.itemType = 'closure' );\n\n                    // Merge all the recipe triggers, actions and closures into one array\n                    let items = [].concat.apply( [], [ recipe.triggers, recipe.actions, recipe.closures ] );\n\n                    // Reset items object\n                    itemsObject( 'reset' );\n\n                    // Check if the recipe is anonymous\n                    const recipeIsAnonymous = UncannyAutomator.recipe.type == 'anonymous';\n\n                    // Iterate each item and add it to the itemsObject\n                    $.each( items, function( index, item ){\n                        // We're going to get all the required information to before adding the item to the items object\n                        let itemToAdd;\n\n                        // Get the data from the global item\n                        let globalItem = getGlobalItem( item.meta.integration, item.itemType, item.meta.code );\n\n                        // Get the item code in this variable\n                        let itemCode = item.meta.code;\n\n                        // Check if the required PHP code for this item exists\n                        if ( isDefined( globalItem ) ){\n                            // Create variable to save all the options\n                            let options = {};\n\n                            // Check if it has simple options (options that aren't part of a group of options)\n                            if ( isDefined( globalItem.options ) ){\n                                $.each( globalItem.options, function( index, option ){\n                                    options[ option.option_code ] = [ option ];\n                                });\n                            }\n\n                            // Add group of options\n                            if ( isDefined( globalItem.options_group ) ){\n                                $.extend( true, options, globalItem.options_group );\n                            }\n\n                            // We're going to create another options variable to create the options object as we're going to add it to the item object\n                            let groupsOfOptions = {}\n\n                            $.each( options, function( groupKey, fields ){\n                                let allFieldsOnThisGroup = [];\n\n                                // Check if it has more this group of fields has more than one option\n                                let hasMoreThanOneOption = fields.length > 1;\n\n                                $.each( fields, function( index, field ){\n                                    // Check if value is undefined but has a default value\n                                    /*\n                                    if ( ! isDefined( item.meta[ field.option_code ] ) && isDefined( item.meta.default_value ) ){\n                                        item.meta[ field.option_code ] = field.default_value;\n                                    }\n                                    */\n\n                                    // Sanitize field data\n                                    const sanitizeFieldData = ( field ) => {\n                                        // Create field object\n                                        let fieldObject = {\n                                            isGroup:            hasMoreThanOneOption,\n                                            itemId:             item.ID,\n                                            itemType:           item.itemType,\n\n                                            isRequired:         isDefined( field.required ) ? field.required : false,\n                                            isReadOnly:         isDefined( field.read_only ) ? field.read_only : false,\n                                            supportsTinyMCE:    isDefined( field.supports_tinymce ) ? field.supports_tinymce : false,\n                                            supportsCopyToClipboard: isDefined( field.copy_to_clipboard ) ? field.copy_to_clipboard : false,\n\n                                            isAjax:             isDefined( field.is_ajax ) ? field.is_ajax : false,\n\n                                            groupId:            groupKey,\n                                            optionCode:         field.option_code,\n                                            fieldType:          field.input_type,\n\n                                            label:              field.label,\n                                            description:        field.description,\n                                            placeholder:        field.placeholder,\n                                            isHidden:           isDefined( field.is_hidden ) ? field.is_hidden : false,\n                                            tokenName:          isDefined( field.token_name ) ? field.token_name : field.label,\n\n                                            defaultValue:       field.default_value,\n                                            currentValue:       isDefined( item.meta[ field.option_code ] ) ? item.meta[ field.option_code ] : field.default_value,\n                                            relevant_tokens:    isDefined( field.relevant_tokens ) ? field.relevant_tokens : false,\n                                        }\n\n                                        /**\n                                         * We want to make supportsTokens true by\n                                         * default, but we have to check if the field\n                                         * should support tokens first.\n                                         * \n                                         * - Field type: For now, the token selector\n                                         * only supports text, textarea, integer, float,\n                                         * email, and URL fields. Check if this field\n                                         * is one of those.\n                                         * \n                                         * - Item type: The tokens are rendered only in\n                                         * the user selector, actions and closures. \n                                         * Check if the item type if one of those.\n                                         * \n                                         * - Read-only property: Check if the field is\n                                         * not read-only. Even if the field meets the\n                                         * previous conditions, it doesn't make sense\n                                         * to render the token selector on a field\n                                         * which value is supposed to be unmodifiable.\n                                         * \n                                         * If the field meets all the previous\n                                         * conditions, check if it has a defined value\n                                         * for the supportsTokens property. Otherwise,\n                                         * set it true. If it doesn't meet at least\n                                         * one of the conditions, make it false.\n                                         */\n                                        \n                                        if (\n                                            [ 'text', 'textarea', 'int', 'float', 'email', 'url', 'select' ].includes( fieldObject.fieldType ) &&\n                                            [ 'action', 'closure' ].includes( fieldObject.itemType ) &&\n                                            ! fieldObject.isReadOnly\n                                        ){\n                                            fieldObject.supportsTokens = isDefined( field.supports_tokens ) ? field.supports_tokens : true;\n                                        }\n                                        else {\n                                            fieldObject.supportsTokens = false;\n                                        }\n\n                                        // If it's a select, check if it support custom values\n                                        if ( fieldObject.fieldType == 'select' ){\n                                            // Check if the supportsCustomValue parameter is defined. If it's not,\n                                            // then check if the field is being used on an action or closure. If so, make it true\n                                            // by default, or false otherwise. Then, on \"Field\", set the default value to false.\n                                            // We're doing this because, for now, we're supporting custom values on dropdowns\n                                            // only on actions and closures, nowhere else. So if someone tries to use a dropdown\n                                            // outside an action or closure, it shouldn't render the \"custom value\" option by default\n                                            fieldObject.supportsCustomValue = isDefined( field.supports_custom_value ) ? field.supports_custom_value : ( [ 'action', 'closure' ].includes( fieldObject.itemType ) ? true : false );\n                                            // ⚠️ Disable functionality\n                                            // fieldObject.supportsCustomValue = false;\n\n                                            // Check if it supports custom values and it also supports tokens\n                                            if ( fieldObject.supportsCustomValue ){\n                                                // Add custom value\n                                                fieldObject.customValue = isDefined( item.meta[ `${ fieldObject.optionCode }_custom` ] ) ? item.meta[ `${ fieldObject.optionCode }_custom` ] : '';\n                                            }\n\n                                            // Check if it has a description for the custom value field\n                                            if ( isDefined( field.custom_value_description ) ){\n                                                fieldObject.customValueDescription = field.custom_value_description;\n                                            }\n\n                                            // Check if it supports multiple values\n                                            if ( isDefined( field.supports_multiple_values ) ){\n                                                 fieldObject.supportsMultipleValues = field.supports_multiple_values;\n                                            }\n                                        }\n\n                                        // Check if it an AJAX field\n                                        if ( fieldObject.isAjax ){\n                                            fieldObject.targetField   = isDefined( field.fill_values_in ) ? field.fill_values_in : '';\n                                            fieldObject.endpoint      = isDefined( field.endpoint ) ? field.endpoint : '';\n                                            fieldObject.integrationId = globalItem.integration;\n\n                                            // Check if it's an ajax field without target field\n                                            // This means no other field will change when this one changes\n                                            // and that we have to do an AJAX request when rendering the field, on page load \n                                            if ( isEmpty( fieldObject.targetField ) ){\n                                                fieldObject.targetField = field.option_code;\n                                            }\n                                        }\n\n                                        // Check if it's select or radio. In that case, add the options\n                                        if ( [ 'select', 'radio' ].includes( fieldObject.fieldType ) ){\n                                            fieldObject.options = isDefined( field.options ) ? field.options : [];\n                                        }\n\n                                        // Return field object\n                                        return fieldObject;\n                                    }\n                                    \n                                    let fieldObject, fieldInstance;\n\n                                    // Check if it's a group of fields\n                                    if ( field.input_type == 'group' ){\n                                        // Get the field data\n                                        fieldObject = {\n                                            groupId:          groupKey,\n                                            optionCode:       field.option_code,\n                                            fieldType:        field.input_type,\n\n                                            isGroup:          hasMoreThanOneOption,\n                                            itemId:           item.ID,\n                                            itemType:         item.itemType,\n\n                                            label:            field.label,\n                                            description:      field.description,\n\n                                            tokenName:        isDefined( field.token_name ) ? field.token_name : field.label,\n\n                                            isRequired:       isDefined( field.required ) ? field.required : false,\n\n                                            fields: field.fields.map(( fieldData ) => {\n                                                return sanitizeFieldData( fieldData );\n                                            })\n                                        }\n\n                                        // Create field instance\n                                        fieldInstance = new FieldsGroup( fieldObject );\n                                    }\n                                    else if ( field.input_type == 'repeater' ){\n                                        // Try to parse the value of the repeater\n                                        try {\n                                            item.meta[ field.option_code ] = JSON.parse( item.meta[ field.option_code ] );\n                                        } catch ( e ){}\n\n                                        // Get field data\n                                        fieldObject = {\n                                            groupId:          groupKey,\n                                            optionCode:       field.option_code,\n                                            fieldType:        field.input_type,\n\n                                            isGroup:          hasMoreThanOneOption,\n                                            itemId:           item.ID,\n                                            itemType:         item.itemType,\n\n                                            label:            field.label,\n                                            description:      field.description,\n\n                                            tokenName:        isDefined( field.token_name ) ? field.token_name : field.label,\n\n                                            defaultValue:     field.default_value,\n                                            currentValue:     isDefined( item.meta[ field.option_code ] ) ? item.meta[ field.option_code ] : field.default_value,\n\n                                            isRequired:       isDefined( field.required ) ? field.required : false,\n\n                                            fields: field.fields.map(( fieldData ) => {\n                                                return sanitizeFieldData( fieldData );\n                                            })\n                                        }\n\n                                        // Check if this one has a custom \"Add row\" label\n                                        if ( isDefined( field.add_row_button ) ){\n                                            fieldObject.addRowButtonLabel = field.add_row_button;\n                                        }\n\n                                        // Check if this one has a custom \"Remove row\" label\n                                        if ( isDefined( field.remove_row_button ) ){\n                                            fieldObject.removeRowButtonLabel = field.remove_row_button;\n                                        }\n\n                                        // Create field instance\n                                        fieldInstance = new FieldsRepeater( fieldObject );\n                                    }\n                                    // Otherwise, treat it as a normal field\n                                    else {\n                                        // Get the field data\n                                        fieldObject = sanitizeFieldData( field );\n\n                                        // Create the field instance\n                                        fieldInstance = new Field( fieldObject.fieldType, fieldObject, false );\n                                    }\n                                   \n                                    // Add field to the group of fields\n                                    allFieldsOnThisGroup.push( fieldInstance );\n                                });\n\n                                // Array where we're going to save the buttons of this item\n                                let buttons = [];\n\n                                // Check if this group of options has buttons\n                                if ( isDefined( globalItem.buttons ) ){\n                                    // Iterate buttons\n                                    $.each( globalItem.buttons, ( index, button ) => {\n                                        // Check if we have to add the button to this group\n                                        if ( button.show_in == groupKey ){\n                                            buttons.push( button );\n                                        }\n                                    });\n                                }\n\n                                // Push fields to the groupsOfOptions object\n                                groupsOfOptions[ groupKey ] = {\n                                    fields:  allFieldsOnThisGroup,\n                                    isValid: false, // FALSE by default, but we're going to do a validation later\n                                    buttons: buttons\n                                }\n                            });\n\n                            // Create object with the item data\n                            itemToAdd = {\n                                id:              item.ID,\n                                itemType:        item.itemType,\n                                itemCode:        itemCode,\n                                integrationCode: globalItem.integration,\n                                isLive:          item.post_status == 'publish' ? true : false,\n                                options:         groupsOfOptions,\n                                meta:            item.meta,\n                                isMissing:       false,\n                                tokens:          isDefined( item.tokens ) ? item.tokens : [],\n                                inlineCss:       isDefined( globalItem.inline_css ) ? globalItem.inline_css : '',\n                                filterTokens:    isDefined( globalItem.filter_tokens ) ? globalItem.filter_tokens : '',\n                            }\n\n                            // Check if the support link is defined\n                            if ( isDefined( globalItem.support ) ){\n                                itemToAdd.support = globalItem.support;\n                            }\n\n                            // Create meta for those field that don't have a value saved in the database but have a default value\n\n                            // Get all fields\n                            let fields = {};\n\n                            // Create an object with all the options from the field\n                            $.each( groupsOfOptions, function( optionKey, options ){\n                                $.each( options.fields, function( index, field ){\n                                    fields[ field.getAttributes().optionCode ] = field;\n                                });\n                            });\n\n                            $.each( fields, ( index, field ) => {\n                                let fieldAttributes = field.getAttributes();\n                                if ( ( ! isDefined( itemToAdd.meta[ fieldAttributes.optionCode ] ) || isEmpty( itemToAdd.meta[ fieldAttributes.optionCode ] ) ) && ! isEmpty( fieldAttributes.currentValue ) ){\n                                    itemToAdd.meta[ fieldAttributes.optionCode ] = fieldAttributes.currentValue;\n                                }\n                            });\n\n                            // If it's anonymous, add the \"canLogUserIn\" property\n                            // Also set the default value\n                            if ( recipeIsAnonymous ){\n                                itemToAdd.canLogNewUserIn = isDefined( globalItem.can_log_in_new_user ) ? globalItem.can_log_in_new_user : true;\n                            }\n\n                            /*\n\n                            // Create readable meta\n                            itemToAdd.metaReadable = jQuery.extend( true, {}, itemToAdd.meta );\n\n                            // Iterate each meta and search for a readable value\n                            $.each( itemToAdd.metaReadable, ( metaKey, metaValue ) => {\n                                let field = fields[ metaKey ];\n\n                                // Check if there is a field with that ID\n                                if ( isDefined( field ) ){\n                                    field = field.getAttributes();\n\n                                    // Check if it's a select\n                                    if ( field.fieldType == 'select' ){\n                                        let value;\n\n                                        // Iterate each option of the select and search for the text instead of the value\n                                        $.each( field.options, function( index, selectOption ){\n                                            // Compare the value with the metaValue\n                                            if ( selectOption.value == metaValue ){\n                                                // Set new metaValue\n                                                itemToAdd.metaReadable[ metaKey ] = selectOption.text;\n                                            }\n                                        });\n                                    }\n                                }\n                            });\n\n                            // Check if we have to add default values\n                            $.each( fields, function( index, field ){\n                                if ( ! isDefined( itemToAdd.metaReadable[ field.optionCode ] ) && ! isEmpty( field.defaultValue ) ){\n                                    if ( field.fieldType == 'select' ){\n\n                                        // Iterate each option of the select and search for the text instead of the value\n                                        $.each( field.options, function( index, selectOption ){\n                                            // Compare the value with the metaValue\n                                            if ( selectOption.value == metaValue ){\n                                                // Set new metaValue\n                                                itemToAdd.metaReadable[ field.optionCode ] = selectOption.text;\n                                            }\n                                        });\n                                    }\n                                    else {\n                                        itemToAdd.metaReadable[ field.optionCode ] = field.defaultValue;\n                                    }\n                                }\n                            });\n\n                            */\n                        }\n                        else {\n                            // Create object with the item data\n                            itemToAdd = {\n                                id:              item.ID,\n                                itemType:        item.itemType,\n                                itemCode:        item.meta.code,\n                                integrationCode: item.meta.integration,\n                                integrationName: item.meta.integration_name,\n                                sentence:        item.meta.sentence,\n                                isLive:          item.post_status == 'publish' ? true : false,\n                                tokens:          [],\n                                options:         {},\n                                meta:            item.meta,\n                                isMissing:       true,\n                            }\n\n                            // If it's anonymous, add the \"canLogUserIn\" property\n                            // Also set the default value\n                            if ( recipeIsAnonymous ){\n                                itemToAdd.canLogNewUserIn = isDefined( item.meta.can_log_in_new_user ) ? ( item.meta.can_log_in_new_user == 'true' ) : true;\n                            }\n                        }\n\n                        // We have to add it\n                        itemsObject( 'add', itemToAdd );\n                    });\n\n                    // Check if the recipe is anonymous and can log the new user in\n                    if ( recipeIsAnonymous ){\n                        // Set the default value\n                        UncannyAutomator.recipe.canLogNewUserIn = false;\n\n                        // Get the recipe items\n                        const recipeTriggers = itemsObject( 'get', {\n                            filter: {\n                                itemType: 'trigger'\n                            }\n                        });\n\n                        // Check if it has items\n                        if ( Object.keys( recipeTriggers ) > 0 ){\n                            // Change the default value\n                            UncannyAutomator.recipe.canLogNewUserIn = true;\n\n                            // Iterate the triggers\n                            $.each( recipeTriggers, ( index, trigger ) => {\n                                // Check if this trigger allows the recipe\n                                // to log the new user in\n                                UncannyAutomator.recipe.canLogNewUserIn = UncannyAutomator.recipe.canLogNewUserIn && trigger.canLogNewUserIn;\n                            });\n                        }\n                    }\n\n\t\t\t\t\t// Check if we should validate the data\n\t\t\t\t\tif ( ! isDefined( attributes.validate ) || ( isDefined( attributes.validate ) && attributes.validate ) ){\n\t\t\t\t\t\t// Validate the recipe to update the isValid elements\n                    \trecipeObject( 'validate' );\n\t\t\t\t\t}\n                }\n                else {\n                    // Show to the developer what attributes are missing\n                    let missingAttributes = JSON.stringify( arrayDifference( attributes, requiredData ) );\n                    console.error( vsprintf( '%s: Some attributes are missing: %s', [ 'recipeObject', missingAttributes ] ) );\n                }\n\n                break;\n\n            case 'validate':\n                // Valid by default, will be changed to false if we find an error\n                let isRecipeValid = true;\n\n                // Check if the recipe has triggers, actions and/or closures\n                // Update UncannyAutomator.recipe.hasLive\n                $.each( UncannyAutomator.recipe.hasLive, function( itemType, has ){\n                    // All false\n                    UncannyAutomator.recipe.hasLive[ itemType ] = false;\n                });\n\n                // Check if there is at least one item of that type in the main object\n                $.each( UncannyAutomator.recipe.items, function( itemID, itemData ){\n                    // If at least one live item, then set TRUE\n                    if ( itemData.isLive ){\n                        UncannyAutomator.recipe.hasLive[ itemData.itemType ] = true;\n                    }\n                });\n\n                // Iterate each item\n                $.each( UncannyAutomator.recipe.items, function( itemID, itemData ){\n\n                    // We will use this variable to decide if the item is valid or not\n                    let itemIsValid = true;\n\n                    // Iterate each group of fields\n                    $.each( itemData.options, function( optionsGroupID, optionsGroupData ){\n\n                        // We will use this variable to decide if the group of fields is valid or not\n                        let groupIsValid = true;\n\n                        // Iterate each field\n                        $.each( optionsGroupData.fields, function( index, field ){\n                            // Validate the field. Read validateField comments to learn more.\n                            let fieldValidation = field.validate( false );\n\n                            // Check if the option is invalid, if at least one field is invalid make all the group invalid\n                            if ( ! fieldValidation.isValid ){\n                                groupIsValid = false;\n                            }\n                        });\n\n                        // Set result\n                        UncannyAutomator.recipe.items[ itemID ].options[ optionsGroupID ].isValid = groupIsValid;\n\n                        // Check if the group is invalid, if at least on group of fields is invalid make all the item invalid\n                        if ( ! groupIsValid ){\n                            itemIsValid = false;\n                        }\n                    });\n\n                    UncannyAutomator.recipe.items[ itemID ].isValid = itemIsValid;\n\n                    // Check if the item is invalid. If at least one item is invalid make all the recipe invalid\n                    if ( itemData.isLive && ! itemIsValid ){\n                        isRecipeValid = false;\n                    }\n                });\n\n                // Now check what items we have in the object\n                // We must have at least one trigger and an action or closure\n                // Check if it has at least one trigger\n                if ( ! UncannyAutomator.recipe.hasLive.trigger ){\n                    isRecipeValid = false;\n\n                    // Set error message\n                    UncannyAutomator.recipe.message.error = UncannyAutomator.i18n.validation.recipe.oneTrigger;\n                }\n                else {\n                    // Validate user selector\n                    if ( UncannyAutomator.recipe.type == 'anonymous' && ! UncannyAutomator.recipe.userSelector.isValid ){\n                        // Then the recipe is not valid\n                        isRecipeValid = false;\n\n                        // Add message\n                        UncannyAutomator.recipe.message.error = UncannyAutomator.i18n.validation.recipe.userSelector;\n                    }\n                    else {\n                        // Check if it has at least one action or closure\n                        if ( ! UncannyAutomator.recipe.hasLive.action && ! UncannyAutomator.recipe.hasLive.closure ){\n                            isRecipeValid = false;\n\n                            // Set error message\n                            UncannyAutomator.recipe.message.error = UncannyAutomator.i18n.validation.recipe.oneAction;\n                        }\n                        else {\n                            // Check if the message has to be more generic\n                            if ( ! UncannyAutomator.recipe.hasLive.trigger && ( ! UncannyAutomator.recipe.hasLive.action && ! UncannyAutomator.recipe.hasLive.closure ) ){\n                                // Set error message\n                                UncannyAutomator.recipe.message.error = UncannyAutomator.i18n.validation.recipe.liveItems;\n                            }\n                        }\n                    }\n                }\n\n                UncannyAutomator.recipe.isValid = isRecipeValid;\n\n                // Reset message if recipe is valid\n                if ( isRecipeValid ){\n                    // Reset message, we don't need it\n                    UncannyAutomator.recipe.message.error = '';\n                }\n\n                // Everything is ok, return true\n                response = true;\n\n                break;\n        }\n    }\n    else {\n        // Has to add error code\n        console.error( vsprintf( '%s: The action \"%s\" isn\\'t defined', [ 'recipeObject', action ] ) );\n    }\n\n    return response;\n}\n\n/**\n * Add, update, delete, update, validate and clean the main recipe object\n *\n * @since 0.2\n *\n * @param {string}   action - Action to perform. Valid actions: 'add', 'update', 'delete', 'reset', 'get', and 'clean'.\n * @param {object}   attributes\n * The required properties depend of the requested action.\n * For the 'update' action it have to include the properties that need to be updated in the items object.\n * For the 'add' action:\n * @param {int}      attributes.id        Item ID\n * @param {string}   attributes.itemType  The item type. The valid types are 'trigger', 'action' and 'closure'\n *\n * @return {boolean} TRUE if the action was made successfully\n */\n\nexport function itemsObject( action = null, attributes = {} ){\n    // Create response variable and set default value\n    let response     = false;\n\n    // Define valid actions\n    let validActions = [ 'add', 'delete', 'clean', 'reset', 'update', 'get' ];\n\n    // Check if the action is not undefined and if it's a valid action\n    if ( isDefined( action ) && inArray( action, validActions ) ){\n\n        switch ( action ){\n            case 'add':\n                // Extend default attributes object with default values\n                attributes = $.extend({\n                    isValid: false, // Because it's going to be empty\n                    isLive: false, // Draft by default\n                }, attributes );\n\n                // Define required attributes properties\n                let requiredData = [ 'id', 'itemType' ];\n\n                // Check if the attributes object has all the required properties\n                if ( inArray( requiredData, Object.keys( attributes ) ) ){\n\n                    // Has ID, check if it wasn't added\n                    if ( ! isDefined( UncannyAutomator.recipe.items[ attributes.id ] ) ){\n\n                        // Create property\n                        UncannyAutomator.recipe.items[ attributes.id ] = attributes;\n\n                        // Clean undefined properties\n                        itemsObject( 'clean', {} );\n\n                        // Everything is ok, return true\n                        response = true;\n                    }\n                }\n                else {\n                    // Show to the developer what attributes are missing\n                    let missingAttributes = JSON.stringify( arrayDifference( attributes, requiredData ) );\n                    console.error( vsprintf( '%s: Some attributes are missing: %s', [ 'itemsObject', missingAttributes ] ) );\n                }\n\n                break;\n\n            case 'delete':\n                attributes = $.extend({\n                    isValid: false,\n                }, attributes );\n\n                if ( ! isEmpty( attributes.id ) ){\n\n                    if ( isDefined( UncannyAutomator.recipe.items[ attributes.id ] ) ){\n                        delete UncannyAutomator.recipe.items[ attributes.id ];\n\n                        // Everything is ok, return true\n                        response = true;\n                    }\n                    else {\n                        console.error( vsprintf( '%s: We didn\\'t find an item with this the ID %s', [ 'itemsObject', attributes.id ] ) );\n                    }\n\n                }\n                else {\n                    console.error( vsprintf( '%s: Invalid item ID', [ 'itemsObject' ] ) );\n                }\n\n                break;\n\n            case 'clean':\n                // Delete undefined and null properties\n\n                let items = {};\n\n                $.each( UncannyAutomator.recipe.items, function( index, value ){\n                    if ( isDefined( value ) ){\n                        items[ index ] = value;\n                    }\n                });\n\n                UncannyAutomator.recipe.items = items;\n\n                // Everything is ok, return true\n                response = true;\n\n                break;\n\n            case 'update':\n                // Update item attributes\n\n                if ( ! isEmpty( attributes.id ) ){\n\n                    if ( isDefined( UncannyAutomator.recipe.items[ attributes.id ] ) ){\n\n                        // Extend item object properties with new ones\n                        UncannyAutomator.recipe.items[ attributes.id ] = $.extend( {}, UncannyAutomator.recipe.items[ attributes.id ], attributes );\n\n                        // Everything is ok, return true\n                        response = true;\n\n                    }\n                    else {\n                        console.error( vsprintf( '%s: We didn\\'t find an item with this the ID %s', [ 'itemsObject', attributes.id ] ) );\n                    }\n\n                }\n                else {\n                    console.error( vsprintf( '%s: Invalid item ID', [ 'itemsObject' ] ) );\n                }\n\n                break;\n\n            case 'reset':\n                // Delete all the items in the items object\n                UncannyAutomator.recipe.items = {}\n\n                // Return true\n                response = true;\n                break;\n\n            case 'get':\n                // Check if we have to filter items\n                if ( ! isEmpty( attributes.filter ) ){\n                    // Create a new items object. We're going to add items to this one if the filters match\n                    let items = {}\n\n                    // Iterate all current items\n                    $.each( UncannyAutomator.recipe.items, function( itemId, item ){\n                        let matchFilters = true;\n\n                        $.each( attributes.filter, function( key, value ){\n                            if ( item[ key ] != value ){\n                                matchFilters = false;\n                            }\n                        });\n\n                        // Check if we have to add this item\n                        if ( matchFilters ){\n                            items[ itemId ] = item;\n                        }\n                    });\n\n                    // Return the new items object\n                    response = items;\n                }\n                else {\n                    response = UncannyAutomator.recipe.items;\n                }\n\n                break;\n        }\n    }\n    else {\n        // Has to add error code\n        console.error( vsprintf( '%s: The action \"%s\" isn\\'t defined', [ 'itemsObject', action ] ) );\n    }\n\n    return response;\n}\n\n/**\n * Add the triggers and actions to each integration.\n * Change the data structure so it's possible to know\n * what items and integrations are pro\n *\n * @since 2.1.4\n */\nexport function groupItemsByIntegration(){\n    // Iterate the integrations\n    Object.entries( UncannyAutomator.integrations ).forEach(([ integrationID, integration ]) => {\n        // Get the list of available triggers and actions\n        // Sort them alphabetically\n        let triggers = {\n                available:   sortArrayOfObjectsAlphabetically( UncannyAutomator.triggers.filter( item => item.integration == integrationID ), 'select_option_name', sentence => replaceCurlyBraces( sentence ) ),\n                unavailable: [],\n            },\n            actions  = {\n                available:   sortArrayOfObjectsAlphabetically( UncannyAutomator.actions.filter( item => item.integration == integrationID ), 'select_option_name', sentence => replaceCurlyBraces( sentence ) ),\n                unavailable: []\n            };\n\n        if ( ! isDefined( UncannyAutomator.wp ) || ! UncannyAutomator.wp ){\n            // Check if there are PRO items for this integration\n            if (\n                isDefined( UncannyAutomator.proFeatures ) && \n                isDefined( UncannyAutomator.proFeatures[ integrationID ] )\n            ){\n                // Push the pro logged-in triggers to the unavailable triggers array\n                // Sort them alphabetically\n                triggers.unavailable = sortArrayOfObjectsAlphabetically( UncannyAutomator.proFeatures[ integrationID ].triggers.filter( trigger => trigger.type == 'logged-in' ), 'name', sentence => replaceCurlyBraces( sentence ) );\n\n                // Push the pro actions to the unavailable actions array\n                // Sort them alphabetically\n                actions.unavailable  = sortArrayOfObjectsAlphabetically( UncannyAutomator.proFeatures[ integrationID ].actions, 'name', sentence => replaceCurlyBraces( sentence ) );\n            }\n        }\n\n        // Evaluate if all the available items are pro\n        // To do that, iterate every element using the method every\n        // and return the value of \"is_pro\"\n        triggers.allItemsArePro     = triggers.available.every( item => isDefined( item.is_pro ) ? item.is_pro : false );\n        actions.allItemsArePro      = actions.available.every( item => isDefined( item.is_pro ) ? item.is_pro : false );\n\n        // Check if the integration has available triggers and actions\n        triggers.hasAvailableItems  = triggers.available.length > 0;\n        actions.hasAvailableItems   = actions.available.length > 0;\n\n        // Check if the integration has unavailable triggers and actions\n        triggers.hasUnavailableItems = triggers.unavailable.length > 0;\n        actions.hasUnavailableItems  = actions.unavailable.length > 0;\n\n        // Check if it has any kind of items\n        triggers.hasTriggers = triggers.hasAvailableItems || triggers.unavailable.length > 0;\n        actions.hasActions   = actions.hasAvailableItems || actions.unavailable.length > 0;\n\n        // Add the items to the integration\n        UncannyAutomator.integrations[ integrationID ].items = {\n            triggers: triggers,\n            actions:  actions\n        }\n    });\n}\n\n/**\n * Sort an array of objects using one of the properties\n *\n * @since  2.1.4\n * @param  {Array}  items             The array\n * @param  {String} propertyToCompare The property used to compare the elements\n * @return {Array}                    The array, sorted\n */\nexport function sortArrayOfObjectsAlphabetically( items = [], propertyToCompare = '', filter ){\n    // Check if there isn't a filter defined\n    if ( ! isDefined( filter ) ){\n        filter = value => value;\n    }\n\n    // Check if it's an array and it's not empty\n    if ( Array.isArray( items ) && ! isEmpty( items ) ){\n        // Sort the array of integrations using the integration name\n        items = items.sort(( a, b ) => {\n            // Define the default value\n            let compare = 0;\n\n            // Check if the elements have the properties we're going to use to compare\n            if ( isDefined( a[ propertyToCompare ] ) && isDefined( b[ propertyToCompare ] ) ){\n                // Filter the values\n                let valueA = filter( a[ propertyToCompare ] ),\n                    valueB = filter( b[ propertyToCompare ] );\n\n                // Check which integration name should go first\n                compare = valueA.localeCompare( valueB );\n\n                // Validate the value\n                // Do NOT rely on exact return values of -1 or 1\n                // Negative and positive integer results vary between browsers (as well as between browser versions) because the W3C specification only mandates negative and positive values. Some browsers may return -2 or 2, or even some other negative or positive value.\n                compare = compare > 0 ? 1 : compare;\n                compare = compare < 0 ? -1 : compare;\n            }  \n\n            // Return result\n            return compare;\n        });\n    }\n\n    // Return the new array\n    return items;\n}\n\n/**\n * Get a list of triggers or actions by integration\n * @param  {String} integrationID The integration ID\n * @param  {String} itemType      The item type. Valid values: \"trigger\", \"triggers\", \"action\" and \"actions\"\n * @return {Object}               And object with the available and unavailable items\n *\n * @since 2.1.4\n */\nexport function getItemsByIntegration( integrationID = '', itemType = 'triggers' ){\n    // Create the array where we're going to save the items\n    let items = {\n        available: {},\n        unavailable: {}\n    };\n\n    // Convert itemType \"trigger\" to \"triggers\"\n    itemType = itemType == 'trigger' ? 'triggers' : itemType;\n    // Convert itemType \"action\" to \"actions\"\n    itemType = itemType == 'action' ? 'actions' : itemType;\n\n    // Validate the parameter itemType\n    if ( [ 'triggers', 'actions' ].includes( itemType ) ){\n        // Check if the integration ID is defined\n        if ( ! isEmpty( integrationID ) ){\n            // Check if the integration exists\n            if ( isDefined( UncannyAutomator.integrations[ integrationID ] ) ){\n                // Get the requested items\n                items = UncannyAutomator.integrations[ integrationID ].items[ itemType ];\n            }\n        }\n    }\n\n    // Return the triggers\n    return items;\n}\n\n/**\n * Update user selector data\n *\n * @since  2.0\n */\n\nexport function userSelectorObject( action = null, attributes = {} ){\n    // Create response variable and set default value\n    let response     = false;\n\n    // Define valid actions\n    let validActions = [ 'set-step', 'get-step', 'set-source', 'update-fields', 'reset-fields' ];\n\n    // Create shortcut of the user selector object\n    const userSelector = UncannyAutomator.recipe.userSelector;\n\n    // Check if the action is not undefined and if it's a valid action\n    if ( isDefined( action ) && inArray( action, validActions ) ){\n        // Create empty array to check if the actions have the required data\n        let requiredData = [];\n\n        switch ( action ){\n            /**\n             * Get the current step so we know what we have to render\n             * There are 4 steps:\n             *\n             * 1. select-source: Where the recipe creator select the source of the user.\n             *                   The options are \"Existing user\" and \"New user\".\n             * 2. set-options: Where the recipe creator defines values of the fields.\n             * 3. show-sentence: When the data is complete and valid.\n             */\n    \n            case 'set-step':\n                // Define required attributes properties\n                requiredData = [ 'step' ];\n\n                // Check if the attributes object has all the required properties\n                if ( inArray( requiredData, Object.keys( attributes ) ) ){\n                    // Set status\n                    UncannyAutomator.recipe.userSelector.step = attributes.step;\n                }\n                else {\n                    // Show to the developer what attributes are missing\n                    let missingAttributes = JSON.stringify( arrayDifference( attributes, requiredData ) );\n                    console.error( vsprintf( '%s: Some attributes are missing: %s', [ 'userSelectorObject', missingAttributes ] ) );\n                }\n\n                break;\n\n            case 'get-step':\n                // Create the variable we're going to return\n                // Set default value\n                let step = 'select-source';\n\n                // Check if the step property is defined\n                if ( isDefined( UncannyAutomator.recipe.userSelector.step ) ){\n                    // If it is, then return that value\n                    step = UncannyAutomator.recipe.userSelector.step;\n                }\n                else {\n                    // Try to get step\n                    // Check if there are fields saved\n                    if ( ! isEmpty( UncannyAutomator.recipe.userSelector.fields[ UncannyAutomator.recipe.userSelector.source ] ) ){\n                        // Show sentence\n                        step = 'show-sentence';\n\n                        // If we have fields it's because we already valid them before,\n                        // thus the user selector is valid\n                        UncannyAutomator.recipe.userSelector.isValid = true;\n                    }\n                }\n\n                // Return step\n                response = step;\n\n                break;\n\n            case 'set-source':\n                // Define required attributes properties\n                requiredData = [ 'source' ];\n\n                // Check if the attributes object has all the required properties\n                if ( inArray( requiredData, Object.keys( attributes ) ) ){\n                    // Set status\n                    UncannyAutomator.recipe.userSelector.source = attributes.source;\n                }\n                else {\n                    // Show to the developer what attributes are missing\n                    let missingAttributes = JSON.stringify( arrayDifference( attributes, requiredData ) );\n                    console.error( vsprintf( '%s: Some attributes are missing: %s', [ 'userSelectorObject', missingAttributes ] ) );\n                }\n\n                break;\n\n            case 'update-fields':\n                // Define required attributes properties\n                requiredData = [ 'source', 'fields' ];\n\n                // Check if the attributes object has all the required properties\n                if ( inArray( requiredData, Object.keys( attributes ) ) ){\n                    // Check if the source parameter is valid\n                    if ( [ 'existingUser', 'newUser' ].includes( attributes.source ) ){\n                        // Check if we already have fields\n                        if ( isEmpty( UncannyAutomator.recipe.userSelector.fields ) ){\n                            UncannyAutomator.recipe.userSelector.fields = {\n                                existingUser: {},\n                                newUser: {}\n                            }\n                        }\n\n                        // Update fields\n                        UncannyAutomator.recipe.userSelector.fields[ attributes.source ] = $.extend( {}, UncannyAutomator.recipe.userSelector.fields[ attributes.source ], attributes.fields );\n                    }\n                    else {\n                        // Show to the developer what's wrong\n                        console.error( vsprintf( '%s: The source parameter is invalid. Valid values are: %s', [ 'userSelectorObject', [ 'existingUser', 'newUser' ] ] ) );\n                    }  \n                }\n                else {\n                    // Show to the developer what attributes are missing\n                    let missingAttributes = JSON.stringify( arrayDifference( attributes, requiredData ) );\n                    console.error( vsprintf( '%s: Some attributes are missing: %s', [ 'userSelectorObject', missingAttributes ] ) );\n                }\n\n                break;\n\n            case 'reset-fields':\n                // Return boolean\n                UncannyAutomator.recipe.userSelector.fields = {\n                    existingUser: {},\n                    newUser: {}\n                }\n                break;\n        }\n    }\n    else {\n        // Has to add error code\n        console.error( vsprintf( '%s: The action \"%s\" isn\\'t defined', [ 'userSelectorObject', action ] ) );\n    }\n\n    return response;\n}\n\n/**\n * Filter triggers, actions and closures by recipe type.\n * This won't filter the items of a recipe, but the available\n * items in Automator\n *\n * @since 2.0\n * \n * @return null \n */\n\nexport function filterAutomatorItemsByRecipeType(){\n    // Check if the type attribute has a valid value\n    if ( [ 'user', 'anonymous' ].includes( UncannyAutomator.recipe.type ) ){\n        // Check if debug mode is enabled\n        if ( UncannyAutomator.dev.debugMode ){\n            // Start group\n            consoleLogLabel( 'Filter Automator items', true, {\n                collapseGroup: true\n            });\n\n            // Show current recipe type\n            console.log( vsprintf( 'Current recipe type: %s', [ UncannyAutomator.recipe.type ] ) );\n        }\n\n        // Filter triggers\n        UncannyAutomator.triggers = UncannyAutomator.triggers.filter(( trigger ) => {\n            // Check if debug mode is enabled\n            if ( UncannyAutomator.dev.debugMode ){\n                // Show trigger\n                console.log( trigger );\n\n                // Show decision\n                if ( trigger.type == UncannyAutomator.recipe.type ){\n                    consoleLogResult( 'success', 'Keep' );\n                }\n                else {\n                    consoleLogResult( 'error', 'Remove' );\n                }\n            }\n\n            // Check if it matches the recipe type\n            return trigger.type == UncannyAutomator.recipe.type;\n        });\n\n        // Check if debug mode is enabled\n        if ( UncannyAutomator.dev.debugMode ){\n            // Start group\n            console.groupEnd();\n        }\n    }\n}\n\n/**\n * Performs a REST Call\n *\n * @since     0.1\n * @modified  0.5\n *\n * @param {string}    endPoint - Endpoint of the REST call\n * @param {object}    data - Data to be sent in the call\n * @param {callback}  [onSuccess] - Function to be invoked if the call is successful\n * @param {callback}  [onFail] - Function to be invoked if the call fails\n *\n * @return null\n */\n\nexport function restCall( endPoint = null, data = null, onSuccess = null, onFail = null, options = {} ){\n    // Define the valid endpoints\n    let validEndpoints = [ 'add', 'delete', 'update', 'change_post_status', 'recipe_completions_allowed', 'change_post_title', 'change_post_recipe_type', 'user-selector', 'set_recipe_terms' ];\n\n    // Check custom options\n    options = $.extend({}, {\n        'requiresRecipesObject': true,\n        'renderUI':              true\n    }, options );\n\n    // Check if the endPoint parameter is a valid endpoint\n    if ( inArray( endPoint, validEndpoints ) ){\n\n        // Do AJAX\n        $.ajax({\n            method:   'POST',\n            url:      `${ UncannyAutomator.restURL }/${endPoint}/`,\n            data:     $.param( data ) + '&' + $.param({ doing_rest: 1 }),\n            dataType: 'json',\n\n            // Attach Nonce the the header of the request\n            beforeSend: function( xhr ){\n                xhr.setRequestHeader( 'X-WP-Nonce', UncannyAutomator.nonce );\n            },\n\n            success: function( response ){\n                // Show console messages if debug is enabled\n                if ( UncannyAutomator.dev.debugMode ){\n                    consoleLogLabel( 'REST call ✅', true, {\n                        collapseGroup: true\n                    });\n                    console.log( `Endpoint: ${ endPoint }` );\n                    console.log( 'Data:' );\n                    console.log( data );\n                    console.log( 'Response:' );\n                    console.log( response );\n                    console.groupEnd();\n                }\n\n                // Check if the request succeeded\n                if ( response.success ){\n                    // Check if we have the new recipes_object, otherwise the data will change on the server but not in the UI\n                    if ( isDefined( response.recipes_object ) || ! options.requiresRecipesObject ){\n                        // Check if onSuccess\n                        if ( isDefined( onSuccess ) ){\n                            // Check if we have to render the UI again\n                            if ( options.renderUI ){\n                                recipeObject( 'create', {\n                                    allRecipes: response.recipes_object\n                                });\n                            }\n\n                            // Invoke callback\n                            onSuccess( response );\n                        }\n                    }\n                    else {\n                        // The call was successful, but the new recipes_object is missing\n                        console.error( 'The call was successful, but the new recipes_object is missing.' );\n\n                        // Check if the onFail callback is defined\n                        if ( isDefined( onFail ) ){\n                            // Invoke callback\n                            onFail( response );\n                        }\n                    }\n                }\n                else {\n                    // The call was successful, but there were errors,\n                    console.error( 'The call was successful, but there were errors.' );\n                    // console.log( response );\n\n                    // Check if the onFail callback is defined\n                    if ( isDefined( onFail ) ){\n                        // Invoke callback\n                        onFail( response );\n                    }\n                }\n            },\n\n            statusCode: {\n                403: function( response ){\n                    // Show console messages if debug is enabled\n                    if ( UncannyAutomator.dev.debugMode ){\n                        consoleLogLabel( 'REST call 🔴', true, {\n                            collapseGroup: true\n                        });\n                        console.log( 'Data:' );\n                        console.log( data );\n                        console.log( 'Response' );\n                        console.log( '%c403: Access denied', 'color: red' );\n                        console.groupEnd();\n                    }\n\n                    if ( isDefined( onFail ) ){\n                        onFail( response );\n                    }\n                }\n            },\n\n            error: function( jqXHR, textStatus, errorThrown ){\n                // Show console messages if debug is enabled\n                if ( UncannyAutomator.dev.debugMode ){\n                    consoleLogLabel( 'REST call 🔴', true, {\n                        collapseGroup: true\n                    });\n                    console.log( 'Data:' );\n                    console.log( data );\n                    console.log( 'Response' );\n                    console.log( '%cUnknown error', 'color: red' );\n                    console.groupEnd();\n                }\n\n                if ( isDefined( onFail ) ){\n                    onFail({\n                        success: false,\n                    });\n                }\n            },\n\n            fail: function ( response ){\n                // Show console messages if debug is enabled\n                if ( UncannyAutomator.dev.debugMode ){\n                    consoleLogLabel( 'REST call 🔴', true, {\n                        collapseGroup: true\n                    });\n                    console.log( 'Data:' );\n                    console.log( data );\n                    console.log( 'Response' );\n                    console.log( '%cUnknown error', 'color: red' );\n                    console.groupEnd();\n                }\n\n                if ( isDefined( onFail ) ){\n                    onFail( response );\n                }\n            },\n        });\n    }\n    else {\n        console.error( vsprintf( 'The %s endPoint does not exists. The valid endpoints are %s', [ endPoint, validEndpoints.join( ', ' ) ] ) );\n    }\n}\n\n/**\n * Performs an AJAX request\n *\n * @since 0.5\n *\n * @param {object}    data - Data to be sent in the request\n * @param {callback}  [onSuccess] - Function to be invoked if the request is successful\n * @param {callback}  [onFail] - Function to be invoked if the request fails\n *\n * @return null\n */\n\nexport function AJAXRequest( action = null, data = null, onSuccess = null, onFail = null ){\n\n    // Check that {action} is defined\n    if ( isDefined( action ) ){\n        // Add {action} to the data object\n        data = $.extend( true, data, {\n            action: action,\n            nonce: UncannyAutomator.nonce\n        });\n\n        // Do AJAX\n        $.ajax({\n            method:   'POST',\n            dataType: 'json',\n            url:      ajaxurl,\n            data:     data,\n\n            success: function( response  ){\n                // Show console messages if debug is enabled\n                if ( UncannyAutomator.dev.debugMode ){\n                    consoleLogLabel( 'AJAX call ✅', true, {\n                        collapseGroup: true\n                    });\n                    console.log( 'Data:' );\n                    console.log( data );\n                    console.log( 'Response' );\n                    console.log( response );\n                    console.groupEnd();\n                }\n\n                // Reload page if user authentication fails\n                if ( isDefined( response.status ) && response.status == 'auth-failed' ){\n                    location.reload();\n                }\n                else {\n                    // Check if onSuccess is defined\n                    if ( isDefined( onSuccess ) ){\n                        // Invoke callback\n                        onSuccess( response, data );\n                    }\n                }\n            },\n\n            statusCode: {\n                403: function(){\n                    // Show console messages if debug is enabled\n                    if ( UncannyAutomator.dev.debugMode ){\n                        consoleLogLabel( 'AJAX call 🔴', true, {\n                            collapseGroup: true\n                        });\n                        console.log( 'Data:' );\n                        console.log( data );\n                        console.log( 'Response' );\n                        consoleLogLabel( '403: Access denied', false, { bgColor: '#ff0000' });\n                        console.groupEnd();\n                    }\n\n                    if ( isDefined( onFail ) ){\n                        onFail( response );\n                    }\n\n                    // Check if the onFail callback is defined\n                    if ( isDefined( onFail ) ){\n                        // Invoke callback\n                        onFail( response );\n                    }\n                }\n            },\n\n            fail: function ( response ){\n                // Show console messages if debug is enabled\n                if ( UncannyAutomator.dev.debugMode ){\n                    consoleLogLabel( 'AJAX call 🔴', true, {\n                        collapseGroup: true\n                    });\n                    console.log( 'Data:' );\n                    console.log( data );\n                    console.log( 'Response' );\n                    console.log( '%cUnknown error', 'color: red' );\n                    console.groupEnd();\n                }\n\n                if ( isDefined( onFail ) ){\n                    onFail( response );\n                }\n\n                // console.log( '%c Failed ', 'background: #ba3535; padding: 2px; color: #fff' );\n                // console.log( response );\n            }\n        });\n    }\n    else {\n        console.error( 'We cannot do this AJAX request. {action} is not defined.' );\n    }\n}\n\n/**\n * This will return all the current value of the field, even if they aren't saved on the database\n * This will use .val() to get the values\n *\n * @since  1.0\n *\n * @param {int} itemId - The ID of the item\n */\n\nexport function getCurrentFieldsValues( itemId ){\n    let values = {};\n\n    // Iterate the items' group of fields\n    $.each( UncannyAutomator.recipe.items[ itemId ].options, ( index, groupOfFields) => {\n        // Iterate each field\n        $.each( groupOfFields.fields, ( index, field ) => {\n            // Get value\n            let fieldId    = field.getFieldID(),\n                fieldValue = field.getValue();\n\n            // Check if it isn't defined. In that case get the current value from the currentValue attribute\n            if ( ! isDefined( fieldValue ) ){\n                fieldValue = field.getAttributes().currentValue;\n            }\n\n            // Check if the field is a select with custom value\n            if ( field.getAttributes().fieldType == 'select' && fieldValue == 'automator_custom_value' ){\n                values[ `${ fieldId }_custom` ] = field.getSelectCustomValue();\n            }\n\n            // Save value\n            values[ fieldId ] = fieldValue;\n\n            // Check if it's a select and also get the readable value\n            if ( ! isEmpty( fieldValue ) && field.getAttributes().fieldType == 'select' ){\n                // Get and save the readable value\n                values[ `${ fieldId }_readable` ] = field.getReadableValue();\n            }\n        });\n    });\n\n    return values;\n}\n\n/**\n * Get a Field instance\n *\n * @since 0.5\n *\n * @param {int}     itemId - The item ID\n * @param {string}  fieldId - The field ID\n *\n * @return {Field}  a Field instance\n */\n\nexport function getField( itemId, fieldId ){\n    let field;\n\n    $.each( UncannyAutomator.recipe.items[ itemId ].options, function( optionsGroupId, optionsGroup ){\n        $.each( optionsGroup.fields, function( index, fieldInstance ){\n            if ( fieldId == fieldInstance.getFieldID() ){\n                field = fieldInstance;\n            }\n        });\n    });\n\n    return field;\n}\n\n/**\n * Get data about a trigger, action or closure\n *\n * @since 0.5\n *\n * @param {string}   itemType - The item type. Valid values are trigger, action and closure\n * @param {string}   itemCode - The item code\n *\n * @return {object}  Item's data\n */\n\nexport function getGlobalItem( integrationID = '', itemType = '', itemCode = '' ){\n\tlet theItem;\n\n\t// Check if all are defined\n\tif ( ! isEmpty( integrationID ) && ! isEmpty( itemType ) && ! isEmpty( itemCode ) ){\n\t\tlet integrationItems = {};\n\n\t\t// Check if the we're trying to get a trigger or action\n\t\tif ( itemType == 'trigger' || itemType == 'action' ){\n\t\t\t// Check if the integration exists\n\t\t\tif ( isDefined( UncannyAutomator.integrations[ integrationID ] ) ){\n\t\t\t\t// Create a reference to the integration\n\t\t\t\tlet integration = UncannyAutomator.integrations[ integrationID ];\n\n\t\t\t\t// Check if the items are defined\n\t\t\t\tif ( isDefined( integration.items ) ){\n\t\t\t\t\t// Set integrationItems\n\t\t\t\t\tintegrationItems = itemType == 'trigger' ? integration.items.triggers.available : integration.items.actions.available;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log( '%cNot ready, who is calling this?', 'background: red; color: #fff; font-weight: 500; padding: 2px 6px;' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if ( itemType == 'closure' ){\n\t\t\tintegrationItems = UncannyAutomator.closures;\n\t\t}\n\n\t\t// Search for the item\n\t\t$.each( integrationItems, function( index, item ){\n\t\t\tif ( item.code == itemCode ){\n\t\t\t\t// Save the item\n\t\t\t\ttheItem = item;\n\n\t\t\t\t// Return false in the loop callback to break the loop\n\t\t \t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\n\t// Return the item\n\treturn theItem;\n}\n\n/**\n * In Automator DOM elements are deleted and created in each step, so the reference to a DOM element change.\n * Use this method to get a metabox, item of optionGroup\n *\n * @since 0.2\n *\n * @param {string}   element - Code of the element that you want to get\n * @param {object}   attributes - Contains required data to get the elements. Depends of the \"element\" value. Check the variable requiredData in each case.\n *\n * @return {object}  Object with DOM elements. The properties depend of \"element\"\n */\n\nexport function getDOMElements( element, attributes = {} ){\n    // Create response object\n    let response = {}\n\n    // Define valid actions\n    let validElements = [ 'metabox', 'items', 'item', 'optionGroup', 'lastItem', 'user-selector' ];\n\n    // Check if the action is not undefined and if it's a valid action\n    if ( isDefined( element ) && inArray( element, validElements ) ){\n        // Create array that will store all the requires attributes properties based on the requested element\n        let requiredData = [];\n\n        switch ( element ){\n            case 'metabox':\n                // Extend default attributes object with default values\n                attributes = $.extend({}, attributes );\n\n                // Define required attributes properties\n                requiredData = [ 'type' ];\n\n                // Check if the attributes object has all the required properties\n                if ( inArray( requiredData, Object.keys( attributes ) ) ){\n                    attributes.cssSelector__metabox;\n\n                    // Check the itemType\n                    if ( attributes.type == 'trigger' ){\n                        attributes.cssSelector__metabox = '#recipe-triggers-ui';\n                    }\n                    else if ( attributes.type == 'action' ){\n                        attributes.cssSelector__metabox = '#recipe-actions-ui';\n                    }\n\n                    let $metabox = $( attributes.cssSelector__metabox )\n\n                    response = $metabox;\n                }\n                else {\n                    // Show to the developer what attributes are missing\n                    let missingAttributes = JSON.stringify( arrayDifference( attributes, requiredData ) );\n                    console.error( vsprintf( '%s: Some attributes are missing: %s', [ 'itemsObject', missingAttributes ] ) );\n                }\n\n                break;\n\n            case 'items':\n                // Extend default attributes object with default values\n                attributes = $.extend({}, attributes );\n\n                // Define required attributes properties\n                requiredData = [ 'type' ];\n\n                // Check if the attributes object has all the required properties\n                if ( inArray( requiredData, Object.keys( attributes ) ) ){\n                    let metabox = getDOMElements( 'metabox', {\n                        type: attributes.type\n                    });\n\n                    // Get jQuery DOM element\n                    let $items = metabox.find( '.item:not(.item--user-selector):not(.item--start):not(.item--closure)' );\n\n                    // Add element to the response\n                    response = $items;\n                }\n                else {\n                    // Show to the developer what attributes are missing\n                    let missingAttributes = JSON.stringify( arrayDifference( attributes, requiredData ) );\n                    console.error( vsprintf( '%s: Some attributes are missing: %s', [ 'itemsObject', missingAttributes ] ) );\n                }\n\n                break;\n\n            case 'item':\n                // Extend default attributes object with default values\n                attributes = $.extend({}, attributes );\n\n                // Define required attributes properties\n                requiredData = [ 'id' ];\n\n                // Check if the attributes object has all the required properties\n                if ( inArray( requiredData, Object.keys( attributes ) ) ){\n                    // Define CSS Selector\n                    attributes.cssSelector = '.uap .item[data-id=\"' + attributes.id + '\"]';\n\n                    // Get jQuery DOM element\n                    let $item = $( attributes.cssSelector ),\n                        $contentContainer = $item.find( '.item__content' );\n\n                    // Add element to the response\n                    response.item = $item;\n                    response.contentContainer = $contentContainer;\n                }\n                else {\n                    // Show to the developer what attributes are missing\n                    let missingAttributes = JSON.stringify( arrayDifference( attributes, requiredData ) );\n                    console.error( vsprintf( '%s: Some attributes are missing: %s', [ 'itemsObject', missingAttributes ] ) );\n                }\n\n                break;\n\n            case 'optionGroup':\n                // Extend default attributes object with default values\n                attributes = $.extend({}, attributes );\n\n                // Define required attributes properties\n                requiredData = [ 'itemID', 'groupID' ];\n\n                // Check if the attributes object has all the required properties\n                if ( inArray( requiredData, Object.keys( attributes ) ) ){\n                    // Get main object\n                    let item = getDOMElements( 'item', { id: attributes.itemID } ).item;\n\n                    // Define CSS Selector\n                    attributes.cssSelector__tokenInSentence = '.item-title__token[data-token-id=\"' + attributes.groupID + '\"]';\n                    attributes.cssSelector__fieldsContainer = '.item-options__group[data-optiongroup=\"' + attributes.groupID + '\"]';\n\n                    let $tokenInSentence  = item.find( attributes.cssSelector__tokenInSentence ),\n                        $fieldsContainer  = item.find( attributes.cssSelector__fieldsContainer ),\n                        $optionsContainer = item.find( '.item-options' );\n\n                    response.tokenInSentence  = $tokenInSentence;\n                    response.fieldsContainer  = $fieldsContainer;\n                    response.optionsContainer = $optionsContainer;\n                }\n                else {\n                    // Show to the developer what attributes are missing\n                    let missingAttributes = JSON.stringify( arrayDifference( attributes, requiredData ) );\n                    console.error( vsprintf( '%s: Some attributes are missing: %s', [ 'itemsObject', missingAttributes ] ) );\n                }\n\n                break;\n\n            case 'lastItem':\n                // Extend default attributes object with default values\n                attributes = $.extend({}, attributes );\n\n                // Define required attributes properties\n                requiredData = [ 'type' ];\n\n                // Check if the attributes object has all the required properties\n                if ( inArray( requiredData, Object.keys( attributes ) ) ){\n                    // Get metabox\n                    let metabox = getDOMElements( 'metabox', {\n                        type: attributes.type\n                    });\n\n                    // Get last item\n                    let lastItem = metabox.find( '.item:not(.item--user-selector):not(.item--start):not(.item--closure)' ).last();\n\n                    response = lastItem;\n                }\n                else {\n                    // Show to the developer what attributes are missing\n                    let missingAttributes = JSON.stringify( arrayDifference( attributes, requiredData ) );\n                    console.error( vsprintf( '%s: Some attributes are missing: %s', [ 'itemsObject', missingAttributes ] ) );\n                }\n\n                break;\n\n            case 'user-selector':\n                // Get user selector container\n                response = $( '.user-selector' );\n\n                break;\n        }\n    }\n    else {\n         // Has to add error code\n        console.error( vsprintf( '%s: The element \"%s\" isn\\'t defined', [ 'getDOMElements', element ] ) );\n    }\n\n    return response;\n}\n\n/**\n * Get tokens object\n * To be changed soon\n *\n * @since 0.5\n *\n * @param {string}  itemType - The item type, 'trigger', 'action' or 'closure'\n *\n * @return {object} Object with all the tokens\n */\n\nexport function getTokens( itemType, dataType ){\n    let tokensList = [];\n\n    // Create common tokens\n    const commonTokens = {\n        id:     'common',\n        name:   UncannyAutomator.i18n.tokens.global.common,\n        icon:   'uo-icon--bolt',\n        tokens: [\n            {\n                id:   'site_name',\n                type: 'text',\n                name:  UncannyAutomator.i18n.tokens.global.siteName,\n            },\n        ]\n    }\n\n    // Check if it's a field in a trigger or user-selector section,\n    // in an anonymous recipe then don't add user related tokens\n    if ( ! ( UncannyAutomator.recipe.type == 'anonymous' && ( itemType == 'trigger' || itemType == 'user-selector' ) ) ){\n        // Add user related tokens\n        commonTokens.tokens.push(\n            {\n                id:   'user_id',\n                type: 'int',\n                name:  UncannyAutomator.i18n.tokens.global.userID,\n            },\n            {\n                id:   'user_username',\n                type: 'text',\n                name:  UncannyAutomator.i18n.tokens.global.userUsername,\n            },\n            {\n                id:   'user_firstname',\n                type: 'text',\n                name:  UncannyAutomator.i18n.tokens.global.userFirstName,\n            },\n            {\n                id:   'user_lastname',\n                type: 'text',\n                name:  UncannyAutomator.i18n.tokens.global.userLastName,\n            },\n            {\n                id:   'user_email',\n                type: 'email',\n                name:  UncannyAutomator.i18n.tokens.global.userEmail,\n            },\n            {\n                id:   'user_displayname',\n                type: 'text',\n                name:  UncannyAutomator.i18n.tokens.global.userDisplay,\n            },\n            {\n                id:   'reset_pass_link',\n                type: 'url',\n                name:  UncannyAutomator.i18n.tokens.global.userResetPassLink,\n            }\n        );\n    }\n\n    // Add other common tokens\n    commonTokens.tokens.push(\n        {\n            id:   'admin_email',\n            type: 'email',\n            name:  UncannyAutomator.i18n.tokens.global.adminEmail,\n        },\n        {\n            id:   'site_url',\n            type: 'url',\n            name:  UncannyAutomator.i18n.tokens.global.siteUrl,\n        },\n        {\n            id:   'recipe_name',\n            type: 'text',\n            name:  UncannyAutomator.i18n.tokens.global.recipeName,\n        },\n        {\n            id:   'current_date',\n            type: 'text',\n            name:  UncannyAutomator.i18n.tokens.global.currentDate,\n        },\n        {\n            id:   'current_time',\n            type: 'text',\n            name:  UncannyAutomator.i18n.tokens.global.currentTime,\n        }\n    );\n\n    // Global tokens\n    tokensList.push( commonTokens );\n\n\tlet tokens = [];\n\n    // Check if it's a field in a trigger or user-selector section,\n    // in an anonymous recipe then don't add user related tokens\n    if ( ! ( UncannyAutomator.recipe.type == 'anonymous' && ( itemType == 'trigger' || itemType == 'user-selector' ) ) ){\n\t\ttokens.push({\n\t\t\tid:   'USERMETA:KEY',\n\t\t\ttype: 'text',\n\t\t\tname:  UncannyAutomator.i18n.tokens.global.userMetaKey,\n\t\t});\n\n\t\t// Automator Pro Only\n\t\tif( isDefined( UncannyAutomator.wp ) && '1' === UncannyAutomator.wp ){\n\t\t\ttokens.push({\n\t\t\t\tid:   'AUTOLOGINLINK',\n\t\t\t\ttype: 'text',\n\t\t\t\tname:  UncannyAutomator.i18n.tokens.global.autoLoginLink,\n\t\t\t});\n\t\t}\n    }\n\n    if( tokens.length ){\n\t\tlet tokensGroupAdvanced = {\n\t\t\tid:         'advanced',\n\t\t\tname:       UncannyAutomator.i18n.tokens.global.advanced,\n\t\t\ticon:       'uo-icon--bolt',\n\t\t\ttokens:\t\ttokens\n\t\t};\n\n\t\ttokensList.push( tokensGroupAdvanced );\n\t}\n\n    let items = {};\n\n    // Filter by itemType\n    // If it isn't defined then return all items\n    if ( isDefined( itemType ) ){\n        if ( itemType == 'action' || itemType == 'closure' || itemType == 'user-selector' ){\n            items = $.extend( {}, items, itemsObject( 'get', {\n                filter: {\n                    itemType: 'trigger'\n                }\n            }));\n        }\n\n        if ( itemType == 'closure' ){\n            items = $.extend( {}, items, itemsObject( 'get', {\n                filter: {\n                    itemType: 'action'\n                }\n            }));\n        }\n    }\n    else {\n        items = jQuery.extend( true, {}, UncannyAutomator.recipe.items );\n    }\n\n    $.each( items, function( itemId, item ){\n        let itemTokens = [];\n\n        // Automatic tokens from the fields\n        $.each( item.options, function( groupId, group ){\n            $.each( group.fields, function( index, field ){\n                let fieldAttributes = field.getAttributes();\n\n                // Check the field type\n                if ( fieldAttributes.fieldType == 'repeater' ){\n                    // Iterate the rows\n                    field.fieldRows.forEach(( row, index ) => {\n                        // Get the row index\n                        const rowIndex = index;\n\n                        // Iterate the row fields\n                        row.forEach(( Field ) => {\n                            // Add field\n                            itemTokens.push({\n                                // Create the token\n                                // ITEM_ID : ITEM_CODE : REPEATER_FIELD_ID : ROW_INDEX : FIELD_ID\n                                id:      `${ item.id }:${ item.itemCode }:${ fieldAttributes.optionCode }:${ rowIndex }:${ Field.getAttributes().optionCode }`,\n                                // Field name:\n                                // REPEATER_FIELD_NAME - \"Row\" ROW_INDEX - FIELD_NAME\n                                name:    `${ fieldAttributes.tokenName } - ${ vsprintf( UncannyAutomator.i18n.rowNumber, [ ( rowIndex + 1 ) ] ) } - ${ Field.getAttributes().tokenName }`,\n                                type:    Field.getAttributes().fieldType == 'select' || Field.getAttributes().fieldType == 'textarea' ? 'text' : Field.getAttributes().fieldType,\n                                value:   Field.getValue(),\n                                fieldId: Field.getAttributes().optionCode\n                            });\n                        });\n                    });\n                }\n                else if ( fieldAttributes.fieldType == 'group' ){\n                    // Nothing here yet\n                }\n                else {\n                    if( fieldAttributes.relevant_tokens ) {\n                        $.each( fieldAttributes.relevant_tokens, function( index, title){\n                            itemTokens.push({\n                                id:      item.id + ':' + item.itemCode + ':' + index,\n                                name:    title,\n                                type:    fieldAttributes.fieldType == 'select' || fieldAttributes.fieldType == 'textarea' ? 'text' : fieldAttributes.fieldType,\n                                value:   field.getValue(),\n                                fieldId: fieldAttributes.optionCode\n                            });\n                        });\n                    } else {\n                        itemTokens.push({\n                            id:      item.id + ':' + item.itemCode + ':' + fieldAttributes.optionCode,\n                            name:    fieldAttributes.tokenName,\n                            type:    fieldAttributes.fieldType == 'select' || fieldAttributes.fieldType == 'textarea' ? 'text' : fieldAttributes.fieldType,\n                            value:   field.getValue(),\n                            fieldId: fieldAttributes.optionCode\n                        });\n                    }\n                }\n            });\n        });\n\n        // Custom tokens\n        $.each( item.tokens, function( index, token ){\n            itemTokens.push({\n                id:   item.id + ':' + token.tokenIdentifier + ':' + token.tokenId,\n                name: token.tokenName,\n                type: isDefined( token.tokenType ) ? token.tokenType : 'text',\n            });\n        });\n\n        // Get sentence\n        let itemSentence;\n        if ( ! item.isMissing ){\n            itemSentence = getGlobalItem( item.integrationCode, item.itemType, item.itemCode ).sentence;\n        }\n        else {\n            itemSentence = item.sentence;\n        }\n\n        let tokensGroup = {\n            id:             item.itemCode,\n            name:           parseStringWithTokens( item, itemSentence, UncannyAutomator.recipe.items[ item.id ].meta ).html,\n            integrationId:  item.integrationCode,\n            tokens:         itemTokens\n        }\n\n        // Filter tokens using a custom function\n        let filterTokens = ( tokensGroup, item ) => tokensGroup;\n        if ( ! isEmpty( item.filterTokens ) ){\n            // Try to overwrite empty function\n            try {\n                // Try to convert the string to function, but first remove the <script> tags and trim the string\n                filterTokens = eval( `(${ item.filterTokens.replace( '<script>', '' ).replace( '</script>', '' ).trim() })` ); \n            } catch ( e ){ console.log( e ); console.log( item.filterTokens ); }\n        }\n        tokensGroup = filterTokens( tokensGroup, item );\n\n        // Add the group of tokens\n        tokensList.push( tokensGroup );\n    });\n\n    // Filter by field type\n    // We're not filtering tokens if the {fieldType} is 'text' or 'url', those accepts all tokens\n    if ( isDefined( dataType ) && ! inArray( dataType, [ 'text', 'textarea', 'url' ] ) ){\n\n        let filteredTokensList = [];\n\n        $.each( tokensList, function( index, tokenGroup ){\n            let filteredTokens = [];\n\n            $.each( tokenGroup.tokens, function( index, token ){\n                // If we're filtering floats, then promote int tokens to float\n                token.type = dataType != 'float' ? token.type : token.type == 'int' ? 'float' : token.type;\n\n                // Check if the fieldType matchs\n                // Remember that we're not filtering tokens if the {fieldType} is 'text' or 'url',\n                // AND we are promoting int to float if {fieldType} is 'float'\n                if ( dataType == token.type ){\n                    filteredTokens.push( token );\n                }\n            });\n\n            if ( filteredTokens.length > 0 ){\n                tokenGroup.tokens = filteredTokens;\n                filteredTokensList.push( tokenGroup );\n            }\n        });\n\n        tokensList = filteredTokensList;\n    }\n\n    return tokensList;\n}\n\n/**\n * Get all valid field types.\n * Used for validation\n *\n * @since 0.4\n *\n * @return {array} All the valid field types\n */\n\nexport function getFieldTypes(){\n    // Set valid field types\n    let validFieldTypes = [ 'select', 'textarea', 'text', 'url', 'email', 'int', 'float', 'checkbox', 'radio', 'group', 'repeater' ];\n\n    return validFieldTypes;\n}\n\n/**\n * Parse string with tokens\n *\n * @since 0.5\n *\n * @param {object}   item - The item\n * @param {string}   string - The string with the tokens\n * @param {object}   data - Object with the data to replace the text in the tokens.\n *\n * @return {object}  Object with information about the string\n *         {string}  response.plain - The string with the tokens replaced with the data\n *         {string}  response.html - The string with the tokens replaced with the data and enclosed in HTML tags\n *         {object}  response.elements\n *         {array}   response.elements.normal - Array of jQuery object. All the non-tokens part of the sentence\n *         {array}   response.elements.tokens - Array of jQuery object. All the tokens part of the sentence\n *         {array}   response.parts\n *         {object}  response.parts[ n ] - Object with information about each part of the sentence\n */\n\nexport function parseStringWithTokens( item = null, string = '', data = {} ){\n    // Create response object\n    let response = {\n        plain:      '',\n        brackets:   '',\n        html:       $( '<div/>' ),\n        elements:   {\n            normal: [],\n            token: []\n        },\n        parts: []\n    }\n\n    // Trim string\n    string = string.trim();\n\n    // Check if the string isn't empty\n    if ( ! isEmpty( string ) ){\n        // Create regex\n        let tokensRegex  = new RegExp( /\\{\\{(.*?)\\}\\}/gm ),\n            normals      = [],\n            tokens       = [],\n            mappedString = string;\n\n        // Get tokens\n        let tokenNumber = 0,\n            token;\n\n        string = string.replace( tokensRegex, function( full_match, token ){\n            let tokenParts = token.split( ':' );\n\n            // Get the token placeholder text\n            const tokenPlaceholderText = tokenParts[ 0 ];\n\n            // Get the token value ID\n            const tokenValueID = tokenParts[ 1 ];\n\n            // Get the ID of the group of fields this token has to open\n            // Check if the token should open a different group of options\n            const optionsID = isDefined( tokenParts[ 2 ] ) ? tokenParts[ 2 ] : tokenValueID;\n\n            token = {\n                type:      'token',\n                id:        tokenValueID,\n                text:      tokenPlaceholderText,\n                optionsID: optionsID,\n                hasFields: isDefined( item.options[ optionsID ] )\n            }\n\n            // Check if we have data for the token\n            if ( isDefined( data[ token.id ] ) ){\n                let readableText;\n\n                if ( data[ token.id ] == 'automator_custom_value' && isDefined( data[ vsprintf( '%s_custom', [ token.id ] ) ] ) ){\n                    readableText = data[ vsprintf( '%s_custom', [ token.id ] ) ];\n                }\n                else if ( isDefined( data[ vsprintf( '%s_readable', [ token.id ] ) ] ) ){\n                    readableText    = data[ vsprintf( '%s_readable', [ token.id ] ) ];\n                }\n                \n                token.originalText  = token.text;\n                token.text          = isDefined( readableText ) ? readableText : data[ token.id ];\n            }\n\n            // Add token\n            tokens.push( token );\n\n            // Add token to the mapped string\n            mappedString = mappedString.replace( full_match, '{{token:' + tokenNumber + '}}' );\n            tokenNumber++;\n\n            return '{{v}}';\n        });\n\n        let stringParts = string.split( '{{v}}' );\n\n        // Get normals\n        let normalNumber = 0;\n        $.each( stringParts, function( key, sentenceSection ){\n            if ( sentenceSection != '' ){\n                // Create normal part\n                let normal = {\n                    type: 'normal',\n                    text: sentenceSection\n                }\n\n                // Add normal text\n                normals.push( normal );\n\n                // Add \"normal\" part to the mapped string\n                mappedString = mappedString.replace( sentenceSection, '{{normal:' + normalNumber + '}}' );\n                normalNumber++;\n            }\n        });\n\n        // Create response.parts\n        let match;\n\n        while ( ( match = tokensRegex.exec( mappedString ) ) !== null ){\n            // Get info\n            let part = match[ 1 ].split( ':' );\n\n            part = {\n                type:  part[ 0 ],\n                index: part[ 1 ]\n            }\n\n            // Get part object and add to parts\n            if ( part.type == 'normal' ){\n                response.parts.push( normals[ part.index ] );\n            }\n            else {\n                response.parts.push( tokens[ part.index ] );\n            }\n        }\n\n        // Create plain text and HTML versions\n        $.each( response.parts, function( index, part ){\n            // Plain text\n            response.plain    += part.text;\n\n            // HTML\n            if ( part.text != ' ' ){\n                let elementAttributes,\n                    text = part.text;\n\n                // Check if first character is a space\n                let startsWithSpace = text[ 0 ] == ' ';\n                if ( startsWithSpace ){\n                    text = text.slice( 1 );\n                }\n\n                // Check if last character is a space\n                let endsWithSpace   = text[ text.length - 1 ] == ' ';\n                if ( endsWithSpace ){\n                    text = text.slice( 0, -1 );\n                }\n\n                if ( ( part.type == 'normal' ) || ( part.type == 'token' && ! part.hasFields && ! item.isMissing ) ){\n                    elementAttributes = {\n                        'class': 'item-title__normal'\n                    }\n\n                    // Add normal-text part to the brackets version\n                    response.brackets += part.text;\n                }\n                else {\n                    let CSSClass = 'item-title__token';\n\n                    elementAttributes = {\n                        'class':           CSSClass,\n                        'data-token-id':   part.id,\n                        'data-options-id': part.optionsID\n                    }\n\n                    // Check if it's using a valid ID\n                    if ( isDefined( item.options[ part.optionsID ] ) ){\n                        // Check if the section is valid\n                        if ( item.options[ part.optionsID ].isValid ){\n                            // Add filled class\n                            elementAttributes[ 'class' ] += ' item-title__token--filled';\n                        }\n                    }\n\n                    // Check if it's filled\n                    if ( isDefined( part.originalText ) ){\n                        // Add filled class\n                        // elementAttributes[ 'class' ] += ' item-title__token--filled';\n\n                        // Define text of the token\n                        let abbreviatedText = abbreviateText( text, 30 );\n\n                        // Check if the text was long enough to abbreviate it\n                        if ( abbreviatedText.isAbbreviated ){\n                            // Add tooltip with the complete text\n                            elementAttributes[ 'uap-tooltip' ] = text;\n\n                            // Replace original text\n                            text = abbreviatedText.text;\n                        }\n                    }\n\n                    // Add token to the brackets version\n                    response.brackets += `{{${ decodeEntities( text ) }}}`;\n                }\n\n                let element = $( '<span/>', elementAttributes ).text( decodeEntities( text ) );\n\n                // Add to the elements array\n                response.elements[ part.type ].push( element );\n\n                // Check if we have to preppend a space\n                if ( startsWithSpace ){\n                    // response.html.append( ' ' );\n                }\n\n                // Append HTML\n                response.html.append( element ); \n\n                /*\n\n                // Append to the HTML\n                // 2.0, remove \"item-title__normal\"\n                // If it's a token, add the element\n                if ( part.type == 'token' ){\n                    response.html.append( element ); \n                }\n                // Otherwise, add the text\n                else {\n                    response.html.append( text );\n                }\n\n                */\n\n                // Check if we have to append a space\n                if ( endsWithSpace ){\n                    // response.html.append( ' ' );\n                }\n            }\n            else {\n                // response.html.append( ' ' );\n\n                // Add white spaces to the brackets version\n                response.brackets += part.text;\n            }\n        });\n\n        // Convert array of jQuery elements into wrapped set of elements\n        response.elements.normal = $( response.elements.normal ).map( function(){ return this.get() });\n        response.elements.token  = $( response.elements.token ).map( function(){ return this.get() }).filter( ':not(.item-title__normal)' );\n    }\n\n    return response;\n}\n\n/**\n * Determine if a variable is set and is not NULL\n *\n * @since 0.2\n *\n * @param  {mixed}      variable - The variable being evaluated\n * @return {boolean}    TRUE if the variable is defined\n */\n\nexport function isDefined( variable ){\n    // Returns true if the variable is undefined\n    return typeof variable !== 'undefined' && variable !== null;\n}\n\n/**\n * Determine whether a variable is empty\n *\n * @since 0.2\n *\n * @param   {mixed}     variable - The variable being evaluated\n * @return  {boolean}   TRUE if the variable is empty\n */\n\nexport function isEmpty( variable ){\n    let response = true;\n\n    // Check if the variable is defined, otherwise is empty\n    if ( isDefined( variable ) ){\n        // Check if it's array\n        if ( $.isArray( variable ) ){\n            response = variable.length == 0;\n        }\n        else if ( isObject( variable ) ){\n            response = $.isEmptyObject( variable );\n        }\n        else {\n            response = variable == '';\n        }\n    }\n\n    return response;\n}\n\n/**\n * Check if two strings are equal\n *\n * @since 0.2\n *\n * @param   {string}    string1 - String to be compared\n * @param   {string}    string2 - String to be compared\n * @param   {object}    settings - Object with settings\n * @param   {boolean}   settings.caseSensitive=true - If true, uppercase and lowercase chars will be treated as distinct\n *\n * @return  {boolean} TRUE if both strings are equal\n */\n\nexport function compareStrings( string1, string2, settings = { caseSensitive: true } ){\n    // Create response variable\n    let response = false;\n\n    // Check if it's case sensitive\n    if ( ! settings.caseSensitive ){\n        response = string1.toString().toLowerCase() == string2.toString().toLowerCase();\n    }\n    else {\n        response = string1.toString() == string2.toString();\n    }\n\n    return response;\n}\n\n/**\n * Check if a value exists in an array\n * If the needle is an array then it will check if all his elements exists in the haystack\n *\n * @since 0.2\n *\n * @param   {mixed}     needle - The searched value. The comparison between values is strict. If the needle is an array then it will check if all his elements exists in the haystack\n * @param   {array}     haystack - An array through which to search.\n *\n * @return  {boolean} TRUE if needle is found in the array or if needle is an array, TRUE if all the elements from the needle are in haystack\n */\n\nexport function inArray( needle, haystack ){\n    let response = false;\n\n    if ( Array.isArray( needle ) ){\n        // Check that all the elements from the array \"value\" are in the array \"array\"\n        response = arrayDifference( needle, haystack ).length == 0;\n    }\n    else {\n        // Check if one element is in an array\n        response = $.inArray( needle, haystack ) !== -1;\n    }\n\n    return response;\n}\n\n/**\n * Compare the values of two arrays and get the difference\n * Compares array1 against one array and returns the values in array1 that are not present in array2.\n * Examples:\n * +-------------------+-------------+--------------+\n * |      array1       |   array2    |    return    |\n * +-------------------+-------------+--------------+\n * | [ 1, 2, 3, 4, 5 ] | [ 1, 3, 4 ] | [ 2, 5]      |\n * | [ 1, 2, 3 ]       | [ 2, 3 ]    | [ 1 ]        |\n * | [ 2, 3 ]          | [ 1, 2, 3 ] | []           |\n * | [ 1, 2 ]          | [ 1, 2 ]    | []           |\n * | [ '1', '2' ]      | [ 1, 2 ]    | [ '1', '2' ] |\n * +-------------------+-------------+--------------+\n *\n * @since 0.2\n *\n * @param   {array} array1 - The array to compare from\n * @param   {array} array2 - An array to compare against\n *\n * @return  {array} Array containing all the entries from array1 that are not present in array2\n */\n\nexport function arrayDifference( array1, array2 ){\n    return $( array1 ).not( array2 ).get();\n}\n\n/**\n * JavaScript vsprintf implementation\n * Return a formatted string\n *\n * @requires sprintf-js\n *\n * @since 0.2\n *\n * @param {string}  format - The placeholders in the format string are marked by % and are followed by one or more of these elements, in this order:\n *    1. An optional number followed by a $ sign that selects which argument index to use for the value.\n *       If not specified, arguments will be placed in the same order as the placeholders in the input string.\n *    2. An optional + sign that forces to preceed the result with a plus or minus sign on numeric values. By default, only the - sign is used on negative numbers.\n *    3. An optional padding specifier that says what character to use for padding (if specified).\n *       Possible values are 0 or any other character precedeed by a ' (single quote). The default is to pad with spaces.\n *    4. An optional - sign, that causes sprintf to left-align the result of this placeholder. The default is to right-align the result.\n *    5. An optional number, that says how many characters the result should have.\n *       If the value to be returned is shorter than this number, the result will be padded.\n *       When used with the j (JSON) type specifier, the padding length specifies the tab size used for indentation.\n *    6. An optional precision modifier, consisting of a . (dot) followed by a number, that says how many digits should be displayed for floating point numbers.\n *       When used with the g type specifier, it specifies the number of significant digits. When used on a string, it causes the result to be truncated.\n *    7. A type specifier that can be any of:\n *    7.1  % — yields a literal % character\n *    7.2  b — yields an integer as a binary number\n *    7.3  c — yields an integer as the character with that ASCII value\n *    7.4  d or i — yields an integer as a signed decimal number\n *    7.5  e — yields a float using scientific notation\n *    7.6  u — yields an integer as an unsigned decimal number\n *    7.7  f — yields a float as is; see notes on precision above\n *    7.8  g — yields a float as is; see notes on precision above\n *    7.9  o — yields an integer as an octal number\n *    7.10 s — yields a string as is\n *    7.11 t — yields true or false\n *    7.12 T — yields the type of the argument1\n *    7.13 v — yields the primitive value of the specified argument\n *    7.14 x — yields an integer as a hexadecimal number (lower-case)\n *    7.15 X — yields an integer as a hexadecimal number (upper-case)\n *    7.16 j — yields a JavaScript object or array as a JSON encoded string\n * @param {array}  arguments_array - array of arguments\n *\n * @return {string} Return array values as a formatted string according to format.\n */\n\nexport function vsprintf( format, arguments_array ){\n    var vsprintf = require('sprintf-js').vsprintf;\n    return vsprintf( format, arguments_array );\n}\n\n/**\n * Find whether a variable is a string\n *\n * @since 0.2\n *\n * @param   {mixed}     variable - The variable being evaluated\n * @return  {boolean}   TRUE if the variable is an string\n */\n\nexport function isString( string ){\n    return typeof string === 'string';\n}\n\n/**\n * Find whether a variable is an object\n *\n * @since 0.2\n *\n * @param   {mixed}     variable - The variable being evaluated\n * @return  {boolean}   TRUE if the variable is an object\n */\n\nexport function isObject( variable ){\n    return variable !== null && typeof variable === 'object';\n}\n\n/**\n * Remove all spaces from a string\n *\n * @since 0.3\n *\n * @param   {string}    String\n * @return  {string}    String without spaces\n */\n\nexport function removeSpaces( string ){\n    return string.replace( /\\s/g, '' );\n}\n\n/**\n * Replace curly braces\n *\n * @since 0.5\n *\n * @param {string} string - The string to be searched\n * @param {string} start - The value to replace the for {{\n * @param {string} end - The value to replace the for }}\n *\n * @return {string} The value with the replaced values\n */\n\nexport function replaceCurlyBraces( string = '', start = '', end = '' ){\n    string = string.replace( /{{/g, start );\n    string = string.replace( /}}/g, end );\n    return string;\n}\n\n/**\n * Creates a console log label\n *\n * @since  1.1\n *\n * @param  {String} text - Text to show after the label\n * @param  {Boolean} isGroup - Define if we have to do a console.group instead of console.log\n */\n\nexport function consoleLogLabel( text = '', isGroup = false, options = {} ){\n\t// Check if the user defined a custom background color\n\tif ( ! isDefined( options.bgColor ) ){\n\t\toptions.bgColor = '#0790e8';\n\t}\n\n    // Define console log Automator style\n    let labelStyle = `background: ${ options.bgColor }; color: #fff; font-weight: 500; padding: 2px 6px; font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif;`;\n\n    // Do console log\n    if ( isGroup ){\n        if ( isDefined( options.collapseGroup ) && options.collapseGroup ){\n            console.groupCollapsed( '%c🤖Automator', labelStyle, text );\n        }\n        else {\n            console.group( '%c🤖Automator', labelStyle, text );\n        }\n    }\n    else {\n        console.log( '%c🤖Automator', labelStyle, text );\n    }\n}\n\n/**\n * Creates a custom console log with colors to\n * represent success and failure\n *\n * @since  2.0\n *\n * @param  {String} status - Message type. Use 'success' or 'error'\n * @param  {String} text - Text to show after the label\n */\n\nexport function consoleLogResult( status = 'error', text = '' ){\n    // Define console log Automator style\n    let labelStyle = 'color: #fff; padding: 2px 7px; font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif; font-weight: normal';\n\n    // Add error or success colors\n    if ( status == 'error' ){\n        labelStyle = `background: #f13c3c; ${ labelStyle }`;\n    }\n\n    if ( status == 'success' ){\n        labelStyle = `background: #40b528; ${ labelStyle }`;\n    }\n\n    // Do console log\n    console.log( `%c${ text }`, labelStyle );\n}\n\n/**\n * Escape HTML characters\n *\n * @since  1.1\n * @param  {String} html The HTML\n * @return {String}      Scaped HTML\n */\n\nexport function escapeHTML( html = '' ){\n    let tagsToReplace = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;'\n    };\n\n    let replaceTag = function( tag ){\n        return tagsToReplace[ tag ] || tag;\n    }\n\n    return html.replace( /[&<>]/g, replaceTag );\n}\n\n/**\n * Abbreviate long texts. This function will convert a string\n * like \"123456789\" to \"123...789\"\n * \n * @param  {String} text    The string\n * @param  {Int}    length  The max length of the string\n * @return {Object}         Response two properties, isAbbreviated and text\n */\n\nexport function abbreviateText( text = '', length = 10 ){\n    // Default response\n    let response = {\n        isAbbreviated: false,\n        text: text\n    }\n\n    // Only abbreviate the text if the text is longer than the length\n    if ( text.length > length ){\n        // Get length of each parts (start and end)\n        let partLengths = Math.floor( length / 2 );\n\n        // Get parts\n        let textParts = {\n            start: text.substring( 0, partLengths ),\n            end:   text.slice( -partLengths )\n        }\n\n        // Create abbrevited text\n        response.text = `${ textParts.start } ... ${ textParts.end }`;\n        response.isAbbreviated = true;\n    }\n\n    // Return response\n    return response;\n}\n\n/**\n * Get an unique ID\n */\n\nexport function getUniqueId(){\n    // Math.random should be unique because of its seeding algorithm.\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n    // after the decimal.\n    return '_' + Math.random().toString( 36 ).substr( 2, 9 );\n}\n\n/**\n * Insert parameter to an URL.\n * If the parameter already exists it will update it\n * \n * @param  {String} url        The URL\n * @param  {Object} parameters The parameters\n * @param  {Object} options    The options. It supports two properties, \"setAsURL\" and \"refresh\"\n * @return {String}            The URL with the parameters\n */\nexport function addParametersToURL( url = '', parameters = {}, options = {} ){\n    // If the URL is empty, use the site URL\n    if ( isEmpty( url ) ){\n        url = window.location.href;\n    }\n    \n    // Try to get an URL object\n    try {\n        url = new URL( url );\n    } catch ( e ){\n        // If something goes wrong, just return the original URL\n        return url;\n    }\n\n    // Get the current parameters in the URL\n    let urlParameters = url.search.substr( 1 ).split( '&' );\n\n    // Iterate the parameters\n    for ( let [ key, value ] of Object.entries( parameters ) ){\n        key   = encodeURI( key );\n        value = encodeURI( value );\n\n        let i = urlParameters.length;\n        let x;\n\n        while ( i-- ){\n            x = urlParameters[ i ].split( '=' );\n\n            if ( x[ 0 ] == key ){\n                x[ 1 ] = value;\n                urlParameters[i] = x.join( '=' );\n                break;\n            }\n        }\n\n        if ( i < 0 ){\n            urlParameters[ urlParameters.length ] = [ key, value ].join( '=' );\n        }\n    }\n\n    // Remove empty parameters\n    urlParameters = urlParameters.filter( parameter => ! isEmpty( parameter ) );\n\n    // Add parameters to the URL\n    url.search = urlParameters.join( '&' );\n\n    // Set default options\n    options = $.extend({}, {\n        setAsURL: false,\n        refresh:  false\n    }, options );\n\n    // Check if we have to set it as the current URL\n    if ( options.setAsURL ){\n        // Check if we have to reload\n        if ( options.refresh ){\n            // This will reload the page, it's likely better to store this until finished\n            window.location.href = url.href; \n        }\n        else {\n            // Get title of the current page\n            let pageTitle = document.title;\n\n            // Push history and update URL\n            window.history.pushState({}, pageTitle, url.href );\n        }\n    }\n\n    // Return URL\n    return url.href;\n}\n\n/**\n * Decodes HTML entities\n *\n * @since  2.1.4\n * @param  {String} encodedString The string with encoded entities\n * @return {String}               The same string, with the entities decoded\n */\nexport function decodeEntities( encodedString = '' ){\n    const $textarea = document.createElement( 'textarea' );\n    $textarea.innerHTML = encodedString;\n    return $textarea.value;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/Utilities.js","module.exports = jQuery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 1\n// module chunks = 0","import {\n    itemsObject,\n    getDOMElements,\n    isEmpty,\n    isDefined\n}                     from './Utilities.js';\nimport UserSelector   from './UserSelector.js';\nimport MetaboxItems   from './MetaboxItems.js';\nimport MetaboxFooter  from './MetaboxFooter.js';\nimport ItemCreatorAdd from './ItemCreatorAdd.js';\nimport Closures       from './Closures.js';\n\nclass Actions {\n\n    /**\n     * Renders all the actions in the UI\n     * @class\n     *\n     */\n\n    constructor(){\n        // Debugging: Create console group\n        // console.group( 'Actions' );\n\n        // Get and clear metabox\n        let $metabox = getDOMElements( 'metabox', { type: 'action' });\n        $metabox.empty();\n\n        // Check if we have to create the User Selector\n        if ( UncannyAutomator.recipe.type == 'anonymous' && isDefined( UncannyAutomator.wp ) && UncannyAutomator.wp ){\n            // Create User Selector\n            new UserSelector();\n        }\n\n        // Get recipe actions\n        let actions = itemsObject( 'get', {\n            filter: {\n                itemType: 'action'\n            }\n        });\n\n        // Check if it has actions\n        if ( ! isEmpty( actions ) ){\n            // Render actions\n            new MetaboxItems( 'action' );\n        }\n        else {\n            // Render the first step of the item creator\n            new ItemCreatorAdd( 'action' );\n        }\n\n        // Create metabox footer\n        new MetaboxFooter( 'action' );\n\n        // Debugging: Close console group\n        // console.groupEnd();\n\n        // Add Closures\n        new Closures();\n    }\n}\n\nexport default Actions;\n\n\n// WEBPACK FOOTER //\n// ./src/components/Actions.js","import {\n\tAJAXRequest,\n\tcompareStrings,\n\tgetCurrentFieldsValues,\n\tgetField,\n\tgetFieldTypes,\n\tgetTokens,\n\tgetUniqueId,\n\tinArray,\n\tisDefined,\n\tisEmpty,\n\tremoveSpaces,\n\tvsprintf\n} from './Utilities.js';\n\nimport {\n\tinitURLChecker,\n\tvalidateField\n} from './Validation.js'\n\n/**\n * Create a field\n *\n * @since 0.4\n *\n * @param {string}              type - Field type\n * @param {object}              attributes - Object with information about the field\n * @param {string}              attributes.itemType             Item type. Valid values are trigger, action and closure.\n * @param {int}                 attributes.itemID               ID of the recipe item\n * @param {(null|string|array)} attributes.defaultValue         Default value of the field\n * @param {string}              attributes.currentValue         Current value of the field\n * @param {string}              attributes.placeholder          Placeholder of the field\n * @param {string}              attributes.isHidden             Defines if the field should be hidden\n * @param {string}              attributes.label                Label of the field\n * @param {string}              attributes.description          Description of the field\n * @param {object}              attributes.options              Only used if the field is a select. All the options of the select.\n * @param {null|string}         [attributes.color]              Only used for checkboxes. Valid values are null, 'gutenberg' or 'green'\n * @param {null|string}         [attributes.align]              Only used for checkboxes. Valid values are null, 'left' or 'right'\n * @param {object}              [attributes.toggle]             Only used for checkboxes. Has On and Off strings\n * @param {string}              [attributes.toggle.on]          String shown when the toggle is selected\n * @param {string}              [attributes.toggle.off]         String shown when the toggle is unselected\n *\n * @param {boolean}             attributes.isAjax               Only used if the field is a select. Add listner for the AJAX request.\n * @param {(null|string|array)} attributes.targetField          Only used if the field is a select. AJAX return values and populate this field.\n * @param {string}              attributes.integrationID        Integration of plugin\n * @param {string}              attributes.endPoint             endPoint for Ajax Call\n */\n\nclass Field {\n\tconstructor( type, attributes, createDOMelements = true, customValidationFunction = null ){\n\t\tthis.type = type;\n\t\t\n\t\tthis.attributes \t\t\t  = this.setAttributes( attributes );\n\t\tthis.customValidationFunction = customValidationFunction;\n\n\t\tif ( createDOMelements ){\n\t\t\tthis.createFormElement();\n\t\t}\n\t}\n\n\t/**\n\t * Create a jQuery DOM element with the field\n\t *\n\t * @since 0.3\n\t */\n\n\tcreateFormElement(){\n\t\t// Create response object\n\t\tlet response = null;\n\n\t\t// Local variables\n\t\tlet type = this.type;\n\t  \tlet attributes = this.attributes;\n\n\t\t// Check if it's a valid field type\n\t\tif ( inArray( type, getFieldTypes() ) ){\n\t\t\t// Create form element container, this is global\n\t\t\tlet formElement = $( '<div/>', { 'class': 'form-element' } );\n\n\t\t\t// Check the user is trying to add a custom class to the formElement element\n\t\t\tif ( isDefined( attributes.formElementClass ) ){\n\t\t\t\tformElement.addClass( attributes.formElementClass );\n\t\t\t}\n\n\t\t\t// Fields attributes, those will be added to the field jQuery object\n\t\t\tlet fieldAttributes = {\n\t\t\t\t'name':                  attributes.optionCode,\n\t\t\t\t'id':                    attributes.uniqueFieldID,\n\n\t\t\t\t'data-isajax':           attributes.isAjax,\n\t\t\t\t'data-targetfield':      attributes.targetField,\n\t\t\t\t'data-integrationid':    attributes.integrationID,\n\t\t\t\t'data-endPoint':         attributes.endPoint,\n\n\t\t\t\t'data-supportsTokens':   attributes.supportsTokens,\n\t\t\t\t'data-supportsTinymce':  attributes.supportsTinyMCE,\n\t\t\t\t'data-required':         attributes.isRequired,\n\t\t\t\t'data-item_type':        attributes.itemType,\n\n\t\t\t\t'data-is-hidden':        attributes.isHidden,\n\t\t\t\t'data-is-child-field':   attributes.isChildField\n\t\t\t}\n\n\t\t\t// Define field container variable once. An different jQuery object will be created based on the field type\n\t\t\tlet fieldContainer, field;\n\n\t\t\t// Create field based in field type\n\t\t\tswitch ( type ){\n\t\t\t\tcase 'select':\n\t\t\t\t\t// Field container\n\t\t\t\t\tfieldContainer = $( '<div/>', {'class': 'form-select'} );\n\n\t\t\t\t\tthis.fieldContainer = fieldContainer;\n\n\t\t\t\t\t// Create select element and add fieldAttributes to jQuery object. Merge second object into fieldAttributes, recursively\n\t\t\t\t\tfield = $( '<select/>', $.extend( {}, fieldAttributes, {\n\t\t\t\t\t\t'data-type': 'select',\n\t\t\t\t\t\t'class':\t 'form-element__select',\n\t\t\t\t\t\t'data-supports-custom-value': attributes.supportsCustomValue,\n\t\t\t\t\t}));\n\n\t\t\t\t\t// Check if it supports multiple values\n\t\t\t\t\tif ( attributes.supportsMultipleValues ){\n\t\t\t\t\t\t// Make it a multiple select\n\t\t\t\t\t\tfield.prop( 'multiple', 'multiple' );\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.field = field;\n\n\t\t\t\t\tlet hasSelectedOption = false,\n\t\t\t\t\t\tnumberOfOptions = 0,\n\t\t\t\t\t\tdefaultValue,\n\t\t\t\t\t\tdefaultOptionExists;\n\n\t\t\t\t\t// Check if it has default option and get the default option's value\n\t\t\t\t\tif ( attributes.hasDefaultValue ){\n\t\t\t\t\t\tif ( ! isEmpty( attributes.defaultValue.option_value ) && ! isEmpty( attributes.defaultValue.option_name ) ){\n\t\t\t\t\t\t\t// The default option has value and name, so we have to add a new option instead of searching for one\n\t\t\t\t\t\t\tdefaultValue = attributes.defaultValue.option_value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdefaultValue = attributes.defaultValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create select options\n\t\t\t\t\tlet $normalOptions = $(\n\t\t\t\t\t\t`<optgroup\n\t\t\t\t\t\t\ttitle=\"form-element__select-normal-options\"\n\t\t\t\t\t\t\tclass=\"form-element__select-normal-options\">\n\t\t\t\t\t\t</optgroup>` \n\t\t\t\t\t);\n\n\t\t\t\t\t$.each( attributes.options, function ( value, option_data ){\n\t\t\t\t\t\tlet selectOption = $( '<option/>', {\n\t\t\t\t\t\t\t'value':  option_data.value,\n\t\t\t\t\t\t\t'text':\t  option_data.text\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Check if one of the options value match with the default value. In that case, just select it instead of creating another one with the same value\n\t\t\t\t\t\tif ( attributes.hasDefaultValue && compareStrings( defaultValue, value ) ){\n\t\t\t\t\t\t\tselectOption.prop( 'selected', true );\n\t\t\t\t\t\t\tdefaultOptionExists = true;\n\t\t\t\t\t\t\thasSelectedOption   = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// But also check if the select has a value (and it's not empty), in that case we have to select that one\n\t\t\t\t\t\tif ( attributes.hasValue && compareStrings( attributes.currentValue, option_data.value ) ){\n\t\t\t\t\t\t\tselectOption.prop( 'selected', true );\n\t\t\t\t\t\t\thasSelectedOption = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectOption.appendTo( $normalOptions );\n\t\t\t\t\t\tnumberOfOptions++;\n\t\t\t\t\t});\n\t\t\t\t\t// Append options to the field\n\t\t\t\t\t$normalOptions.appendTo( field );\n\n\t\t\t\t\t// ⚠️ Check if it's a multiselect\n\t\t\t\t\tif ( attributes.supportsMultipleValues ){\n\t\t\t\t\t\t// If so, check if it's has a current value\n\t\t\t\t\t\tif ( ! isEmpty( attributes.currentValue ) ){\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tfield.val( attributes.currentValue );\n\t\t\t\t\t\t\t} catch ( e ){\n\t\t\t\t\t\t\t\tconsole.log( e );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Check if it has a selected value\n\t\t\t\t\t\tif ( ! isEmpty( field.val() ) ){\n\t\t\t\t\t\t\thasSelectedOption = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if this select supports the token selector\n\t\t\t\t\t// If it does, create the \"Custom value\" field\n\t\t\t\t\tif ( attributes.supportsCustomValue ){\n\t\t\t\t\t\t// Create \"Other options\" section\n\t\t\t\t\t\tconst $otherOptions = $( `\n\t\t\t\t\t\t\t<optgroup label=\"${ UncannyAutomator.i18n.validation.field.select.otherOptions }\">\n\t\t\t\t\t\t\t\t<option value=\"automator_custom_value\">${ UncannyAutomator.i18n.validation.field.select.customValue }</option>\n\t\t\t\t\t\t\t</optgroup>\n\t\t\t\t\t\t` );\n\n\t\t\t\t\t\t// Append \"Other options\" to the field\n\t\t\t\t\t\tfield.append( $otherOptions );\n\n\t\t\t\t\t\t// Check if we have to select it\n\t\t\t\t\t\tif ( attributes.hasValue && compareStrings( attributes.currentValue, 'automator_custom_value' ) ){\n\t\t\t\t\t\t\t// Select that option\n\t\t\t\t\t\t\t$otherOptions.find( 'option' ).attr( 'selected', true );\n\t\t\t\t\t\t\thasSelectedOption = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Create the custom field\n\t\t\t\t\t\tthis.customValueField = new Field( 'text', {\n\t\t\t\t\t\t\titemId: attributes.itemId,\n\t\t\t\t\t\t\titemType: attributes.itemType,\n\n\t\t\t\t\t\t\tisRequired: attributes.isRequired,\n\t\t\t\t\t\t\tisReadOnly: false,\n\t\t\t\t\t\t\tsupportsTinyMCE: false,\n\t\t\t\t\t\t\tsupportsCopyToClipboard: false,\n\t\t\t\t\t\t\tsupportsTokens: attributes.supportsTokens,\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tisAjax: false, //\n\n\t\t\t\t\t\t\tfieldType: 'text', \n\t\t\t\t\t\t\toptionCode: `${ attributes.optionCode }_custom`,\n\n\t\t\t\t\t\t\tlabel: '',\n\t\t\t\t\t\t\tdescription: attributes.hasCustomValueDescription ? attributes.customValueDescription : undefined,\n\t\t\t\t\t\t\tplaceholder: '',\n\t\t\t\t\t\t\tisHidden: false,\n\t\t\t\t\t\t\ttokenName: vsprintf( UncannyAutomator.i18n.validation.field.select.customValueToken, [ attributes.label ]),\n\n\t\t\t\t\t\t\tdefaultValue: null,\n\t\t\t\t\t\t\tcurrentValue: attributes.customValue,\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tisChildField: true,\n\t\t\t\t\t\t\tparentOptionCode: attributes.optionCode\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if an option was selected, if not then check if we have a default option that doesn't exist in the select, in that case, create one\n\t\t\t\t\tif ( attributes.hasDefaultValue && ! defaultOptionExists ){\n\t\t\t\t\t\t// Create option\n\n\t\t\t\t\t\tif ( ! isEmpty( attributes.defaultValue.option_value ) && ! isEmpty( attributes.defaultValue.option_name ) ){\n\n\t\t\t\t\t\t\tlet defaultOption = $( '<option/>', {\n\t\t\t\t\t\t\t\t'value':\t attributes.defaultValue.option_value,\n\t\t\t\t\t\t\t\t'text':\t attributes.defaultValue.option_name\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif ( ! attributes.hasValue && ! compareStrings( attributes.defaultValue.option_value, attributes.currentValue ) ){\n\t\t\t\t\t\t\t\tdefaultOption.prop( 'selected', true );\n\t\t\t\t\t\t\t\thasSelectedOption = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Add first (or second, if the select has a placeholder)\n\t\t\t\t\t\t\tdefaultOption.prependTo( field );\n\t\t\t\t\t\t\tnumberOfOptions++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if we have to add a placeholder\n\t\t\t\t\tif ( attributes.hasPlaceholder ){\n\t\t\t\t\t\t// Add empty option at the top\n\t\t\t\t\t\tfield.prepend( '<option></option>' );\n\n\t\t\t\t\t\t// If nothing else is selected, then remove the selected\n\t\t\t\t\t\t// value of the select\n\t\t\t\t\t\tif ( ! attributes.hasDefaultValue && ! attributes.hasValue ){\n\t\t\t\t\t\t\tfield.find( 'option:selected' ).prop( 'selected', false );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Has a selected option\n\t\t\t\t\tthis.selectHasSelectedOption = hasSelectedOption;\n\n\t\t\t\t\t// Check if it has options, if it doesn't then add one and disable\n\t\t\t\t\tif ( numberOfOptions == 0 ){\n\t\t\t\t\t\tlet $noResults = $( ( new Option( UncannyAutomator.i18n.noResults, '', true, true ) ) );\n\n\t\t\t\t\t\t$noResults.prop( 'disabled', true );\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.field.find( '.form-element__select-normal-options' ).append( $noResults );\n\n\t\t\t\t\t\tif ( ! this.attributes.supportsCustomValue ){\n\t\t\t\t\t\t\t// Disable the select\n\t\t\t\t\t\t\tthis.field.prop( 'disabled', true );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Bind changes\n\t\t\t\t\tfield.on( 'change', function(){\n\t\t\t\t\t\tformElement.trigger( 'automator:field:change' );\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'text':\n\t\t\t\tcase 'url':\n\t\t\t\tcase 'email':\n\t\t\t\tcase 'int':\n\t\t\t\tcase 'float':\n\t\t\t\t\t// FALLTHROUGH: These fields share the same structure as all of them are input text. The validation is done by another function. For now, these fields types only have two differences, the CSS class added in fieldContainer and the type property of the attributes object added to the field variable.\n\n\t\t\t\t\t// Create CSS classes that will be used by the field container element. This will create classes like \"form-input--url\". They are not used for validation but are useful to add custom CSS to each field\n\t\t\t\t\tlet fieldContainerClass = 'form-input form-input--' + type;\n\n\t\t\t\t\t// Field container\n\t\t\t\t\tfieldContainer = $( '<div/>', { 'class': fieldContainerClass } );\n\n\t\t\t\t\tthis.fieldContainer = fieldContainer;\n\n\t\t\t\t\t// Create input element and add fieldAttributes to jQuery object. Merge second object into fieldAttributes, recursively\n\t\t\t\t\tfield = $( '<input/>', $.extend( {}, fieldAttributes, {\n\t\t\t\t\t\t'class':\t\t'form-element__input',\n\t\t\t\t\t\t'type':\t\t 'text',\n\t\t\t\t\t\t'data-type':\ttype,\n\t\t\t\t\t}));\n\n\t\t\t\t\tthis.field = field;\n\n\t\t\t\t\t// Add tokens CSS class to field. This will be used to render the Token Selector once the element is added to the DOM\n\t\t\t\t\tif ( attributes.supportsTokens ){\n\t\t\t\t\t\tfieldContainer.addClass( 'form-input--token' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if the field has a placeholder and add it\n\t\t\t\t\tif ( attributes.hasPlaceholder ){\n\t\t\t\t\t\tfield.prop( 'placeholder', attributes.placeholder );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if the field has a value and add it\n\t\t\t\t\tif ( attributes.hasValue ){\n\t\t\t\t\t\tfield.prop( 'value', attributes.currentValue );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Now that we now that the field doesn't have a value we can check if the developer defined a default value\n\t\t\t\t\t\tif ( attributes.hasDefaultValue ){\n\t\t\t\t\t\t\tfield.prop( 'value', attributes.defaultValue );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Bind changes\n\t\t\t\t\tfield.on( 'input', function(){\n\t\t\t\t\t\tformElement.trigger( 'automator:field:change' );\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'textarea':\n\t\t\t\t\t// Field container\n\t\t\t\t\tfieldContainer = $( '<div/>', {'class': 'form-textarea'} );\n\n\t\t\t\t\tthis.fieldContainer = fieldContainer;\n\n\t\t\t\t\t// Create textarea\n\t\t\t\t\tfield = $( '<textarea/>', $.extend( true, fieldAttributes, {\n\t\t\t\t\t\t'data-type':\t\t 'text',\n\t\t\t\t\t\t'class':\t\t\t 'form-element__textarea',\n\t\t\t\t\t\t'data-item_type':\t attributes.itemType\n\t\t\t\t\t}));\n\n\t\t\t\t\tthis.field = field;\n\n\t\t\t\t\t// Add tokens CSS class to field. This will be used to render the Token Selector once the element is added to the DOM\n\t\t\t\t\tif ( attributes.supportsTokens ){\n\t\t\t\t\t\tfieldContainer.addClass( 'form-textarea--token' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if the field has a placeholder and add it\n\t\t\t\t\tif ( attributes.hasPlaceholder ){\n\t\t\t\t\t\tfield.prop( 'placeholder', attributes.placeholder );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if the field has a value and add it\n\t\t\t\t\tif ( attributes.hasValue ){\n\t\t\t\t\t\tfield.text( attributes.currentValue );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Now that we now that the field doesn't have a value we can check if the developer defined a default value\n\t\t\t\t\t\tif ( attributes.hasDefaultValue ){\n\t\t\t\t\t\t\tfield.text( attributes.defaultValue );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Bind changes\n\t\t\t\t\tfield.on( 'input', function(){\n\t\t\t\t\t\tformElement.trigger( 'automator:field:change' );\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\t\t   \n\t\t\t\tcase 'checkbox':\n\t\t\t\t\t// Field container\n\t\t\t\t\tfieldContainer = $( '<div/>', {'class': 'form-checkbox' } );\n\n\t\t\t\t\tthis.fieldContainer = fieldContainer;\n\n\t\t\t\t\tlet checkboxLabel = $( '<label/>', {'class': 'form-checkbox__container' } );\n\t\t\t\t\tlet checkboxPseudo = $( '<div/>', {'class': 'checkbox--show' } );\n\n\t\t\t\t\t// Create checkbox\n\t\t\t\t\tfield = $( '<input/>', $.extend( {}, fieldAttributes, {\n\t\t\t\t\t\t'type':\t     'checkbox',\n\t\t\t\t\t\t'data-type': 'checkbox',\n\t\t\t\t\t\t'class':\t 'checkbox--hidden checkbox--primary',\n\t\t\t\t\t}));\n\n\t\t\t\t\t// Check if checked by default\n\t\t\t\t\tif ( attributes.hasValue && attributes.currentValue ){\n\t\t\t\t\t\tfield.prop( 'checked', true );\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.field = field;\n\n\t\t\t\t\t// Add label\n\t\t\t\t\tif ( attributes.hasLabel ){\n\t\t\t\t\t\tcheckboxLabel.text( attributes.label );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Append elements\n\t\t\t\t\tfieldContainer.append( checkboxLabel );\n\t\t\t\t\tcheckboxLabel.append( field );\n\t\t\t\t\tcheckboxLabel.append( checkboxPseudo );\n\n\t\t\t\t\t// Check if we have to render a Toggle\n\t\t\t\t\tif ( isDefined( attributes.isToggle ) && attributes.isToggle ){\n\t\t\t\t\t\tfieldContainer.addClass( 'form-checkbox--toggle' );\n\n\t\t\t\t\t\t// Check if we have to add on and off strings divs\n\t\t\t\t\t\tif ( isDefined( attributes.toggle ) ){\n\t\t\t\t\t\t\t// Check \"on\"\n\t\t\t\t\t\t\tif ( isDefined( attributes.toggle.on ) ){\n\t\t\t\t\t\t\t\tlet checkboxToggleOn = $( '<span/>', { 'class': 'checkbox-label checkbox-label--on' }).text( attributes.toggle.on );\n\t\t\t\t\t\t\t\tcheckboxLabel.append( checkboxToggleOn );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Check \"off\"\n\t\t\t\t\t\t\tif ( isDefined( attributes.toggle.off ) ){\n\t\t\t\t\t\t\t\tlet checkboxToggleOff = $( '<span/>', { 'class': 'checkbox-label checkbox-label--off' }).text( attributes.toggle.off );\n\t\t\t\t\t\t\t\tcheckboxLabel.append( checkboxToggleOff );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Define color\n\t\t\t\t\tif ( isDefined( attributes.color ) ){\n\t\t\t\t\t\t// Check if the color is valid\n\t\t\t\t\t\tif ( inArray( attributes.color, [ 'gutenberg', 'green' ] ) ){\n\t\t\t\t\t\t\t// Add class\n\t\t\t\t\t\t\tswitch ( attributes.color ){\n\t\t\t\t\t\t\t\tcase 'gutenberg':\n\t\t\t\t\t\t\t\t\tfieldContainer.addClass( 'form-checkbox--toggle-gutenberg' );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'green':\n\t\t\t\t\t\t\t\t\tfieldContainer.addClass( 'form-checkbox--toggle-green' );\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconsole.error( vsprintf( 'The color %s does not exists. Default color will be used instead.', [ attributes.color ] ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Define align\n\t\t\t\t\tif ( isDefined( attributes.align ) ){\n\t\t\t\t\t\t// Check if it's a valid value\n\t\t\t\t\t\tif ( inArray( attributes.align, [ 'left', 'right' ] ) ){\n\t\t\t\t\t\t\t// Check if it's 'right', otherwise ignore, since 'left' doesn't needs a class\n\t\t\t\t\t\t\tif ( attributes.align == 'right' ){\n\t\t\t\t\t\t\t\t// Add class\n\t\t\t\t\t\t\t\tfieldContainer.addClass( 'form-checkbox--toggle-right' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconsole.error( vsprintf( 'The alignment %s does not exists. %s will be used instead.', [ attributes.align, '\"left\"' ] ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Bind changes\n\t\t\t\t\tfield.on( 'change', function(){\n\t\t\t\t\t\tformElement.trigger( 'automator:field:change' );\n\t\t\t\t\t});\n\n\t\t\t\t\t// Change field variable with all the container\n\t\t\t\t\tfield = checkboxLabel;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'radio':\n\t\t\t\t\t// Field container\n\t\t\t\t\tfieldContainer = $( '<div/>', {'class': 'form-radio' } );\n\t\t\t\t\tthis.fieldContainer = fieldContainer;\n\n\t\t\t\t\t// Create array to save all the jQuery DOM elements\n\t\t\t\t\tlet $fields = $(),\n\t\t\t\t\t\t$fieldContainers = $();\n\n\t\t\t\t\t// Iterate options\n\t\t\t\t\t$.each( attributes.options, function( index, option ){\n\t\t\t\t\t\t// Create container\n\t\t\t\t\t\tconst $formRadioContainer = $( '<label/>', { 'class': 'form-radio__container' });\n\n\t\t\t\t\t\t// Add label\n\t\t\t\t\t\t$formRadioContainer.text( option.text );\n\n\t\t\t\t\t\t// Create radio\n\t\t\t\t\t\tconst $field = $( '<input/>', $.extend( {}, fieldAttributes, {\n\t\t\t\t\t\t\t'type':\t     'radio',\n\t\t\t\t\t\t\t'data-type': 'radio',\n\t\t\t\t\t\t\t'class':\t 'radio--hidden radio--primary',\n\n\t\t\t\t\t\t\t'value':      option.value,\n\t\t\t\t\t\t\t'name':       fieldAttributes.id\n\t\t\t\t\t\t}));\n\n\t\t\t\t\t\t// Save radio\n\t\t\t\t\t\t$fields = $fields.add( $field );\n\n\t\t\t\t\t\t// Create fake radio\n\t\t\t\t\t\tconst $fakeRadio = $( '<div/>', { 'class': 'radio--show' });\n\n\t\t\t\t\t\t// Append elements\n\t\t\t\t\t\t$formRadioContainer.append( $field );\n\t\t\t\t\t\t$formRadioContainer.append( $fakeRadio );\n\n\t\t\t\t\t\t// Check if this field has a value, if it does, and the value\n\t\t\t\t\t\t// matches the input radio name, then check it\n\t\t\t\t\t\tif ( attributes.hasValue && attributes.currentValue == option.value ){\n\t\t\t\t\t\t\t$field.prop( 'checked', true );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Otherwise, check if it has a default value and use that\n\t\t\t\t\t\telse if ( ! attributes.hasValue && attributes.hasDefaultValue && attributes.defaultValue == option.value ){\n\t\t\t\t\t\t\t$field.prop( 'checked', true );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Save container\n\t\t\t\t\t\t$fieldContainers = $fieldContainers.add( $formRadioContainer );\n\t\t\t\t\t});\n\n\t\t\t\t\t// Save fields\n\t\t\t\t\tthis.field = $fieldContainers;\n\t\t\t\t\tfield = $fieldContainers;\n\n\t\t\t\t\t// Bind changes\n\t\t\t\t\t$fields.on( 'change', () => {\n\t\t\t\t\t\t// Check if the value is different\n\t\t\t\t\t\tformElement.trigger( 'automator:field:change' );\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\t\t\t}\t\n\n\t\t\t// Check if it supports tokens and render the token selector\n\t\t\tif ( attributes.supportsTokens && attributes.fieldType != 'select' ){\n\t\t\t\tlet formVariable = $( '<div/>', { 'class': 'form-variable' } );\n\n\t\t\t\tlet formVariableFieldContainer = $( '<div/>', { 'class': 'form-variable__element' } );\n\t\t\t\tlet formVariableFieldContainerRender = $( '<div/>', { 'class': 'form-variable__render-container' } );\n\t\t\t\tlet formVariableToggle = $( '<div/>', { 'class': 'form-variable__toggle' } );\n\t\t\t\tlet formVariableToggleIcon = $( '<span/>', { 'class': 'uo-icon uo-icon--asterisk' } );\n\t\t\t\tformVariableFieldContainerRender.append( field );\n\t\t\t\tformVariableFieldContainer.append( formVariableFieldContainerRender );\n\t\t\t\tformVariableToggle.append( formVariableToggleIcon );\n\t\t\t\tformVariableFieldContainer.append( formVariableToggle );\n\t\t\t\tformVariable.append( formVariableFieldContainer );\n\n\t\t\t\tlet formVariableDropdown = $( '<div/>', { 'class': 'form-variable__dropdown' } );\n\t\t\t\tformVariable.append( formVariableDropdown );\n\n\t\t\t\t// Replace original field\n\t\t\t\tfield = formVariable;\n\t\t\t}\n\n\t\t\t// Append field jQuery object to field container\n\t\t\tfieldContainer.append( field );\n\n\t\t\t// Create label\n\n\t\t\t// Create Label, even if it's empty but the field is required, so we can add the asterisk\n\t\t\tlet fieldLabel;\n\n\t\t\tif ( type != 'checkbox' && ( attributes.hasLabel || attributes.isRequired ) ){\n\t\t\t\tfieldLabel = $( '<label/>', {\n\t\t\t\t\t'class': 'form-element__label',\n\t\t\t\t\t'for': \t attributes.optionCode\n\t\t\t\t});\n\n\t\t\t\t// Add label text\n\t\t\t\tif ( attributes.hasLabel ){\n\t\t\t\t\tfieldLabel.text( attributes.label );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if it's a required field\n\t\t\tif ( attributes.isRequired ){\n\t\t\t\t// Add required class to the field container\n\t\t\t\tfieldContainer.addClass( 'form-element--required' );\n\n\t\t\t\t// Check if it's a checkbox\n\t\t\t\tif ( attributes.fieldType == 'checkbox' ){\n\t\t\t\t\t// Add required attribute to the field\n\t\t\t\t\tfield.find( 'input' ).prop( 'required', true );\n\n\t\t\t\t\t// Add asterisk to the label\n\t\t\t\t\tif ( attributes.hasLabel ){\n\t\t\t\t\t\t// Add required icon next to label\n\t\t\t\t\t\tlet fieldLabelAsterisk = $( '<span/>', { 'class': 'form-element-label__required' } );\n\t\t\t\t\t\tfield.append( fieldLabelAsterisk );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Add required attribute to the field\n\t\t\t\t\tfield.prop( 'required', true );\n\n\t\t\t\t\t// Add asterisk to the label\n\t\t\t\t\tif ( attributes.hasLabel ){\n\t\t\t\t\t\t// Add required icon next to label\n\t\t\t\t\t\tlet fieldLabelAsterisk = $( '<span/>', { 'class': 'form-element-label__required' } );\n\t\t\t\t\t\tfieldLabel.append( fieldLabelAsterisk );\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t}\n\n\t\t\t// Check if it's\n\t\t\tif ( isDefined( attributes.isReadOnly ) && attributes.isReadOnly ){\n\t\t\t\t// Check if it's a select\n\t\t\t\tif ( attributes.fieldType == 'select' ){\n\t\t\t\t\t// Disable the select\n\t\t\t\t\tfield.prop( 'disabled', true );\n\t\t\t\t}\n\t\t\t\telse if ( [ 'checkbox', 'radio' ].includes( attributes.fieldType ) ){\n\t\t\t\t\t// Disable the radio and checkbox\n\t\t\t\t\tfield.find( 'input' ).prop( 'disabled', true );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Add read only attribute to the field\n\t\t\t\t\tfield.prop( 'readonly', true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Append label element if is defined\n\t\t\tif ( attributes.hasLabel || attributes.isRequired ){\n\t\t\t\tfieldContainer.prepend( fieldLabel );\n\t\t\t}\n\n\t\t\t// Error container\n\t\t\tlet fieldError = $( '<div/>', { 'class': 'form-element__error' });\n\t\t\tfieldContainer.append( fieldError );\n\n\t\t\tthis.fieldContainer = fieldContainer;\n\n\t\t\t// Field description\n\t\t\tif ( attributes.hasDescription ){\n\t\t\t\tlet fieldDescription = $( '<div/>', { 'class': 'description' } );\n\t\t\t\tfieldDescription.html( attributes.description );\n\t\t\t\tfieldContainer.append( fieldDescription );\n\t\t\t}\n\n\t\t\t// Check if the field is hidden\n\t\t\tif ( attributes.isHidden ){\n\t\t\t\t// Add class to hide the field container\n\t\t\t\tfieldContainer.addClass( 'form-element--hidden' );\n\t\t\t}\n\n\t\t\t// Append everything to the form element container\n\t\t\tformElement.append( fieldContainer );\n\n\t\t\t// Check if it's a select and has a customField defined,\n\t\t\t// if so, add it\n\t\t\tif ( attributes.fieldType == 'select' && isDefined( this.customValueField ) ){\n\t\t\t\t// Create container for the custom value field\n\t\t\t\tthis.customValueFieldContainer = $(\n\t\t\t\t\t`<div class=\"form-select-custom\">\n\t\t\t\t\t\t<div class=\"form-element-children\"></div>\n\t\t\t\t\t</div>`\n\t\t\t\t);\n\n\t\t\t\t// Get the form element\n\t\t\t\tthis.customValueFieldContainer.find( '.form-element-children' ).append( this.customValueField.createFormElement() );\n\n\t\t\t\t// Append it\n\t\t\t\tformElement.append( this.customValueFieldContainer );\n\n\t\t\t\t// Check if we have to show the custom field\n\t\t\t\tif ( this.getValue() == 'automator_custom_value' ){\n\t\t\t\t\tthis.customValueFieldContainer.addClass( 'form-select-custom--visible' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.customValueFieldContainer.removeClass( 'form-select-custom--visible' );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Response\n\t\t\tresponse = formElement;\n\n\t\t\t// Save Form Element\n\t\t\tthis.formElement = formElement;\n\n\t\t\t// Init libraries\n\t\t\tthis.initLibraries();\n\n\t\t\t// Trigger methods on change\n\t\t\tthis.onChange();\n\n\t\t\t// Trigger methods on focus\n\t\t\tthis.onFocus();\n\t\t}\n\t\telse {\n\t\t\t// Error: Invalid field type\n\t\t\tconsole.error( vsprintf( 'The field type %s is invalid. The valid ones are %s', [ type, getFieldTypes().join( ', ' ) ] ) );\n\t\t}\n\n\t\treturn response;\n\t}\n\n\t/**\n\t * Set attributes. It add properties like hasValue, hasPlaceholder, etc, automatically\n\t * \n\t * @since 0.4\n\t *\n\t * @param  {object} attributes - The field attributes\n\t *\n\t * @return {object} attributes - The field attributes\n\t */\n\n\tsetAttributes( attributes ){\n\t\t// Create an unique ID\n\t\tattributes.uniqueFieldID = `${ attributes.optionCode }__${ getUniqueId() }`;\n\n\t\t// Check if it's a checkbox and sanitaze the current value\n\t\tif ( attributes.fieldType == 'checkbox' && ! isEmpty( attributes.currentValue ) ){\n\t\t\t// Check if the value is \"true\" or \"false\"\n\t\t\tif ( [ 'true', 'false' ].includes( attributes.currentValue ) ){\n\t\t\t\t// Make it a boolean\n\t\t\t\tattributes.currentValue = attributes.currentValue == 'true' ? true : false;\n\n\t\t\t\t// If it's false, set hasValue to false\n\t\t\t\tif ( ! attributes.currentValue ){\n\t\t\t\t\tattributes.hasValue = false;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tattributes.hasValue = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Has value\n\t\tif ( ! isDefined( attributes.hasValue ) ){\n\t\t\tif ( ! isEmpty( attributes.currentValue ) ){\n\t\t\t\tattributes.hasValue = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattributes.hasValue = false;\n\t\t\t}\n\t\t}\n\n\t\t// Has placeholder\n\t\tif ( ! isDefined( attributes.hasPlaceholder ) ){\n\t\t\tif ( ! isEmpty( attributes.placeholder ) ){\n\t\t\t\tattributes.hasPlaceholder = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattributes.hasPlaceholder = false;\n\t\t\t}\n\t\t}\n\n\t\t// Has default value\n\t\tif ( ! isDefined( attributes.hasDefaultValue ) ){\n\t\t\tif ( ! isEmpty( attributes.defaultValue ) ){\n\t\t\t\tattributes.hasDefaultValue = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattributes.hasDefaultValue = false;\n\t\t\t}\n\t\t}\n\n\t\t// Has label\n\t\tif ( ! isDefined( attributes.hasLabel ) ){\n\t\t\tif ( ! isEmpty( attributes.label ) ){\n\t\t\t\tattributes.hasLabel = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattributes.hasLabel = false;\n\t\t\t}\n\t\t}\n\n\t\t// Has description\n\t\tif ( ! isDefined( attributes.hasDescription ) ){\n\t\t\tif ( ! isEmpty( attributes.description ) ){\n\t\t\t\tattributes.hasDescription = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattributes.hasDescription = false;\n\t\t\t}\n\t\t}\n\n\t\t// Is Required\n\t\tif ( ! isDefined( attributes.isRequired ) ){\n\t\t\tattributes.isRequired = false;\n\t\t}\n\n\t\t// Is children\n\t\tif ( ! isDefined( attributes.isChildField ) ){\n\t\t\tattributes.isChildField = false;\n\t\t}\n\n\t\t// Supports tokens\n\t\tif ( ! isDefined( attributes.supportsTokens ) ){\n\t\t\tattributes.supportsTokens = false;\n\t\t}\n\n\t\t// Check if it can support tokens\n\t\tif ( attributes.supportsTokens && attributes.fieldType == 'select' && ! [ 'action', 'closure' ].includes( attributes.itemType ) ){\n\t\t\tattributes.supportsTokens = false;\n\t\t}\n\n\t\t// Check if it's a select\n\t\tif ( attributes.fieldType == 'select' ){\n\t\t\t// Check if it supports multiple values\n\t\t\tif ( ! isDefined( attributes.supportsMultipleValues ) ){\n\t\t\t\tattributes.supportsMultipleValues = false;\n\t\t\t}\n\n\t\t\t// ⚠️ Check if it supports multiple values, if it does,\n\t\t\t// don't support custom values.\n\t\t\tif ( attributes.supportsMultipleValues ){\n\t\t\t\tattributes.supportsCustomValue = false;\n\t\t\t}\n\n\t\t\t// ⚠️ Check if the current dropdown is a multiselect,\n\t\t\t// if so, check if it has a current value. In case it \n\t\t\t// has a value, try to parse it, because it might be a \n\t\t\t// JSON string\n\t\t\tif ( attributes.supportsMultipleValues ){\n\t\t\t\ttry {\n\t\t\t\t\tattributes.currentValue = JSON.parse( attributes.currentValue );\n\t\t\t\t} catch ( e ){\n\t\t\t\t\tconsole.log( e );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if it can support custom tokens\n\t\t\tif ( ! isDefined( attributes.supportsCustomValue ) ){\n\t\t\t\tattributes.supportsCustomValue = false;\n\t\t\t}\n\n\t\t\t// Check if it can support tokens, but can't support custom values\n\t\t\t// if ( attributes.supportsTokens && ! attributes.supportsCustomValue ){\n\t\t\t// \tattributes.supportsCustomValue = true;\n\t\t\t// }\n\n\t\t\t// Check if the user defined a description for the custom field too\n\t\t\tattributes.hasCustomValueDescription = ! isEmpty( attributes.customValueDescription );\n\t\t}\n\t\t\n\t\t// Supports tinyMCE\n\t\tif ( ! isDefined( attributes.supportsTinyMCE ) ){\n\t\t\tattributes.supportsTinyMCE = false;\n\t\t}\n\n\t\t// Is Toggle\n\t\tif ( ! isDefined( attributes.isToggle ) && isDefined( attributes.toggle ) ){\n\t\t\tattributes.isToggle = true;\n\t\t}\n\n\t\t// Is AJAX\n\t\tif ( ! isDefined( attributes.isAjax ) ){\n\t\t\tattributes.isAjax = false;\n\t\t}\n\n\t\t// Set the default value for isHidden\n\t\tif ( ! isDefined( attributes.isHidden ) ){\n\t\t\tattributes.isHidden = false;\n\t\t}\n\n\t\treturn attributes;\n\t}\n\n\t/**\n\t * Validate field\n\t * \n\t * @since 0.4\n\t *\n\t * @param  {boolean} renderError - TRUE if you want to render the field errors, FALSE if you only want to return the response object\n\t *\n\t * @return {validateField} validateField object. Read the comments on Validation.js to learn more\n\t */\n\n\tvalidate( renderError = true ){\n\t\t// Parameters\n\n\t\t// Field (DOM)\n\t\tlet field = null,\n\t\t\tvalue;\n\n\t\tif ( renderError ){\n\t\t\tfield = this.getFieldContainer();\n\t\t\tvalue = this.getValue();\n\t\t}\n\t\telse {\n\t\t\tvalue = this.attributes.currentValue;\n\t\t}\n\n\t\t// Type\n\t\tlet fieldType = this.type;\n\n\t\t// Attributes\n\t\tlet attributes = {\n\t\t\tsupportsTokens: this.attributes.supportsTokens,\n\t\t\trequired:  \t    this.attributes.isRequired\n\t\t}\n\n\t\t// This uses the validateField function. Check Validation.js for more information\n\t\treturn validateField( field, this.type, value, attributes, this.customValidationFunction );\n\t}\n\n\t/**\n\t * Invoke functions on field change\n\t * Those functions are global for all the Field objects\n\t * Don't use directly, use 'automator:field:change' instead\n\t */\n\n\tonChange(){\n\t\tthis.formElement.on( 'automator:field:change', () => {\n\t\t\t// Check if it's a select that supports custom values (and that option is selected)\n\t\t\tif ( this.attributes.fieldType == 'select' && this.attributes.supportsCustomValue ){\n\t\t\t\tif ( this.getValue() == 'automator_custom_value' ){\n\t\t\t\t\t// Show custom field container\n\t\t\t\t\tthis.customValueFieldContainer.addClass( 'form-select-custom--visible' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Hide custom field container\n\t\t\t\t\tthis.customValueFieldContainer.removeClass( 'form-select-custom--visible' );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst onChangeAJAXCallback = () => {\n\t\t\t\t// Check if it's an AJAX field\n\t\t\t\tif ( this.attributes.isAjax ){\n\t\t\t\t\t// Check if the target field is different\n\t\t\t\t\tif ( this.attributes.targetField !== this.attributes.optionCode ){\n\t\t\t\t\t\tthis.doAJAX();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Check if it's a child field\n\t\t\t\tif ( isDefined( this.attributes.isChildField ) && this.attributes.isChildField ){\n\t\t\t\t\t// Check if the option code of the parent is defined\n\t\t\t\t\tif ( isDefined( this.attributes.parentOptionCode ) ){\n\t\t\t\t\t\t// Get the field\n\t\t\t\t\t\tconst parentField = getField( this.attributes.itemId, this.attributes.parentOptionCode );\n\n\t\t\t\t\t\t// Check if we found it\n\t\t\t\t\t\tif ( isDefined( parentField ) ){\n\t\t\t\t\t\t\t// Do AJAX call on parent\n\t\t\t\t\t\t\tparentField.doAJAX();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\n\n\t\t\t// Check if it's a dropdown, checkbox or radio\n\t\t\tif ( [ 'select', 'radio', 'checkbox' ].includes( this.attributes.fieldType ) ){\n\t\t\t\t// Do it right away\n\t\t\t\tonChangeAJAXCallback();\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Check if the inverval exists, and clear it\n\t\t\t\tif ( isDefined( this.onChangeTimeout ) ){\n\t\t\t\t\tclearTimeout( this.onChangeTimeout );\n\t\t\t\t}\n\n\t\t\t\t// Wait a few seconds before doing the change\n\t\t\t\tthis.onChangeTimeout = setTimeout(() => {\n\t\t\t\t\tonChangeAJAXCallback();\n\t\t\t\t}, 1500 );\n\t\t\t}\n\n\t\t\t// Return false to prevent bubbling in child fields\n\t\t\treturn false;\n\t\t});\n\t}\n\n\t/**\n\t * Invoke functions on field change\n\t * Those functions are global for all the Field objects\n\t * Don't use directly, use 'automator:field:change' instead\n\t */\n\n\tonFocus(){\n\t\tthis.field.on( 'focusin', ( event ) => {\n\t\t\t// Check if it's a read-only field\n\t\t\tif ( this.attributes.isReadOnly ){\n\t\t\t\t// Select the text\n\t\t\t\t$( event.currentTarget ).select();\n\t\t\t}\n\t\t});\n\n\t\tthis.field.on( 'focusout', () => {});\n\t}\n\n\t/**\n\t * Check if the item's object has all the required properties\n\t *\n\t * @since 0.5\n\t */\n\n\tisReady(){\n\t\tlet ready = false;\n\n\t\tif ( isDefined( UncannyAutomator.recipe.items[ this.attributes.itemId ] ) ){\n\t\t\tready = true;\n\t\t}\n\n\t\treturn ready;\n\t}\n\n\t/**\n\t * Do AJAX\n\t *\n\t * @since 0.5\n\t */\n\n\tdoAJAX(){\n\t\t// Get field value. If it isn't defined in the DOM then get the default value\n\t\tlet fieldValue = isDefined( this.getValue() ) ? this.getValue() : this.getMetaValue();\n\n\t\t// Check if we have to do an AJAX call on this field\n\t\tif ( this.attributes.isAjax ){\n\t\t\t// Get the target field\n\t\t\tlet targetField = this;\n\n\t\t\tif ( this.attributes.optionCode != this.attributes.targetField ){\n\t\t\t\ttargetField = getField( this.attributes.itemId, this.attributes.targetField );\n\t\t\t}\n\n\t\t\t// Check that we have everything\n\t\t\tif ( ! isEmpty( this.attributes.integrationId ) && ! isEmpty( this.attributes.endpoint ) ){\n\t\t\t\t// Before doing the request, show a loading animation in the changed field\n\t\t\t\tthis.startLoadingAnimation();\n\t\t\t\t// And show animation in the target field too\n\t\t\t\ttargetField.startLoadingAnimation();\n\n\t\t\t\t// Get parent field value\n\t\t\t\tconst parentFieldValue = this.getValue(),\n\t\t\t\t      targetFieldValue = isDefined( targetField.getValue() ) ? targetField.getValue() : targetField.getMetaValue();\n\n\t\t\t\tAJAXRequest( this.attributes.endpoint, {\n\t\t\t\t\trecipe_id:      UncannyAutomator.recipe.id,\n\t\t\t\t\tintegration_id: this.attributes.integrationId,\n\t\t\t\t\titem_id: \t    this.attributes.itemId,\t\t\t\n\t\t\t\t\tgroup_id: \t    this.attributes.groupId,\n\t\t\t\t\tfield_id: \t    this.attributes.optionCode,\n\t\t\t\t\ttarget_field:   this.attributes.targetField,\n\t\t\t\t\tvalue: \t\t    parentFieldValue,\n\t\t\t\t\tvalues: \t\tgetCurrentFieldsValues( this.attributes.itemId )\n\t\t\t\t}, ( response ) => {\n\t\t\t\t\t// Stop loading animation in both fields\n\t\t\t\t\tthis.stopLoadingAnimation();\n\t\t\t\t\ttargetField.stopLoadingAnimation();\n\n\t\t\t\t\tlet targetFieldAttributes = targetField.getAttributes();\n\n\t\t\t\t\t// console.table({\n\t\t\t\t\t// \tparentField:      this.getAttributes().optionCode,\n\t\t\t\t\t// \tparentFieldValue: parentFieldValue,\n\t\t\t\t\t// \ttargetField:      this.attributes.targetField,\n\t\t\t\t\t// \ttargetFieldValue: targetFieldValue\n\t\t\t\t\t// });\n\n\t\t\t\t\t// Check if the target field is a select and the response is an array\n\t\t\t\t\tif ( targetFieldAttributes.fieldType == 'select' && $.isArray( response ) ){\n\t\t\t\t\t\t// Value of the target field before the call\n\t\t\t\t\t\tconst targetFieldValue = targetField.getValue();\n\n\t\t\t\t\t\t// The developer wants to set new options for a select\n\t\t\t\t\t\t// Don't trigger change (even though select2 needs it),\n\t\t\t\t\t\t// we're going to trigger it later\n\t\t\t\t\t\ttargetField.setSelectOptions( response, false );\n\n\t\t\t\t\t\t// Check if the field has a custom value\n\t\t\t\t\t\tif ( parentFieldValue == 'automator_custom_value' ){\n\t\t\t\t\t\t\t// Then set the value of the child as custom value too\n\t\t\t\t\t\t\ttargetField.setValue( 'automator_custom_value' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Check if the call returned no options, AND\n\t\t\t\t\t\t\t// the field doesn't support a custom value\n\t\t\t\t\t\t\tif ( isEmpty( response ) && ! targetField.attributes.supportsCustomValue ){\n\t\t\t\t\t\t\t\t// Do nothing, but trigger change\n\t\t\t\t\t\t\t\ttargetField.field.trigger( 'change' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// Set the value again\n\t\t\t\t\t\t\t\ttargetField.setValue( targetFieldValue );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Try to set the value\n\t\t\t\t\t\ttargetField.setValue( response );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get form element\n\t * \n\t * @since 0.4\n\t *\n\t * @return {object} jQuery object of the field's container\n\t */\n\n\tgetFormElement(){\n\t\tif ( this.isReady() ){\n\t\t\tthis.doAJAX();\n\t\t}\n\n\t\treturn this.formElement;\n\t}\n\n\t/**\n\t * Get field container\n\t * \n\t * @since 0.4\n\t *\n\t * @return {object} jQuery object of the field's container\n\t */\n\n\tgetFieldContainer(){\n\t\treturn this.fieldContainer;\n\t}\n\n\t/**\n\t * Get field ID\n\t * \n\t * @since 0.5\n\t *\n\t * @return {string} The field ID\n\t */\n\n\tgetFieldID(){\n\t\treturn this.attributes.optionCode;\n\t}\n\n\t/**\n\t * Get field\n\t * \n\t * @since 0.4\n\t *\n\t * @return {object} jQuery object of the field\n\t */\n\n\tgetField(){\n\t\treturn this.field;\n\t}\n\n\t/**\n\t * Get attributes\n\t * \n\t * @since 0.5\n\t *\n\t * @return {object} Field attributes\n\t */\n\n\tgetAttributes(){\n\t\treturn this.attributes;\n\t}\n\n\t/**\n\t * Get field's value FROM THE DOM ELEMENT\n\t * If you want to get the value from the main object then check {attributes.currentValue}\n\t * \n\t * @since 0.4\n\t *\n\t * @return {string|int} Value of the field\n\t */\n\n\tgetValue(){\n\t\tlet response = null;\n\n\t\tif ( isDefined( this.field ) ){\n\t\t\tswitch ( this.type ){\n\t\t\t\tcase 'select':\n\t\t\t\tcase 'text':\n\t\t\t\tcase 'url':\n\t\t\t\tcase 'email':\n\t\t\t\tcase 'int':\n\t\t\t\tcase 'float':\n\t\t\t\tcase 'textarea':\n\t\t\t\t\tresponse = this.field.val();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\tresponse = this.field.is( ':checked' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'radio':\n\t\t\t\t\tresponse = this.field.find( 'input:checked' ).val();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Check if the field has a value and add it\n\t\t\tif ( this.attributes.hasValue ){\n\t\t\t\t// Return that value\n\t\t\t\tresponse = this.attributes.currentValue;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If it doesn't have a value, then check if it has a default\n\t\t\t\t// value\n\t\t\t\tif ( this.attributes.hasDefaultValue ){\n\t\t\t\t\t// Return the default value\n\t\t\t\t\tresponse = this.attributes.defaultValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn response;\n\t}\n\n\t/**\n\t * Get readable value\n\t *\n\t * @since 0.6\n\t *\n\t * @return string with the value\n\t */\n\n\tgetReadableValue(){\n\t\tlet response = null,\n\t\t\tvalue \t = this.getValue();\n\n\t\tswitch ( this.type ){\n\t\t\tcase 'select':\n\t\t\t\t// Check if the field DOM element is defined\n\t\t\t\tif ( isDefined( this.field ) ){\n\t\t\t\t\tresponse = this.field.find( vsprintf( 'option[value=\"%s\"]', [ value ] ) ).text();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Get option from the options array\n\t\t\t\t\t\tresponse = this.getSelectOptionByValue( value ).text;\n\t\t\t\t\t}\n\t\t\t\t\tcatch ( e ){\n\t\t\t\t\t\tconsole.log( e );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'text':\n\t\t\tcase 'url':\n\t\t\tcase 'email':\n\t\t\tcase 'int':\n\t\t\tcase 'float':\n\t\t\tcase 'textarea':\n\t\t\t\t// Create DOM element to remove the HTML tags\n\t\t\t\tvalue = $( '<p/>' ).html( value ).text();\n\t\t\t\tbreak;\n\n\t\t\tcase 'checkbox':\n\t\t\t\tif ( value ){\n\t\t\t\t\tresponse = UncannyAutomator.i18n.trueLabel;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresponse = UncannyAutomator.i18n.falseLabel;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'radio':\n\t\t\t\t// Check if the field DOM element is defined\n\t\t\t\tif ( isDefined( this.field ) ){\n\t\t\t\t\t// Get checked radio\n\t\t\t\t\tconst $checkedRadio = this.field.find( 'input:checked' );\n\n\t\t\t\t\t// Check if there is a checked radio\n\t\t\t\t\tif ( $checkedRadio.length == 1 ){\n\t\t\t\t\t\t// Get container\n\t\t\t\t\t\tconst $radioContainer = $checkedRadio.closest( '.form-radio__container' );\n\n\t\t\t\t\t\t// Get text\n\t\t\t\t\t\tresponse = $radioContainer.text().trim();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Get option from the options array\n\t\t\t\t\t\tresponse = this.getSelectOptionByValue( value ).text;\n\t\t\t\t\t}\n\t\t\t\t\tcatch ( e ){\n\t\t\t\t\t\tconsole.log( e );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn response;\n\t}\n\n\t/**\n\t * Get the custom value of a select (if there is one)\n\t *\n\t * @since 2.5\n\t *\n\t * @return string, with the value\n\t */\n\tgetSelectCustomValue(){\n\t\t// Default response\n\t\tlet fieldValue = null;\n\n\t\t// Check if it's a select\n\t\tif ( this.attributes.fieldType == 'select' && this.attributes.supportsCustomValue && this.getValue() == 'automator_custom_value' ){\n\t\t\t// Check if the child field was created\n\t\t\tif ( isDefined( this.customValueField ) ){\n\t\t\t\tfieldValue = this.customValueField.getValue();\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Try to get it from the meta\n\t\t\t\ttry {\n\t\t\t\t\tfieldValue = UncannyAutomator.recipe.items[ this.attributes.itemId ].meta[ `${ this.attributes.optionCode }_custom` ];\n\t\t\t\t}\n\t\t\t\tcatch ( e ){\n\t\t\t\t\tconsole.log( e );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fieldValue;\n\t}\n\n\t/**\n\t * Get a select option by option value\n\t *\n\t * @since 2.5\n\t *\n\t * @return array\n\t */\n\tgetSelectOptionByValue( value = '' ){\n\t\tlet option = null;\n\n\t\t// Get the field options\n\t\tlet options = this.attributes.options;\n\n\t\t// Check if it supports a custom value\n\t\tif ( this.attributes.supportsCustomValue ){\n\t\t\toptions.push({\n\t\t\t\tvalue: 'automator_custom_value',\n\t\t\t\ttext:  UncannyAutomator.i18n.validation.field.select.customValue\n\t\t\t});\n\t\t}\n\n\t\t// Check if the options are defined\n\t\tif ( ! isEmpty( options ) ){\n\t\t\t// Iterate options and find the value\n\t\t\toptions.forEach(( selectOption ) => {\n\t\t\t\t// Compare the option value with the value parameter\n\t\t\t\tif ( value == selectOption.value ){\n\t\t\t\t\toption = selectOption;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn option;\n\t}\n\n\t/**\n\t * Get field's meta value\n\t * \n\t * @since 0.5\n\t *\n\t * @return {string|int} Value of the field\n\t */\n\n\tgetMetaValue(){\n\t\tlet response;\n\n\t\t// If the item is defined\n\t\tif ( isDefined( UncannyAutomator.recipe.items[ this.attributes.itemId ] ) ){\n\t\t\tlet metaValue = UncannyAutomator.recipe.items[ this.attributes.itemId ].meta[ this.attributes.optionCode ];\n\n\t\t\tif ( isDefined( metaValue ) ){\n\t\t\t\tresponse = metaValue;\n\t\t\t}\n\t\t}\n\n\t\treturn response;\n\t}\n\n\t/**\n\t * Set value\n\t * \n\t * @since 0.4\n\t *\n\t * @param {string} Value of the field\n\t */\n\n\tsetValue( value, doTrigger = true ){\n\t\tif ( isDefined( this.field ) ){\n\t\t\tswitch ( this.type ){\n\t\t\t\tcase 'select':\n\t\t\t\t\t// Get option\n\t\t\t\t\tlet option = this.field.find( 'option[value=\"' + value + '\"]' );\n\n\t\t\t\t\t// Get all options\n\t\t\t\t\tlet allOptions = this.field.find( 'option' );\n\n\t\t\t\t\t// Check if option exists\n\t\t\t\t\tif ( option.length > 0 ){\n\t\t\t\t\t\t// Unselect all the options\n\t\t\t\t\t\tallOptions.prop( 'selected', false );\n\n\t\t\t\t\t\t// Select option\n\t\t\t\t\t\toption.prop( 'selected', true );\n\n\t\t\t\t\t\t// Trigger change\n\t\t\t\t\t\tif ( doTrigger ){\n\t\t\t\t\t\t\tthis.field.trigger( 'change' );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Unselect all the options\n\t\t\t\t\t\tallOptions.prop( 'selected', false );\n\n\t\t\t\t\t\t// Trigger change\n\t\t\t\t\t\tif ( doTrigger ){\n\t\t\t\t\t\t\tthis.field.trigger( 'change' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// console.error( vsprintf( 'The option with ID %s does not exists', [ value ] ) );\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'text':\n\t\t\t\tcase 'url':\n\t\t\t\tcase 'email':\n\t\t\t\tcase 'int':\n\t\t\t\tcase 'float':\n\t\t\t\tcase 'textarea':\n\t\t\t\t\t// Set value\n\t\t\t\t\tthis.field.val( value );\n\n\t\t\t\t\t// Trigger change\n\t\t\t\t\tif ( doTrigger ){\n\t\t\t\t\t\tthis.field.trigger( 'automator:field:change' );\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\tlet wantsToCheck = value, // Just for readability\n\t\t\t\t\t\tisChecked = this.getValue();\n\n\t\t\t\t\t// If true, check\n\t\t\t\t\tif ( wantsToCheck && ! isChecked ){\n\t\t\t\t\t\tthis.field.prop( 'checked', true );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! wantsToCheck && isChecked ) {\n\t\t\t\t\t\tthis.field.prop( 'checked', false );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( doTrigger && ( ( wantsToCheck && ! isChecked ) || ( ! wantsToCheck && isChecked ) ) ){\n\t\t\t\t\t\t// Trigger change\n\t\t\t\t\t\tthis.field.trigger( 'automator:field:change' );\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'radio':\n\t\t\t\t\t// Search for the radio and check it\n\t\t\t\t\tthis.field.filter( `[name=\"${ value }\"]` ).prop( 'checked', true );\n\n\t\t\t\t\t// Trigger change\n\t\t\t\t\tif ( doTrigger ){\n\t\t\t\t\t\t// Trigger change\n\t\t\t\t\t\tthis.field.trigger( 'automator:field:change' );\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\t\t\n\t}\n\n\t/**\n\t * Check if a select has a selected option\n\t *\n\t * @since 0.5\n\t */\n\n\thasSelectedOption(){\n\t\treturn this.selectHasSelectedOption;\n\t}\n\n\t/**\n\t * Set select options\n\t *\n\t * @since 0.5\n\t *\n\t * @param {array} \n\t */\n\n\tsetSelectOptions( options, triggerChange = true ){\n\t\t// Remove current options\n\t\tthis.removeSelectOptions();\n\n\t\tif ( isDefined( this.field ) ){\n\t\t\t// Get the container where we're going to add the options\n\t\t\tconst $optionsContainer = this.field.find( '.form-element__select-normal-options' );\n\n\t\t\tif ( options.length > 0 ){\n\t\t\t\t// Remove disabled\n\t\t\t\tthis.field.prop( 'disabled', false );\n\n\t\t\t\t// Get value\n\t\t\t\tlet value = isDefined( this.getValue() ) ? this.getValue() : this.getMetaValue();\n\n\t\t\t\t// Create array to save all options\n\t\t\t\tlet optionsDOM = [];\n\n\t\t\t\t// Create and append options\n\t\t\t\t$.each( options, ( index, option ) => {\n\t\t\t\t\tlet optionDOM = new Option( option.text, option.value, false, false );\n\n\t\t\t\t\t$optionsContainer.append( optionDOM );\n\t\t\t\t\toptionsDOM.push( optionDOM );\n\t\t\t\t});\n\n\t\t\t\tif ( ! isEmpty( value ) ){\n\t\t\t\t\t$.each( this.field.find( 'option' ), ( index, option ) => {\n\t\t\t\t\t\tif ( option.value == value ){\n\t\t\t\t\t\t\t$( option ).prop( 'selected', true );\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet $noResults = $( ( new Option( UncannyAutomator.i18n.noResults, '', ! this.attributes.supportsCustomValue, ! this.attributes.supportsCustomValue ) ) );\n\t\t\t\t$noResults.prop( 'disabled', true );\n\n\t\t\t\t$optionsContainer.append( $noResults );\n\n\t\t\t\tif ( ! this.attributes.supportsCustomValue ){\n\t\t\t\t\t// Disable the select\n\t\t\t\t\tthis.field.prop( 'disabled', true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( triggerChange ){\n\t\t\t\tthis.field.trigger( 'change' );\n\t\t\t\t// this.field.trigger( 'automator:field:change' );\n\t\t\t}\n\n\t\t\t// Render this select2 again\n\t\t\tthis.rerenderSelect2();\n\t\t}\n\t}\n\n\t/**\n\t * Remove select options\n\t *\n\t * @since 0.5\n\t */\n\n\tremoveSelectOptions(){\n\t\tif ( isDefined( this.field ) ){\n\t\t\tthis.field.find( '.form-element__select-normal-options' ).empty();\n\t\t}\n\t}\n\n\t/**\n\t * Check if field has loading animation\n\t * \n\t * @since 0.4\n\t *\n\t * @return {boolean} TRUE if the field has the loading animation\n\t */\n\n\tisLoading(){\n\t\treturn this.formElement.hasClass( 'form-element--loading' );\n\t}\n\n\t/**\n\t * Add loading animation to field\n\t * \n\t * @since 0.4\n\t */\n\n\tstartLoadingAnimation(){\n\t\t// Check if has class\n\t\tlet CSSclass = 'form-element--loading';\n\n\t\tif ( isDefined( this.formElement ) && ! this.formElement.hasClass( CSSclass ) ){\n\t\t\t\n\t\t\t// Add class\n\t\t\tthis.formElement.addClass( CSSclass );\n\n\t\t\t// Check if it's a checkbox\n\t\t\tif ( this.type == 'checkbox' && ! isDefined( this.attributes.isToggle ) ){\n\t\t\t\tthis.fieldContainer.addClass( 'form-checkbox--loading-inline' );\n\t\t\t}\n\n\t\t\t// Trigger\n\t\t\tthis.formElement.trigger( 'automator:field:loading' );\n\t\t}\n\t}\n\n\t/**\n\t * Remove loading animation to field\n\t * \n\t * @since 0.4\n\t */\n\n\tstopLoadingAnimation(){\n\t\t// Check if has class\n\t\tlet CSSclass = 'form-element--loading';\n\n\t\tif ( isDefined( this.formElement ) && this.formElement.hasClass( CSSclass ) ){\n\t\t\t\n\t\t\t// Remove class\n\t\t\tthis.formElement.removeClass( CSSclass );\n\n\t\t\t// Remove checkbox class\n\t\t\tthis.fieldContainer.removeClass( 'form-checkbox--loading-inline' );\n\n\t\t\t// Trigger\n\t\t\tthis.formElement.trigger( 'automator:field:loading' );\n\t\t}\n\t}\n\n\t/**\n\t * Init field libraries, like Select2\n\t *\n\t * @since 0.5\n\t */\n\n\tinitLibraries(){\n\t\tswitch ( this.type ){\n\t\t\tcase 'select':\n\t\t\t\t// Select2\n\t\t\t\tthis.initSelect2( this.field );\n\t\t\t\tbreak;\n\n\t\t\tcase 'text':\n\t\t\tcase 'url':\n\t\t\tcase 'email':\n\t\t\tcase 'int':\n\t\t\tcase 'float':\n\t\t\tcase 'textarea':\n\t\t\t\t// Tokens\n\t\t\t\tif ( this.attributes.supportsTokens ){\n\t\t\t\t\tthis.initTokenSelector( this.fieldContainer );\n\t\t\t\t}\n\n\t\t\t\t// URL Checker\n\t\t\t\tif ( this.attributes.fieldType == 'url' ){\n\t\t\t\t\tinitURLChecker( this.fieldContainer );\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Select\n\t * Get the select2 settings\n\t *\n\t * @since 2.7.3\n\t */\n\n\tgetSelect2Settings(){\n\t\t// Define select2 settings\n\t\tlet settings = {\n\t\t\ttheme: 'default uap-select2',\n\t        searchInputPlaceholder: UncannyAutomator.i18n.search,\n\t        language: {\n\t            noResults: function () {\n\t                return UncannyAutomator.i18n.noResults;\n\t            },\n\t        },\n            templateResult: ( data ) => {\n            \tlet template = data.text;\n\n            \t// Check if the ID is defined\n                if ( isDefined( data.id ) ){\n                \t// Check if it's a number\n                    if ( Number.isInteger( parseInt( data.id ) ) && parseInt( data.id ) > 0 ){\n                        template = `<span class=\"uap-select2-item__meta\">(${ vsprintf( UncannyAutomator.i18n.postIDPlaceholder, [ data.id.replace( '-objectkey', '' )])})</span> ${ data.text }`; \n                    } \n                }\n\n                return template;\n            },\n            templateSelection: function ( data ) {\n                let template = data.text;\n\n            \t// Check if the ID is defined\n                if ( isDefined( data.id ) ){\n                \t// Check if it's a number\n                    if ( Number.isInteger( parseInt( data.id ) ) && parseInt( data.id ) > 0 ){\n                        template = `<span class=\"uap-select2-item__meta\">(${ vsprintf( UncannyAutomator.i18n.postIDPlaceholder, [ data.id.replace( '-objectkey', '' )])})</span> ${ template }`; \n                    } \n                }\n\n                return template;\n            },\n            escapeMarkup: function ( markUp ) {\n                return markUp;\n            }\n\t    };\n\n\t    // Check if we have to add a placeholder\n\t\tif ( this.attributes.hasPlaceholder ){\n\t\t\t// Add placeholder\n\t\t\tsettings.placeholder = this.attributes.placeholder;\n\t\t}\n\n\t\treturn settings;\n\t}\n\n\t/**\n\t * Init Select2\n\t * \n\t * @since 0.5\n\t */\n\n\tinitSelect2( $field ){\n\t\tlet settings = this.getSelect2Settings();\n\n\t\tif ( ! $field.hasClass( 'select2-hidden-accessible' ) ){\n\t\t\t$field.select2( settings );\n\t\t}\n\t}\n\n\t/**\n\t * Select\n\t * Rerender the dropdown\n\t */\n\t\n\trerenderSelect2(){\n\t\tlet settings = this.getSelect2Settings();\n\n\t\tif ( ! isEmpty( this.field ) && this.field.hasClass( 'select2-hidden-accessible' ) ){\n\t\t\tthis.field.select2( 'destroy' ).select2( settings );\n\t\t}\n\t}\n\n\t/**\n\t * Init Token Selector\n\t * This is temporal and will be removed in the next version\n\t *\n\t * @since 0.5\n\t */\n\n\tinitTokenSelector( $input ){\n\t    // Get all inputs with token selectors and init\n\t    let tokens = getTokens( this.attributes.itemType, this.attributes.fieldType );\n\t    $input.TokenSelector( tokens );\n\t}\n\n\t/**\n\t * Init TinyMCE\n\t * We're going to call this in ItemOptions.js because TinyMCE needs the item in the DOM before changing it\n\t *\n\t * @since 0.5\n\t */\n\n\tinitTinyMCE(){\n\t\tlet $textarea = this.field;\n\n\t\t// TinyMCE\n\t\tif ( isDefined( this.field ) && this.attributes.fieldType == 'textarea' && this.attributes.supportsTinyMCE ){\n\t\t\t// Get field ID\n\t\t\tconst fieldId = this.field.prop( 'id' );\n\n\t\t\t// Get editor\n\t        let editor = tinymce.get( fieldId );\n\n\t        if ( isDefined( editor ) ){\n\t        \twp.editor.remove( fieldId );\n\t        }\n\n\t\t\twp.editor.initialize( fieldId, {\n\t\t\t\tmediaButtons: true,\n\t\t\t\ttinymce: { \n\t\t\t\t\twpautop: true, \n\t\t\t\t\ttoolbar1: 'formatselect bold italic bullist numlist blockquote alignleft aligncenter alignright link unlink wp_more',\n\t\t\t\t\ttoolbar2: 'strikethrough hr forecolor pastetext removeformat visualchars outdent indent undo redo'\n\t\t\t\t}, \n\t\t\t\tquicktags: true,\n\t\t\t});\n\n\t\t\t// Get editor\n\t        editor = tinymce.get( fieldId );\n\t        \n\t        editor.on( 'input change paste', () => {\n\t        \tthis.field.text( editor.getContent() );\n\t        });\n\t\t}\n\t}\n}\n\nexport default Field;\n\n/**\n * Extend Select2 to add a placeholder in the search input\n *\n * @since 0.1\n *\n * @param   {object} Select2 Instance\n *\n * @return  {object} Select2 Instance\n */\n\n(function ($){\n    // Get default settings\n    var Defaults = $.fn.select2.amd.require( 'select2/defaults' );\n\n    // Set default value for searchInputPlaceholder\n    $.extend(Defaults.defaults, {\n        searchInputPlaceholder: ''\n    });\n\n    // Get search element\n    var SearchDropdown = $.fn.select2.amd.require( 'select2/dropdown/search' );\n\n    // Save instance of search element\n    var _renderSearchDropdown = SearchDropdown.prototype.render;\n\n    SearchDropdown.prototype.render = function ( decorated ){\n        // Add placeholder attribute\n        var $rendered = _renderSearchDropdown.apply( this, Array.prototype.slice.apply( arguments ) );\n        this.$search.attr( 'placeholder', this.options.get( 'searchInputPlaceholder' ) );\n\n        // Return search element\n        return $rendered;\n    };\n})(window.jQuery);\n\n/*** To-do: Move to the Field class as a method **/\n\n(function( $ ){\n    $.fn.TokenSelector = function( fieldTokens ){\n        return this.each( function(){\n            let $this = $(this);\n\n            let settings = {\n                noResults: UncannyAutomator.i18n.noResults,\n                responsive: {\n                    margin: 30, // min space the dropdown and the limit of the viewport\n                },\n            };\n\n            let fieldElementType = $this.hasClass( 'form-input' ) ? 'input' : 'textarea';\n\n            // Define CSS classes\n            settings.classes = {};\n\n            switch ( fieldElementType ){\n                case 'input':\n                    settings.classes.tokenReady  = 'form-input--token-ready';\n                    settings.classes.field       = 'form-element__input';\n                    settings.classes.hiddenField = 'form-element__input--hidden';\n                    break;\n\n                case 'textarea':\n                    settings.classes.tokenReady  = 'form-textarea--token-ready';\n                    settings.classes.field       = 'form-element__textarea';\n                    settings.classes.hiddenField = 'form-element__textarea--hidden';\n\n                    let $field = $this.find( 'textarea' );\n                    settings.isTinyMCEinstance   = $field.data( 'supportstinymce' );\n                    settings.TinyMCEinstanceID   = $field.prop( 'id' );\n                    break;\n            }\n\n            // Init\n            if ( ! $this.hasClass( settings.classes.tokenReady ) ){\n\n                let itemType = $this.find( '.' + settings.classes.field ).data( 'item_type' );\n\n                let tokens = {\n                    list: fieldTokens,\n\n                    getTokenList: function(){\n                        return this.list;\n                    },\n\n                    hasTokens: function(){\n                        let list = this.list;\n                        return ! $.isEmptyObject( list );\n                    }\n                }\n\n                let tokensList = tokens.getTokenList();\n\n                if ( tokens.hasTokens() ){\n                    let render = {\n                        config: {\n                            inputHeight: 35,\n                        },\n\n                        init: function(){\n                            this.createElement();\n                        },\n\n                        createElement: function(){\n                            let mainFormElement = $this,\n                                input = mainFormElement.find( '.' + settings.classes.field );\n\n                            let fieldType = input.data( 'type' );\n                            /* Dropdown section */\n\n                            let formDropdown = mainFormElement.find( '.form-variable__dropdown' ),\n                                formDropdownContainer = $( '<div/>', { 'class': 'form-variable__dropdown-container' }),\n                                formDropdownSearch = $( '<div/>', { 'class': 'form-variable__search' }),\n                                formDropdownSearchInput = $( '<input/>', {\n                                \t'class': 'form-variable__search-input', 'placeholder': UncannyAutomator.i18n.tokens.search\n                                });\n\n                            formDropdownSearch.append( formDropdownSearchInput );\n\n                            // Token groups\n\n                            let formGroups = $('<div/>', { 'class': 'form-variable__groups' });\n\n                            $.each( tokensList, function( tokenGroupID, tokenGroup ){\n                                let groupContainer = $('<div/>', { 'class': 'form-variable__group' });\n\n                                /* Group - header */\n\n                                let groupSource = $('<div/>', { 'class': 'form-variable__group-source' }),\n                                    groupIcon = $('<div/>', { 'class': 'form-variable-group-source__icon' }),\n                                    groupName = $('<div/>', { 'class': 'form-variable-group-source__description' }),\n                                    groupToggle = $('<div/>', { 'class': 'form-variable-group-source__toggle' }),\n                                    groupToggleIcon = $('<span/>', { 'class': 'form-variable-group-source__toggle-icon' });\n\n                                // Create the variable where we're going to save the icon\n                                let $tokenIcon;\n\n                                if ( isDefined( UncannyAutomator.integrations[ tokenGroup.integrationId ] ) ){\n                                     // Search for an icon\n                                    let integration = UncannyAutomator.integrations[ tokenGroup.integrationId ];\n\n\t\t\t\t\t\t\t\t\t// Check if it has a svg image\n\t\t\t\t\t\t\t\t\tif ( isDefined( integration.icon_svg ) ){\n\t\t\t\t\t\t\t\t\t\t$tokenIcon = $( `<img src=\"${ integration.icon_svg }\" alt=\"${ integration.name }\">` );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// Check if it has a png image\n\t\t\t\t\t\t\t\t\telse if ( isDefined( integration.icon_16 ) && isDefined( integration.icon_32 ) ){\n\t\t\t\t\t\t\t\t\t\t$tokenIcon = $( `<img src=\"${ integration.icon_16 }\" srcset=\"${ vsprintf( '%s 1x, %s 2x', [ integration.icon_16, integration.icon_32 ]) }\" alt=\"${ integration.name }\">` );\n\t\t\t\t\t\t\t\t\t}\n                                }\n                                else {\n                                    // Use default icon\n                                    $tokenIcon = $('<i/>', { 'class': 'uo-icon ' + tokenGroup.icon });\n                                }\n\n                                groupIcon.append( $tokenIcon );\n\n                                // Name\n                                groupName.append( tokenGroup.name );\n\n                                // Toggle\n                                groupToggle.append( groupToggleIcon );\n\n                                // Append everything to main container\n                                groupSource.append( groupIcon );\n                                groupSource.append( groupName );\n                                groupSource.append( groupToggle );\n\n                                /* Tokens */\n                                let tokenGroups = $('<span/>', { 'class': 'form-variable__group-children' });\n\n                                $.each( tokenGroup.tokens, function( individualTokenID, individualToken ){\n                                    let tokenItem = $('<div/>', {\n                                    \t'class':      'form-variable__group-item',\n                                    \t'data-token': '{{' + individualToken.id + '}}',\n                                    \t'data-type':  individualToken.type });\n\n                                    tokenItem.html( individualToken.name );\n                                    tokenGroups.append( tokenItem );\n                                });\n\n                                groupContainer.append( groupSource );\n                                groupContainer.append( tokenGroups );\n\n                                formGroups.append( groupContainer );\n                            });\n\n                            let noResults = $( '<div/>', { 'class': 'form-variable__group-item-no-results form-variable__group-item-no-results--hide' } );\n                            noResults.text( settings.noResults );\n                            formGroups.append( noResults );\n\n                            // Add containers to main dropdown container\n                            formDropdownContainer.append( formDropdownSearch );\n                            formDropdownContainer.append( formGroups );\n                            formDropdown.append( formDropdownContainer );\n\n                            mainFormElement.addClass( settings.classes.tokenReady );\n                        },\n\n                        getPosition: function(){\n                            let usefulElements = {\n                                window: $(window)\n                            }\n\n                            let space = {\n                                above: elements.container.offset().top - usefulElements.window.scrollTop(),\n                                below: usefulElements.window.height() - ( elements.container.offset().top - usefulElements.window.scrollTop() ) - this.config.inputHeight,\n                            }\n\n                            elements.dropdown.container_relative.addClass('uo-realsize');\n                            let dropDownHeight = elements.dropdown.container_relative.height() + 75; // + 75px to show at least 1 option\n                            elements.dropdown.container_relative.removeClass('uo-realsize');\n\n                            // Show dropdown always below for textareas\n                            if ( fieldElementType == 'textarea' ){\n                                space.hasSpaceBelow = true;\n                            }\n                            else {\n                                space.hasSpaceBelow = space.below >= dropDownHeight;\n                            }\n\n                            return space;\n                        },\n\n                        setDirection: function(){\n                            let position = this.getPosition();\n\n                            // Reset before adding another class\n\n                            elements.container.removeClass( 'form-variable--above form-variable--below' );\n\n                            // Decide\n\n                            if ( position.below > position.above || position.hasSpaceBelow ){\n                                // Let's show it below\n                                elements.container.addClass( 'form-variable--below' );\n                                status.position = 'below';\n                            }\n                            else {\n                                // Let's show it above\n                                elements.container.addClass( 'form-variable--above' );\n                                status.position = 'above';\n                            }\n                        },\n\n                        setScroll: function(){\n                            if ( status.open ){\n                                let maxHeight = this.getPosition()[ status.position ] - this.config.inputHeight - settings.responsive.margin;\n                                elements.dropdown.options.container.css({ 'max-height' : maxHeight + 'px' });\n                            }\n                        },\n\n                        addToken: function( token ){\n                        \tlet cursorPosition \t  = elements.input.get( 0 ).selectionStart,\n                        \t\tnewCursorPosition = cursorPosition + token.length;\n\n                            if ( settings.isTinyMCEinstance ){\n                                // TinyMCE\n                                let instance = tinymce.get( settings.TinyMCEinstanceID );\n\n                                if ( isDefined( instance ) ){\n                                \t// Remove possible spaces from token\n                                \ttoken = removeSpaces( token );\n\n                                    // Check if \"Text\" view is selected\n                                    if ( elements.input.is( ':visible' ) ){\n                                        // Get content\n                                        let currentValue = elements.input.val(),\n                                        \tnewValue \t = currentValue.substr( 0, cursorPosition ) + token + currentValue.substr( cursorPosition );\n\n                                        // Set new value and focus\n\t\t                                elements.input.val( newValue ).focus();\n\n\t\t                                // Trigger input event\n\t\t                                elements.input.trigger( 'input' );\n\n\t\t                                // Set position of the cursor\n\t\t                                elements.input.get( 0 ).setSelectionRange( newCursorPosition, newCursorPosition );\n                                    }\n                                    else {\n                                    \t// Insert token\n                                    \tinstance.execCommand( 'mceInsertContent', false, token );\n                                    }\n                                }\n                            }\n                            else {\n                                // A normal HTML form element\n                                let currentValue \t  = elements.input.val(),\n                                \tnewValue \t \t  = currentValue.substr( 0, cursorPosition ) + token + currentValue.substr( cursorPosition );\n\n                                // Set new value and focus\n                                elements.input.val( newValue ).focus();\n\n                                // Trigger input event\n                                elements.input.trigger( 'input' );\n\n                                // Set position of the cursor\n                                elements.input.get( 0 ).setSelectionRange( newCursorPosition, newCursorPosition );\n                            }\n\n                            this.hideDropdown();\n                            this.focusInput();\n                        },\n\n                        resetDropdown: function(){\n                            elements.dropdown.options.groups.removeClass( 'form-variable__group--hide form-variable__group--open' );\n                            elements.dropdown.options.groups.removeClass( 'form-variable__group--open' );\n                            elements.dropdown.options.items.removeClass( 'form-variable__group-item--hide' );\n                            elements.dropdown.options.no_results.addClass( 'form-variable__group-item-no-results--hide' );\n                        },\n\n                        hideDropdown: function(){\n                            elements.container.removeClass( 'form-variable--open' );\n\n                            // Save status\n                            status.open = false;\n\n                            // Rest input value and trigger 'input' event\n                            elements.dropdown.search_input.val('').trigger('input');\n                        },\n\n                        focusInput: function(){\n                            elements.input.focus();\n                        },\n                    }\n\n                    let status = {\n                        open: false,\n                        position: null\n                    }\n\n                    let bind = {\n                        init: function(){\n                            this.toggles();\n                            this.insert_tokens();\n                            this.search();\n                            this.resize();\n                            this.mirrorContent();\n                        },\n\n                        toggles: function(){\n                            /* Main dropdown */\n                            elements.dropdown.button.on( 'click', () => {\n                                elements.container.toggleClass( 'form-variable--open' );\n\n                                // Get and save status\n                                status.open = elements.container.hasClass( 'form-variable--open' );\n\n                                // If the user tried to opened it, bind click outside\n                                if ( status.open ){\n                                \t// Listen clicks outside\n                                \tthis.bindClicksOutside();\n                                }\n                                else {\n                                \t// Otherwise, remove the listener\n                            \t\t$( document ).off( 'mouseup.uap-token-selector-click-outside' );\n                                }\n\n                                // Rest input value and trigger 'input' event\n                                elements.dropdown.search_input.val('').trigger('input');\n\n                                // Focus search\n                                elements.dropdown.search_input.focus();\n\n                                // Decide position\n                                render.setDirection();\n\n                                // Set scroll\n                                render.setScroll();\n                            });\n\n                            /* Each group */\n                            elements.dropdown.options.groups_title.on( 'click', function(){\n                                let $this = $(this),\n                                    group = $this.closest('.form-variable__group');\n\n                                group.toggleClass( 'form-variable__group--open' );\n                            });\n                        },\n\n                        bindClicksOutside: function(){\n                        \t// Bind clicks outside\n                        \t// Add event listener to listen clicks outside\n\t                        $( document ).on( 'mouseup.uap-token-selector-click-outside', function( event ){\n\t                            // Set the targetted container\n\t                            let container = elements.container;\n\n\t                            if ( ! container.is( event.target ) && container.has( event.target ).length === 0 ){\n\t                                // Hide bubble\n\t                                elements.container.removeClass( 'form-variable--open' );\n\n\t\t                            // Save status\n\t\t                            status.open = false;\n\n\t\t                            // Rest input value and trigger 'input' event\n\t\t                            elements.dropdown.search_input.val('').trigger('input');\n\t                            }\n\t                        });\n                        },\n\n                        resize: function(){\n                            $(window).resize( function(){\n                                render.setScroll();\n                            });\n                        },\n\n                        insert_tokens: function(){\n                            /* Insert tokens */\n\n                            elements.dropdown.options.items.on( 'click', function(){\n                                let $this = $(this),\n                                    token = $this.data('token');\n\n                                render.addToken( token );\n                            });\n                        },\n\n                        search: function(){\n                            elements.dropdown.search_input.on( 'input', function(){\n                                let $this = $(this),\n                                    value = $this.val();\n\n                                if ( value != '' ){\n                                    // Search\n\n                                    // Prepare string. Remove spaces and convert all characters to lowercase\n                                    value = value.toLowerCase().replace(/\\s/g, '');\n\n                                    // Open all groups\n                                    elements.dropdown.options.groups.addClass( 'form-variable__group--open' );\n\n                                    // Hide all groups and options\n                                    elements.dropdown.options.groups.addClass( 'form-variable__group--hide' );\n                                    elements.dropdown.options.items.addClass( 'form-variable__group-item--hide' );\n\n                                    // Hide \"No Results\" container\n                                    elements.dropdown.options.no_results.addClass( 'form-variable__group-item-no-results--hide' );\n\n                                    // Create variable to search if there were results\n                                    let hasResults = false;\n\n                                    // Search matches and show group if there is at least one result\n                                    elements.dropdown.options.items.each( function(){\n                                        let $this = $(this),\n                                            optionName = $this.text().toLowerCase().replace(/\\s/g, '');\n\n                                        if ( optionName.search( value ) !== -1 ){\n                                            // Match! show option and group\n\n                                            // Find group first\n                                            let group = $this.closest( '.form-variable__group' );\n\n                                            // Show group\n                                            group.removeClass( 'form-variable__group--hide' );\n\n                                            // Show option\n                                            $this.removeClass( 'form-variable__group-item--hide' );\n\n                                            // Change hasResults\n                                            hasResults = true;\n                                        }\n                                    });\n\n                                    // Check if there results, if not, then show no results container\n                                    if ( ! hasResults ){\n                                        elements.dropdown.options.no_results.removeClass( 'form-variable__group-item-no-results--hide' );\n                                    }\n                                }\n                                else {\n                                    // Reset\n                                    render.resetDropdown();\n                                }\n                            });\n                        },\n\n                        mirrorContent: function(){\n                            /*\n                            elements.input.on( 'input', function(){\n                                elements.input.val( elements.input.val() );\n                            });\n                            */\n                        }\n                    }\n\n                    render.init();\n\n                    let elements = {\n                        container:              $this.find( '.form-variable' ),\n                        input_area:             $this.find( '.form-variable__element' ),\n                        input:                  $this.find( '.' + settings.classes.field ),\n                        dropdown: {\n                            container:          $this.find( '.form-variable__dropdown' ),\n                            container_relative: $this.find( '.form-variable__dropdown-container' ),\n                            button:             $this.find( '.form-variable__toggle' ),\n                            search_input:       $this.find( '.form-variable__search-input' ),\n                            options: {\n                                container:      $this.find( '.form-variable__groups' ),\n                                groups:         $this.find( '.form-variable__group' ),\n                                groups_title:   $this.find( '.form-variable__group-source' ),\n                                items:          $this.find( '.form-variable__group-item' ),\n                                no_results:     $this.find( '.form-variable__group-item-no-results' ),\n                            },\n                        }\n                    }\n\n                    bind.init();\n                }\n                else {\n                    $this.find( '.form-variable__element' ).addClass( 'form-variable__element--empty' );\n                }\n            }\n\n            return this;\n        });\n    }\n}( jQuery ));\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Field.js","import {\n    itemsObject,\n    getDOMElements,\n    isEmpty,\n    isDefined,\n    vsprintf\n} from './Utilities.js';\nimport ItemCreatorIntegrations  from './ItemCreatorIntegrations.js';\nimport MetaboxNotice            from './MetaboxNotice.js';\nimport MetaboxItems             from './MetaboxItems.js';\nimport MetaboxFooter            from './MetaboxFooter.js';\n\nclass Triggers {\n    constructor(){\n        // Create console group\n        // console.group( 'Triggers' );\n\n        // Get and clear metabox\n        let metabox = getDOMElements( 'metabox', { type: 'trigger' });\n        metabox.empty();\n\n        // Get recipe triggers\n        let triggers = itemsObject( 'get', {\n            filter: {\n                itemType: 'trigger'\n            }\n        });\n\n        // Check if it has triggers\n        if ( ! isEmpty( triggers ) ){\n            // Render items\n            new MetaboxItems( 'trigger' );\n        }\n        else {\n            new ItemCreatorIntegrations( 'trigger' );\n        }\n\n        // Create metabox footer\n        new MetaboxFooter( 'trigger' );\n\n        // Close console group\n        // console.groupEnd();\n    }\n}\n\nexport default Triggers;\n\n\n// WEBPACK FOOTER //\n// ./src/components/Triggers.js","import {\n\titemsObject,\n\tisString,\n\tisEmpty,\n\tisDefined,\n\tinArray,\n\tgetTokens,\n\tgetDOMElements,\n\tgetFieldTypes,\n\trestCall,\n\tvsprintf\n} from './Utilities.js';\nimport Publish from './Publish.js';\n\n/**\n * Validate form using the global object UncannyAutomator.recipe, which contains\n * all the recipe items \n *\n * @since 0.3\n *\n * @return {object}\n * @return {boolean}  response.canSubmit - TRUE if the recipe is valid\n */\n\nexport function validateRecipe(){\n\t// Set response object\n\tlet response = {\n\t\tcanSubmit: UncannyAutomator.recipe.isValid\n\t}\n\t\n\t// Check if the recipe is not valid\n\tif ( ! UncannyAutomator.recipe.isValid ){\n\n\t\t// Enable error mode\n\t\t// UncannyAutomator.recipe.errorMode = true;\n\n\t\t// Iterate each item\n\t\t$.each( UncannyAutomator.recipe.items, function( itemID, itemData ){\n\n\t\t\t// Validate each item\n\t\t\tvalidateItem( itemID );\n\t\t});\n\t}\n\n\treturn response;\n}\n\n/**\n * Validate item using the itemID\n *\n * @since 0.4\n *\n * @param  {int} \t  itemID - ID of the item\n * @param  {object}   [$item] - jQuery object of the item. Necessary only if itemID is undefined\n *\n * @return {object}\n * @return {boolean}  response.isValid - TRUE if the item is valid\n */\n\nexport function validateItem( itemID, $item = null ){\n\t// Create response object\n\tlet response = {\n\t\tisValid: false\n\t}\n\n\t// Check if the itemID is defined\n\tif ( isDefined( itemID ) ){\n\t\t// Get item\n\t\tlet item = UncannyAutomator.recipe.items[ itemID ];\n\n\t\t// Check if the item exists, otherwise do nothing, isValid will be false (because of the default value)\n\t\tif ( ! item.isMissing && ! isEmpty( item ) ){\n\t\t\t// Save result\n\t\t\tresponse.isValid = item.isValid;\n\n\t\t\t// Check if this item is invalid\n\t\t\tif ( ! item.isValid ){\n\n\t\t\t\t// Get DOM element of the item\n\t\t\t\tlet itemElement = getDOMElements( 'item', {\n\t\t\t\t\tid: itemID\n\t\t\t\t}).item;\n\n\t\t\t\t// Add CSS class to it\n\t\t\t\titemElement.addClass( 'item--error' );\n\n\t\t\t\t// Iterate each group of fields\n\t\t\t\t$.each( item.options, function( optionsGroupID, optionsGroupData ){\n\n\t\t\t\t\t// Check if a group of fields is invalid\n\t\t\t\t\tif ( ! optionsGroupData.isValid ){\n\n\t\t\t\t\t\t// Get DOM elements of the container with all the fields\n\t\t\t\t\t\tlet optionsGroupElements = getDOMElements( 'optionGroup', {\n\t\t\t\t\t\t\titemID: \titemID,\n\t\t\t\t\t\t\tgroupID: \toptionsGroupID\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Add error classes\n\t\t\t\t\t\toptionsGroupElements.tokenInSentence.addClass( 'item-title__token--error item-title__token--error-shake' );\n\t\t\t\t\t\toptionsGroupElements.fieldsContainer.addClass( 'item-options__group--error' );\n\t\t\t\t\t\toptionsGroupElements.optionsContainer.addClass( 'item-options--error' );\n\n\t\t\t\t\t\t// Remove \"shake\" class from tokenInSentence so the element can shake if the user clicks again\n\t\t\t\t\t\tsetTimeout( function(){\n\t\t\t\t\t\t\toptionsGroupElements.tokenInSentence.removeClass( 'item-title__variable--error-shake' );\n\t\t\t\t\t\t}, 1000 );\n\n\t\t\t\t\t\t// Show errors in the UI for each invalid field\n\t\t\t\t\t\tif ( isDefined( optionsGroupElements.optionsContainer ) ){\n\n\t\t\t\t\t\t\t// Validate the form of the group of fields. Check validateItemFields comments for more information.\n\t\t\t\t\t\t\tvalidateItemFields( optionsGroupElements.optionsContainer );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// ID is not defined, the item doesn't have an ID yet\n\t\tresponse.isValid = false;\n\n\t\t// Check if $item is defined \n\t\tif ( ! isEmpty( $item ) ){\n\t\t\t\n\t\t}\n\t\telse {\n\t\t\tconsole.error( 'Neither itemID nor the $item are defined. One of them must be defined.' );\t\n\t\t}\n\t}\n\n\t// Return response\n\treturn response;\n}\n\n/**\n * Validate form using a DOM element that contains the fields\n * \n * @since 0.1\n *\n * @param {object}\t form - jQuery DOM element that contains the fields\n *\n * @return {object}\n * @return {boolean}  response.isValid - TRUE if the form is valid\n */\n\nexport function validateItemFields( form, validateChildren = false ){\n\t// Create response object\n\tlet response = {\n\t\tisValid: false\n\t}\n\n\t// Get all fields, input, textareas and selects\n\tlet fields = form.find( `\n\t\tinput.form-element__input[data-is-child-field=\"${ validateChildren ? 'true' : 'false' }\"],\n\t\ttextarea.form-element__textarea[data-is-child-field=\"${ validateChildren ? 'true' : 'false' }\"],\n\t\tselect.form-element__select[data-is-child-field=\"${ validateChildren ? 'true' : 'false' }\"],\n\t\t.form-checkbox input,\n\t\t.form-radio` );\n\n\t// Set the variable that will be used to decide if the form is valid or not\n\t// It's true by default, but it will changed to false if at least one field has an error\n\tlet isFormValid = true;\n\n\t// Go through all fields\n\tfields.each(function(){\n\t\t// Save $(this) jQuery element (from the each loop) in the field variable\n\t\t// form-element__input, form-element__textarea or form-element__select\n\t\tlet field = $( this );\n\n\t\t// Get field type\n\t\tlet fieldType = field.data( 'type' );\n\n\t\t// Define field data\n\t\tlet fieldData = {}\n\n\t\t// Check if it's a radio\n\t\tif ( field.hasClass( 'form-radio' ) ){\n\t\t\t// Overwrite field type\n\t\t\tfieldType = 'radio';\n\n\t\t\t// Get one of the radios\n\t\t\tlet radioInput     = field.find( 'input' ).first();\n\n\t\t\t// Get value of the selected radio (if there is any)\n\t\t\tlet selectedRadio  = field.find( 'input:checked' ),\n\t\t\t    radioValue     = selectedRadio.length > 0 ? selectedRadio.val() : '';\n\n\t\t\t// Create object with the data that will be used in the verification process\n\t\t\tfieldData = {\n\t\t\t\tfield_type: \t\t 'radio',\n\t\t\t\tvalue: \t\t\t\t radioValue,\n\t\t\t\tattributes: {\n\t\t\t\t\tsupportsTokens:  radioInput.data( 'supportstokens' ),\n\t\t\t\t\trequired: \t\t radioInput.data( 'required' ),\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Check if it's a select\n\t\telse if ( field.hasClass( 'form-element__select' ) ){\n\t\t\tfieldData = {\n\t\t\t\tfield_type: \t\t 'select',\n\t\t\t\tvalue: \t\t\t\t field.val(),\n\t\t\t\tattributes: {\n\t\t\t\t\tsupportsTokens:      field.data( 'supportstokens' ),\n\t\t\t\t\trequired: \t\t     field.data( 'required' ),\n\t\t\t\t\tsupportsCustomValue: field.data( 'supports-custom-value' ),\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Create object with the data that will be used in the verification process\n\t\t\tfieldData = {\n\t\t\t\tfield_type: \t\t field.data( 'type' ),\n\t\t\t\tvalue: \t\t\t\t field.val(),\n\t\t\t\tattributes: {\n\t\t\t\t\tsupportsTokens:  field.data( 'supportstokens' ),\n\t\t\t\t\trequired: \t\t field.data( 'required' ),\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check if it's a checkbox and overwrite the value\n\t\tif ( fieldData.field_type == 'checkbox' ){\n\t\t\tfieldData.value = field.is( ':checked' );\n\t\t}\n\n\t\t// Check if the field is required, the value is undefined but has a default value in the settings\n\t\t/*\n\t\tif ( fieldData.attributes.required && ! isDefined( fieldData.value ) && isDefined( fieldData.defaultValue ) ){\n\t\t\t// Set default value as value\n\t\t\tfieldData.value = fieldData.attributes.defaultValue;\n\t\t}\n\t\t*/\n\n\t\t// Validate form. Read validateField comments for more information\n\t\tlet fieldValidation = validateField( field, fieldData.field_type, fieldData.value, fieldData.attributes );\n\n\t\t// Check if the field is invalid\n\t\tif ( ! fieldValidation.isValid ){\n\t\t\tisFormValid = false;\n\n\t\t\t// Add error class to form container\n\t\t\tform.addClass( 'item-options--error' );\n\t\t}\n\t});\n\n\tresponse.isValid = isFormValid;\n\n\treturn response;\n}\n\n/**\n * Validates the value of a field.\n * Supports all field types\n *\n * Only supports one token. The object is prepared to support more than one, we only have to remove the if statement\n * that checks the number of tokens per string. This functionality will be change in another version\n *\n * @since 0.1\n *\n * @param {object} \t\tfield - jQuery object of the field used to add CSS classes. Use null if you just want to get the validation response\n * @param {string} \t\tfieldType - A valid field type\n * @param {string} \t\tvalue - The value of the field.\n * @param {object}   \tattributes - Object with some of the field attributes\n * @param {boolean} \tattributes.supportsTokens - TRUE if the field should support tokens\n * @param {boolean} \tattributes.required - TRUE if the field is required\n * @param {object} \t\t[customValidationFunction] Just in case you want to add a custom validation function. Must return an object with two properties { isValid: {boolean}, message: {string} }\n *\n * @return {object}\n * @return {boolean} \tresponse.isValid - TRUE if the field is valid\n * @return {string}  \tresponse.message - Message showing the reason the field is invalid\n */\n\nexport function validateField( field, fieldType, value, attributes = { supportsTokens: false, required: false }, customValidationFunction ){\n\t// Create response object\n\tlet response = {\n\t\tisValid: false,\n\t\tmessage: '',\n\t}\n\n\t// Define valid field types\n\tlet fieldTypes = getFieldTypes();\n\n\t// Set messages\n\tlet messages = {\n\t\tselect: {\n\t\t\tempty: \t UncannyAutomator.i18n.validation.field.select.empty,\n\t\t\tinvalid: UncannyAutomator.i18n.validation.field.select.invalid,\n\t\t},\n\t\ttext: {\n\t\t\tempty:   UncannyAutomator.i18n.validation.field.text.empty,\n\t\t\tinvalid: UncannyAutomator.i18n.validation.field.text.invalid,\n\t\t},\n\t\ttextarea: {\n\t\t\tempty:   UncannyAutomator.i18n.validation.field.textarea.empty,\n\t\t\tinvalid: UncannyAutomator.i18n.validation.field.textarea.invalid,\n\t\t},\n\t\tint: {\n\t\t\tempty: \t UncannyAutomator.i18n.validation.field.int.empty,\n\t\t\tinvalid: UncannyAutomator.i18n.validation.field.int.invalid,\n\t\t\tmultipleTokens: UncannyAutomator.i18n.validation.field.int.multipleTokens,\n\t\t},\n\t\tfloat: {\n\t\t\tempty: \t UncannyAutomator.i18n.validation.field.float.empty,\n\t\t\tinvalid: UncannyAutomator.i18n.validation.field.float.invalid,\n\t\t\tmultipleTokens: UncannyAutomator.i18n.validation.field.float.multipleTokens,\n\t\t},\n\t\temail: {\n\t\t\tempty:   UncannyAutomator.i18n.validation.field.email.empty,\n\t\t\tsingle:  {\n\t\t\t\tinvalid: UncannyAutomator.i18n.validation.field.email.single.invalid,\n\t\t\t\tmultipleTokens: UncannyAutomator.i18n.validation.field.email.single.multipleTokens,\n\t\t\t},\n\t\t\tmultiple: {\n\t\t\t\tinvalid: UncannyAutomator.i18n.validation.field.email.multiple.invalid,\n\t\t\t\tmultipleTokens: UncannyAutomator.i18n.validation.field.email.multiple.multipleTokens,\n\t\t\t}\t\n\t\t},\n\t\turl: {\n\t\t\tempty: \t UncannyAutomator.i18n.validation.field.url.empty,\n\t\t\tinvalid: UncannyAutomator.i18n.validation.field.url.invalid,\n\t\t},\n\t\tcheckbox: {\n\t\t\tempty: \t UncannyAutomator.i18n.validation.field.checkbox.empty,\n\t\t\tinvalid: UncannyAutomator.i18n.validation.field.checkbox.invalid,\n\t\t},\n\t\tradio: {\n\t\t\tempty: \t UncannyAutomator.i18n.validation.field.radio.empty,\n\t\t\tinvalid: UncannyAutomator.i18n.validation.field.radio.invalid,\n\t\t},\n\t\tinvalidType: UncannyAutomator.i18n.validation.field.invalidType,\n\t}\n\n\t// Check if it's a valid field type\n\tif ( inArray( fieldType, fieldTypes ) ){\n\t\t// Check if it's a checkbox and sanitaze the current value\n\t\tif ( fieldType == 'checkbox' && ! isEmpty( value ) ){\n\t\t\t// Check if the value is \"true\" or \"false\"\n\t\t\tif ( [ 'true', 'false' ].includes( value ) ){\n\t\t\t\t// Make it a boolean\n\t\t\t\tvalue = value == 'true' ? true : false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if it's a required field and it's empty.\n\t\t// Show \"empty\" error\n\t\tif ( attributes.required && ( isEmpty( value ) || fieldType == 'checkbox' && value === false ) ){\n\t\t\tresponse.message = messages[ fieldType ].empty;\n\t\t}\n\t\t// Check if it isn't a required field and it's empty.\n\t\t// We don't have to validate it\n\t\telse if ( ! attributes.required && isEmpty( value ) ){\n\t\t\tresponse.isValid = true;\n\t\t}\n\t\t// The field has a value\n\t\telse if ( value != '' ){\n\t\t\t// This variable will be used multiple times in the following code. Let's define it here.\n\t\t\tlet tokensInString;\n\n\t\t\t// Check what's our field type.\n\t\t\tswitch ( fieldType ){\n\n\t\t\t\tcase 'select':\n\t\t\t\t\tresponse.isValid = true; \n\n\t\t\t\t\t// Check if the value is a custom value, if so, validate it\n\t\t\t\t\tif ( attributes.supportsCustomValue && value == 'automator_custom_value' ){\n\t\t\t\t\t\t// Get the child field\n\t\t\t\t\t\tconst $childrenFields = field.closest( '.form-element' ).find( '.form-element-children' );\n\n\t\t\t\t\t\t// Check if we found it\n\t\t\t\t\t\tif ( $childrenFields.length == 1 ){\n\t\t\t\t\t\t\t// Validate it and pass the result to the parent\n\t\t\t\t\t\t\tresponse.isValid = validateItemFields( $childrenFields, true ).isValid;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if we have to do a custom validation\n\t\t\t\t\tif ( response.isValid && isDefined( customValidationFunction ) ){\n\t\t\t\t\t\t// Do custom validation\n\t\t\t\t\t\tlet customValidation = customValidationFunction( value );\n\t\t\t\t\t\t// Check if it's valid\n\t\t\t\t\t\tresponse.isValid = customValidation.isValid;\n\n\t\t\t\t\t\t// If it isn't then add message\n\t\t\t\t\t\tif ( ! customValidation.isValid ){\n\t\t\t\t\t\t\tresponse.message = customValidation.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'text':\n\t\t\t\tcase 'textarea':\n\t\t\t\t\tresponse.isValid = true;\n\n\t\t\t\t\t// Check if we have to do a custom validation\n\t\t\t\t\tif ( isDefined( customValidationFunction ) ){\n\t\t\t\t\t\t// Do custom validation\n\t\t\t\t\t\tlet customValidation = customValidationFunction( value );\n\t\t\t\t\t\t// Check if it's valid\n\t\t\t\t\t\tresponse.isValid = customValidation.isValid;\n\n\t\t\t\t\t\t// If it isn't then add message\n\t\t\t\t\t\tif ( ! customValidation.isValid ){\n\t\t\t\t\t\t\tresponse.message = customValidation.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'int':\n\t\t\t\t\t// Regular expression to check if it's a valid int number\n\t\t\t\t\t// https://regex101.com/r/Gz3RvN/4\n\t\t\t\t\tlet int_regex = new RegExp(/^([+-]?[1-9]\\d*|0)$/gm);\n\n\t\t\t\t\t// Get tokens. Read getTokensFromString comments for more information\n\t\t\t\t\ttokensInString = getTokensFromString( value );\n\n\t\t\t\t\t// Create variable to simulate int (replace tokens)\n\t\t\t\t\tlet simulate_int;\n\n\t\t\t\t\t// Check if the string has tokens (and if it should support them)\n\t\t\t\t\tif ( attributes.supportsTokens && tokensInString.hasTokens ){\n\t\t\t\t\t\t// Check if the string has only one token. As we said before, this can be easily changed in future versions\n\t\t\t\t\t\tif ( tokensInString.tokens.length == 1 ){\n\t\t\t\t\t\t\t// Replace tokens in string with a dummy value. Read replaceTokensInString comments for more information\n\t\t\t\t\t\t\tsimulate_int = replaceTokensInString( value );\n\n\t\t\t\t\t\t\t// Perform regular expression test\n\t\t\t\t\t\t\tif ( int_regex.test( simulate_int ) ){\n\t\t\t\t\t\t\t\tresponse.isValid = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// Show \"invalid\" message\n\t\t\t\t\t\t\t\tresponse.message = messages.int.invalid;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// We only support one token for now. Show multiple tokens error.\n\t\t\t\t\t\t\tresponse.message = messages.int.multipleTokens;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Doesn't have tokens, so we only have to perform the regular expression test\n\t\t\t\t\t\tif ( int_regex.test( value ) ){\n\t\t\t\t\t\t\tresponse.isValid = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Show \"invalid\" message\n\t\t\t\t\t\t\tresponse.message = messages.int.invalid;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Custom validation. Check if it's valid, if it isn't then do nothing\n\t\t\t\t\t// Check if we have to do a custom validation\n\t\t\t\t\tif ( response.isValid && isDefined( customValidationFunction ) ){\n\t\t\t\t\t\t// Do custom validation\n\t\t\t\t\t\tlet customValidation = customValidationFunction( value, simulate_int );\n\t\t\t\t\t\t// Check if it's valid\n\t\t\t\t\t\tresponse.isValid = customValidation.isValid;\n\n\t\t\t\t\t\t// If it isn't then add message\n\t\t\t\t\t\tif ( ! customValidation.isValid ){\n\t\t\t\t\t\t\tresponse.message = customValidation.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'float':\n\t\t\t\t\t// Regular expression to check if it's a valid float number\n\t\t\t\t\t// https://regex101.com/r/KDLmre/2/\n\t\t\t\t\tlet float_regex = new RegExp(/^[+-]?((\\d+(\\.|\\,)?\\d*)|(\\.\\d+))$/gm);\n\n\t\t\t\t\t// Get tokens. Read getTokensFromString comments for more information\n\t\t\t\t\ttokensInString = getTokensFromString( value );\n\n\t\t\t\t\t// Create variable to simulate the float (replace tokens)\n\t\t\t\t\tlet simulate_float;\n\n\t\t\t\t\t// Check if the string has tokens (and if it should support them)\n\t\t\t\t\tif ( attributes.supportsTokens && tokensInString.hasTokens ){\n\t\t\t\t\t\t// Check if the string has only one token. As we said before, this can be easily changed in future versions\n\t\t\t\t\t\tif ( tokensInString.tokens.length == 1 ){\n\t\t\t\t\t\t\t// Replace tokens in string with a dummy value. Read replaceTokensInString comments for more information\n\t\t\t\t\t\t\tsimulate_float = replaceTokensInString( value );\n\n\t\t\t\t\t\t\t// Perform regular expression test\n\t\t\t\t\t\t\tif ( float_regex.test( simulate_float ) ){\n\t\t\t\t\t\t\t\tresponse.isValid = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// Show \"invalid\" message\n\t\t\t\t\t\t\t\tresponse.message = messages.float.invalid;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// We only support one token for now. Show multiple tokens error.\n\t\t\t\t\t\t\tresponse.message = messages.float.multipleTokens;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Doesn't have tokens, so we only have to perform the regular expression test\n\t\t\t\t\t\tif ( float_regex.test( value ) ){\n\t\t\t\t\t\t\tresponse.isValid = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Show \"invalid\" message\n\t\t\t\t\t\t\tresponse.message = messages.float.invalid;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Custom validation. Check if it's valid, if it isn't then do nothing\n\t\t\t\t\t// Check if we have to do a custom validation\n\t\t\t\t\tif ( response.isValid && isDefined( customValidationFunction ) ){\n\t\t\t\t\t\t// Do custom validation\n\t\t\t\t\t\tlet customValidation = customValidationFunction( value, simulate_float );\n\t\t\t\t\t\t// Check if it's valid\n\t\t\t\t\t\tresponse.isValid = customValidation.isValid;\n\n\t\t\t\t\t\t// If it isn't then add message\n\t\t\t\t\t\tif ( ! customValidation.isValid ){\n\t\t\t\t\t\t\tresponse.message = customValidation.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'email':\n\t\t\t\t\t// Regular expression to check if it's a valid email address\n\t\t\t\t\t// https://regex101.com/r/ThUWEz/1/\n\t\t\t\t\tlet email_regex = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n\n\t\t\t\t\t// Create array with all the emails we have to validate\n\t\t\t\t\t// We're going to check if the user is trying to validate more than one searching for a comma in the input value\n\t\t\t\t\t// In that case, we're going to split the value and get an array with emails, otherwise we're going to create an array with one element: the input value\n\t\t\t\t\t// Doing that we can use the same code for both cases\n\t\t\t\t\tlet emails = [];\n\n\t\t\t\t\t// Check if the user wants to validate multiple emails\n\t\t\t\t\tif ( value.includes( ',' ) ){\n\t\t\t\t\t\temails = value.split( ',' );\n\n\t\t\t\t\t\t// Remove whitespace from both sides of each email, just in case the user wrote \", \" or \" ,\" instead of \",\"\n\t\t\t\t\t\t$.each( emails, function( index, email ){\n\t\t\t\t\t\t\temails[ index ] = email.trim();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Add value, but remove whitespace from both sides before\n\t\t\t\t\t\temails.push( value.trim() );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get tokens. Read getTokensFromString comments for more information\n\t\t\t\t\ttokensInString = getTokensFromString( value );\n\n\t\t\t\t\t// Create variable to simulate the email (replace tokens)\n\t\t\t\t\tlet simulate_email;\n\t\t\t\t\t\n\t\t\t\t\t// We're going to use this variable to validate all the emails in a loop. TRUE by default, FALSE if at least one of them fails.\n\t\t\t\t\tlet allEmailsAreValid = true;\n\n\t\t\t\t\t// Create variable used to know if there is more than one email\n\t\t\t\t\tlet hasMultipleEmails = emails.length > 1;\n\n\t\t\t\t\t// Check if the string has tokens\n\t\t\t\t\tif ( attributes.supportsTokens && tokensInString.hasTokens ){\n\t\t\t\t\t\t// Create variable to check if the error was due to multiple variables\n\t\t\t\t\t\tlet hasMultipleVariables = false;\n\n\t\t\t\t\t\t// Iterate each email\n\t\t\t\t\t\t$.each( emails, function( index, email ){\n\t\t\t\t\t\t\t// Get tokens from this specific email\n\t\t\t\t\t\t\ttokensInString = getTokensFromString( email );\n\n\t\t\t\t\t\t\t// Check if the string has only one token. As we said before, this can be easily changed in future versions\n\t\t\t\t\t\t\tif ( tokensInString.tokens.length <= 1 ){\n\t\t\t\t\t\t\t\t// Replace tokens in string with a dummy value. Read replaceTokensInString comments for more information\n\t\t\t\t\t\t\t\tsimulate_email = replaceTokensInString( email );\n\n\t\t\t\t\t\t\t\t// Perform regular expression test\n\t\t\t\t\t\t\t\tif ( ! email_regex.test( simulate_email ) ){\n\t\t\t\t\t\t\t\t\t// Do this field invalid\n\t\t\t\t\t\t\t\t\tallEmailsAreValid = false;\n\n\t\t\t\t\t\t\t\t\t// Return false, we don't have to continue checking\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// Change value of hasMultipleVariables. We're going to use this to show a \"Multiple Tokens\" error\n\t\t\t\t\t\t\t\thasMultipleVariables = true;\n\n\t\t\t\t\t\t\t\t// Return false, we don't have to continue checking\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Check result of iteration\n\t\t\t\t\t\tif ( allEmailsAreValid && ! hasMultipleVariables ){\n\t\t\t\t\t\t\tresponse.isValid = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif ( hasMultipleVariables ){\n\t\t\t\t\t\t\t\t// We only support one token for now. Show multiple tokens error.\n\t\t\t\t\t\t\t\tif ( hasMultipleEmails ){\n\t\t\t\t\t\t\t\t\tresponse.message = messages.email.multiple.multipleTokens;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tresponse.message = messages.email.single.multipleTokens;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// Show \"invalid\" message\n\t\t\t\t\t\t\t\tif ( hasMultipleEmails ){\n\t\t\t\t\t\t\t\t\tresponse.message = messages.email.multiple.invalid;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tresponse.message = messages.email.single.invalid;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Doesn't have tokens, so we only have to perform the regular expression test in each email\n\t\t\t\t\t\t$.each( emails, function( index, email ){\n\t\t\t\t\t\t\t// Do regex\n\t\t\t\t\t\t\tif ( ! email_regex.test( email ) ){\n\t\t\t\t\t\t\t\t// If one is valid, all are invalid\n\t\t\t\t\t\t\t\tallEmailsAreValid = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Check result of iteration\n\t\t\t\t\t\tif ( allEmailsAreValid ){\n\t\t\t\t\t\t\tresponse.isValid = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Show \"invalid\" message\n\t\t\t\t\t\t\tif ( hasMultipleEmails ){\n\t\t\t\t\t\t\t\tresponse.message = messages.email.multiple.invalid;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tresponse.message = messages.email.single.invalid;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Custom validation. Check if it's valid, if it isn't then do nothing\n\t\t\t\t\t// Check if we have to do a custom validation\n\t\t\t\t\tif ( response.isValid && isDefined( customValidationFunction ) ){\n\t\t\t\t\t\t// Do custom validation\n\t\t\t\t\t\tlet customValidation = customValidationFunction( value, simulate_email );\n\t\t\t\t\t\t// Check if it's valid\n\t\t\t\t\t\tresponse.isValid = customValidation.isValid;\n\n\t\t\t\t\t\t// If it isn't then add message\n\t\t\t\t\t\tif ( ! customValidation.isValid ){\n\t\t\t\t\t\t\tresponse.message = customValidation.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'url':\n\t\t\t\t\t// This will try to return a valid URL, but can fail, so we have to verify. Read parseURL comments for more information\n\t\t\t\t\tlet validateURL = parseURL( value, attributes );\n\n\t\t\t\t\t// Check if the URL is valid\n\t\t\t\t\tif ( validateURL.isValid ){\n\t\t\t\t\t\tresponse.isValid = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Show \"invalid\" message\n\t\t\t\t\t\tresponse.message = messages.invalidType;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Custom validation. Check if it's valid, if it isn't then do nothing\n\t\t\t\t\t// Check if we have to do a custom validation\n\t\t\t\t\tif ( response.isValid && isDefined( customValidationFunction ) ){\n\t\t\t\t\t\t// Do custom validation\n\t\t\t\t\t\tlet customValidation = customValidationFunction( value, validateURL.simulatedURL );\n\t\t\t\t\t\t// Check if it's valid\n\t\t\t\t\t\tresponse.isValid = customValidation.isValid;\n\n\t\t\t\t\t\t// If it isn't then add message\n\t\t\t\t\t\tif ( ! customValidation.isValid ){\n\t\t\t\t\t\t\tresponse.message = customValidation.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\tresponse.isValid = true;\n\n\t\t\t\t\t// Check if we have to do a custom validation\n\t\t\t\t\tif ( isDefined( customValidationFunction ) ){\n\t\t\t\t\t\t// Do custom validation\n\t\t\t\t\t\tlet customValidation = customValidationFunction( value );\n\t\t\t\t\t\t// Check if it's valid\n\t\t\t\t\t\tresponse.isValid = customValidation.isValid;\n\n\t\t\t\t\t\t// If it isn't then add message\n\t\t\t\t\t\tif ( ! customValidation.isValid ){\n\t\t\t\t\t\t\tresponse.message = customValidation.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'radio':\n\t\t\t\t\tresponse.isValid = true;\n\n\t\t\t\t\t// Check if we have to do a custom validation\n\t\t\t\t\tif ( isDefined( customValidationFunction ) ){\n\t\t\t\t\t\t// Do custom validation\n\t\t\t\t\t\tlet customValidation = customValidationFunction( value );\n\t\t\t\t\t\t// Check if it's valid\n\t\t\t\t\t\tresponse.isValid = customValidation.isValid;\n\n\t\t\t\t\t\t// If it isn't then add message\n\t\t\t\t\t\tif ( ! customValidation.isValid ){\n\t\t\t\t\t\t\tresponse.message = customValidation.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t// The field type doesn't match\n\t\t\t\t\tresponse.isValid = false;\n\t\t\t\t\tresponse.message = '';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tresponse.message = messages[ 'invalidType' ];\n\t}\n\n\t// Add CSS classes to elements showing or hiding the error state\n\t// .form-element will have form-element--success or form-element--error classes\n\t// The message will be shown in the .form-element__error element\n\tif ( ! isEmpty( field ) ){\n\t\tlet $container = field.closest( '.form-element' );\n\t\tlet $error_container = $container.find( '.form-element__error' ).filter(function(){\n\t\t\treturn $( this ).closest( '.form-element' ).is( $container );\n\t\t});\n\n\t\tif ( ! response.isValid ){\n\t\t\t$container.removeClass( 'form-element--success' );\n\t\t\t$container.addClass( 'form-element--error' );\n\t\t}\n\t\telse {\n\t\t\t$container.removeClass( 'form-element--error' );\n\t\t\t$container.addClass( 'form-element--success' );\n\t\t}\n\n\t\tif ( response.message != '' ){\n\t\t\t$error_container.addClass( 'form-element__error--show' );\n\t\t\t$error_container.text( response.message );\n\t\t}\n\t\telse {\n\t\t\t$error_container.removeClass( 'form-element__error--show' );\n\t\t\t$error_container.text('');\n\t\t}\n\n\t}\n\n\treturn response;\n}\n\n/**\n * Get all the valid tokens from a string.\n * It compares the tokens in the string with the valid tokens in the system and only returns the valid ones.\n * Ex: \"Lorem ipsum {{valid_token}} dolor {{invalid_token}}\" returns tokens = [ 'valid_token' ]\n *\n * @since 0.1\n *\n * @param  {string} \tstring - A normal string with tokens (or not, response.tokens will return an empty array, that's all)\n *\n * @return {object}\n * @return {boolean} \tresponse.hasTokens - TRUE if there is at least one token\n * @return {array} \t\tresponse.tokens - Array with all the tokens on the string\n */\n\nexport function getTokensFromString( string ){\n\t// Create response object\n\tlet response = {\n\t\thasTokens: false,\n\t\ttokens: [],\n\t};\n\n\t// Regex to find text between double curly brackets\n\t// https://regex101.com/r/TecqPq/1\n\tlet regex = new RegExp(/\\{\\{(.*?)\\}\\}/gm);\n\t\n\t// Get all valid tokens. Read getTokens comments for more information\n\tlet allTokens = getTokens();\n\n\t// Check if the string attribute is defined\n\tif ( isDefined( string ) ){\n\t\t// Check if the string attribute is empty, in that case just ignore it\n\t\tif ( ! isEmpty( string ) ){\n\t\t\t// Check if the token is a string, if not, convert it\n\t\t\tif ( ! isString( string ) ){\n\t\t\t\tstring = string.toString();\n\t\t\t}\n\n\t\t\t// Create array that will store the tokens\n\t\t\tlet tokens = [];\n\n\t\t\t// Perform the regex check.\n\t\t\tlet match;\n\t\t\twhile ( ( match = regex.exec( string ) ) !== null ){\n\t\t\t\tlet matchedToken = match[ 1 ];\n\n\t\t\t\t// Check if the token is defined in the main tokens object, if it's is then it's a valid token and we have to add it to the tokens array\n\t\t\t\t$.each( allTokens, ( index, tokenGroup ) => {\n\t\t\t\t\t$.each( tokenGroup.tokens, ( index, token ) => {\n\t\t\t\t\t\tif ( matchedToken == token.id ){\n\t\t\t\t\t\t\ttokens.push( token );\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tresponse.tokens = tokens;\n\n\t\t\t// Check if the string has at least one token\n\t\t\tif ( response.tokens.length > 0 ){\n\t\t\t\tresponse.hasTokens = true;\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// Show error in the console\n\t\tconsole.error( 'Undefined string attribute' );\n\t}\n\n\treturn response;\n}\n\n/**\n * Replace tokens in a string with dummy valid values to check if it's valid.\n * This is a simple way to validate if strings like {{site_url}} is a valid URL.\n * There is going to be another validation in the backend before doing actions\n * Ex: {{site_url}}/relative_path gets converted to https://example.com/relative_path\n *\n * @since 0.1\n *\n * @param  {string} string - A normal string with tokens (or not, the returned string will be the same, that's all)\n *\n * @return {string}\tThe new string with dummy data\n */\n\nexport function replaceTokensInString( string ){\n\t// Create variable that will hold the new string\n\t// The default value is the original string. We are going to check if the string has tokens,\n\t// and if it doesn't then we just return the same original string\n\tlet output = string;\n\n\t// Get tokens. Read getTokensFromString comments for more information\n\tlet tokensInString = getTokensFromString( string );\n\n\t// Check if this string has tokens\n\tif ( tokensInString.hasTokens ){\n\n\t\t// Iterate through each token\n\t\t$.each( tokensInString.tokens, function( index, token ){\n\t\t\t// Remember that each token has a token group id and a token id\n\t\t\t// For example, in {{WORDPRESS_1:order_id}} WORDPRESS_1 is the token group id and order_id is the token id\n\t\t\t// We have the token group id and the token id in different object properties, and we need to create the original (complete) token string again\n\n\t\t\t// Escape regex characters\n\t\t\tlet regexCondition = token.id.replace( /[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&' );\n\n\t\t\t// Create tokenCode variable, this will store the first part (token group id)\n\t\t\tregexCondition = vsprintf( '{{%s}}', [ regexCondition ] );\n\n\t\t\t// Create regular expression to find all appearances of the token in the string\n\t\t\t// https://regex101.com/r/AWKmKp/1\n\t\t\tlet regex = new RegExp( regexCondition, 'g' );\n\n\t\t\t// Use regex to replace all appaerences with a dummy value\n\t\t\toutput = output.replace( regex, function( full_match, group ){\n\t\t\t\t// Get dummy value using the fieldType. Read getExampleValueByFieldType comments for more information\n\n\t\t\t\treturn getExampleValueByFieldType( token.type );\n\t\t\t});\n\t\t});\n\t}\n\n\treturn output;\n}\n\n/**\n * Get a dummy value given a fieldType\n * This function is useful for validation functions. We don't know in the recipe creating process if a token will store a correct value,\n * but we can use the token type to check if an email, url, int, float or other field type values are valid when they include a token.\n * For example, using this function we can know that {{site_url}}/profile/?user_id={{user_id}} is a valid url\n * \n * @since 0.1\n * \n * @param {string} \tfieldType - A valid field type\n *\n * @return {string} A valid dummy value for that field type\n */\n\nexport function getExampleValueByFieldType( fieldType ){\n\tlet value = '';\n\n\tswitch( fieldType ){\n\n\t\tcase 'select':\n\t\t\tvalue = 'option';\n\t\t\tbreak;\n\n\t\tcase 'text':\n\t\t\tvalue = 'lorem-ipsum';\n\t\t\tbreak;\n\n\t\tcase 'textarea':\n\t\t\tvalue = '<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum finibus eros nunc, et posuere libero posuere a. Nam viverra mattis finibus. Aenean purus lorem, mollis vel ullamcorper ac</p>';\n\t\t\tbreak;\n\n\t\tcase 'int':\n\t\t\tvalue = 1;\n\t\t\tbreak;\n\n\t\tcase 'float':\n\t\t\tvalue = 1.1;\n\t\t\tbreak;\n\n\t\tcase 'url':\n\t\t\tvalue = 'https://example.com';\n\t\t\tbreak;\n\n\t\tcase 'email':\n\t\t\tvalue = 'example@example.com';\n\t\t\tbreak;\n\n\t\tcase 'checkbox':\n\t\t\tvalue = true;\n\t\t\tbreak;\n\n\t\tcase 'radio':\n\t\t\tvalue = 'option';\n\t\t\tbreak;\n\t}\n\n\treturn value;\n}\n\n/**\n * Convert an invalid url into a valid one.\n * This function checks if the url is valid, if it is then it returns the url without modifying it, but if it is not then adds\n * the {{site_url}} before the string. It also checks if the string starts with / or not to recognize relative paths\n * Examples:\n * string \t\t\t\t=> {{site_url}}/string\n * /string \t\t\t\t=> {{site_url}}/string\n * https://google.com \t=> https://google.com\n * {{non_url_token}} \t=> {{site_url}}/{{non_url_token}}\n * /?id={{id}} \t\t\t=> {{site_url}}/?id={{id}}\n * \n * @since 0.1\n *\n * @param {string} \t\turl - The url\n * @param {object} \t\tattributes - URL attributes\n * @param {boolean} \tattributes.supportsTokens - TRUE if the URL should support tokens\n *\n * @return {object}\n * @return {boolean} \tresponse.changed - TRUE if the returned URL is different from the original one\n * @return {boolean} \tresponse.isValid - TRUE if the URL is valid\n * @return {string} \tresponse.newURL - New valid URL. If the URL was already valid then it just have the original URL\n * @return {string} \tresponse.simulatedURL - Simulated URL\n */\n\nexport function parseURL( url, attributes = { supportsTokens: false } ){\n\t// Create response object\n\tlet response = {\n\t\tchanged: false,\n\t\tisValid: false,\n\t\tnewURL: null,\n\t\tsimulatedURL: null\n\t}\n\n\t// Replace all spaces with %20\n\turl = url.replace( / /g, '%20' );\n\n\t// Create regular expression to be used to check if an URL is valid\n\t// https://regex101.com/r/0TFlPM/1/\n\tlet regexURL = new RegExp( \"^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?\" );\n\n\t// Get tokens. Read getTokensFromString comments for more information\n\tlet tokensInValue = getTokensFromString( url );\n\n\t// Create variable that will store the new URL. The default value is the original URL because we're going to compare\n\t// this variable with the \"url\" variable. If both are the same then we know that the original value wasn't modified and it was already valid\n\tlet newURL = url;\n\n\t// Check if it supports tokens and has tokens\n\tif ( attributes.supportsTokens && tokensInValue.hasTokens ){\n\t\t// Replace tokens in string with dummy values. Read replaceTokensInString comments for more information\n\t\tlet simulate_url = replaceTokensInString( url );\n\t\tresponse.simulatedURL = simulate_url;\n\n\t\t// Check if it's a valid URL\n\t\tif ( regexURL.test( simulate_url ) ){\n\t\t\tresponse.isValid = true;\n\t\t}\n\t\telse {\n\t\t\t// It's not valid, so now we have to create a valid one\n\t\t\t// Check if it starts with /\n\t\t\tif ( url[0] == '/' ){\n\t\t\t\t// In that case we only have to prepend the site URL to it\n\t\t\t\tnewURL = UncannyAutomator.siteURL + url;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If it doesn't start with / then add it\n\t\t\t\tnewURL = UncannyAutomator.siteURL + '/' + url;\n\t\t\t}\n\n\t\t\t// Check if it's a valid URL now\n\t\t\tif ( regexURL.test( newURL ) ){\n\t\t\t\tresponse.isValid = true;\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// URL without tokens, check if it's a valid\n\t\tif ( regexURL.test( url ) ){\n\t\t\tresponse.isValid = true;\n\t\t}\n\t\telse {\n\t\t\t// It's not valid, so now we have to create a valid one\n\t\t\t// Check if it starts with /\n\t\t\tif ( url[0] == '/' ){\n\t\t\t\t// In that case we only have to prepend the site URL to it\n\t\t\t\tnewURL = UncannyAutomator.siteURL + url;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If it doesn't start with / then add it\n\t\t\t\tnewURL = UncannyAutomator.siteURL + '/' + url;\n\t\t\t}\n\n\t\t\t// Check if it's a valid URL now\n\t\t\tif ( regexURL.test( newURL ) ){\n\t\t\t\tresponse.isValid = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tresponse.newURL = newURL;\n\n\t// Check if the newURL it's the same as the original URL. \n\t// If both are the same then we know that the original value wasn't modified and it was already valid\n\tif ( response.newURL != url ){\n\t\tresponse.changed = true;\n\t}\n\n\treturn response;\n}\n\n/**\n * jQuery plugin used to validate the URL fields while user writes a value (input event)\n * If the value is not valid then it shows to the user how the URL is going to be converted\n * in the plugin to make it valid. Check parseURL comments to learn more about how a URL can be changed.\n *\n * @since 0.1\n *\n * @return {object} jQuery Object\n */\n\n(function ($){\n\t$.fn.checkURL = function ( options ){\n\t\treturn this.each( function (){\n\t\t\t// Just for version 0.1 and 0.2 we are not fixing the URL, instead we're only checking if the original value is a valid URL\n\t\t\t// This has to be uncommented\n\n\t\t\t// Get current jQuery object\n\t\t\tlet $this = $(this);\n\n\t\t\t// Overwrite default settings with the ones given by the user\n\t\t\tlet settings = $.extend({\n\t\t\t\t'preURL': 'Final URL: '\n\t\t\t}, options);\n\n\t\t\t// Create object with useful jQuery objects\n\t\t\tlet elements = {\n\t\t\t\tcontainer:  $this,\n\t\t\t\tinput: \t\t$this.find( '.form-element__input' ),\n\t\t\t}\n\n\t\t\t// Get input attributes\n\t\t\tlet input_attributes = {\n\t\t\t\trequired: \t\t\telements.input.data( 'required' ),\n\t\t\t\tsupportsTokens: \telements.input.data( 'supportstokens' )\n\t\t\t}\n\n\t\t\t// Create DOM elements that will show the final URL to the user\n\t\t\tlet validationNotice = $( '<div/>', { 'class': 'form-input-url-notice' });\n\t\t\tlet validationNoticeHeader = $( '<div/>', { 'class': 'form-input-url-notice__header' });\n\t\t\tlet validationNoticeURL = $( '<div/>', { 'class': 'form-input-url-notice__url' });\n\n\t\t\tvalidationNoticeHeader.text( settings.preURL );\n\t\t\tvalidationNoticeHeader.appendTo( validationNotice );\n\t\t\tvalidationNoticeURL.appendTo( validationNotice );\n\t\t\tvalidationNotice.appendTo( elements.container );\n\n\t\t\t// Function to check if the URL is valid\n\t\t\tfunction validate( value ){\n\t\t\t\tlet url = parseURL( value, input_attributes );\n\n\t\t\t\t// If the URL is different then show the \"Final URL\" container\n\t\t\t\tif ( value != '' && url.isValid && url.changed ){\n\t\t\t\t\tvalidationNotice.addClass( 'form-input-url-notice--show' );\n\t\t\t\t\tvalidationNoticeURL.text( url.newURL );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalidationNotice.removeClass( 'form-input-url-notice--show' );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check on page load to verify if the default value will be converted\n\t\t\tif ( elements.input.val() != '' ){\n\t\t\t\tvalidate( elements.input.val() );\n\t\t\t}\n\n\t\t\t// Bind input event and invoke validate\n\t\t\telements.input.on( 'input', function(){\n\t\t\t\tvalidate( elements.input.val() );\n\t\t\t});\n\n\t\t\treturn this;\n\t\t});\n\t}\n}(jQuery));\n\n/**\n * Call checkURL jQuery plugin in each URL field\n *\n * @since 0.1\n *\n * @param {...objects} \tfields - jQuery objects \n *\n * @return {object} jQuery object\n */\n\nexport function initURLChecker( fields ){\n\tfields.checkURL();\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/Validation.js","import {\n    sortArrayOfObjectsAlphabetically,\n    addParametersToURL,\n    getDOMElements,\n    isDefined,\n    vsprintf\n} from './Utilities.js';\nimport ItemHeaderMenu          from './ItemHeaderMenu.js';\nimport itemCreatorTaskSelector from './itemCreatorTaskSelector.js';\n\nclass ItemCreatorIntegrations {\n    constructor( itemType, $currentItem ){\n        this.itemType     = itemType;\n        this.$currentItem = $currentItem;\n        this.integrations = [];\n\n        // Render DOM elements\n        this.render();\n    }\n\n    render(){\n        // Create container\n        let container = $( '<div/>', { 'class': 'item' });\n        this.$item    = container;\n\n        let header       = this.createHeader(),\n            itemContent  = $( '<div/>', {'class': 'item__content' }),\n            integrations = this.createIntegrations(),\n            discoverMore = this.createDiscoverMoreIntegrations();\n\n        container.append( header );\n\n        itemContent.append( integrations );\n        itemContent.append( discoverMore );\n\n        container.append( itemContent );\n\n        // Check if the $item is defined, in that case we're going to replace the item element instead of creating a new one\n        if ( isDefined( this.$currentItem ) ){\n            // Empty container\n            this.$currentItem.replaceWith( container );\n        }\n        else {\n            // Get last item and append next to it\n            let lastItem = getDOMElements( 'lastItem', {\n                type: this.itemType\n            });\n\n            if ( this.itemType == 'trigger' ){\n                // Check if there is a last item\n                if ( lastItem.length > 0 ){\n                    container.insertAfter( lastItem );\n                }\n                else {\n                    // Otherwise append the item to the metabox\n                    let metabox = getDOMElements( 'metabox', {\n                        type: this.itemType\n                    });\n\n                    metabox.append( container );\n                }\n            }\n            \n            if ( this.itemType == 'action' ){\n                // Check if there is at least one item\n                let items = getDOMElements( 'items', {\n                    type: this.itemType\n                });\n\n                if ( items.length > 0 ){\n                    // Insert after the last item\n                    container.insertAfter( lastItem );\n                }\n                else {\n                    // Otherwise replace the itemCreatorAdd container with the new container\n                    let metabox = getDOMElements( 'metabox', {\n                        type: this.itemType\n                    });\n                    let itemCreatorAdd = metabox.find( '.item.item--start' );\n                    itemCreatorAdd.replaceWith( container );\n                }\n            }\n        }\n    }\n\n    createHeader(){\n        let header  = $( '<div/>' );\n\n        let icon           = $( '<div/>', { 'class': 'item-icon' }),\n            titleContainer = $( '<div/>', { 'class': 'item-title clear' }),\n            titleContent   = $( '<div/>', { 'class': 'item-title__describe' }),\n            title          = $( '<div/>', { 'class': 'item-title__non-editable' }).text( UncannyAutomator.i18n.integration.select );\n\n        let actions        = new ItemHeaderMenu( this.itemType );\n        header.append( actions );\n\n        header.append( icon );\n\n        titleContent.append( title );\n        titleContainer.append( titleContent );\n        header.append( titleContainer );\n\n        return header;\n    }\n\n    createIntegrations(){\n        let container    = $( '<div/>', { 'class': 'item-integrations' });\n\n        // Get non empty integrations\n        this.filterByNonEmptyIntegrations( this.itemType );\n\n        // Order integrations alphabetically\n        this.sortIntegrationsAlphabetically();\n\n        // Iterate integrations\n        this.integrations.forEach(( integration ) => {\n            // Get integration ID\n            const integrationID = integration.id;\n\n            // Create integration element\n            let integrationElement = this.createIntegration( integrationID, integration );\n\n            // Bind\n            integrationElement.on( 'click', () => {\n                new itemCreatorTaskSelector( this.itemType, integrationID, this.$item );\n            });\n\n            // Append\n            container.append( integrationElement );\n        });\n\n        // Return jQuery element\n        return container;\n    }\n\n    createIntegration( integrationID, integration ){\n        let container   = $( '<div/>', { 'class': 'item-integration' }),\n            logo        = $( '<div/>', { 'class': 'item-integration__logo' }),\n            name        = $( '<div/>', { 'class': 'item-integration__name' });\n\n        // Check if it's a Pro only integration\n        if ( integration.isProOnly ){\n            // Add a class to identify it\n            container.addClass( 'item-integration--pro' );\n\n            // Add PRO tag\n            container.append( $( `\n                <div class=\"item-integration__badge\">${ UncannyAutomator.i18n.proOnly.pro }</div>\n            ` ) );\n        }\n        \n        // Check if the integration is not available\n        if ( ! integration.isAvailable ){\n            // Add a class to identify it\n            container.addClass( 'item-integration--unavailable' );\n\n            // Add tooltip\n            container.attr( 'uap-tooltip', vsprintf( UncannyAutomator.i18n.proOnly.requiresPro, [ UncannyAutomator.i18n.uncannyAutomatorPro ] ) );\n        }\n        else {\n            // Add a class to identify it\n            container.addClass( 'item-integration--available' );\n        }\n\n        // Create the variable where we're going to save the logo\n        let $logoImg;\n\n        // Check if it has a svg image\n        if ( isDefined( integration.icon_svg ) ){\n            $logoImg = $( `<img src=\"${ integration.icon_svg }\" alt=\"${ integration.name }\">` );\n        }\n        // Check if it has a png image\n        else if ( isDefined( integration.icon_32 ) && isDefined( integration.icon_64 ) ){\n            $logoImg = $( `<img src=\"${ integration.icon_32 }\" srcset=\"${ vsprintf( '%s 1x, %s 2x', [ integration.icon_32, integration.icon_64 ]) }\" alt=\"${ integration.name }\">` );\n        }\n\n        // TO-DO\n        // Improve UI/UX\n        // Set integration name\n        name.text( integration.name );\n\n        // Append\n        logo.append( $logoImg );\n        container.append( logo );\n        container.append( name );\n\n        // Return jQuery element\n        return container;\n    }\n\n    createDiscoverMoreIntegrations(){\n        return $( `\n            <div class=\"item-content__description\">\n                ${ UncannyAutomator.i18n.integration.discoverMore } <a href=\"${ addParametersToURL( 'https://automatorplugin.com/integrations/', {\n                        'utm_source':  'uncanny_automator',\n                        'utm_medium':  'select_an_integration',\n                        'utm_content': 'discover_more_integrations'\n                    }) }\" target=\"_blank\">${ UncannyAutomator.i18n.learnMore } <span class=\"uo-icon uo-icon--external-link-alt\"></span></a>\n            </div>\n        ` );\n    }\n\n    filterByNonEmptyIntegrations( itemType ){\n        // Check if it's a valid item type\n        if ( [ 'trigger', 'action' ].includes( itemType ) ){\n            // Iterate each integration\n            Object.entries( UncannyAutomator.integrations ).forEach(([ integrationID, integration ]) => {\n                // Evaluate if it has the requested items by item type\n                let hasItems = false;\n                // Also evaluate if it has available items\n                let isProOnly = false;\n                // Also evaluate if it has available items\n                let isAvailable = false;\n\n                if ( itemType == 'trigger' ){\n                    hasItems    = integration.items.triggers.hasTriggers;\n                    isAvailable = integration.items.triggers.hasAvailableItems;\n                    isProOnly   = integration.items.triggers.allItemsArePro;\n                }\n                else if ( itemType == 'action' ){\n                    hasItems    = integration.items.actions.hasActions;\n                    isAvailable = integration.items.actions.hasAvailableItems;\n                    isProOnly   = integration.items.actions.allItemsArePro;\n                }\n\n                // Check if it has the requested items by item type\n                if ( hasItems ){\n                    // Add integration to the list of integrations\n                    this.integrations.push( $.extend({}, integration, {\n                        id:          integrationID,\n                        isAvailable: isAvailable,\n                        isProOnly:   isProOnly\n                    }) );\n                }\n            });\n        }\n    }\n\n    sortIntegrationsAlphabetically(){\n        // Sort the array of integrations using the integration name\n        this.integrations = sortArrayOfObjectsAlphabetically( this.integrations, 'name' );\n    }\n}\n\nexport default ItemCreatorIntegrations;\n\n\n// WEBPACK FOOTER //\n// ./src/components/ItemCreatorIntegrations.js","import {\n    restCall,\n    getGlobalItem,\n    isDefined,\n    replaceCurlyBraces,\n    addParametersToURL\n} from './Utilities.js';\n\nimport Modal from './Modal.js';\n\nimport Triggers from './Triggers.js';\nimport Actions  from './Actions.js';\n\nclass ItemHeaderMenu {\n    /**\n     * Create item actions\n     *\n     * @since 0.5\n     *\n     * @return jQuery DOM element with the item actions\n     */\n\n    constructor( itemType, integrationID, itemCode, itemId ){\n        this.itemType      = itemType;\n        this.integrationID = integrationID;\n        this.itemCode      = itemCode;\n        this.itemId        = itemId;\n        this.item          = UncannyAutomator.recipe.items[ itemId ];\n\n        return this.createItemActions();\n    }\n\n    createItemActions(){\n        // Create elements\n        let container     = $( '<div/>', { 'class': 'item-actions' }),\n            btn           = $( '<div/>', { 'class': 'item-actions__btn' }),\n            btnIcon       = $( '<i/>', { 'class': 'uo-icon uo-icon--ellipsis-h-alt' }),\n            dropdown      = $( '<div/>', { 'class': 'item-actions__dropdown' }),\n            dropdownUl    = $( '<ul/>', { 'class': 'item-actions-dropdown__ul' });\n\n        btn.append( btnIcon );\n        container.append( btn );\n\n        // Delete\n        let deleteAction  = $( '<li/>', { 'class': 'item-actions-dropdown__action' }),\n            deleteText    = $( '<span/>' ).text( UncannyAutomator.i18n.delete );\n\n        deleteAction.append( deleteText );\n        dropdownUl.append( deleteAction );\n\n        // Support\n        if ( isDefined( this.itemType ) && isDefined( this.itemCode ) ) {\n            if ( ! isDefined( this.item) || isDefined( this.item ) && ! this.item.isMissing ){\n                let globalItemData = getGlobalItem( this.integrationID, this.itemType, this.itemCode );\n\n                if ( isDefined( globalItemData.support_link ) ){\n                    let supportAction = $( '<a/>', {\n                        'href':  addParametersToURL( globalItemData.support_link, {\n                            'utm_source':  'uncanny_automator',\n                            'utm_medium':  'action_menu',\n                            'utm_content': 'support_menu_link'\n                        }),\n                        'class': 'item-actions-dropdown__action',\n                        'target': '_blank'\n                    }),\n                        supportText   = $( '<span/>' ).text( UncannyAutomator.i18n.support );\n\n                    supportAction.append( supportText );\n                    dropdownUl.append( supportAction );\n                }\n            }\n        }\n\n        dropdown.append( dropdownUl );\n        container.append( dropdown );\n\n        // Listen clicks to the open button\n        btn.on( 'click', () => {\n            // Evaluate if it's open\n            const isOpen = container.hasClass( 'item-actions--open' );\n\n            // Check if it's not open\n            if ( ! isOpen ){\n                // Open the dropdown\n                container.addClass( 'item-actions--open' );\n\n                // Listen clicks outside the dropdown\n                $( document ).on( 'mouseup.uap-actions-click-outside', ( event ) => {\n                    if ( ! container.is( event.target ) && container.has( event.target ).length === 0 ){\n                        // Close dropdown\n                        container.removeClass( 'item-actions--open' );\n\n                        // Remove event listener to listen clicks outside the dropdown\n                        $( document ).off( 'mouseup.uap-actions-click-outside' );\n                    }\n                });           \n            }\n            else {\n                // Close dropdown\n                container.removeClass( 'item-actions--open' );\n\n                // Remove event listener to listen clicks outside the dropdown\n                $( document ).off( 'mouseup.uap-actions-click-outside' );\n            }\n        });\n\n        // Delete\n        deleteAction.on( 'click', () => {\n            if ( isDefined( this.itemId ) && UncannyAutomator.recipe.isLive && UncannyAutomator.recipe.items[ this.itemId ].isLive ){\n                // Hide dropdown with options\n                container.removeClass( 'item-actions--open' );\n\n                // Create modal box\n                // Read Modal.js comments for more information\n                let modal = new Modal({\n                    title:       UncannyAutomator.i18n.confirmationModal.title,\n                    warning:     replaceCurlyBraces( UncannyAutomator.i18n.confirmationModal.deleteWarning, '<strong>', '</strong>' ),\n                    buttons: {\n                        cancel:  UncannyAutomator.i18n.cancel,\n                        confirm: UncannyAutomator.i18n.confirm,\n                    }\n                });\n\n                modal.setEvents({\n                    afterSetEvents: () => {\n                        modal.show();\n                    },\n                    onConfirm: () => {\n                        let elements        = modal.getElements();\n                        let confirmButton   = elements.modal.box.buttons.confirm;\n\n                        // Add loading class to button\n                        confirmButton.addClass( 'uap-btn--loading' ).prop( 'disabled', true );\n\n                        // Do call and hide\n                        restCall( 'delete', {\n                            'ID': this.itemId\n                        }, () => {\n                            // Destroy modal\n                            modal.destroy();\n\n                            // Refresh UI\n                            if ( this.itemType == 'trigger' ){\n                                new Triggers();\n\n                                // Check if it's an anonymous recipe\n                                if ( UncannyAutomator.recipe.type == 'anonymous' ){\n                                    // Render the Actions metabox again\n                                    // We're doing this because we need to update the user selector\n                                    new Actions();\n                                }\n                            }\n                            \n                            if ( this.itemType == 'action' || this.itemType == 'closure' ){\n                                new Actions();\n                            }\n\n                            // Check if the recipe is still valid, if it isn't then make the recipe draft\n                            if ( ! UncannyAutomator.recipe.isValid ){\n                                UncannyAutomator.recipe.publish.statusToggle.setValue( false );\n                            }\n                        }, () => {\n                            // Destroy modal\n                            modal.destroy();\n\n                            console.log( '‼️ ERROR-TODO. Couldn\\'t delete the item' );\n\n                            // Refresh UI\n                            if ( this.itemType == 'trigger' ){\n                                new Triggers();\n                            }\n                            \n                            if ( this.itemType == 'action' || this.itemType == 'closure' ){\n                                new Actions();\n                            }\n                        });\n                    },\n                    afterHide: function(){\n                        modal.destroy();\n                    }\n                });\n            }\n            else {\n                // Delete without warning\n                if ( isDefined( this.itemId ) ){\n                    // Set loading to the \"delete\" option\n                    deleteAction.addClass( 'item-actions-dropdown__action--loading' );\n\n                    // Do the AJAX request to delete it\n                    restCall( 'delete', {\n                        'ID': this.itemId\n                    }, () => {\n                        // Reset UI\n                        if ( this.itemType == 'trigger' ){\n                            new Triggers();\n\n                            // Check if it's an anonymous recipe\n                            if ( UncannyAutomator.recipe.type == 'anonymous' ){\n                                // Render the Actions metabox again\n                                // We're doing this because we need to update the user selector\n                                new Actions();\n                            }\n                        }\n                        \n                        if ( this.itemType == 'action' || this.itemType == 'closure' ){\n                            new Actions();\n                        }\n                    }, () => {\n                        console.log( '‼️ ERROR-TODO. Couldn\\'t delete the item' );\n\n                        // Reset UI\n                        if ( this.itemType == 'trigger' ){\n                            new Triggers();\n                        }\n                        \n                        if ( this.itemType == 'action' || this.itemType == 'closure' ){\n                            new Actions();\n                        }\n                    });\n                }\n                else {\n                    // Reset UI\n                    if ( this.itemType == 'trigger' ){\n                        new Triggers();\n                    }\n                    \n                    if ( this.itemType == 'action' ){\n                        new Actions();\n                    }\n                }\n            }\n        });\n\n        return container;\n    }\n}\n\nexport default ItemHeaderMenu;\n\n\n// WEBPACK FOOTER //\n// ./src/components/ItemHeaderMenu.js","import {\n\tisEmpty,\n\tvsprintf,\n} from './Utilities.js';\n\nclass RecipeNotices {\n\tconstructor(){\n\t\t// Get main element\n\t\tthis.elements = {\n\t\t\tcontainer: $( '#uo-uap-notices' )\n\t\t}\n\n\t\t// Check if the container exists\n\t\t// If not, then create it\n\t\tif ( this.elements.container.length == 0 ){\n\t\t\tthis.createContainer();\n\t\t\tthis.elements.container = $( '#uo-uap-notices' );\n\t\t}\n\n\t\t// Empty the container\n\t\tthis.emptyContainer();\n\n\t\t// Create warning\n\t\tthis.createWarning();\n\n\t\t// Check if error mode is enabled\n\t\tif ( UncannyAutomator.recipe.errorMode ){\n\t\t\t// Create error\n\t\t\tthis.createError();\n\t\t}\t\n\t}\n\n\temptyContainer(){\n\t\tthis.elements.container.empty();\n\t}\n\n\tcreateContainer(){\n\t\t/* Create notice containers */\n\t    let noticeContainer = $( '<div/>', { id: 'uo-uap-notices', class: 'uap' });\n\t    $( '#uap-publish-metabox' ).prepend( noticeContainer );\n\t}\n\n\tcreateError(){\n\t\tlet thisRecipeNotices = this;\n\n\t\t// Check if we have to create the notice\n\t\tif ( ! isEmpty( UncannyAutomator.recipe.message.error ) ){\n\t\t\t// Create error container\n\t\t\tlet notice = $( '<div/>', { class: 'uo-notice uo-notice--error' }).text( UncannyAutomator.recipe.message.error );\n\t\t\tthis.elements.container.append( notice );\n\t\t}\n\t}\n\n\tcreateWarning(){\n\t\tlet thisRecipeNotices = this;\n\n\t\t// Check if we have to create the notice\n\t\tif ( ! isEmpty( UncannyAutomator.recipe.message.warning ) ){\n\t\t\tlet notice = $( '<div/>', { class: 'uo-notice uo-notice--warning' }).text( UncannyAutomator.recipe.message.warning );\n\t\t\tthis.elements.container.append( notice );\n\t\t}\n\t}\n}\n\nexport default RecipeNotices;\n\n\n// WEBPACK FOOTER //\n// ./src/components/RecipeNotices.js","import {\n\tisDefined\n} from './Utilities.js';\n\n/**\n * Create a new modal box\n *\n * @since 0.4\n */\n\nclass Modal {\n\t/*\n\t * Construct method\n\t *\n\t * @since 0.4\n\t *\n\t * @param  {object} settings\n\t * @param  {object} [settings.content]\n\t * @param  {string} [settings.content.title] - Title of the metabox\n\t * @param  {string} [settings.content.warning] - Content of warning in the metabox\n\t * @param  {object} [settings.content.buttons]\n\t * @param  {string} [settings.content.buttons.cancel] - Text of the cancel button\n\t * @param  {string} [settings.content.buttons.confirm] - Text of the confirm button\n\t * @param  {object} [settings.events.onConfirm] - Function that is going to be invoked when the user press the confirm button\n\t * @param  {object} [settings.events.onCancel] - Function that is going to be invoked when the user press the cancel button\n\t * @param  {object} [settings.events.onShow] - Function that is going to be invoked when the modal box is shown\n\t * @param  {object} [settings.events.onHide] - Function that is going to be invoked when the modal box is hidden\n\t * \n\t * @return {object} - The modal box object\n\t */\n\n\tconstructor( content, config = {} ){\n\t\t// Create elements object\n\t\tthis.elements = {\n\t\t\tcontainer: null,\n\t\t\tautomatorContainer: null, // ( .uap ) This DIV is only created to avoid conflicts with other plugins\n\t\t\tmodal: {\n\t\t\t\tcontainer: null,\n\t\t\t\tbox: {\n\t\t\t\t\tcontainer: null,\n\t\t\t\t\ttitle: null,\n\t\t\t\t\twarning: null,\n\t\t\t\t\tbuttons: {\n\t\t\t\t\t\tcontainer: null,\n\t\t\t\t\t\tcancel: null,\n\t\t\t\t\t\tconfirm: null\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Set container\n\t\tthis.elements.container = $( 'body' );\n\n\t\t// Set isVisible property\n\t\tthis.isVisible = false;\n\n\t\t// Define default configuration\n\t\tthis.config = $.extend( true, {\n\t\t\tfadeDuration: 150,\n\t\t}, config );\n\n\t\t// Save modal box content. Add default values\n\t\tthis.content = $.extend( {}, {\n\t\t\tbuttons: {\n\t\t\t\tcancel: UncannyAutomator.i18n.cancel,\n\t\t\t}\n\t\t}, content );\n\n\t\t// Create new modal box\n\t\tthis.create();\n\n\t\t// Return object\n\t\treturn this;\n\t}\n\n\t/*\n\t * Create modal box DOM elements\n\t *\n\t * @since 0.4\n\t */\n\n\tcreate(){\n\t\tlet automatorContainer = $( '<div/>', { 'class': 'uap' });\n\t\tlet modal = $( '<div/>', { 'class': 'modal' });\n\t\tlet modalBox = $( '<div/>', { 'class': 'modal__box' });\n\n\t\t// Check if the user wants a different modal size than the default size\n\t\tif ( isDefined( this.config.size ) && [ 'small', 'medium', 'large' ].includes( this.config.size ) ){\n\t\t\t// Add the correct size class\n\t\t\tmodal.addClass( `modal--${ this.config.size }` );\n\t\t}\n\n\t\t// Save elements\n\t\tthis.elements.automatorContainer = automatorContainer;\n\t\tthis.elements.modal.container = modal;\n\t\tthis.elements.modal.box.container = modalBox;\n\n\t\t// Set title\n\t\tif ( isDefined( this.content.title ) ){\n\t\t\tlet modalTitle = $( '<div/>', { 'class': 'modal__title' }).html( this.content.title );\n\t\t\tmodalBox.append( modalTitle );\n\n\t\t\t// Save element\n\t\t\tthis.elements.modal.box.title = modalTitle;\n\t\t}\n\n\t\t// Set warning\n\t\tif ( isDefined( this.content.content ) ){\n\t\t\tlet modalContent = $( '<div/>', { 'class': 'modal__content' }).html( this.content.content );\n\t\t\tmodalBox.append( modalContent );\n\n\t\t\t// Save element\n\t\t\tthis.elements.modal.box.content = modalContent;\n\t\t}\n\n\t\t// Set warning\n\t\tif ( isDefined( this.content.warning ) ){\n\t\t\tlet modalWarning = $( '<div/>', { 'class': 'modal__warning' }).html( this.content.warning );\n\t\t\tmodalBox.append( modalWarning );\n\n\t\t\t// Save element\n\t\t\tthis.elements.modal.box.warning = modalWarning;\n\t\t}\n\n\t\t// Set buttons\n\t\tlet modalButtons = $( '<div/>', { 'class': 'modal__buttons' });\n\t\tlet cancelButton = $( '<button/>', { 'class': 'uap-btn uap-btn--secondary' }).html( this.content.buttons.cancel );\n\t\tmodalButtons.append( cancelButton );\n\n\t\t// Save elements\n\t\tthis.elements.modal.box.buttons.container = modalButtons;\n\t\tthis.elements.modal.box.buttons.cancel = cancelButton;\n\n\t\tif ( isDefined( this.content.buttons.confirm ) ){\n\t\t\tlet confirmButton = $( '<button/>', { 'class': 'uap-btn uap-btn--primary' }).html( this.content.buttons.confirm );\n\t\t\tmodalButtons.append( confirmButton );\n\n\t\t\t// Save element\n\t\t\tthis.elements.modal.box.buttons.confirm = confirmButton;\n\t\t}\n\n\t\tmodalBox.append( modalButtons );\n\n\t\t// Append elements and add to the container\n\t\tmodal.append( modalBox );\n\t\tautomatorContainer.append( modal );\n\t\tthis.elements.container.append( automatorContainer );\n\n\t\t// Add open class to the html tag\n\t\t$( 'html' ).addClass( 'automator-modal-open' );\n\n\t\t// Bind\n\t\tthis.bind();\n\t}\n\n\t/*\n\t * Define events\n\t *\n\t * @since 0.4\n\t */\n\n\tsetEvents( events ){\n\t\tlet emptyFunction = () => {};\n\n\t\t// Define events\n\t\tthis.events = {\n\t\t\tafterSetEvents: isDefined( events.afterSetEvents ) \t? events.afterSetEvents : emptyFunction,\n\t\t\tafterShow: \t\tisDefined( events.afterShow ) \t \t? events.afterShow \t\t: emptyFunction,\n\t\t\tafterHide: \t\tisDefined( events.afterHide ) \t \t? events.afterHide \t\t: emptyFunction,\n\t\t\tonConfirm:  \tisDefined( events.onConfirm ) \t\t? events.onConfirm \t\t: emptyFunction,\n\t\t\tonCancel:   \tisDefined( events.onCancel )  \t\t? events.onCancel \t\t: emptyFunction,\n\t\t};\n\n\t\tif ( ! isDefined( events.onCancel ) ){\n\t\t\tthis.events.onCancel = () => {\n\t\t\t\t// Default onCancel function\n\t\t\t\t// Hide modal box\n\t\t\t\tthis.hide();\n\t\t\t};\n\t\t}\n\n\t\t// Fire afterSetEvents event\n\t\tthis.events.afterSetEvents();\n\t}\n\n\t/*\n\t * Remove all the DOM elements\n\t *\n\t * @since 0.4\n\t */\n\n\tdestroy(){\n\t\tlet thisModal = this;\n\n\t\t// Unbind everything\n\t\tthis.unbind();\n\n\t\t// Check if it's visible\n\t\tif ( this.isVisible ){\n\t\t\t// We have to hide it first\n\t\t\tthis.hide(function(){\n\t\t\t\tthisModal.elements.automatorContainer.remove();\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthisModal.elements.automatorContainer.remove();\n\t\t}\n\n\t\t// Remove modal open class from the html tag\n\t\t$( 'html' ).removeClass( 'automator-modal-open' );\n\t}\n\n\t/*\n\t * Bind the clicks on the buttons\n\t *\n\t * @since 0.4\n\t */\n\n\tbind(){\n\t\tlet thisModal = this;\n\n\t\t// Bind cancel button\n\t\tthis.elements.modal.box.buttons.cancel.on( 'click', function(){\n\t\t\tthisModal.events.onCancel();\n\t\t});\n\n\t\t// Bind confirm button\n\t\tthis.elements.modal.box.buttons.confirm.on( 'click', function(){\n\t\t\tthisModal.events.onConfirm();\n\t\t});\n\t}\n\n\t/*\n\t * Unbind all events\n\t *\n\t * @since 0.4\n\t */\n\n\tunbind(){\n\t\tthis.elements.modal.box.buttons.cancel.unbind( 'click' );\n\t\tthis.elements.modal.box.buttons.confirm.unbind( 'click' );\n\t}\n\n\t/*\n\t * Show modal box\n\t *\n\t * @since 0.4\n\t *\n\t * @param {object} [callback] - Custom function that it's going to be invoked after we show the modal box\n\t */\n\n\tshow( callback = null ){\n\t\tlet thisModal = this;\n\n\t\t// Set callback\n\t\tlet event = function(){};\n\n\t\tif ( isDefined( callback ) ){\n\t\t\tevent = callback;\n\t\t}\n\t\telse {\n\t\t\tevent = this.events.afterShow;\n\t\t}\n\n\t\tcallback = event;\n\n\t\t// Change is visible status\n\t\tthis.isVisible = true;\n\n\t\t// Fade in\n\t\tthis.elements.modal.container.fadeIn( thisModal.config.fadeDuration, callback );\n\t}\n\n\t/*\n\t * Show modal box\n\t *\n\t * @since 0.4\n\t *\n\t * @param {object} [callback] - Custom function that it's going to be invoked after we hide the modal box\n\t */\n\n\thide( callback = null ){\n\t\tlet thisModal = this;\n\n\t\t// Set callback\n\t\tlet event = function(){};\n\n\t\tif ( isDefined( callback ) ){\n\t\t\tevent = callback;\n\t\t}\n\t\telse {\n\t\t\tevent = this.events.afterHide;\n\t\t}\n\n\t\tcallback = event;\n\n\t\t// Change is visible status\n\t\tthis.isVisible = false;\n\n\t\t// Fade out\n\t\tthis.elements.modal.container.fadeOut( thisModal.config.fadeDuration, callback );\n\n\t\t// Remove modal open class from the html tag\n\t\t$( 'html' ).removeClass( 'automator-modal-open' );\n\t}\n\n\t/*\n\t * Returns all the DOM elements\n\t *\n\t * @since 0.4\n\t *\n\t * @return {object} All the DOM elements created by this class\n\t */\n\n\tgetElements(){\n\t\treturn this.elements;\n\t}\n}\n\nexport default Modal;\n\n\n// WEBPACK FOOTER //\n// ./src/components/Modal.js","import {\n    isEmpty,\n    getDOMElements,\n    vsprintf,\n} from './Utilities.js';\n\nimport ItemHeaderMenu     from './ItemHeaderMenu.js';\nimport ItemHeaderIcon     from './ItemHeaderIcon.js';\nimport ItemHeaderTag      from './ItemHeaderTag.js';\nimport ItemHeaderSentence from './ItemHeaderSentence.js';\n\nclass MetaboxItems {\n    constructor( itemType ){\n        $.each( UncannyAutomator.recipe.items, ( itemId, item ) => {\n            if ( itemType == item.itemType ){\n                // Create item\n                let item = this.createItem( itemId );\n\n                // Append to the metabox\n                let metabox = getDOMElements( 'metabox', {\n                    type: itemType\n                });\n\n                metabox.append( item );\n            }\n        });\n    }\n\n    createItem( itemId ){\n        // Get item data\n        let item = UncannyAutomator.recipe.items[ itemId ];\n\n        // Create container\n        let container = $( '<div/>', {\n            'class':   'item',\n            'data-id': itemId\n        });\n\n        if ( item.isMissing ){\n            container.addClass( 'item--missing' );\n        }\n\n        // Replace tokens in the CSS\n        if ( ! isEmpty( item.inlineCss ) ){\n            item.inlineCss = item.inlineCss.replace( /{{item_id}}/g, itemId );\n\n            // Add inline inlineCss\n            container.prepend( item.inlineCss );\n        }\n\n        // Create header\n        let header = this.createHeader(\n            item.integrationCode,\n            item.itemType,\n            item.itemCode,\n            itemId,\n        );\n\n        let notice = this.createNotice( item );\n\n        container.append( header );\n        container.append( notice );\n\n        // Debug\n        // console.groupCollapsed( vsprintf( 'ID: %s', [ itemId ] ) );\n        // console.log( item );\n        // console.groupEnd();\n\n        return container;\n    }\n\n    /**\n     * Creates item header\n     * \n     * @since 0.5\n     *\n     * @param {string}    integrationCode - The integration code\n     * @param {string}    itemType - The item type: 'trigger', 'action' or 'closure'\n     * @param {string}    itemCode - The code of the item\n     * @param {int}       itemId - The ID of the item\n     */\n\n    createHeader( integrationCode, itemType, itemCode, itemId ){\n        let container = $( '<div/>' ),\n            title     = $( '<div/>', { 'class': 'item-title clear' });\n\n        // Get item data\n        let item = UncannyAutomator.recipe.items[ itemId ];\n\n        // If the item is missing remove the integrationCode\n        // We don't want to show the integration icon\n        if ( item.isMissing ){\n            integrationCode = null;\n        }\n\n        let actions = new ItemHeaderMenu( itemType, integrationCode, itemCode, itemId );\n        container.append( actions );\n\n        let icon    = new ItemHeaderIcon( integrationCode );\n        container.append( icon );\n\n        // Integration name for missing items\n        let integrationName = item.integrationName;\n        \n        let itemTag = new ItemHeaderTag( integrationCode, integrationName );\n        title.append( itemTag );\n\n        let titleSentence = new ItemHeaderSentence( itemType, integrationCode, itemCode, itemId );\n        title.append( titleSentence );\n        container.append( title );\n\n        let itemContent = $( '<div/>', { 'class': 'item__content' });\n        container.append( itemContent );\n\n        return container;\n    }\n\n    /**\n     * Create item notice\n     *\n     * @since 0.6\n     *\n     */\n\n    createNotice( item ){\n        let container;\n\n        if ( item.isMissing ){\n            container = $( '<div/>', { 'class': 'item-notice' });\n            container.text( UncannyAutomator.i18n.itemMissing );\n        }\n\n        return container;\n    }\n}\n\nexport default MetaboxItems;\n\n\n// WEBPACK FOOTER //\n// ./src/components/MetaboxItems.js","import {\n\tvsprintf,\n\tisDefined\n} from './Utilities.js';\n\nclass ItemHeaderIcon {\n\tconstructor( integrationCode ){\n\t\tthis.integrationCode = integrationCode;\n\n\t\treturn this.createItemIcon();\n\t}\n\n\t/**\n     * Create item icon\n     *\n     * @since 0.5\n     *\n     * @return {object}   HTML with the item icon\n     */\n\n    createItemIcon(){\n    \tlet container   = $( '<div/>', { 'class': 'item-icon' });\n\n    \tif ( isDefined( UncannyAutomator.integrations[ this.integrationCode ] ) ){\n\t\t\t// Get integration by integrationCode\n\t        let integration = UncannyAutomator.integrations[ this.integrationCode ];\n\n\t        // Create the variable where we're going to save the icon\n\t        let $icon;\n\n\t\t\t// Check if it has a svg image\n\t\t\tif ( isDefined( integration.icon_svg ) ){\n\t\t\t\t$icon = $( `<img src=\"${ integration.icon_svg }\" alt=\"${ integration.name }\">` );\n\t\t\t}\n\t\t\t// Check if it has a png image\n\t\t\telse if ( isDefined( integration.icon_32 ) && isDefined( integration.icon_64 ) ){\n\t\t\t\t$icon = $( `<img src=\"${ integration.icon_32 }\" srcset=\"${ vsprintf( '%s 1x, %s 2x', [ integration.icon_32, integration.icon_64 ]) }\" alt=\"${ integration.name }\">` );\n\t\t\t}\n\n\t        container.append( $icon );\n    \t} \n\n        // Return element\n        return container;\n    }\n}\n\nexport default ItemHeaderIcon;\n\n\n// WEBPACK FOOTER //\n// ./src/components/ItemHeaderIcon.js","import {\n    isDefined\n} from './Utilities.js';\n\nclass ItemHeaderTag {\n    constructor( integrationId, integrationName = null ){\n        this.integrationId = integrationId;\n        this.integrationName = integrationName;\n\n        return this.createItemTag();\n    }\n\n    /**\n     * Create item tag with the name of the integration\n     *\n     * @since 0.5\n     * \n     * @param {string}    integrationCode - The integration code\n     *\n     * @return {object}   HTML with the item tag\n     */\n\n    createItemTag(){\n        // Get integration by integrationId\n        let integration = UncannyAutomator.integrations[ this.integrationId ];\n\n        // Create tag element and set the integraiton name\n        let container   = $( '<div/>', { 'class': 'item-title__integration clear' }),\n            tag         = $( '<div/>', { 'class': 'item-title__tag' });\n\n        if ( isDefined( integration ) ){\n            tag.text( integration.name );\n        }\n        else {\n            tag.text( this.integrationName );\n        }\n\n        container.append( tag );\n\n        // Return tag\n        return container;\n    }\n}\n\nexport default ItemHeaderTag;\n\n\n// WEBPACK FOOTER //\n// ./src/components/ItemHeaderTag.js","import {\n\taddParametersToURL,\n\titemsObject,\n\tisDefined,\n\tisEmpty,\n\tinArray,\n\tvsprintf,\n\trestCall,\n} from './Utilities.js';\n\nimport RecipeNotices from './RecipeNotices.js';\n\nimport Field from './Field.js';\n\nclass Publish {\n\n\tconstructor(){\n\t\t// Get metabox element\n\t\tthis.elements = {\n\t\t\tmetabox: $( '#uo-automator-publish-metabox' ),\n\t\t\ttimesPerUser: {\n\t\t\t\teditLink:\t\tnull,\n\t\t\t\thiddenBox: \t\tnull,\n\t\t\t\tsaveButton: \tnull,\n\t\t\t\tcancelButton: \tnull\n\t\t\t},\n\t\t\ttoggle: null\n\t\t}\n\n\t\t// Create new metabox\n\t\tthis.createMetabox();\n\t}\n\n\tcreateMetabox(){\n\t\tlet container          = $( '<div/>', { id: 'uap-publish-metabox' }),\n\t\t\tcontent            = $( '<div/>', { class: 'metabox__content' }),\n\t\t\tfooter             = $( '<div/>', { class: 'metabox__footer' });\n\n\t\t// Check if we have to add the times per user row\n\t\tif ( UncannyAutomator.recipe.type != 'anonymous' ){\n\t\t\t// Times per user row\n\t\t\tlet timesRow \t       = $( '<div/>', { class: 'publish-row' }),\n\t\t\t\ttimesRowVisible    = $( '<div/>', { class: 'publish-row__visible' }),\n\t\t\t\ttimesRowIconBox    = $( '<span/>', { class: 'publish-row__icon' }),\n\t\t\t\ttimesRowIcon       = $( '<i/>', { class: 'uo-icon uo-icon--sync-alt' }),\n\t\t\t\ttimesRowName       = $( '<span/>', { class: 'publish-row__name' }).text( UncannyAutomator.i18n.publish.timesPerUser );\n\n\t\t\t// Change value of numbers of times from -1 to empty\n\t\t\tUncannyAutomator.recipe.publish.timesPerUser = UncannyAutomator.recipe.publish.timesPerUser == -1 ? '' : UncannyAutomator.recipe.publish.timesPerUser;\n\t\t\tlet timesValue \t\t   = isEmpty( UncannyAutomator.recipe.publish.timesPerUser ) ? UncannyAutomator.i18n.publish.unlimited : UncannyAutomator.recipe.publish.timesPerUser; \n\n\t\t\tlet timesRowValue      = $( '<span/>', { class: 'publish-row__value' }).text( timesValue ),\n\t\t\t\ttimesRowEdit       = $( '<span/>', { class: 'publish-row__edit' }).text( UncannyAutomator.i18n.edit ),\n\t\t\t\ttimesRowHidden     = $( '<div/>', { class: 'publish-row__hidden' }),\n\t\t\t\ttimesRowHiddenBox  = $( '<div/>', { class: 'publish-row__settings' });\n\n\t\t\tthis.elements.timesPerUser.editLink  = timesRowEdit;\n\t\t\tthis.elements.timesPerUser.hiddenBox = timesRowHidden;\n\n\t\t\tlet timesRowField \t   = new Field( 'int', {\n\t\t\t\tcurrentValue: UncannyAutomator.recipe.publish.timesPerUser,\n\t\t\t\tdescription:  UncannyAutomator.i18n.publish.leaveEmpty,\n\t\t\t\tplaceholder:  UncannyAutomator.i18n.publish.unlimited,\n\t\t\t}, true, function( value, simulatedValue ){\n\t\t\t\t// Custom validation function\n\t\t\t\t// Create response object\n\t\t\t\tlet response = {\n\t\t\t\t\tisValid: false,\n\t\t\t\t\tmessage: ''\n\t\t\t\t}\n\n\t\t\t\t// Check if the number is 1 or bigger\n\t\t\t\tif ( value >= 1 ){\n\t\t\t\t\tresponse.isValid = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresponse.message = UncannyAutomator.i18n.publish.oneOrBigger\n\t\t\t\t}\n\n\t\t\t\t// Return response\n\t\t\t\treturn response;\n\t\t\t});\n\n\t\t\tthis.timesField \t   = timesRowField;\n\n\t\t\tlet timesRowButtons    = $( '<div/>', { class: 'publish-row__buttons' }),\n\t\t\t\ttimesRowSaveBtn    = $( '<div/>', { class: 'uap-btn uap-btn--primary' }).text( UncannyAutomator.i18n.save ),\n\t\t\t\ttimesRowCancelBtn  = $( '<div/>', { class: 'uap-btn uap-btn--secondary' }).text( UncannyAutomator.i18n.cancel );\n\n\t\t\tthis.elements.timesPerUser.saveButton   = timesRowSaveBtn;\n\t\t\tthis.elements.timesPerUser.cancelButton = timesRowCancelBtn;\n\n\t\t\ttimesRowButtons.append( timesRowSaveBtn );\n\t\t\ttimesRowButtons.append( timesRowCancelBtn );\n\n\t\t\ttimesRowHiddenBox.append( timesRowField.getFormElement() );\n\t\t\ttimesRowHiddenBox.append( timesRowButtons );\n\t\t\ttimesRowHidden.append( timesRowHiddenBox );\n\n\t\t\ttimesRowIconBox.append( timesRowIcon );\n\t\t\ttimesRowVisible.append( timesRowIconBox );\n\t\t\ttimesRowVisible.append( timesRowName );\n\t\t\ttimesRowVisible.append( timesRowValue );\n\t\t\ttimesRowVisible.append( timesRowEdit );\n\n\t\t\ttimesRow.append( timesRowVisible );\n\t\t\ttimesRow.append( timesRowHidden );\n\n\t\t\tcontent.append( timesRow );\n\t\t}\t\n\n\t\t// Recipe type\n\t\tlet recipeTypeRow        = $( '<div/>',  { class: 'publish-row' }),\n\t\t\trecipeTypeRowVisible = $( '<div/>',  { class: 'publish-row__visible' }),\n\t\t\trecipeTypeRowIconBox = $( '<span/>', { class: 'publish-row__icon' }),\n\t\t\trecipeTypeRowIcon    = $( '<i/>',    { class: 'uo-icon uo-icon--utensils' }),\n\t\t\trecipeTypeRowName    = $( '<span/>', { class: 'publish-row__name' }).text( UncannyAutomator.i18n.publish.recipeType ),\n\t\t\trecipeTypeRowValue   = $( '<span/>', { class: 'publish-row__value' }),\n\t\t\trecipeTypeLearnMore  = $( `\n\t\t\t\t<a href=\"${ addParametersToURL( 'https://automatorplugin.com/knowledge-base/creating-a-recipe/', {\n                        'utm_source':  'uncanny_automator',\n                        'utm_medium':  'publish_metabox',\n                        'utm_content': 'question_icon'\n                    }) }\" class=\"publish-row__learn-more\" target=\"_blank\"><span class=\"uo-icon uo-icon--question-circle\"></span></a>\n\t\t\t` );\n\n\t\tif ( UncannyAutomator.recipe.type == 'user' ){\n\t\t\trecipeTypeRowValue.text( UncannyAutomator.i18n.recipeType.userRecipeName );\n\t\t}\n\n\t\tif ( UncannyAutomator.recipe.type == 'anonymous' ){\n\t\t\trecipeTypeRowValue.text( UncannyAutomator.i18n.recipeType.anonymousRecipeName );\n\t\t}\n\n\t\trecipeTypeRowIconBox.append( recipeTypeRowIcon );\n\t\trecipeTypeRowVisible.append( recipeTypeRowIconBox );\n\t\trecipeTypeRowVisible.append( recipeTypeRowName );\n\t\trecipeTypeRowVisible.append( recipeTypeRowValue );\n\t\trecipeTypeRowVisible.append( recipeTypeLearnMore );\n\t\trecipeTypeRow.append( recipeTypeRowVisible );\n\n\t\tcontent.append( recipeTypeRow );\n\n\t\t// Created on row\n\t\tlet createdRow \t\t   = $( '<div/>', { class: 'publish-row' }),\n\t\t\tcreatedRowVisible  = $( '<div/>', { class: 'publish-row__visible' }),\n\t\t\tcreatedRowIconBox  = $( '<span/>', { class: 'publish-row__icon' }),\n\t\t\tcreatedRowIcon     = $( '<i/>', { class: 'uo-icon uo-icon--calendar-alt' }),\n\t\t\tcreatedRowName     = $( '<span/>', { class: 'publish-row__name' }).text( UncannyAutomator.i18n.publish.createdOn ),\n\t\t\tcreatedRowValue    = $( '<span/>', { class: 'publish-row__value' }).text( UncannyAutomator.recipe.publish.createdOn );\n\n\t\tcreatedRowIconBox.append( createdRowIcon );\n\t\tcreatedRowVisible.append( createdRowIconBox );\n\t\tcreatedRowVisible.append( createdRowName );\n\t\tcreatedRowVisible.append( createdRowValue );\n\t\tcreatedRow.append( createdRowVisible );\n\n\t\tcontent.append( createdRow );\n\n\t\t// Footer\n\n\t\tlet footerRow          = $( '<div/>', { class: 'publish-footer__row clear' }),\n\t\t\tfooterRowLeft      = $( '<div/>', { class: 'publish-footer__left' }),\n\t\t\tfooterMoveToDraft  = $( '<a/>', { class: 'publish-footer__move-to-draft', href: UncannyAutomator.recipe.publish.moveToTrash.replace( /&amp;/g, '&' ) }).text( UncannyAutomator.i18n.proOnly.moveToTrash ),\n\t\t\tfooterRowRight     = $( '<div/>', { class: 'publish-footer__right' });\n\n\t\tlet recipeStatusToggle = new Field( 'checkbox', {\n            color: 'gutenberg',\n            align: 'right',\n            toggle: {\n                on:  UncannyAutomator.i18n.status.liveRecipe,\n                off: UncannyAutomator.i18n.status.draftRecipe,\n            },\n            currentValue: UncannyAutomator.recipe.isLive\n\t\t});\n\n\t\t// Save toggle Field in main object\n\t\tUncannyAutomator.recipe.publish.statusToggle = recipeStatusToggle;\n\n\t\tlet recipeStatusToggleDOM = recipeStatusToggle.getFormElement();\n\t\tthis.recipeStatusToggle   = recipeStatusToggle;\n\n\t\tthis.elements.toggle   = recipeStatusToggleDOM;\n\n\t\tfooterRowLeft.append( footerMoveToDraft );\n\t\tfooterRowRight.append( recipeStatusToggleDOM );\n\t\tfooterRow.append( footerRowLeft );\n\t\tfooterRow.append( footerRowRight );\n\n\t\tfooter.append( footerRow );\n\n\t\t// Append main elements to the metabox\n\t\tcontainer.append( content );\n\t\tcontainer.append( footer );\n\n\t\t// Render metabox\n\t\tthis.elements.metabox.html( container );\n\n\t\t// Render errors\n\t\tnew RecipeNotices();\n\n\t\t// Bind\n\t\tthis.bind();\n\n\t\t// Validate status\n\t\tthis.validateStatus();\n\t}\n\n\tvalidateStatus(){\n\t\t// We're going to use this method to check if the recipe is live but it's invalid\n\t\tif ( UncannyAutomator.recipe.isLive && ! UncannyAutomator.recipe.isValid ){\n\t\t\t// Make Draft\n\t\t\tUncannyAutomator.recipe.publish.statusToggle.setValue( false );\n\t\t}\n\t}\n\n\tbind(){\n\t\t// Check if we have to add the event listeners to the \"times per user\" row\n\t\tif ( UncannyAutomator.recipe.type != 'anonymous' ){\n\t\t\t// Times per user, click on \"Edit\"\n\t\t\tthis.elements.timesPerUser.editLink.on( 'click', () => {\n\t\t\t\t// Slide toggle\n\t\t\t\tthis.elements.timesPerUser.hiddenBox.slideToggle( 300 );\n\t\t\t});\n\n\t\t\t// Times per user, click on \"Cancel\"\n\t\t\tthis.elements.timesPerUser.cancelButton.on( 'click', () => {\n\t\t\t\t// Slide toggle\n\t\t\t\tthis.elements.timesPerUser.hiddenBox.slideToggle( 300, () => {\n\t\t\t\t\t// Reset UI\n\t\t\t\t\tnew Publish();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Timer per user, click on \"Save\"\n\t\t\tthis.elements.timesPerUser.saveButton.on( 'click', () => {\n\t\t\t\t// Validate input\n\t\t\t\tlet validation = this.timesField.validate();\n\n\t\t\t\t// Check if it's valid. Otherwise do nothing. Field.js will show an error\n\t\t\t\tif ( validation.isValid ){\n\n\t\t\t\t\t// Add loading class to save button\n\t\t\t\t\tthis.elements.timesPerUser.saveButton.addClass( 'uap-btn--loading uap-btn--disabled' );\n\n\t\t\t\t\t// Get value. We have to check if it's empty and change it to -1\n\t\t\t\t\tlet numberOfTimes = this.timesField.getValue();\n\t\t\t\t\t\n\t\t\t\t\tif ( isEmpty( numberOfTimes ) ){\n\t\t\t\t\t\tnumberOfTimes = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\trestCall( 'recipe_completions_allowed', {\n\t\t\t\t\t\tpost_ID: \t\t\t\t\tUncannyAutomator.recipe.id,\n\t\t\t\t\t\trecipe_completions_allowed: numberOfTimes\n\t\t\t\t\t}, () => {\n\t\t\t\t\t\t// Update JS object\n\t\t\t\t\t\tUncannyAutomator.recipe.publish.timesPerUser = numberOfTimes;\n\n\t\t\t\t\t\t// Slide toggle fields container and refresh the Publish UI\n\t\t\t\t\t\tthis.elements.timesPerUser.hiddenBox.slideToggle( 300, () => {\n\t\t\t\t\t\t\t// Reset UI\n\t\t\t\t\t\t\tnew Publish();\n\t\t\t\t\t\t});\n\t\t\t\t\t}, () => {\n\t\t\t\t\t\tconsole.log( '‼️ ERROR-TODO. Couldn\\'t save times per user' );\n\n\t\t\t\t\t\t// Revert changes\n\t\t\t\t\t\tthis.timesField.setValue( UncannyAutomator.recipe.publish.timesPerUser );\n\n\t\t\t\t\t\t// Remove the loading class to save button\n\t\t\t\t\t\tthis.elements.timesPerUser.saveButton.removeClass( 'uap-btn--loading uap-btn--disabled' );\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Get field element and bind 'keyup'\n\t\t\tthis.timesField.getField().on( 'keyup', ( event ) => {\n\t\t\t\t// Check if it's an enter\n\t\t\t\tif ( event.keyCode == 13 ){\n\t\t\t\t\t// Trigger a click on the Save Button\n\t\t\t\t\tthis.elements.timesPerUser.saveButton.trigger( 'click' );\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Status change\n\t\tthis.elements.toggle.on( 'automator:field:change', () => {\n\t\t\t// Set loading status\n\t\t\tthis.recipeStatusToggle.startLoadingAnimation();\n\n\t\t\t// Set post status\n\t\t\tlet makeLive   = this.recipeStatusToggle.getValue(),\n\t\t\t\tpostStatus = makeLive ? 'publish' : 'draft';\n\n\t\t\t// Check if can make it live\n\t\t\tlet recipeTriggers = itemsObject( 'get', {\n\t\t\t\t\tfilter: {\n\t\t\t\t\t\titemType: 'trigger'\n\t\t\t\t\t}\n\t\t\t\t}),\n                canMakeLive = true;\n\n\t\t\t// Check if the user is trying to make the recipe live\n\t\t\tif ( canMakeLive && ( ! makeLive || ( makeLive && UncannyAutomator.recipe.isValid ) ) ){\n\n\t\t\t\trestCall( 'change_post_status', {\n\t\t\t\t\tpost_ID: \t UncannyAutomator.recipe.id,\n\t\t\t\t\tpost_status: postStatus\n\t\t\t\t}, () => {\n\t\t\t\t\t// Update main object\n\t\t\t\t\tUncannyAutomator.recipe.isLive = makeLive;\n\n\t\t\t\t\t// Reset the UI\n\t\t\t\t\tnew Publish();\n\t\t\t\t}, () => {\n\t\t\t\t\t// Shomething went wrong, show error\n\t\t\t\t\tconsole.log( '‼️ ERROR-TODO. Couldn\\'t set the recipe status' );\n\n\t\t\t\t\t// Revert user change\n\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\t// Stop loading animation\n\t\t\t\t\t\tthis.recipeStatusToggle.stopLoadingAnimation();\n\n\t\t\t\t\t\t// Revert value\n\t\t\t\t\t\tthis.recipeStatusToggle.setValue( false, false );\n\t\t\t\t\t}, 1000);\n\t\t\t\t});\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( ! canMakeLive ){\n\t\t\t\t\t// Set error message\n                    UncannyAutomator.recipe.message.error = vsprintf( UncannyAutomator.i18n.proOnly.proToPublish, [ UncannyAutomator.i18n.uncannyAutomatorPro ] );\n\t\t\t\t}\n\n\t\t\t\t// Set error mode\n\t\t\t\tUncannyAutomator.recipe.errorMode = true;\n\n\t\t\t\t// Show error\n\t\t\t\tnew RecipeNotices();\n\t\t\t\t\n\t\t\t\t// Revert user change\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t// Stop loading animation\n\t\t\t\t\tthis.recipeStatusToggle.stopLoadingAnimation();\n\n\t\t\t\t\t// Revert value\n\t\t\t\t\tthis.recipeStatusToggle.setValue( false, false );\n\t\t\t\t}, 1000);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport default Publish;\n\n\n// WEBPACK FOOTER //\n// ./src/components/Publish.js","import {\n\trestCall,\n\tgetDOMElements,\n\tisEmpty\n} from './Utilities.js';\n\nclass RecipeTypeSelector {\n\tconstructor( doWhenReady ){\n\t\t// Save callbacks\n\t\tthis.doWhenReady = doWhenReady;\n\n\t\t// Render\n\t\tthis.render();\n\n\t\t// Get elements\n\t\tthis.getElements();\n\n\t\t// Listen to the form submission\n\t\tthis.listenSubmission();\n\t}\n\n\trender(){\n\t\t// Create HTML\n\t\tconst $recipeTypeSelector = $( `\n\t\t\t<div class=\"uap\">\n\t\t\t\t<div id=\"uap-type-selector\" class=\"uap-type-selector\">\n\t\t\t\t\t<div class=\"uap-type-selector__box\">\n\t\t\t\t\t\t<form id=\"uap-type-selector-form\" class=\"uap-type-selector__form\">\n\t\t\t\t\t\t\t<div class=\"uap-type-selector__title\">\n\t\t\t\t\t\t\t\t${ UncannyAutomator.i18n.recipeType.title }\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"uap-type-selector__content\">\n\t\t\t\t\t\t\t\t<div class=\"uap-type-selector__types\">\n\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type uap-type-selector-type--user\">\n\t\t\t\t\t\t\t\t\t\t<input class=\"uap-type-selector-type__hidden-field\" type=\"radio\" name=\"uap-recipe-type\" value=\"user\" id=\"uap-recipe-type-user\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"uap-type-selector-type__label\" for=\"uap-recipe-type-user\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type__container\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type__icon\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type__icon-img uap-type-selector-type__icon-img--user\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type__title\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t${ UncannyAutomator.i18n.recipeType.userRecipeName }\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type__description\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t${ UncannyAutomator.i18n.recipeType.userRecipeDescription }\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type uap-type-selector-type--anonymous\">\n\t\t\t\t\t\t\t\t\t\t<input class=\"uap-type-selector-type__hidden-field\" type=\"radio\" name=\"uap-recipe-type\" value=\"anonymous\" id=\"uap-recipe-type-anonymous\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"uap-type-selector-type__label\" for=\"uap-recipe-type-anonymous\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type__container\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type__icon\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type__icon-img uap-type-selector-type__icon-img--anonymous\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type__title\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t${ UncannyAutomator.i18n.recipeType.anonymousRecipeName }\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type__description\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t${ UncannyAutomator.i18n.recipeType.anonymousRecipeDescription }\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"uap-type-selector__warning\">\n\t\t\t\t\t\t\t\t${ UncannyAutomator.i18n.recipeType.cantChangeLaterNotice }\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"uap-type-selector__buttons\">\n\t\t\t\t\t\t\t\t<button type=\"submit\" id=\"uap-type-selector-submit-button\" class=\"uap-btn uap-btn--primary\">${ UncannyAutomator.i18n.confirm }</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t` );\n\n\t\t// Append container to the body\n\t\t$( 'body' ).append( $recipeTypeSelector );\n\t}\n\n\tgetElements(){\n\t\t// Get elements\n\t\tthis.$elements = {\n\t\t\tcontainer:    $( '#uap-type-selector' ),\n\t\t\tform:         $( '#uap-type-selector-form' ),\n\t\t\twarning:      $( '#uap-type-selector .uap-type-selector__warning' ),\n\t\t\tsubmitButton: $( '#uap-type-selector-submit-button' )\n\t\t}\n\t}\n\n\tlistenSubmission(){\n\t\t// Listen submission\n\t\tthis.$elements.form.on( 'submit', ( event ) => {\n\t\t\t// Prevent default\n\t\t\tevent.preventDefault();\n\n\t\t\t// Get recipe type\n\t\t\tconst recipeType = this.$elements.form.find( 'input[name=\"uap-recipe-type\"]:checked' ).val();\n\n\t\t\t// Check if it's defined and it's a valid value\n\t\t\tif ( ! isEmpty( recipeType ) ){\n\t\t\t\t// Check if it has a valid value\n\t\t\t\tif ( [ 'user', 'anonymous' ].includes( recipeType ) ){\n\t\t\t\t\t// Save recipe type\n\t\t\t\t\tthis.saveRecipeType( recipeType );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// The user is trying save a different value\n\t\t\t\t\tthis.showError( UncannyAutomator.i18n.recipeType.errorTryingToSaveOtherValue );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// The user didn't select an option\n\t\t\t\tthis.showError( UncannyAutomator.i18n.recipeType.errorDidNotSelectType );\n\t\t\t}\n\t\t});\n\t}\n\n\tsaveRecipeType( recipeType ){\n\t\t// Define endpoint\n\t\tconst endpoint = 'change_post_recipe_type';\n\n\t\t// Define data to send\n\t\tconst data = {\n\t\t\tpost_ID:     UncannyAutomator.recipe.id,\n\t\t\trecipe_type: recipeType\n\t\t}\n\n\t\t// Add loading animation to the button\n\t\tthis.$elements.submitButton.addClass( 'uap-btn--loading uap-btn--disabled' );\n\n\t\t// Do a REST call to save the recipe type\n\t\trestCall( endpoint, data,\n\t\t\t( response ) => {\n\t\t\t\t// Check if it was successful\n\t\t\t\tif ( response.success ){\n\t\t\t\t\t// Remove container \n\t\t\t\t\t// We should render everything again and \n\t\t\t\t\t// add a conditional to not render the elements\n\t\t\t\t\tthis.$elements.container.remove();\n\n\t\t\t\t\t// Save in main object\n\t\t\t\t\tUncannyAutomator.recipe.type = recipeType;\n\n\t\t\t\t\t// Get the container of the title\n\t\t\t\t\tlet $triggersMetaboxTitle = $( '#uo-recipe-triggers-meta-box-ui h2.hndle.ui-sortable-handle span' );\n\n\t\t\t\t\t// Create the title of triggers metabox\n\t\t\t\t\tlet triggersMetaboxTitle = UncannyAutomator.i18n.trigger.userTriggers;\n\t\t\t\t\tif ( UncannyAutomator.recipe.type == 'anonymous' ){\n\t\t\t\t\t\ttriggersMetaboxTitle = UncannyAutomator.i18n.trigger.anonymousTrigger;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Change text the title container\n\t\t\t\t\t$triggersMetaboxTitle.text( triggersMetaboxTitle );\n\n\t\t\t\t\t// Call callbacks\n\t\t\t\t\tthis.doWhenReady( recipeType );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Show error\n\t\t\t\t\tthis.showError( UncannyAutomator.i18n.recipeType.errorSomethingWentWrong );\n\t\t\t\t}\n\t\t\t},\n\t\t\t( response ) => {\n\t\t\t\tconsole.log( '‼️ ERROR-TODO. Couldn\\'t save the recipe type' );\n\n\t\t\t\t// Remove loading class\n\t\t\t\tthis.$elements.submitButton.removeClass( 'uap-btn--loading uap-btn--disabled' );\n\n\t\t\t\t// Show error message\n\t\t\t\tthis.showError( UncannyAutomator.i18n.recipeType.errorSomethingWentWrong );\n\t\t\t}\n\t\t);\n\t}\n\n\tshowError( errorMessage ){\n\t\t// Create error\n\t\tconst $error = $( `\n\t\t\t<div class=\"uap-type-selector__error\">\n\t\t\t\t${ errorMessage }\n\t\t\t</div>\n\t\t` );\n\n\t\t// Check if the container already has an error container\n\t\tconst $oldErrorContainer = this.$elements.container.find( '.uap-type-selector__error' );\n\t\tif ( $oldErrorContainer.length > 0 ){\n\t\t\t$oldErrorContainer.remove();\n\t\t}\n\n\t\t// Add error container\n\t\t$error.insertAfter( this.$elements.warning );\n\n\t\t// Add class to shake\n\t\tsetTimeout(() => {\n\t\t\t$error.addClass( 'uap-type-selector__error--shake' );\n\t\t}, 10 );\n\t}\n}\n\nexport default RecipeTypeSelector;\n\n\n// WEBPACK FOOTER //\n// ./src/components/RecipeTypeSelector.js","import {\n    restCall,\n    getGlobalItem,\n    getDOMElements,\n    parseStringWithTokens,\n    isEmpty,\n    isDefined,\n    replaceCurlyBraces\n} from './Utilities.js';\n\nimport Modal       from './Modal.js';\nimport ItemOptions from './ItemOptions.js';\nimport Field       from './Field.js';\nimport Triggers    from './Triggers.js';\nimport Actions     from './Actions.js';\n\nimport {\n    validateItem\n} from './Validation.js';\n\nimport RecipeNotices from './RecipeNotices.js';\n\nclass ItemHeaderSentence {\n    constructor( itemType, integrationID, itemCode, itemId ){\n        this.itemType = itemType;\n        this.integrationID = integrationID;\n        this.itemCode = itemCode;\n        this.itemId   = itemId;\n        this.item     = UncannyAutomator.recipe.items[ itemId ];\n\n        return this.createItemSentence( itemType, itemCode, itemId );\n    }\n\n    /**\n     * Create item sentence + status toggle\n     * \n     * @since 0.5     \n     *\n     * @return {object}   jQuery DOM object with the item sentence + status toggle\n     */\n\n    createItemSentence( itemType, itemCode, itemId ){\n        // Get information about the global item\n        let globalItem = getGlobalItem( this.integrationID, itemType, itemCode );\n        this.globalItem = globalItem;\n\n        // Get sentence\n        let itemSentence;\n\n        if ( ! this.item.isMissing ){\n            itemSentence = getGlobalItem( this.integrationID, this.item.itemType, this.item.itemCode ).sentence;\n        }\n        else {\n            itemSentence = this.item.sentence;\n        }\n\n        itemSentence = parseStringWithTokens( this.item, itemSentence, UncannyAutomator.recipe.items[ this.itemId ].meta );\n\n        // Bind elements\n        /*\n        itemSentence.elements.normal.on( 'click', function(){\n            //\n        });\n        */\n\n        if ( ! this.item.isMissing ){\n            // Listen clicks on tokens\n            itemSentence.elements.token.on( 'click', ( event ) => {\n                // Get token element\n                const $token = $( event.currentTarget );\n\n                // Remove \"open\" class from al items\n                itemSentence.elements.token.removeClass( 'item-title__token--open' );\n                // Add \"open\" class to the clicked token\n                $token.addClass( 'item-title__token--open' );\n\n                // Get options ID\n                let optionsID = $token.data( 'options-id' );\n\n                // Get option group\n                let optionGroupDOM = getDOMElements( 'optionGroup', {\n                    itemID:  itemId,\n                    groupID: optionsID,\n                });\n\n                // Create and show\n                new ItemOptions( itemId, optionsID );\n            });\n        }\n            \n        // Create DOM elements\n        let container = $( '<div/>', { 'class': 'item-title__describe-container' }),\n            status    = $( '<div/>', { 'class': 'item-status' });\n\n        container.append( itemSentence.html.addClass( 'item-title__describe' ) );\n\n        // Create toggle. We're using Field. Read Field.js comments for more information\n        var itemToggle = new Field( 'checkbox', {\n            color: 'green',\n            align: 'right',\n            toggle: {\n                on:  UncannyAutomator.i18n.status.liveRecipeItem,\n                off: UncannyAutomator.i18n.status.draftRecipeItem,\n            },\n            currentValue: UncannyAutomator.recipe.items[ itemId ].isLive\n        });\n\n        let itemStatusToggle = itemToggle.getFormElement();\n            status.append( itemStatusToggle );\n            container.append( status );\n\n        if ( ! this.item.isMissing ){\n            itemStatusToggle.on( 'automator:field:change', function(){\n                let makeLive = itemToggle.getValue();\n                var isValidItem = true; // True by default, will change to false is it's invalid\n\n                // Check if the user wants to make it live\n                if ( makeLive ){\n                    // Validate\n                    let validation = validateItem( itemId );\n                    isValidItem = validation.isValid; \n                }\n\n                // Do AJAX\n                // Show loading animation\n                itemToggle.startLoadingAnimation();\n\n                if ( isValidItem ){\n                    // Set post status\n                    let post_status = makeLive ? 'publish' : 'draft';\n\n                    // Check if they want to make an item draft in a live recipe\n                    if ( ! makeLive && UncannyAutomator.recipe.isLive ){\n                        // Create modal box\n                        // Read Modal.js comments for more information\n                        let modal = new Modal({\n                            title:       UncannyAutomator.i18n.confirmationModal.title,\n                            warning:     replaceCurlyBraces( UncannyAutomator.i18n.confirmationModal.statusWarning, '<strong>', '</strong>' ),\n                            buttons: {\n                                cancel:  UncannyAutomator.i18n.cancel,\n                                confirm: UncannyAutomator.i18n.confirm,\n                            }\n                        });\n\n                        modal.setEvents({\n                            afterSetEvents: function(){\n                                modal.show();\n                            },\n                            onConfirm: function(){\n                                let elements        = modal.getElements();\n                                let confirmButton   = elements.modal.box.buttons.confirm;\n\n                                // Add loading class to button\n                                confirmButton.addClass( 'uap-btn--loading' ).prop( 'disabled', true );\n\n                                // Start loading animation on toggle\n                                itemToggle.startLoadingAnimation();\n\n                                restCall( 'change_post_status', {\n                                    post_ID:      itemId,\n                                    post_status:  post_status,\n                                    sentence_human_readable: itemSentence.brackets\n                                }, function(){\n                                    // On success\n                                    // Destroy modal\n                                    modal.destroy();\n\n                                    // Refresh UI\n                                    new Triggers();\n                                    new Actions();\n\n                                    // Show error\n                                    new RecipeNotices();\n\n                                    // Check if the recipe is still valid, if it isn't then make the recipe draft\n                                    if ( ! UncannyAutomator.recipe.isValid ){\n                                        UncannyAutomator.recipe.publish.statusToggle.setValue( false );\n                                    }\n                                }, function(){\n                                    // On fail\n                                    console.log( '‼️ ERROR-TODO. Couldn\\'t set the item status' );\n\n                                    // Destroy modal\n                                    modal.destroy();\n\n                                    // Remove loading animation, data didn't change\n                                    itemToggle.stopLoadingAnimation();\n\n                                    // Revert user change\n                                    itemToggle.setValue( ! makeLive, false );\n                                });\n                            },\n                            onCancel: function(){\n                                // Destroy modal\n                                modal.destroy();\n\n                                // Revert user change\n                                itemToggle.setValue( ! makeLive, false );\n\n                                // Stop loading animation in the toggle\n                                itemToggle.stopLoadingAnimation();\n                            },\n                            afterHide: function(){\n                                modal.destroy();\n                            }\n                        });\n                    }\n                    else {\n                        // Is valid, make live\n                        restCall( 'change_post_status', {\n                            post_ID:      itemId,\n                            post_status:  post_status,\n                            sentence_human_readable: itemSentence.brackets\n                        }, function(){\n                            // On sucess\n                            // Update object\n\n                            // Refresh UI\n                            // Debugging! don't re-render the UI\n                            // new Triggers();\n                            // new Actions();\n\n                            // Remove loading animation, data didn't change\n                            itemToggle.stopLoadingAnimation();\n\n                            // Show error\n                            new RecipeNotices();\n                        }, function(){\n                            // On fail\n                            console.log( '‼️ ERROR-TODO. Couldn\\'t set the item status' );\n\n                            // Remove loading animation, data didn't change\n                            itemToggle.stopLoadingAnimation();\n\n                            // Revert user change\n                            itemToggle.setValue( ! makeLive, false );\n                        });\n                    }\n                }\n                else {\n                    // JS won't take more than some milliseconds to do this, so we're going to wait one second just for the user to understand what's happening\n                    setTimeout(function(){\n                        // Remove loading animation\n                        itemToggle.stopLoadingAnimation();\n\n                        // Revert user change\n                        itemToggle.setValue( false, false );\n                    }, 1000 );\n                }\n            });\n        }\n\n        return container;\n    }\n}\n\nexport default ItemHeaderSentence;\n\n\n// WEBPACK FOOTER //\n// ./src/components/ItemHeaderSentence.js","import {\n    itemsObject,\n    getDOMElements,\n    isEmpty,\n    isDefined,\n    vsprintf,\n    addParametersToURL\n} from './Utilities.js';\nimport ItemCreatorIntegrations from './ItemCreatorIntegrations.js';\nimport Triggers from './Triggers';\nimport Actions from './Actions';\nimport MetaboxItems from './MetaboxItems';\n\nclass MetaboxFooter {\n\n    constructor( itemType ){\n        this.itemType = itemType;\n\n        if ( this.shouldCreateMetaboxFooter() ){\n            this.createFooter();\n        }\n    }\n\n    shouldCreateMetaboxFooter(){\n        // Check if we should create the metabox\n        // For the triggers we're going to create it always,\n        // but for the actions we're going to create only if there is at least one action\n\n        let create = false;\n\n        if ( this.itemType == 'trigger' ){\n            // Get triggers\n            let recipeActions = itemsObject( 'get', {\n                filter: {\n                    itemType: 'trigger'\n                }\n            });\n\n            // Check if has triggers\n            let hasTriggers = ! isEmpty( recipeActions );\n\n            // Create metabox if hasTriggers\n            if ( ( hasTriggers || ( ! isDefined( UncannyAutomator.wp ) || ! UncannyAutomator.wp ) ) || UncannyAutomator.recipe.type == 'anonymous' ){\n                create = true;\n            }\n        }\n\n        if ( this.itemType == 'action' ){\n            // Get actions\n            let recipeActions = itemsObject( 'get', {\n                filter: {\n                    itemType: 'action'\n                }\n            });\n\n            // Check if has actions\n            let hasActions = ! isEmpty( recipeActions );\n\n            // Create metabox if hasActions\n            if ( hasActions ){\n                create = true;\n            }\n        }\n\n        return create;\n    }\n\n    createFooter(){\n        // Create error container\n        let container  = $( '<div/>', { 'class': 'metabox__footer' });\n\n        // \"Add another\" button\n        let addAnother = $( '<div/>', { 'class': 'uap-btn uap-btn--secondary' });\n\n        // Add button, but don't add it in the triggers metabox for anonymous recipes\n        if ( this.itemType == 'action' || ( this.itemType == 'trigger' && UncannyAutomator.recipe.type == 'user' ) ){\n            // Append \"Add another\" button\n            container.append( addAnother );\n        }\n\n        if ( this.itemType == 'trigger' ){\n            // Do only for \"user\" recipes\n            if ( UncannyAutomator.recipe.type == 'user' ){\n                // Set text to the \"Add Another\" button\n                addAnother.text( UncannyAutomator.i18n.trigger.addAnother );\n            }\n\n            // Do only for \"anonymous\" recipes\n            if ( UncannyAutomator.recipe.type == 'anonymous' ){\n                // Create and append anonymous notice\n                let $anonymousNotice = this.createAnonymousNotice();\n                container.append( $anonymousNotice );\n            }\n        }\n\n        if ( this.itemType == 'action' ){\n            // Set text to the \"Add Another\" button\n            addAnother.text( UncannyAutomator.i18n.action.addAnother );\n        }\n\n        // Bind button\n        if ( ( this.itemType == 'trigger' ) || this.itemType == 'action' ){\n            // Listen clicks to the \"Add another\" button\n            addAnother.on( 'click', () => {\n                // Multiple triggers are only allowed in the pro version\n                // So we're only doing this for actions\n                new ItemCreatorIntegrations( this.itemType );\n            });\n        }\n\n        // Append to the metabox\n        let metabox = getDOMElements( 'metabox', {\n            type: this.itemType\n        })\n\n        metabox.append( container );\n    }\n\n    createAnonymousNotice(){\n        let $notice = $( `\n            <div class=\"description\">\n                ${ UncannyAutomator.i18n.recipeType.anonymousOnlyOneTrigger } <a href=\"${ addParametersToURL( 'https://automatorplugin.com/knowledge-base/managing-triggers/', {\n                        'utm_source':  'uncanny_automator',\n                        'utm_medium':  'anonymous_recipe_one_trigger',\n                        'utm_content': 'learn_more'\n                    }) }\" target=\"_blank\">${ UncannyAutomator.i18n.learnMore } <span class=\"uo-icon uo-icon--external-link-alt\"></span></a>\n            </div>\n        ` );\n\n        return $notice;\n    }\n}\n\nexport default MetaboxFooter;\n\n\n// WEBPACK FOOTER //\n// ./src/components/MetaboxFooter.js","// Load static resources\nimport './css/uncannyowl-automator.svg';\nimport './css/uncannyowl-automator.ttf';\nimport './css/uncannyowl-automator.woff';\nimport './css/main.scss';\n\nimport {\n\tcreateDataOnLoad,\n\tconsoleLogLabel\n}   from './components/Utilities.js';\n\nimport Publish            from './components/Publish.js';\nimport Triggers           from './components/Triggers.js';\nimport Actions            from './components/Actions.js';\nimport SendFeedback       from './components/SendFeedback.js';\nimport RecipeTypeSelector from './components/RecipeTypeSelector.js';\nimport RecipeTitle        from './components/RecipeTitle.js';\nimport Taxonomies         from './components/Taxonomies.js';\n\n// Create the data required to render Automator\ncreateDataOnLoad(() => {\n\tconsoleLogLabel( 'Render the UI', false, { bgColor: '#579f49' });\n\n\t// Once ready, render the UI\n\tnew Triggers();\n\tnew Actions();\n\tnew Publish();\n\tnew SendFeedback();\n\tnew RecipeTitle();\n\tnew Taxonomies();\n});\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = \"uncannyowl-automator.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/css/uncannyowl-automator.svg\n// module id = 19\n// module chunks = 0","module.exports = \"uncannyowl-automator.ttf\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/css/uncannyowl-automator.ttf\n// module id = 20\n// module chunks = 0","module.exports = \"uncannyowl-automator.woff\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/css/uncannyowl-automator.woff\n// module id = 21\n// module chunks = 0","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/css/main.scss\n// module id = 22\n// module chunks = 0","import {\n\tisDefined,\n\tisEmpty\n} from './Utilities';\n\nimport Field from './Field';\n\nclass FieldsGroup {\n\tconstructor( attributes, createDOMelements = true, customValidationFunction = null ){\n\t\t// Save attributes\n\t\tthis.setAttributes( attributes );\n\n\t\t// Create fields\n\t\tthis.createFields();\n\t}\n\n\t/**\n\t * Set attributes. It add properties like hasValue, hasPlaceholder, etc, automatically\n\t * \n\t * @since 0.4\n\t *\n\t * @param  {object} attributes - The field attributes\n\t *\n\t * @return {object} attributes - The field attributes\n\t */\n\n\tsetAttributes( attributes ){\n\t\t// Has label\n\t\tif ( ! isDefined( attributes.hasLabel ) ){\n\t\t\tif ( ! isEmpty( attributes.label ) ){\n\t\t\t\tattributes.hasLabel = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattributes.hasLabel = false;\n\t\t\t}\n\t\t}\n\n\t\t// Has description\n\t\tif ( ! isDefined( attributes.hasDescription ) ){\n\t\t\tif ( ! isEmpty( attributes.description ) ){\n\t\t\t\tattributes.hasDescription = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattributes.hasDescription = false;\n\t\t\t}\n\t\t}\n\n\t\tthis.attributes = attributes;\n\t}\n\n\t/**\n\t * Create instances of Field\n\t *\n\t * @since  2.0\n\t *\n\t * @return undefined\n\t */\n\n\tcreateFields(){\n\t\t// Replace fields data with Field instances\n\t\tthis.fields = this.attributes.fields.map(( fieldData ) => {\n\t\t\t// Create Field\n\t\t\treturn new Field( fieldData.fieldType, fieldData );\n\t\t});\n\t}\n\n\t/**\n\t * Create a jQuery DOM element with the field\n\t *\n\t * @since 0.3\n\t */\n\n\tcreateFormElement(){\n\t\t// Create response object\n\t\tlet response = null;\n\n\t\t// Create container\n\t\tconst $container = $( `<div class=\"form-group\"></div>` );\n\n\t\t// Check if it has a label\n\t\tif ( this.attributes.hasLabel ){\n\t\t\t// Create label\n\t\t\tconst $label = $( `<div class=\"form-group__label\">${ this.attributes.label }</div>` );\n\n\t\t\t// Append label\n\t\t\t$container.append( $label );\n\t\t}\n\n\t\t// Create form group. We're going to add the fields here\n\t\tconst $formGroup = $( `<div class=\"form-group__fields\"></div>` );\n\t\t// Iterate fields\n\t\tthis.fields.forEach(( field ) => {\n\t\t\t// Create form element\n\t\t\tconst $fieldElement = field.createFormElement();\n\n\t\t\t// Append form element\n\t\t\t$formGroup.append( $fieldElement );\n\t\t});\n\t\t// Append fields\n\t\t$container.append( $formGroup );\n\n\t\t// Check if it has a description\n\t\tif ( this.attributes.hasLabel ){\n\t\t\t// Create description\n\t\t\tconst $description = $( `<div class=\"form-group__description\">${ this.attributes.description }</div>` );\n\t\t\n\t\t\t// Append description\n\t\t\t$container.append( $description );\n\t\t}\n\n\t\t// Save form element\n\t\tthis.formElement = $container;\n\t\tresponse = $container;\n\n\t\t// Return form element\n\t\treturn response;\n\t}\n\n\t/**\n\t * Get value\n\t *\n\t * @since  2.0\n\t *\n\t * @return {object} Object where the key is the field ID and the value is the field's value\n\t */\n\t\n\tgetValue(){\n\t\t// Create object where we're going to save the values\n\t\tlet fieldsValue = {};\n\n\t\t// Iterate fields\n\t\tthis.fields.forEach(( field ) => {\n\t\t\t// Add the field value\n\t\t\tfieldsValue[ field.getFieldID() ] = field.getValue();\n\t\t});\n\n\t\t// Return validation object\n\t\treturn fieldsValue;\n\t}\n\n\t/**\n\t * Get form element\n\t * \n\t * @since 2.0\n\t *\n\t * @return {object} jQuery object of the field's container\n\t */\n\n\tgetFormElement(){\n\t\treturn this.formElement;\n\t}\n\n\t/**\n\t * Get attributes\n\t * \n\t * @since 2.0\n\t *\n\t * @return {object} Field attributes\n\t */\n\n\tgetAttributes(){\n\t\treturn this.attributes;\n\t}\n\n\t/**\n\t * Validate the fields\n\t * \n\t * @since 2.0\n\t *\n\t * @param  {boolean} renderError - TRUE if you want to render the field errors, FALSE if you only want to return the response object\n\t *\n\t * @return {object} Object where the key is the field ID and the value is a validateField object\n\t */\n\t\n\tvalidate( renderError = true ){\n\t\t// Create validation object\n\t\tlet validationObject = {\n\t\t\tisValid: true,\n\t\t\tmessage: ''\n\t\t};\n\n\t\t// Iterate fields\n\t\tthis.fields.forEach(( field ) => {\n\t\t\t// Validate and add response to the validation object\n\t\t\tvalidationObject[ field.getFieldID() ] = field.validate( renderError );\n\n\t\t\t// Update main validation\n\t\t\tvalidationObject.isValid = validationObject.isValid && validationObject[ field.getFieldID() ].isValid;\n\t\t});\n\n\t\t// Return validation object\n\t\treturn validationObject;\n\t}\n}\n\nexport default FieldsGroup;\n\n\n// WEBPACK FOOTER //\n// ./src/components/FieldsGroup.js","import {\n\tisDefined,\n\tisEmpty\n} from './Utilities';\n\nimport Field from './Field';\n\nconst sortable = require( 'html5sortable' );\n\nclass FieldsRepeater {\n\tconstructor( attributes, createDOMelements = true, customValidationFunction = null ){\n\t\t// Save attributes\n\t\tthis.setAttributes( attributes );\n\n\t\t// Create fields\n\t\tthis.createFields();\n\t}\n\n\t/**\n\t * Set attributes. It add properties like hasValue, hasPlaceholder, etc, automatically\n\t * \n\t * @since 0.4\n\t *\n\t * @param  {object} attributes - The field attributes\n\t *\n\t * @return {object} attributes - The field attributes\n\t */\n\n\tsetAttributes( attributes ){\n\t\t// Has label\n\t\tif ( ! isDefined( attributes.hasLabel ) ){\n\t\t\tif ( ! isEmpty( attributes.label ) ){\n\t\t\t\tattributes.hasLabel = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattributes.hasLabel = false;\n\t\t\t}\n\t\t}\n\n\t\t// Has description\n\t\tif ( ! isDefined( attributes.hasDescription ) ){\n\t\t\tif ( ! isEmpty( attributes.description ) ){\n\t\t\t\tattributes.hasDescription = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattributes.hasDescription = false;\n\t\t\t}\n\t\t}\n\n\t\tthis.attributes = attributes;\n\t}\n\n\t/**\n\t * Create instances of Field\n\t *\n\t * @since  2.0\n\t *\n\t * @return undefined\n\t */\n\n\tcreateFields(){\n\t\t// Get fields template\n\t\tconst rowFieldsTemplate = this.attributes.fields;\n\n\t\t// Create array with fields\n\t\tlet fieldsRows = [];\n\n\t\t// Check if there is data and create multiple rows of the repeater field\n\t\tif ( Array.isArray( this.attributes.currentValue ) && this.attributes.currentValue.length > 0 ){\n\t\t\t// https://regex101.com/r/tLL7S9/1/\n\t\t\t// Get field id and index from strings like FIELD_1\n\n\t\t\t// Iterate default rows\n\t\t\tthis.attributes.currentValue.forEach(( row, index ) => {\n\t\t\t\t// Clone template row\n\t\t\t\tlet rowFields = JSON.parse( JSON.stringify( rowFieldsTemplate ) );\n\n\t\t\t\t// Iterate the rows in the template and try to get their\n\t\t\t\t// value from the \"row\" array\n\t\t\t\trowFields = rowFields.map(( field, index ) => {\n\t\t\t\t\t// Check if there is a value for this field\n\t\t\t\t\tif ( isDefined( row[ field.optionCode ] ) ){\n\t\t\t\t\t\t// Save value\n\t\t\t\t\t\tfield.currentValue = row[ field.optionCode ];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Set empty value\n\t\t\t\t\t\tfield.currentValue = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Return field\n\t\t\t\t\treturn field;\n\t\t\t\t});\n\n\t\t\t\t// Add row with fields\n\t\t\t\tfieldsRows.push( rowFields );\n\t\t\t});\n\t\t}\n\t\t// Otherwise, just create one row\n\t\telse {\n\t\t\t// Check if the field is required\n\t\t\tif ( this.attributes.isRequired ){\n\t\t\t\t// Create an empty row\n\t\t\t\tlet emptyRow = JSON.parse( JSON.stringify( rowFieldsTemplate ) );\n\n\t\t\t\t// Remove undefined current value\n\t\t\t\temptyRow.currentValue = '';\n\n\t\t\t\t// Add it to the main array\n\t\t\t\tfieldsRows.push( emptyRow );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Otherwise, do nothing\n\t\t\t}\n\t\t}\n\n\t\t// Now iterate the row with fields\n\t\tfieldsRows = fieldsRows.map(( row, index ) => {\n\t\t\t// Now iterate each group of fields\n\t\t\trow = row.map(( fieldObject, index ) => {\n\t\t\t\t// Remove the label\n\t\t\t\tfieldObject.label = '';\n\n\t\t\t\t// Remove the description\n\t\t\t\tfieldObject.description = '';\n\n\t\t\t\t// Create field\n\t\t\t\tlet field = new Field( fieldObject.fieldType, fieldObject );\n\n\t\t\t\t// Return field instance\n\t\t\t\treturn field;\n\t\t\t});\n\n\t\t\t// Return row\n\t\t\treturn row;\n\t\t});\n\n\t\t// Update the fields property\n\t\tthis.fieldRows = fieldsRows;\n\t}\n\n\t/**\n\t * Create a jQuery DOM element with the field\n\t *\n\t * @since 0.3\n\t */\n\n\tcreateFormElement(){\n\t\t// Create response object\n\t\tlet response = null;\n\n\t\t// Create container\n\t\tconst $container = $( `<div class=\"form-repeater\"></div>` );\n\n\t\t// Check if it has a label\n\t\tif ( this.attributes.hasLabel ){\n\t\t\t// Create label\n\t\t\tconst $label = $( `\n\t\t\t\t<div class=\"form-repeater__label\">\n\t\t\t\t\t${ this.attributes.label }\n\t\t\t\t\t${ this.attributes.isRequired ? `<span class=\"form-repeater__label-required\"></span>` : `` }\n\t\t\t\t</div>\n\t\t\t` );\n\n\t\t\t// Append label\n\t\t\t$container.append( $label );\n\t\t}\n\n\t\t// Create table with the fields\n\t\tlet $table = this.getFieldsTable();\n\t\t$container.append( $table );\n\n\t\t// Add error container\n\t\t$table.append( $( `<div class=\"form-element__error\"></div>` ) );\n\n\t\t// Check if it has a description\n\t\tif ( this.attributes.hasDescription ){\n\t\t\t// Create description\n\t\t\tconst $description = $( `<div class=\"form-repeater__description\">${ this.attributes.description }</div>` );\n\t\t\n\t\t\t// Append description\n\t\t\t$container.append( $description );\n\t\t}\n\n\t\t// Save form element\n\t\tthis.formElement = $container;\n\t\tresponse = $container;\n\n\t\t// If there is more than one row, make list sortable\n\t\tif ( this.fieldRows.length > 1 ){\n\t\t\tthis.makeRowsSortable();\n\t\t}\n\n\t\t// Listen save\n\t\tthis.listenSave();\n\n\t\t// Return form element\n\t\treturn response;\n\t}\n\n\t/**\n\t * Listen save\n\t */\n\n\tlistenSave(){\n\t\t// Get form element\n\t\tthis.formElement.on( 'saved', ( event ) => {\n\t\t\t// Update the fields array\n\t\t\tthis.updateAttributesFieldsFromRow();\n\t\t});\n\t}\n\n\t/**\n\t * Use fieldRows to update the original attributes.fields\n\t * We will use this to render the container again after it was\n\t * saved\n\t */\n\n\tupdateAttributesFieldsFromRow(){\n\t\t// Create the array where we're going to save the fields data\n\t\tlet fields = [];\n\n\t\t// Iterate fieldRows\n\t\tthis.fieldRows.forEach(( rowFields ) => {\n\t\t\t// Create array to save the row fields\n\t\t\tlet row = [];\n\n\t\t\t// Iterate row fields\n\t\t\trowFields.forEach(( Field ) => {\n\t\t\t\t// Add field\n\t\t\t\trow.push( Field.attributes );\n\t\t\t});\n\t\t\t\n\t\t\t// Add row\n\t\t\tfields.push( row );\n\t\t});\n\n\t\t// Update fields\n\t\tthis.attributes.fields = fields;\n\t}\n\n\t/**\n\t * Make list of rows sortable\n\t */\n\t\n\tmakeRowsSortable(){\n\t\t// Make rows sortable\n\t\t// Use sortable from the html5sortable library\n\t\tsortable( this.formElement.find( '.form-repeater-fields__table-rows' ), {\n\t\t\tforcePlaceholderSize: true,\n\t\t\thandle: '.form-repeater-fields__table-rows-cell--number',\n\t\t\tplaceholder: `<tr><td colspan=\"${ ( this.fieldRows[0].length + 2 ) }\">&nbsp;</td></tr>`,\n\t\t\titemSerializer: ( serializedItem, sortableContainer ) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: serializedItem.index,\n\t\t\t\t\thtml:     serializedItem.html\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Listen modifications to the rows order\n\t\tthis.formElement.find( '.form-repeater-fields__table-rows' ).on( 'sortupdate', ( event ) => {\n\t\t\t// Create an array where each element is the index of the row in the old order\n\t\t\tlet newOrder = [];\n\n\t\t\t// Iterate the rows (in their new order)\n\t\t\t$.each( event.detail.destination.items, ( index, row ) => {\n\t\t\t\tnewOrder.push( $( row ).data( 'order' ) );\n\t\t\t});\n\n\t\t\t// Change the order of the rows in the FieldRepeater instance\n\t\t\tlet newFieldRowsOrder = [];\n\t\t\tnewOrder.forEach(( oldIndex ) => {\n\t\t\t\tnewFieldRowsOrder.push( this.fieldRows[ oldIndex ] );\n\t\t\t});\n\t\t\tthis.fieldRows = newFieldRowsOrder;\n\n\t\t\t// Render the field agian\n\t\t\tthis.reRender();\n\t\t});\n\t}\n\n\t/**\n\t * Create and return fields table\n\t *\n\t * @since  2.0\n\t */\n\t\n\tgetFieldsTable(){\n\t\t// Create variable to save the table\n\t\tconst $table = $( `\n\t\t\t<div class=\"form-repeater-fields\">\n\t\t\t\t<table class=\"form-repeater-fields__table\">\n\t\t\t\t\t<thead class=\"form-repeater-fields__table-heading\"></thead>\n\t\t\t\t\t<tbody class=\"form-repeater-fields__table-rows\"></tbody>\n\t\t\t\t</table>\n\t\t\t\t<div class=\"form-repeater-fields__actions\"></div>\n\t\t\t</div>\n\t\t` );\n\n\t\t// Create table with the rows\n\t\t// Get table headers\n\t\t// We will create a table where the name of the column will\n\t\t// be the label of the field\n\t\tlet heading = [];\n\n\t\t// Iterate the original fields object inside attributes (not the Field instances)\n\t\tthis.attributes.fields.forEach(( fieldData, index ) => {\n\t\t\t// Get column title\n\t\t\tconst title = isDefined( fieldData.label ) ? fieldData.label : '';\n\n\t\t\t// Check if the fields under this column are required\n\t\t\tconst isRequired = isDefined( fieldData.isRequired ) ? fieldData.isRequired : false;\n\n\t\t\t// Get the column description\n\t\t\tconst description = isDefined( fieldData.description ) ? fieldData.description : '';\n\n\t\t\t// Add heading column\n\t\t\theading.push({\n\t\t\t\ttitle:       title,\n\t\t\t\tdescription: description,\n\t\t\t\tisRequired:  isRequired\n\t\t\t});\n\t\t});\n\n\t\t// Create HTML of the heading\n\t\tconst $heading = $( `<tr></tr>` );\n\n\t\t// Add the column with for the row number\n\t\t$heading.append( $( `<th class=\"form-repeater-fields__table-heading-cell form-repeater-fields__table-heading-cell--number\">#</th>` ) );\n\n\t\t// Iterate heading columns\n\t\theading.forEach(( headingColumn, index ) => {\n\t\t\t// Create column\n\t\t\tlet $headingColumn = $( `<th class=\"form-repeater-fields__table-heading-cell\"></th>` );\n\n\t\t\t// Add the title\n\t\t\tif ( ! isEmpty( headingColumn.title ) ){\n\t\t\t\t$headingColumn.append( $( `\n\t\t\t\t\t<div class=\"form-repeater-fields__table-heading-cell-title\">\n\t\t\t\t\t\t${ headingColumn.title }\n\t\t\t\t\t\t${ headingColumn.isRequired ? `<span class=\"form-repeater-fields__table-heading-cell-required\"></span>` : `` }\n\t\t\t\t\t</div>\n\t\t\t\t` ) );\n\t\t\t}\n\n\t\t\t// Add the description\n\t\t\tif ( ! isEmpty( headingColumn.description ) ){\n\t\t\t\t$headingColumn.append( $( `\n\t\t\t\t\t<div class=\"form-repeater-fields__table-heading-cell-description\">\n\t\t\t\t\t\t${ headingColumn.description }\n\t\t\t\t\t</div>\n\t\t\t\t` ) );\n\t\t\t}\n\n\t\t\t// Add heading column\n\t\t\t$heading.append( $headingColumn );\n\t\t});\n\n\t\t// Add the column with for the actions\n\t\t$heading.append( $( `<th class=\"form-repeater-fields__table-heading-cell form-repeater-fields__table-heading-cell--actions\"></th>` ) );\n\n\t\t// Append heading\n\t\tconst $headingContainer = $table.find( '.form-repeater-fields__table-heading' );\n\t\t$headingContainer.append( $heading );\n\n\t\t// Create HTML of the rows\n\t\tconst $rows = $table.find( '.form-repeater-fields__table-rows' );\n\n\t\t// Get number of rows\n\t\tconst numberOfRows = this.fieldRows.length;\n\n\t\t// Iterate rows of fields\n\t\tthis.fieldRows.forEach(( row, index ) => {\n\t\t\t// Create container for the row\n\t\t\tconst $row = $( `<tr data-order=\"${ index }\"></tr>` );\n\n\t\t\t// Add the column with for the row number\n\t\t\t$row.append( $( `<td class=\"form-repeater-fields__table-rows-cell form-repeater-fields__table-rows-cell--number\">${ ( index + 1 ) }</td>` ) );\n\n\t\t\t// Add fields\n\t\t\trow.forEach(( Field, index ) => {\n\t\t\t\t// Create container\n\t\t\t\tconst $fieldCell = $( `<td class=\"form-repeater-fields__table-rows-cell\"></td>` );\n\n\t\t\t\t// Get field's DOM element\n\t\t\t\tconst $field = Field.getFormElement();\n\t\t\t\t// Make sure all the libraries had been initialized\n\t\t\t\tField.initLibraries();\n\n\t\t\t\t// Add field container\n\t\t\t\t$fieldCell.append( $field );\n\n\t\t\t\t// Append field cell to the row\n\t\t\t\t$row.append( $fieldCell );\n\t\t\t});\n\n\t\t\t// Add the column for the actions, and add the delete button\n\t\t\tconst $actions = $( `<td class=\"form-repeater-fields__table-rows-cell form-repeater-fields__table-rows-cell--actions\"></td>` );\n\t\t\t$row.append( $actions );\n\n\t\t\t// Check if the field requires at least on row and if this is the first row\n\t\t\tif ( index != 0 || ( index == 0 && ( ! this.attributes.isRequired || numberOfRows > 1 ) ) ){\n\t\t\t\t// Check if there is a custom \"Remove row\" label. If there is one,\n\t\t\t\t// use that, otherwise use the default one\n\t\t\t\tlet removeRowLabel = isDefined( this.attributes.removeRowButtonLabel ) ? this.attributes.removeRowButtonLabel : UncannyAutomator.i18n.removeRow;\n\n\t\t\t\t// Create delete button\n\t\t\t\tconst $removeRowButton = $( `<div class=\"form-repeater-fields__table-rows-cell-remove\" uap-tooltip=\"${ removeRowLabel }\"><span></span></div>` );\n\n\t\t\t\t// Listen clicks to the remove button\n\t\t\t\t$removeRowButton.on( 'click', () => {\n\t\t\t\t\t// Remove the row by index\n\t\t\t\t\tthis.deleteRow( index );\n\t\t\t\t});\n\n\t\t\t\t// Add remove button to the actions cell\n\t\t\t\t$actions.append( $removeRowButton );\n\t\t\t}\n\n\t\t\t// Add $row to the $rows element\n\t\t\t$rows.append( $row );\n\t\t});\n\n\t\t// Create \"Add row\" button\n\t\tconst $addRowButton = $( `\n\t\t\t<div class=\"uap-btn uap-btn--primary uap-btn--small\">\n\t\t\t\t${ UncannyAutomator.i18n.addRow }\n\t\t\t</div>\n\t\t` );\n\n\t\t// Check if we have to change label of the button\n\t\tif ( isDefined( this.attributes.addRowButtonLabel ) ){\n\t\t\t$addRowButton.text( this.attributes.addRowButtonLabel );\n\t\t}\n\n\t\t// Listen clicks\n\t\t$addRowButton.on( 'click', () => {\n\t\t\t// Add another row\n\t\t\tthis.addRow();\n\t\t});\n\n\t\t// Add actions\n\t\tconst $actionsContainer = $table.find( '.form-repeater-fields__actions' );\n\t\t$actionsContainer.append( $addRowButton );\n\n\t\treturn $table;\n\t}\n\n\t/**\n\t * Get value\n\t *\n\t * @since  2.0\n\t *\n\t * @return {object} Object where the key is the field ID and the value is the field's value\n\t */\n\t\n\tgetValue(){\n\t\t// Create object where we're going to save the values\n\t\tlet value = [];\n\n\t\t// Iterate rows\n\t\tthis.fieldRows.forEach(( row, index ) => {\n\t\t\t// Get the value of the fields\n\t\t\tlet fieldsValue = {}\n\n\t\t\t// Iterate fields\n\t\t\trow.forEach(( Field, index ) => {\n\t\t\t\t// Add it to the fieldsValue object\n\t\t\t\tfieldsValue[ Field.getFieldID() ] = Field.getValue();\n\t\t\t});\n\n\t\t\t// Add fields value to the main array\n\t\t\tvalue.push( fieldsValue );\n\t\t});\n\n\t\t// Return value\n\t\treturn value;\n\t}\n\n\t/**\n\t * Add row\n\t *\n\t * @since  2.0\n\t */\n\t\n\taddRow( fieldsData = {}, reRender = true ){\n\t\t// Create an empty row\n\t\tlet emptyRow = JSON.parse( JSON.stringify( this.attributes.fields ) );\n\n\t\t// Remove undefined current value\n\t\temptyRow.currentValue = '';\n\n\t\t// Now iterate the fields\n\t\temptyRow = emptyRow.map(( fieldObject, index ) => {\n\t\t\t// Remove the label\n\t\t\tfieldObject.label = '';\n\n\t\t\t// Remove the description\n\t\t\tfieldObject.description = '';\n\n\t\t\t// Check if there is a default value for this field\n\t\t\tif ( isDefined( fieldsData[ fieldObject.optionCode ] ) ){\n\t\t\t\t// And if there is, use that data\n\t\t\t\tfieldObject.currentValue = fieldsData[ fieldObject.optionCode ];\n\t\t\t}\n\n\t\t\t// Create field\n\t\t\tlet field = new Field( fieldObject.fieldType, fieldObject );\n\n\t\t\t// Return field instance\n\t\t\treturn field;\n\t\t});\n\n\t\t// Add it to the rows of fields\n\t\tthis.fieldRows.push( emptyRow );\n\n\t\t// Render form element again\n\t\tif ( reRender ){\n\t\t\tthis.reRender();\n\t\t}\n\t}\n\n\t/**\n\t * Rerender the field again\n\t */\n\n\treRender(){\n\t\tthis.formElement.replaceWith( this.createFormElement() );\n\t}\n\n\t/**\n\t * Delete row\n\t *\n\t * @since  2.0\n\t */\n\t\n\tdeleteRow( index ){\n\t\t// Check if there is a row with that index\n\t\tif ( isDefined( this.fieldRows[ index ] ) ){\n\t\t\t// Remove element\n\t\t\tthis.fieldRows.splice( index, 1 );\n\t\t}\n\n\t\t// Render form element again\n\t\tthis.formElement.replaceWith( this.createFormElement() );\n\t}\n\n\t/**\n\t * Get form element\n\t * \n\t * @since 2.0\n\t *\n\t * @return {object} jQuery object of the field's container\n\t */\n\n\tgetFormElement(){\n\t\t// Return form element\n\t\treturn this.formElement;\n\t}\n\n\t/**\n\t * Get attributes\n\t * \n\t * @since 2.0\n\t *\n\t * @return {object} Field attributes\n\t */\n\n\tgetAttributes(){\n\t\treturn this.attributes;\n\t}\n\n\t/**\n\t * Get field ID\n\t * \n\t * @since 2.0\n\t *\n\t * @return {string} The field ID\n\t */\n\n\tgetFieldID(){\n\t\treturn this.attributes.optionCode;\n\t}\n\n\t/**\n\t * Validate the fields\n\t * \n\t * @since 2.0\n\t *\n\t * @param  {boolean} renderError - TRUE if you want to render the field errors, FALSE if you only want to return the response object\n\t *\n\t * @return {object} Object where the key is the field ID and the value is a validateField object\n\t */\n\t\n\tvalidate( renderError = true ){\n\t\t// Create validation object\n\t\tlet validation = {\n\t\t\tisValid: true,\n\t\t\tmessage: ''\n\t\t}\n\n\t\t// Create array to save the validation of the rows\n\t\tlet rowsValidation = [];\n\n\t\t// Iterate fields\n\t\tthis.fieldRows.forEach(( row, index ) => {\n\t\t\t// Create object to save the row validation\n\t\t\tlet rowValidation = {}\n\n\t\t\t// Iterate each field\n\t\t\trow.forEach(( Field, index ) => {\n\t\t\t\t// Validate and add response to the validation object\n\t\t\t\trowValidation[ Field.getFieldID() ] = Field.validate( renderError );\n\n\t\t\t\t// Update global validation\n\t\t\t\tvalidation.isValid = validation.isValid && rowValidation[ Field.getFieldID() ].isValid;\n\t\t\t});\n\n\t\t\t// Add row validation to the main validation array\n\t\t\trowsValidation.push( rowValidation );\n\t\t});\n\n\t\t// Return validation object\n\t\treturn validation;\n\t}\n}\n\nexport default FieldsRepeater;\n\n\n// WEBPACK FOOTER //\n// ./src/components/FieldsRepeater.js","/*\n * HTML5Sortable package\n * https://github.com/lukasoppermann/html5sortable\n *\n * Maintained by Lukas Oppermann <lukas@vea.re>\n *\n * Released under the MIT license.\n */\n'use strict';\n\n/**\n * Get or set data on element\n * @param {HTMLElement} element\n * @param {string} key\n * @param {any} value\n * @return {*}\n */\nfunction addData(element, key, value) {\n    if (value === undefined) {\n        return element && element.h5s && element.h5s.data && element.h5s.data[key];\n    }\n    else {\n        element.h5s = element.h5s || {};\n        element.h5s.data = element.h5s.data || {};\n        element.h5s.data[key] = value;\n    }\n}\n/**\n * Remove data from element\n * @param {HTMLElement} element\n */\nfunction removeData(element) {\n    if (element.h5s) {\n        delete element.h5s.data;\n    }\n}\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {NodeList|HTMLCollection|Array} nodes\n * @param {String} selector\n * @returns {Array}\n */\nvar _filter = (function (nodes, selector) {\n    if (!(nodes instanceof NodeList || nodes instanceof HTMLCollection || nodes instanceof Array)) {\n        throw new Error('You must provide a nodeList/HTMLCollection/Array of elements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return Array.from(nodes);\n    }\n    return Array.from(nodes).filter(function (item) { return item.nodeType === 1 && item.matches(selector); });\n});\n\n/* eslint-env browser */\nvar stores = new Map();\n/**\n * Stores data & configurations per Sortable\n * @param {Object} config\n */\nvar Store = /** @class */ (function () {\n    function Store() {\n        this._config = new Map(); // eslint-disable-line no-undef\n        this._placeholder = undefined; // eslint-disable-line no-undef\n        this._data = new Map(); // eslint-disable-line no-undef\n    }\n    Object.defineProperty(Store.prototype, \"config\", {\n        /**\n         * get the configuration map of a class instance\n         * @method config\n         * @return {object}\n         */\n        get: function () {\n            // transform Map to object\n            var config = {};\n            this._config.forEach(function (value, key) {\n                config[key] = value;\n            });\n            // return object\n            return config;\n        },\n        /**\n         * set the configuration of a class instance\n         * @method config\n         * @param {object} config object of configurations\n         */\n        set: function (config) {\n            if (typeof config !== 'object') {\n                throw new Error('You must provide a valid configuration object to the config setter.');\n            }\n            // combine config with default\n            var mergedConfig = Object.assign({}, config);\n            // add config to map\n            this._config = new Map(Object.entries(mergedConfig));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * set individual configuration of a class instance\n     * @method setConfig\n     * @param  key valid configuration key\n     * @param  value any value\n     * @return void\n     */\n    Store.prototype.setConfig = function (key, value) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Trying to set invalid configuration item: \" + key);\n        }\n        // set config\n        this._config.set(key, value);\n    };\n    /**\n     * get an individual configuration of a class instance\n     * @method getConfig\n     * @param  key valid configuration key\n     * @return any configuration value\n     */\n    Store.prototype.getConfig = function (key) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Invalid configuration item requested: \" + key);\n        }\n        return this._config.get(key);\n    };\n    Object.defineProperty(Store.prototype, \"placeholder\", {\n        /**\n         * get the placeholder for a class instance\n         * @method placeholder\n         * @return {HTMLElement|null}\n         */\n        get: function () {\n            return this._placeholder;\n        },\n        /**\n         * set the placeholder for a class instance\n         * @method placeholder\n         * @param {HTMLElement} placeholder\n         * @return {void}\n         */\n        set: function (placeholder) {\n            if (!(placeholder instanceof HTMLElement) && placeholder !== null) {\n                throw new Error('A placeholder must be an html element or null.');\n            }\n            this._placeholder = placeholder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * set an data entry\n     * @method setData\n     * @param {string} key\n     * @param {any} value\n     * @return {void}\n     */\n    Store.prototype.setData = function (key, value) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        this._data.set(key, value);\n    };\n    /**\n     * get an data entry\n     * @method getData\n     * @param {string} key an existing key\n     * @return {any}\n     */\n    Store.prototype.getData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.get(key);\n    };\n    /**\n     * delete an data entry\n     * @method deleteData\n     * @param {string} key an existing key\n     * @return {boolean}\n     */\n    Store.prototype.deleteData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.delete(key);\n    };\n    return Store;\n}());\n/**\n * @param {HTMLElement} sortableElement\n * @returns {Class: Store}\n */\nvar store = (function (sortableElement) {\n    // if sortableElement is wrong type\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('Please provide a sortable to the store function.');\n    }\n    // create new instance if not avilable\n    if (!stores.has(sortableElement)) {\n        stores.set(sortableElement, new Store());\n    }\n    // return instance\n    return stores.get(sortableElement);\n});\n\n/**\n * @param {Array|HTMLElement} element\n * @param {Function} callback\n * @param {string} event\n */\nfunction addEventListener(element, eventName, callback) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addEventListener(element[i], eventName, callback);\n        }\n        return;\n    }\n    element.addEventListener(eventName, callback);\n    store(element).setData(\"event\" + eventName, callback);\n}\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} eventName\n */\nfunction removeEventListener(element, eventName) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeEventListener(element[i], eventName);\n        }\n        return;\n    }\n    element.removeEventListener(eventName, store(element).getData(\"event\" + eventName));\n    store(element).deleteData(\"event\" + eventName);\n}\n\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction addAttribute(element, attribute, value) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addAttribute(element[i], attribute, value);\n        }\n        return;\n    }\n    element.setAttribute(attribute, value);\n}\n/**\n * @param {Array|HTMLElement} element\n * @param {string} attribute\n */\nfunction removeAttribute(element, attribute) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeAttribute(element[i], attribute);\n        }\n        return;\n    }\n    element.removeAttribute(attribute);\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {Object}\n */\nvar _offset = (function (element) {\n    if (!element.parentElement || element.getClientRects().length === 0) {\n        throw new Error('target element must be part of the dom');\n    }\n    var rect = element.getClientRects()[0];\n    return {\n        left: rect.left + window.pageXOffset,\n        right: rect.right + window.pageXOffset,\n        top: rect.top + window.pageYOffset,\n        bottom: rect.bottom + window.pageYOffset\n    };\n});\n\n/**\n * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n * @param {Function} func to debounce\n * @param {number} time to wait before calling function with latest arguments, 0 - no debounce\n * @returns {function} - debounced function\n */\nvar _debounce = (function (func, wait) {\n    if (wait === void 0) { wait = 0; }\n    var timeout;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        clearTimeout(timeout);\n        timeout = setTimeout(function () {\n            func.apply(void 0, args);\n        }, wait);\n    };\n});\n\n/* eslint-env browser */\n/**\n * Get position of the element relatively to its sibling elements\n * @param {HTMLElement} element\n * @returns {number}\n */\nvar _index = (function (element, elementList) {\n    if (!(element instanceof HTMLElement) || !(elementList instanceof NodeList || elementList instanceof HTMLCollection || elementList instanceof Array)) {\n        throw new Error('You must provide an element and a list of elements.');\n    }\n    return Array.from(elementList).indexOf(element);\n});\n\n/* eslint-env browser */\n/**\n * Test whether element is in DOM\n * @param {HTMLElement} element\n * @returns {boolean}\n */\nvar isInDom = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('Element is not a node element.');\n    }\n    return element.parentNode !== null;\n});\n\n/* eslint-env browser */\n/**\n * Insert node before or after target\n * @param {HTMLElement} referenceNode - reference element\n * @param {HTMLElement} newElement - element to be inserted\n * @param {String} position - insert before or after reference element\n */\nvar insertNode = function (referenceNode, newElement, position) {\n    if (!(referenceNode instanceof HTMLElement) || !(referenceNode.parentElement instanceof HTMLElement)) {\n        throw new Error('target and element must be a node');\n    }\n    referenceNode.parentElement.insertBefore(newElement, (position === 'before' ? referenceNode : referenceNode.nextElementSibling));\n};\n/**\n * Insert before target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertBefore = function (target, element) { return insertNode(target, element, 'before'); };\n/**\n * Insert after target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertAfter = function (target, element) { return insertNode(target, element, 'after'); };\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {HTMLElement} sortableContainer\n * @param {Function} customSerializer\n * @returns {Array}\n */\nvar _serialize = (function (sortableContainer, customItemSerializer, customContainerSerializer) {\n    if (customItemSerializer === void 0) { customItemSerializer = function (serializedItem, sortableContainer) { return serializedItem; }; }\n    if (customContainerSerializer === void 0) { customContainerSerializer = function (serializedContainer) { return serializedContainer; }; }\n    // check for valid sortableContainer\n    if (!(sortableContainer instanceof HTMLElement) || !sortableContainer.isSortable === true) {\n        throw new Error('You need to provide a sortableContainer to be serialized.');\n    }\n    // check for valid serializers\n    if (typeof customItemSerializer !== 'function' || typeof customContainerSerializer !== 'function') {\n        throw new Error('You need to provide a valid serializer for items and the container.');\n    }\n    // get options\n    var options = addData(sortableContainer, 'opts');\n    var item = options.items;\n    // serialize container\n    var items = _filter(sortableContainer.children, item);\n    var serializedItems = items.map(function (item) {\n        return {\n            parent: sortableContainer,\n            node: item,\n            html: item.outerHTML,\n            index: _index(item, items)\n        };\n    });\n    // serialize container\n    var container = {\n        node: sortableContainer,\n        itemCount: serializedItems.length\n    };\n    return {\n        container: customContainerSerializer(container),\n        items: serializedItems.map(function (item) { return customItemSerializer(item, sortableContainer); })\n    };\n});\n\n/* eslint-env browser */\n/**\n * create a placeholder element\n * @param {HTMLElement} sortableElement a single sortable\n * @param {string|undefined} placeholder a string representing an html element\n * @param {string} placeholderClasses a string representing the classes that should be added to the placeholder\n */\nvar _makePlaceholder = (function (sortableElement, placeholder, placeholderClass) {\n    var _a;\n    if (placeholderClass === void 0) { placeholderClass = 'sortable-placeholder'; }\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('You must provide a valid element as a sortable.');\n    }\n    // if placeholder is not an element\n    if (!(placeholder instanceof HTMLElement) && placeholder !== undefined) {\n        throw new Error('You must provide a valid element as a placeholder or set ot to undefined.');\n    }\n    // if no placeholder element is given\n    if (placeholder === undefined) {\n        if (['UL', 'OL'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('li');\n        }\n        else if (['TABLE', 'TBODY'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('tr');\n            // set colspan to always all rows, otherwise the item can only be dropped in first column\n            placeholder.innerHTML = '<td colspan=\"100\"></td>';\n        }\n        else {\n            placeholder = document.createElement('div');\n        }\n    }\n    // add classes to placeholder\n    if (typeof placeholderClass === 'string') {\n        (_a = placeholder.classList).add.apply(_a, placeholderClass.split(' '));\n    }\n    return placeholder;\n});\n\n/* eslint-env browser */\n/**\n * Get height of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar _getElementHeight = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // pick applicable properties, convert to int and reduce by adding\n    return ['height', 'padding-top', 'padding-bottom']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * Get width of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar _getElementWidth = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // pick applicable properties, convert to int and reduce by adding\n    return ['width', 'padding-left', 'padding-right']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * get handle or return item\n * @param {Array<HTMLElement>} items\n * @param {string} selector\n */\nvar _getHandles = (function (items, selector) {\n    if (!(items instanceof Array)) {\n        throw new Error('You must provide a Array of HTMLElements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return items;\n    }\n    return items\n        // remove items without handle from array\n        .filter(function (item) {\n        return item.querySelector(selector) instanceof HTMLElement ||\n            (item.shadowRoot && item.shadowRoot.querySelector(selector) instanceof HTMLElement);\n    })\n        // replace item with handle in array\n        .map(function (item) {\n        return item.querySelector(selector) || (item.shadowRoot && item.shadowRoot.querySelector(selector));\n    });\n});\n\n/**\n * @param {Event} event\n * @returns {HTMLElement}\n */\nvar getEventTarget = (function (event) {\n    return (event.composedPath && event.composedPath()[0]) || event.target;\n});\n\n/* eslint-env browser */\n/**\n * defaultDragImage returns the current item as dragged image\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {object} elementOffset - an object with the offsets top, left, right & bottom\n * @param {Event} event - the original drag event object\n * @return {object} with element, posX and posY properties\n */\nvar defaultDragImage = function (draggedElement, elementOffset, event) {\n    return {\n        element: draggedElement,\n        posX: event.pageX - elementOffset.left,\n        posY: event.pageY - elementOffset.top\n    };\n};\n/**\n * attaches an element as the drag image to an event\n * @param {Event} event - the original drag event object\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {Function} customDragImage - function to create a custom dragImage\n * @return void\n */\nvar setDragImage = (function (event, draggedElement, customDragImage) {\n    // check if event is provided\n    if (!(event instanceof Event)) {\n        throw new Error('setDragImage requires a DragEvent as the first argument.');\n    }\n    // check if draggedElement is provided\n    if (!(draggedElement instanceof HTMLElement)) {\n        throw new Error('setDragImage requires the dragged element as the second argument.');\n    }\n    // set default function of none provided\n    if (!customDragImage) {\n        customDragImage = defaultDragImage;\n    }\n    // check if setDragImage method is available\n    if (event.dataTransfer && event.dataTransfer.setDragImage) {\n        // get the elements offset\n        var elementOffset = _offset(draggedElement);\n        // get the dragImage\n        var dragImage = customDragImage(draggedElement, elementOffset, event);\n        // check if custom function returns correct values\n        if (!(dragImage.element instanceof HTMLElement) || typeof dragImage.posX !== 'number' || typeof dragImage.posY !== 'number') {\n            throw new Error('The customDragImage function you provided must return and object with the properties element[string], posX[integer], posY[integer].');\n        }\n        // needs to be set for HTML5 drag & drop to work\n        event.dataTransfer.effectAllowed = 'copyMove';\n        // Firefox requires it to use the event target's id for the data\n        event.dataTransfer.setData('text/plain', getEventTarget(event).id);\n        // set the drag image on the event\n        event.dataTransfer.setDragImage(dragImage.element, dragImage.posX, dragImage.posY);\n    }\n});\n\n/**\n * Check if curList accepts items from destList\n * @param {sortable} destination the container an item is move to\n * @param {sortable} origin the container an item comes from\n */\nvar _listsConnected = (function (destination, origin) {\n    // check if valid sortable\n    if (destination.isSortable === true) {\n        var acceptFrom = store(destination).getConfig('acceptFrom');\n        // check if acceptFrom is valid\n        if (acceptFrom !== null && acceptFrom !== false && typeof acceptFrom !== 'string') {\n            throw new Error('HTML5Sortable: Wrong argument, \"acceptFrom\" must be \"null\", \"false\", or a valid selector string.');\n        }\n        if (acceptFrom !== null) {\n            return acceptFrom !== false && acceptFrom.split(',').filter(function (sel) {\n                return sel.length > 0 && origin.matches(sel);\n            }).length > 0;\n        }\n        // drop in same list\n        if (destination === origin) {\n            return true;\n        }\n        // check if lists are connected with connectWith\n        if (store(destination).getConfig('connectWith') !== undefined && store(destination).getConfig('connectWith') !== null) {\n            return store(destination).getConfig('connectWith') === store(origin).getConfig('connectWith');\n        }\n    }\n    return false;\n});\n\n/**\n * default configurations\n */\nvar defaultConfiguration = {\n    items: null,\n    // deprecated\n    connectWith: null,\n    // deprecated\n    disableIEFix: null,\n    acceptFrom: null,\n    copy: false,\n    placeholder: null,\n    placeholderClass: 'sortable-placeholder',\n    draggingClass: 'sortable-dragging',\n    hoverClass: false,\n    debounce: 0,\n    throttleTime: 100,\n    maxItems: 0,\n    itemSerializer: undefined,\n    containerSerializer: undefined,\n    customDragImage: null,\n    orientation: 'vertical'\n};\n\n/**\n * make sure a function is only called once within the given amount of time\n * @param {Function} fn the function to throttle\n * @param {number} threshold time limit for throttling\n */\n// must use function to keep this context\nfunction _throttle (fn, threshold) {\n    var _this = this;\n    if (threshold === void 0) { threshold = 250; }\n    // check function\n    if (typeof fn !== 'function') {\n        throw new Error('You must provide a function as the first argument for throttle.');\n    }\n    // check threshold\n    if (typeof threshold !== 'number') {\n        throw new Error('You must provide a number as the second argument for throttle.');\n    }\n    var lastEventTimestamp = null;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var now = Date.now();\n        if (lastEventTimestamp === null || now - lastEventTimestamp >= threshold) {\n            lastEventTimestamp = now;\n            fn.apply(_this, args);\n        }\n    };\n}\n\n/* eslint-env browser */\n/**\n * enable or disable hoverClass on mouseenter/leave if container Items\n * @param {sortable} sortableContainer a valid sortableContainer\n * @param {boolean} enable enable or disable event\n */\n// export default (sortableContainer: sortable, enable: boolean) => {\nvar enableHoverClass = (function (sortableContainer, enable) {\n    if (typeof store(sortableContainer).getConfig('hoverClass') === 'string') {\n        var hoverClasses_1 = store(sortableContainer).getConfig('hoverClass').split(' ');\n        // add class on hover\n        if (enable === true) {\n            addEventListener(sortableContainer, 'mousemove', _throttle(function (event) {\n                // check of no mouse button was pressed when mousemove started == no drag\n                if (event.buttons === 0) {\n                    _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                        var _a, _b;\n                        if (item !== event.target) {\n                            (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                        }\n                        else {\n                            (_b = item.classList).add.apply(_b, hoverClasses_1);\n                        }\n                    });\n                }\n            }, store(sortableContainer).getConfig('throttleTime')));\n            // remove class on leave\n            addEventListener(sortableContainer, 'mouseleave', function () {\n                _filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                    var _a;\n                    (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                });\n            });\n            // remove events\n        }\n        else {\n            removeEventListener(sortableContainer, 'mousemove');\n            removeEventListener(sortableContainer, 'mouseleave');\n        }\n    }\n});\n\n/* eslint-env browser */\n/*\n * variables global to the plugin\n */\nvar dragging;\nvar draggingHeight;\nvar draggingWidth;\n/*\n * Keeps track of the initialy selected list, where 'dragstart' event was triggered\n * It allows us to move the data in between individual Sortable List instances\n */\n// Origin List - data from before any item was changed\nvar originContainer;\nvar originIndex;\nvar originElementIndex;\nvar originItemsBeforeUpdate;\n// Previous Sortable Container - we dispatch as sortenter event when a\n// dragged item enters a sortableContainer for the first time\nvar previousContainer;\n// Destination List - data from before any item was changed\nvar destinationItemsBeforeUpdate;\n/**\n * remove event handlers from items\n * @param {Array|NodeList} items\n */\nvar _removeItemEvents = function (items) {\n    removeEventListener(items, 'dragstart');\n    removeEventListener(items, 'dragend');\n    removeEventListener(items, 'dragover');\n    removeEventListener(items, 'dragenter');\n    removeEventListener(items, 'drop');\n    removeEventListener(items, 'mouseenter');\n    removeEventListener(items, 'mouseleave');\n};\n/**\n * _getDragging returns the current element to drag or\n * a copy of the element.\n * Is Copy Active for sortable\n * @param {HTMLElement} draggedItem - the item that the user drags\n * @param {HTMLElement} sortable a single sortable\n */\nvar _getDragging = function (draggedItem, sortable) {\n    var ditem = draggedItem;\n    if (store(sortable).getConfig('copy') === true) {\n        ditem = draggedItem.cloneNode(true);\n        addAttribute(ditem, 'aria-copied', 'true');\n        draggedItem.parentElement.appendChild(ditem);\n        ditem.style.display = 'none';\n        ditem.oldDisplay = draggedItem.style.display;\n    }\n    return ditem;\n};\n/**\n * Remove data from sortable\n * @param {HTMLElement} sortable a single sortable\n */\nvar _removeSortableData = function (sortable) {\n    removeData(sortable);\n    removeAttribute(sortable, 'aria-dropeffect');\n};\n/**\n * Remove data from items\n * @param {Array<HTMLElement>|HTMLElement} items\n */\nvar _removeItemData = function (items) {\n    removeAttribute(items, 'aria-grabbed');\n    removeAttribute(items, 'aria-copied');\n    removeAttribute(items, 'draggable');\n    removeAttribute(items, 'role');\n};\n/**\n * find sortable from element. travels up parent element until found or null.\n * @param {HTMLElement} element a single sortable\n * @param {Event} event - the current event. We need to pass it to be able to\n * find Sortable whith shadowRoot (document fragment has no parent)\n */\nfunction findSortable(element, event) {\n    if (event.composedPath) {\n        return event.composedPath().find(function (el) { return el.isSortable; });\n    }\n    while (element.isSortable !== true) {\n        element = element.parentElement;\n    }\n    return element;\n}\n/**\n * Dragging event is on the sortable element. finds the top child that\n * contains the element.\n * @param {HTMLElement} sortableElement a single sortable\n * @param {HTMLElement} element is that being dragged\n */\nfunction findDragElement(sortableElement, element) {\n    var options = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, options.items);\n    var itemlist = items.filter(function (ele) {\n        return ele.contains(element) || (ele.shadowRoot && ele.shadowRoot.contains(element));\n    });\n    return itemlist.length > 0 ? itemlist[0] : element;\n}\n/**\n * Destroy the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _destroySortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts') || {};\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    // remove event handlers & data from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'dragstart');\n    removeEventListener(sortableElement, 'dragend');\n    removeEventListener(sortableElement, 'drop');\n    // remove event data from sortable\n    _removeSortableData(sortableElement);\n    // remove event handlers & data from items\n    removeEventListener(handles, 'mousedown');\n    _removeItemEvents(items);\n    _removeItemData(items);\n    // clear sortable flag\n    sortableElement.isSortable = false;\n};\n/**\n * Enable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _enableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'move');\n    addData(sortableElement, '_disabled', 'false');\n    addAttribute(handles, 'draggable', 'true');\n    // @todo: remove this fix\n    // IE FIX for ghost\n    // can be disabled as it has the side effect that other events\n    // (e.g. click) will be ignored\n    if (opts.disableIEFix === false) {\n        var spanEl = (document || window.document).createElement('span');\n        if (typeof spanEl.dragDrop === 'function') {\n            addEventListener(handles, 'mousedown', function () {\n                if (items.indexOf(this) !== -1) {\n                    this.dragDrop();\n                }\n                else {\n                    var parent = this.parentElement;\n                    while (items.indexOf(parent) === -1) {\n                        parent = parent.parentElement;\n                    }\n                    parent.dragDrop();\n                }\n            });\n        }\n    }\n};\n/**\n * Disable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar _disableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'none');\n    addData(sortableElement, '_disabled', 'true');\n    addAttribute(handles, 'draggable', 'false');\n    removeEventListener(handles, 'mousedown');\n};\n/**\n * Reload the sortable\n * @param {HTMLElement} sortableElement a single sortable\n * @description events need to be removed to not be double bound\n */\nvar _reloadSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = _filter(sortableElement.children, opts.items);\n    var handles = _getHandles(items, opts.handle);\n    addData(sortableElement, '_disabled', 'false');\n    // remove event handlers from items\n    _removeItemEvents(items);\n    removeEventListener(handles, 'mousedown');\n    // remove event handlers from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'drop');\n};\n/**\n * Public sortable object\n * @param {Array|NodeList} sortableElements\n * @param {object|string} options|method\n */\nfunction sortable(sortableElements, options) {\n    // get method string to see if a method is called\n    var method = String(options);\n    options = options || {};\n    // check if the user provided a selector instead of an element\n    if (typeof sortableElements === 'string') {\n        sortableElements = document.querySelectorAll(sortableElements);\n    }\n    // if the user provided an element, return it in an array to keep the return value consistant\n    if (sortableElements instanceof HTMLElement) {\n        sortableElements = [sortableElements];\n    }\n    sortableElements = Array.prototype.slice.call(sortableElements);\n    if (/serialize/.test(method)) {\n        return sortableElements.map(function (sortableContainer) {\n            var opts = addData(sortableContainer, 'opts');\n            return _serialize(sortableContainer, opts.itemSerializer, opts.containerSerializer);\n        });\n    }\n    sortableElements.forEach(function (sortableElement) {\n        if (/enable|disable|destroy/.test(method)) {\n            return sortable[method](sortableElement);\n        }\n        // log deprecation\n        ['connectWith', 'disableIEFix'].forEach(function (configKey) {\n            if (Object.prototype.hasOwnProperty.call(options, configKey) && options[configKey] !== null) {\n                console.warn(\"HTML5Sortable: You are using the deprecated configuration \\\"\" + configKey + \"\\\". This will be removed in an upcoming version, make sure to migrate to the new options when updating.\");\n            }\n        });\n        // merge options with default options\n        options = Object.assign({}, defaultConfiguration, store(sortableElement).config, options);\n        // init data store for sortable\n        store(sortableElement).config = options;\n        // set options on sortable\n        addData(sortableElement, 'opts', options);\n        // property to define as sortable\n        sortableElement.isSortable = true;\n        // reset sortable\n        _reloadSortable(sortableElement);\n        // initialize\n        var listItems = _filter(sortableElement.children, options.items);\n        // create element if user defined a placeholder element as a string\n        var customPlaceholder;\n        if (options.placeholder !== null && options.placeholder !== undefined) {\n            var tempContainer = document.createElement(sortableElement.tagName);\n            if (options.placeholder instanceof HTMLElement) {\n                tempContainer.appendChild(options.placeholder);\n            }\n            else {\n                tempContainer.innerHTML = options.placeholder;\n            }\n            customPlaceholder = tempContainer.children[0];\n        }\n        // add placeholder\n        store(sortableElement).placeholder = _makePlaceholder(sortableElement, customPlaceholder, options.placeholderClass);\n        addData(sortableElement, 'items', options.items);\n        if (options.acceptFrom) {\n            addData(sortableElement, 'acceptFrom', options.acceptFrom);\n        }\n        else if (options.connectWith) {\n            addData(sortableElement, 'connectWith', options.connectWith);\n        }\n        _enableSortable(sortableElement);\n        addAttribute(listItems, 'role', 'option');\n        addAttribute(listItems, 'aria-grabbed', 'false');\n        // enable hover class\n        enableHoverClass(sortableElement, true);\n        /*\n         Handle drag events on draggable items\n         Handle is set at the sortableElement level as it will bubble up\n         from the item\n         */\n        addEventListener(sortableElement, 'dragstart', function (e) {\n            // ignore dragstart events\n            var target = getEventTarget(e);\n            if (target.isSortable === true) {\n                return;\n            }\n            e.stopImmediatePropagation();\n            if ((options.handle && !target.matches(options.handle)) || target.getAttribute('draggable') === 'false') {\n                return;\n            }\n            var sortableContainer = findSortable(target, e);\n            var dragItem = findDragElement(sortableContainer, target);\n            // grab values\n            originItemsBeforeUpdate = _filter(sortableContainer.children, options.items);\n            originIndex = originItemsBeforeUpdate.indexOf(dragItem);\n            originElementIndex = _index(dragItem, sortableContainer.children);\n            originContainer = sortableContainer;\n            // add transparent clone or other ghost to cursor\n            setDragImage(e, dragItem, options.customDragImage);\n            // cache selsection & add attr for dragging\n            draggingHeight = _getElementHeight(dragItem);\n            draggingWidth = _getElementWidth(dragItem);\n            dragItem.classList.add(options.draggingClass);\n            dragging = _getDragging(dragItem, sortableContainer);\n            addAttribute(dragging, 'aria-grabbed', 'true');\n            // dispatch sortstart event on each element in group\n            sortableContainer.dispatchEvent(new CustomEvent('sortstart', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging,\n                    originalTarget: target\n                }\n            }));\n        });\n        /*\n         We are capturing targetSortable before modifications with 'dragenter' event\n        */\n        addEventListener(sortableElement, 'dragenter', function (e) {\n            var target = getEventTarget(e);\n            var sortableContainer = findSortable(target, e);\n            if (sortableContainer && sortableContainer !== previousContainer) {\n                destinationItemsBeforeUpdate = _filter(sortableContainer.children, addData(sortableContainer, 'items'))\n                    .filter(function (item) { return item !== store(sortableElement).placeholder; });\n                sortableContainer.dispatchEvent(new CustomEvent('sortenter', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer\n                        },\n                        destination: {\n                            container: sortableContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate\n                        },\n                        item: dragging,\n                        originalTarget: target\n                    }\n                }));\n            }\n            previousContainer = sortableContainer;\n        });\n        /*\n         * Dragend Event - https://developer.mozilla.org/en-US/docs/Web/Events/dragend\n         * Fires each time dragEvent end, or ESC pressed\n         * We are using it to clean up any draggable elements and placeholders\n         */\n        addEventListener(sortableElement, 'dragend', function (e) {\n            if (!dragging) {\n                return;\n            }\n            dragging.classList.remove(options.draggingClass);\n            addAttribute(dragging, 'aria-grabbed', 'false');\n            if (dragging.getAttribute('aria-copied') === 'true' && addData(dragging, 'dropped') !== 'true') {\n                dragging.remove();\n            }\n            dragging.style.display = dragging.oldDisplay;\n            delete dragging.oldDisplay;\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) { return data.placeholder; })\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                .filter(isInDom)[0];\n            if (visiblePlaceholder) {\n                visiblePlaceholder.remove();\n            }\n            // dispatch sortstart event on each element in group\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            previousContainer = null;\n            dragging = null;\n            draggingHeight = null;\n            draggingWidth = null;\n        });\n        /*\n         * Drop Event - https://developer.mozilla.org/en-US/docs/Web/Events/drop\n         * Fires when valid drop target area is hit\n         */\n        addEventListener(sortableElement, 'drop', function (e) {\n            if (!_listsConnected(sortableElement, dragging.parentElement)) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            addData(dragging, 'dropped', 'true');\n            // get the one placeholder that is currently visible\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) {\n                return data.placeholder;\n            })\n                // filter only HTMLElements\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                // filter only elements in DOM\n                .filter(isInDom)[0];\n            // attach element after placeholder\n            insertAfter(visiblePlaceholder, dragging);\n            // remove placeholder from dom\n            visiblePlaceholder.remove();\n            /*\n             * Fires Custom Event - 'sortstop'\n             */\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            var placeholder = store(sortableElement).placeholder;\n            var originItems = _filter(originContainer.children, options.items)\n                .filter(function (item) { return item !== placeholder; });\n            var destinationContainer = this.isSortable === true ? this : this.parentElement;\n            var destinationItems = _filter(destinationContainer.children, addData(destinationContainer, 'items'))\n                .filter(function (item) { return item !== placeholder; });\n            var destinationElementIndex = _index(dragging, Array.from(dragging.parentElement.children)\n                .filter(function (item) { return item !== placeholder; }));\n            var destinationIndex = _index(dragging, destinationItems);\n            /*\n             * When a list item changed container lists or index within a list\n             * Fires Custom Event - 'sortupdate'\n             */\n            if (originElementIndex !== destinationElementIndex || originContainer !== destinationContainer) {\n                sortableElement.dispatchEvent(new CustomEvent('sortupdate', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer,\n                            itemsBeforeUpdate: originItemsBeforeUpdate,\n                            items: originItems\n                        },\n                        destination: {\n                            index: destinationIndex,\n                            elementIndex: destinationElementIndex,\n                            container: destinationContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate,\n                            items: destinationItems\n                        },\n                        item: dragging\n                    }\n                }));\n            }\n        });\n        var debouncedDragOverEnter = _debounce(function (sortableElement, element, pageX, pageY) {\n            if (!dragging) {\n                return;\n            }\n            // set placeholder height if forcePlaceholderSize option is set\n            if (options.forcePlaceholderSize) {\n                store(sortableElement).placeholder.style.height = draggingHeight + 'px';\n                store(sortableElement).placeholder.style.width = draggingWidth + 'px';\n            }\n            // if element the draggedItem is dragged onto is within the array of all elements in list\n            // (not only items, but also disabled, etc.)\n            if (Array.from(sortableElement.children).indexOf(element) > -1) {\n                var thisHeight = _getElementHeight(element);\n                var thisWidth = _getElementWidth(element);\n                var placeholderIndex = _index(store(sortableElement).placeholder, element.parentElement.children);\n                var thisIndex = _index(element, element.parentElement.children);\n                // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n                if (thisHeight > draggingHeight || thisWidth > draggingWidth) {\n                    // Dead zone?\n                    var deadZoneVertical = thisHeight - draggingHeight;\n                    var deadZoneHorizontal = thisWidth - draggingWidth;\n                    var offsetTop = _offset(element).top;\n                    var offsetLeft = _offset(element).left;\n                    if (placeholderIndex < thisIndex &&\n                        ((options.orientation === 'vertical' && pageY < offsetTop) ||\n                            (options.orientation === 'horizontal' && pageX < offsetLeft))) {\n                        return;\n                    }\n                    if (placeholderIndex > thisIndex &&\n                        ((options.orientation === 'vertical' && pageY > offsetTop + thisHeight - deadZoneVertical) ||\n                            (options.orientation === 'horizontal' && pageX > offsetLeft + thisWidth - deadZoneHorizontal))) {\n                        return;\n                    }\n                }\n                if (dragging.oldDisplay === undefined) {\n                    dragging.oldDisplay = dragging.style.display;\n                }\n                if (dragging.style.display !== 'none') {\n                    dragging.style.display = 'none';\n                }\n                // To avoid flicker, determine where to position the placeholder\n                // based on where the mouse pointer is relative to the elements\n                // vertical center.\n                var placeAfter = false;\n                try {\n                    var elementMiddleVertical = _offset(element).top + element.offsetHeight / 2;\n                    var elementMiddleHorizontal = _offset(element).left + element.offsetWidth / 2;\n                    placeAfter = (options.orientation === 'vertical' && (pageY >= elementMiddleVertical)) ||\n                        (options.orientation === 'horizontal' && (pageX >= elementMiddleHorizontal));\n                }\n                catch (e) {\n                    placeAfter = placeholderIndex < thisIndex;\n                }\n                if (placeAfter) {\n                    insertAfter(element, store(sortableElement).placeholder);\n                }\n                else {\n                    insertBefore(element, store(sortableElement).placeholder);\n                }\n                // get placeholders from all stores & remove all but current one\n                Array.from(stores.values())\n                    // remove empty values\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    // foreach placeholder in array if outside of current sorableContainer -> remove from DOM\n                    .forEach(function (data) {\n                    if (data.placeholder !== store(sortableElement).placeholder) {\n                        data.placeholder.remove();\n                    }\n                });\n            }\n            else {\n                // get all placeholders from store\n                var placeholders = Array.from(stores.values())\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    .map(function (data) {\n                    return data.placeholder;\n                });\n                // check if element is not in placeholders\n                if (placeholders.indexOf(element) === -1 && sortableElement === element && !_filter(element.children, options.items).length) {\n                    placeholders.forEach(function (element) { return element.remove(); });\n                    element.appendChild(store(sortableElement).placeholder);\n                }\n            }\n        }, options.debounce);\n        // Handle dragover and dragenter events on draggable items\n        var onDragOverEnter = function (e) {\n            var element = e.target;\n            var sortableElement = element.isSortable === true ? element : findSortable(element, e);\n            element = findDragElement(sortableElement, element);\n            if (!dragging || !_listsConnected(sortableElement, dragging.parentElement) || addData(sortableElement, '_disabled') === 'true') {\n                return;\n            }\n            var options = addData(sortableElement, 'opts');\n            if (parseInt(options.maxItems) && _filter(sortableElement.children, addData(sortableElement, 'items')).length >= parseInt(options.maxItems) && dragging.parentElement !== sortableElement) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            e.dataTransfer.dropEffect = store(sortableElement).getConfig('copy') === true ? 'copy' : 'move';\n            debouncedDragOverEnter(sortableElement, element, e.pageX, e.pageY);\n        };\n        addEventListener(listItems.concat(sortableElement), 'dragover', onDragOverEnter);\n        addEventListener(listItems.concat(sortableElement), 'dragenter', onDragOverEnter);\n    });\n    return sortableElements;\n}\nsortable.destroy = function (sortableElement) {\n    _destroySortable(sortableElement);\n};\nsortable.enable = function (sortableElement) {\n    _enableSortable(sortableElement);\n};\nsortable.disable = function (sortableElement) {\n    _disableSortable(sortableElement);\n};\n/* START.TESTS_ONLY */\nsortable.__testing = {\n    // add internal methods here for testing purposes\n    _data: addData,\n    _removeItemEvents: _removeItemEvents,\n    _removeItemData: _removeItemData,\n    _removeSortableData: _removeSortableData\n};\n\nmodule.exports = sortable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/html5sortable/dist/html5sortable.cjs.js\n// module id = 25\n// module chunks = 0","/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sprintf-js/src/sprintf.js\n// module id = 26\n// module chunks = 0","import {\n\tuserSelectorObject,\n\trecipeObject,\n\trestCall,\n\tgetDOMElements,\n\tisDefined,\n\tisEmpty,\n\tvsprintf\n} from './Utilities';\n\nimport Field from './Field.js';\n\nimport Actions from './Actions';\n\nimport RecipeNotices from './RecipeNotices';\n\nclass UserSelector {\n\tconstructor(){\n\t\t// On page load, get current step\n\t\tUncannyAutomator.recipe.userSelector.step = userSelectorObject( 'get-step' );\n\n\t\t// Render\n\t\tthis.render();\n\t}\n\n\trender(){\n\t\t// Create variable to save the content to be added\n\t\tlet $content = ``;\n\n\t\t// Get content depending of the step\n\t\tswitch ( UncannyAutomator.recipe.userSelector.step ){\n\t\t\tcase 'select-source':\n\t\t\t\t// Set validation to false\n\t\t\t\t// We're setting it to false here in case the user already\n\t\t\t\t// has valid values, but wanted to go to the first step\n\t\t\t\t// to change the source\n\t\t\t\tUncannyAutomator.recipe.userSelector.isValid = false;\n\n\t\t\t\t// Validate recipe\n\t\t\t\trecipeObject( 'validate' );\n\n\t\t\t\t// Where the recipe creator select the source of the user.\n\t\t\t\t// The options are \"Existing user\" and \"New user\".\n\t\t\t\t$content = this.getSelectSourceNodes();\n\t\t\t\tbreak;\n\n\t\t\tcase 'set-options':\n\t\t\t\t// Where the recipe creator defines values of the fields\n\t\t\t\t$content = this.getOptionsNodes();\n\t\t\t\tbreak;\n\n\t\t\tcase 'show-sentence':\n\t\t\t\t// Validate recipe\n\t\t\t\trecipeObject( 'validate' );\n\n\t\t\t\t// Set error mode\n\t\t\t\tUncannyAutomator.recipe.errorMode = false;\n\n\t\t\t\t// Show error\n\t\t\t\tnew RecipeNotices();\n\n\t\t\t\t// When the data is complete and valid.\n\t\t\t\t$content = this.getSentenceNodes();\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Get container\n\t\tlet $metabox = getDOMElements( 'metabox', {\n            type: 'action'\n        });\n\n        console.log( '%cRender User Selector', 'background: red; color: #fff; padding: 2px 10px;');\n\n        // Append content\n        $metabox.prepend( $content );\n\t}\n\n\tgetSelectSourceNodes(){\n\t\t// Create elements\n\t\tlet $userSelector = $( `\n\t\t\t<div class=\"user-selector\">\n\t\t\t\t<div class=\"item item--user-selector\">\n\t\t\t\t\t<div class=\"item__content\">\n\t\t\t\t\t\t<div class=\"item-integrations\">\n\t\t\t\t\t\t\t<div class=\"item-integration user-selector-option user-selector-option--existing-user\" data-source=\"existingUser\">\n\t\t\t\t\t\t\t\t<div class=\"item-integration__logo\"></div>\n\t\t\t\t\t\t\t\t<div class=\"item-integration__name\">\n\t\t\t\t\t\t\t\t\t${ UncannyAutomator.i18n.userSelector.userType.existing }\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"item-integration user-selector-option user-selector-option--new-user\" data-source=\"newUser\">\n\t\t\t\t\t\t\t\t<div class=\"item-integration__logo\"></div>\n\t\t\t\t\t\t\t\t<div class=\"item-integration__name\">\n\t\t\t\t\t\t\t\t\t${ UncannyAutomator.i18n.userSelector.userType.new }\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t\t` );\n\n\t\t// Add header\n\t\t$userSelector.find( '.item' ).prepend( this.getHeaderNodes() );\n\n\t\t// Get user type boxes\n\t\tlet $userTypeButtons = $userSelector.find( '.user-selector-option' );\n\n\t\t// Bind click on the user type buttons\n\t\t$userTypeButtons.on( 'click', ( event ) => {\n\t\t\t// Get clicked button\n\t\t\tlet $option = $( event.currentTarget );\n\n\t\t\t// Get user type\n\t\t\tlet userSource = $option.data( 'source' );\n\t\t\t\n\t\t\t// Save selected source in main object\n\t\t\tuserSelectorObject( 'set-source', {\n\t\t\t\tsource: userSource\n\t\t\t});\n\n\t\t\t// Define next step\n\t\t\tUncannyAutomator.recipe.userSelector.step = 'set-options';\n\n\t\t\t// Render the actions metabox again\n\t\t\tnew Actions();\n\t\t});\n\n\t\t// Return element\n\t\treturn $userSelector;\n\t}\n\n\tgetOptionsNodes(){\n\t\t// Create elements\n\t\tlet $optionsContainer = $( `\n\t\t\t<div class=\"user-selector\">\n\t\t\t\t<div class=\"item item--user-selector\">\n\t\t\t\t\t<div class=\"item__content\">\n\t\t\t\t\t\t<div class=\"item-options\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t` );\n\n\t\t// Add header\n\t\t$optionsContainer.find( '.item' ).prepend( this.getHeaderNodes() );\n\n\t\t// Get options container, we will add the fields there\n\t\tlet $fieldsContainer = $optionsContainer.find( '.item-options' );\n\n\t\t// Add fields\n\t\t$fieldsContainer.append( this.getOptionsFields() );\n\n\t\t// Return node\n\t\treturn $optionsContainer;\n\t}\n\n\tgetOptionsFields(){\n\t\t// Create container\n\t\tconst $container = $( `<div></div>` );\n\n\t\t// Create the fields container\n\t\tlet $fields = $( `<div class=\"item-options__group\"></div>` );\n\n\t\t// Create array to save all the fields\n\t\tlet optionsFields = [];\n\n\t\t// Update fields data object so it's an object and not an array\n\t\tuserSelectorObject( 'update-fields', {\n\t\t\tsource: 'existingUser',\n\t\t\tfields: {}\n\t\t});\n\n\t\tuserSelectorObject( 'update-fields', {\n\t\t\tsource: 'newUser',\n\t\t\tfields: {}\n\t\t});\n\n\t\t// Get WordPress roles, but remove the \"administrator\" one\n\t\tlet roles = UncannyAutomator.recipe.userSelector.resources.roles;\n\t\tdelete roles.administrator;\n\n\t\t// Check what's the source\n\t\tswitch ( UncannyAutomator.recipe.userSelector.source ){\n\t\t\tcase 'existingUser':\n\t\t\t\t// Create group\n\t\t\t\tlet $groupOfFields = $( `<div class=\"user-selector__field-group user-selector__field-group--two-columns\"></div>` );\n\n\t\t\t\t// Create \"Unique field\" field\n\t\t\t\tlet uniqueField = new Field( 'select', {\n\t\t\t\t\titemType: 'user-selector',\n\t\t\t\t\toptionCode: 'uniqueField',\n\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.existingUser.uniqueFieldLabel,\n\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.fields.existingUser.uniqueField,\n\t\t\t\t\tisRequired: true,\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: 'email',\n\t\t\t\t\t\t\ttext:  UncannyAutomator.i18n.userSelector.existingUser.uniqueFieldOptionEmail\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: 'id',\n\t\t\t\t\t\t\ttext:  UncannyAutomator.i18n.userSelector.existingUser.uniqueFieldOptionId\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: 'username',\n\t\t\t\t\t\t\ttext:  UncannyAutomator.i18n.userSelector.existingUser.uniqueFieldOptionUsername\n\t\t\t\t\t\t},\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t\toptionsFields.push( uniqueField );\n\n\t\t\t\t// Create value field\n\t\t\t\tlet valueField = new Field( 'text', {\n\t\t\t\t\titemType: 'user-selector',\n\t\t\t\t\toptionCode: 'uniqueFieldValue',\n\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.fields.existingUser.uniqueFieldValue,\n\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.existingUser.valueFieldLabel,\n\t\t\t\t\tplaceholder: UncannyAutomator.i18n.userSelector.existingUser.valueFieldPlaceholder,\n\t\t\t\t\tisRequired: true,\n\t\t\t\t\tsupportsTokens: true\n\t\t\t\t});\n\t\t\t\toptionsFields.push( valueField );\n\n\t\t\t\t// Create and add form element\n\t\t\t\tlet $uniqueFieldFormElement = uniqueField.getFormElement();\n\t\t\t\t$groupOfFields.append( $uniqueFieldFormElement );\n\n\t\t\t\tlet $valueFieldFormElement = valueField.getFormElement();\n\t\t\t\t$groupOfFields.append( $valueFieldFormElement );\n\n\t\t\t\t// Add elements to the main container\n\t\t\t\t$fields.append( $groupOfFields );\n\n\t\t\t\t// Create field to decide what to do if the user doesn't exist\n\t\t\t\tlet fallbackField = new Field( 'radio', {\n\t\t\t\t\titemType: 'user-selector',\n\t\t\t\t\toptionCode: 'fallback',\n\t\t\t\t\tname: 'user-selector-existing-user-fallback',\n\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.existingUser.createNewUserFieldLabel,\n\t\t\t\t\tisRequired: true,\n\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.fields.existingUser.fallback,\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: 'create-new-user',\n\t\t\t\t\t\t\ttext: UncannyAutomator.i18n.userSelector.existingUser.createNewUserFieldOptionCreateUser\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: 'do-nothing',\n\t\t\t\t\t\t\ttext: UncannyAutomator.i18n.userSelector.existingUser.createNewUserFieldOptionDoNothing\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t\toptionsFields.push( fallbackField );\n\n\t\t\t\t// Create and add form element\n\t\t\t\tlet $fallbackFieldFormElement = fallbackField.getFormElement();\n\t\t\t\t$fields.append( $fallbackFieldFormElement );\n\n\t\t\t\t// Listen changes\n\t\t\t\t$uniqueFieldFormElement.on( 'automator:field:change', () => {\n\t\t\t\t\t// Get and save value\n\t\t\t\t\tuserSelectorObject( 'update-fields', {\n\t\t\t\t\t\tsource: 'existingUser',\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tuniqueField: uniqueField.getValue()\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t$valueFieldFormElement.on( 'automator:field:change', () => {\n\t\t\t\t\t// Get and save value\n\t\t\t\t\tuserSelectorObject( 'update-fields', {\n\t\t\t\t\t\tsource: 'existingUser',\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tuniqueFieldValue: valueField.getValue()\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t// Listen changes\n\t\t\t\t$fallbackFieldFormElement.on( 'automator:field:change', () => {\n\t\t\t\t\t// Get and save value\n\t\t\t\t\tuserSelectorObject( 'update-fields', {\n\t\t\t\t\t\tsource: 'existingUser',\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tfallback: fallbackField.getValue()\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// Render the actions metabox again\n\t\t\t\t\tnew Actions();\n\t\t\t\t});\n\n\t\t\t\t// Check if we have to add more fields or the do-nothing notice\n\t\t\t\tif ( UncannyAutomator.recipe.userSelector.fields.existingUser.fallback == 'do-nothing' ){\n\t\t\t\t\t// Create \"Do nothing\" notice\n\t\t\t\t\tconst $doNothingNotice = $( `\n\t\t\t\t\t\t<div class=\"user-selector__warning\">\n\t\t\t\t\t\t\t${ UncannyAutomator.i18n.userSelector.existingUser.doNothingMessage }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t` );\n\n\t\t\t\t\t$fields.append( $doNothingNotice );\n\t\t\t\t}\n\t\t\t\telse if ( UncannyAutomator.recipe.userSelector.fields.existingUser.fallback == 'create-new-user' ){\n\t\t\t\t\t// Create container\n\t\t\t\t\tlet $subOptionsContainer = $( '<div/>', {\n\t\t\t\t\t\t'class': 'item-options'\n\t\t\t\t\t});\n\n\t\t\t\t\t// Create new users fields\n\t\t\t\t\tlet newUserFields = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\t\toptionCode: 'firstName',\n\t\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.fields.existingUser.firstName,\n\t\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.firstName,\n\t\t\t\t\t\t\tisRequired: false,\n\t\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\t\toptionCode: 'lastName',\n\t\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.fields.existingUser.lastName,\n\t\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.lastName,\n\t\t\t\t\t\t\tisRequired: false,\n\t\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\t\toptionCode: 'email',\n\t\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.fields.existingUser.email,\n\t\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.email,\n\t\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\t\toptionCode: 'username',\n\t\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.fields.existingUser.username,\n\t\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.username,\n\t\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\t\toptionCode: 'displayName',\n\t\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.fields.existingUser.displayName,\n\t\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.displayName,\n\t\t\t\t\t\t\tisRequired: false,\n\t\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\t\toptionCode: 'password',\n\t\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.fields.existingUser.password,\n\t\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.password,\n\t\t\t\t\t\t\tdescription: UncannyAutomator.i18n.userSelector.newUser.passwordDescription,\n\t\t\t\t\t\t\tisRequired: false,\n\t\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\t\tfieldType:  'select',\n\t\t\t\t\t\t\toptionCode: 'role',\n\t\t\t\t\t\t\tcurrentValue: ! isEmpty( UncannyAutomator.recipe.userSelector.fields.existingUser.role ) ? UncannyAutomator.recipe.userSelector.fields.existingUser.role : 'subscriber',\n\t\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.role,\n\t\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\t\tsupportsTokens: false,\n\t\t\t\t\t\t\toptions: Object.keys( roles ).map( ( key, index ) => {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tvalue: key,\n\t\t\t\t\t\t\t\t\ttext:  roles[ key ]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titemType: 'user-selector',\n\t\t\t\t\t\t\tfieldType: 'radio',\n\t\t\t\t\t\t\toptionCode: 'logUserIn',\n\t\t\t\t\t\t\tname: 'logUserIn',\n\t\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.canLogNewUserIn ? 'no' : ( ! isEmpty( UncannyAutomator.recipe.userSelector.fields.existingUser.logUserIn ) ? UncannyAutomator.recipe.userSelector.fields.existingUser.logUserIn : 'no' ),\n\t\t\t\t\t\t\tisHidden: UncannyAutomator.recipe.canLogNewUserIn,\n\t\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.logUserIn,\n\t\t\t\t\t\t\tsupportsTokens: false,\n\t\t\t\t\t\t\toptions: [{\n\t\t\t\t\t\t\t\t\tvalue: 'yes',\n\t\t\t\t\t\t\t\t\ttext:  UncannyAutomator.i18n.yes\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalue: 'no',\n\t\t\t\t\t\t\t\t\ttext:  UncannyAutomator.i18n.no\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\n\t\t\t\t\t// Create fields\n\t\t\t\t\tnewUserFields.forEach(( fieldObject ) => {\n\t\t\t\t\t\t// Create field\n\t\t\t\t\t\tconst field = new Field( fieldObject.fieldType, fieldObject );\n\n\t\t\t\t\t\t// Get container\n\t\t\t\t\t\tlet $fieldFormElement = field.getFormElement();\n\t\t\t\t\t\t$subOptionsContainer.append( $fieldFormElement );\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * We don't need this for now, but we could need it in the future\n\t\t\t\t\t\t * \n\n\t\t\t\t\t\t// Listen changes\n\t\t\t\t\t\t$fieldFormElement.on( 'automator:field:change', () => {\n\t\t\t\t\t\t\t// Get ID\n\t\t\t\t\t\t\tconst fieldId = fieldObject.optionCode;\n\n\t\t\t\t\t\t\t// Get value\n\t\t\t\t\t\t\tconst value = field.getValue();\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t*/\n\n\t\t\t\t\t\t// Save field\n\t\t\t\t\t\toptionsFields.push( field );\n\t\t\t\t\t});\n\n\t\t\t\t\t// Append container\n\t\t\t\t\t$fields.append( $subOptionsContainer );\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'newUser':\n\t\t\t\t// Create new users fields\n\t\t\t\tlet newUserFields = [\n\t\t\t\t\t{\n\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\toptionCode: 'firstName',\n\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.fields.newUser.firstName,\n\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.firstName,\n\t\t\t\t\t\tisRequired: false,\n\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\toptionCode: 'lastName',\n\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.fields.newUser.lastName,\n\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.lastName,\n\t\t\t\t\t\tisRequired: false,\n\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\toptionCode: 'email',\n\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.fields.newUser.email,\n\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.email,\n\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\toptionCode: 'username',\n\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.fields.newUser.username,\n\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.username,\n\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\toptionCode: 'displayName',\n\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.fields.newUser.displayName,\n\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.displayName,\n\t\t\t\t\t\tisRequired: false,\n\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\toptionCode: 'password',\n\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.fields.newUser.password,\n\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.password,\n\t\t\t\t\t\tdescription: UncannyAutomator.i18n.userSelector.newUser.passwordDescription,\n\t\t\t\t\t\tisRequired: false,\n\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\tfieldType:  'select',\n\t\t\t\t\t\toptionCode: 'role',\n\t\t\t\t\t\tcurrentValue: ! isEmpty( UncannyAutomator.recipe.userSelector.fields.newUser.role ) ? UncannyAutomator.recipe.userSelector.fields.newUser.role : 'subscriber',\n\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.role,\n\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\tsupportsTokens: false,\n\t\t\t\t\t\toptions: Object.keys( roles ).map( ( key, index ) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tvalue: key,\n\t\t\t\t\t\t\t\ttext:  roles[ key ]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\titemType: 'user-selector',\n\t\t\t\t\t\tfieldType: 'radio',\n\t\t\t\t\t\toptionCode: 'logUserIn',\n\t\t\t\t\t\tname: 'logUserIn',\n\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.canLogNewUserIn ? 'no' : ( ! isEmpty( UncannyAutomator.recipe.userSelector.fields.existingUser.logUserIn ) ? UncannyAutomator.recipe.userSelector.fields.existingUser.logUserIn : 'no' ),\n\t\t\t\t\t\tisHidden: ! UncannyAutomator.recipe.canLogNewUserIn,\n\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.logUserIn,\n\t\t\t\t\t\tsupportsTokens: false,\n\t\t\t\t\t\toptions: [{\n\t\t\t\t\t\t\t\tvalue: 'yes',\n\t\t\t\t\t\t\t\ttext:  UncannyAutomator.i18n.yes\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: 'no',\n\t\t\t\t\t\t\t\ttext:  UncannyAutomator.i18n.no\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t\t// Create fields\n\t\t\t\tnewUserFields.forEach(( fieldObject ) => {\n\t\t\t\t\t// Create field\n\t\t\t\t\tconst field = new Field( fieldObject.fieldType, fieldObject );\n\n\t\t\t\t\t// Get container\n\t\t\t\t\tlet $fieldFormElement = field.getFormElement();\n\t\t\t\t\t$fields.append( $fieldFormElement );\n\n\t\t\t\t\t// Save field\n\t\t\t\t\toptionsFields.push( field );\n\t\t\t\t});\n\n\t\t\t\t// Create fallback field\n\t\t\t\tlet newUserFallbackField = new Field( 'radio', {\n\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\toptionCode: 'fallback',\n\t\t\t\t\tname: 'user-selector-new-user-fallback',\n\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.existingUserFieldLabel,\n\t\t\t\t\tisRequired: true,\n\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.fields.newUser.fallback,\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: 'select-existing-user',\n\t\t\t\t\t\t\ttext: UncannyAutomator.i18n.userSelector.newUser.existingUserFieldOptionExisting\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: 'do-nothing',\n\t\t\t\t\t\t\ttext: UncannyAutomator.i18n.userSelector.newUser.existingUserFieldOptionDoNothing\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t\toptionsFields.push( newUserFallbackField );\n\n\t\t\t\t// Add fallback field to the container\n\t\t\t\tlet $newUserfallbackFieldFormElement = newUserFallbackField.getFormElement();\n\t\t\t\t$fields.append( $newUserfallbackFieldFormElement );\n\n\t\t\t\t// Listen changes\n\t\t\t\t$newUserfallbackFieldFormElement.on( 'automator:field:change', () => {\n\t\t\t\t\t// Update the value of all the fields (don't validate them yet)\n\t\t\t\t\tlet fieldsValues = {};\n\n\t\t\t\t\t// Iterate fields\n\t\t\t\t\toptionsFields.forEach(( Field ) => {\n\t\t\t\t\t\t// Save the field using the optionCode as ID and field value as value\n\t\t\t\t\t\tfieldsValues[ Field.getAttributes().optionCode ] = Field.getValue();\n\t\t\t\t\t});\n\n\t\t\t\t\t// Get and save value\n\t\t\t\t\tuserSelectorObject( 'update-fields', {\n\t\t\t\t\t\tsource: 'newUser',\n\t\t\t\t\t\tfields: fieldsValues\n\t\t\t\t\t});\n\n\t\t\t\t\t// Render the actions metabox again\n\t\t\t\t\tnew Actions();\n\t\t\t\t});\n\n\t\t\t\t// Check if we have to add more fields or the do-nothing notice\n\t\t\t\tif ( UncannyAutomator.recipe.userSelector.fields.newUser.fallback == 'do-nothing' ){\n\t\t\t\t\t// Create \"Do nothing\" notice\n\t\t\t\t\tconst $doNothingNotice = $( `\n\t\t\t\t\t\t<div class=\"user-selector__warning\">\n\t\t\t\t\t\t\t${ UncannyAutomator.i18n.userSelector.newUser.doNothingMessage }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t` );\n\n\t\t\t\t\t$fields.append( $doNothingNotice );\n\t\t\t\t}\n\t\t\t\telse if ( UncannyAutomator.recipe.userSelector.fields.newUser.fallback == 'select-existing-user' ){\n\t\t\t\t\t// Create container\n\t\t\t\t\tlet $subOptionsContainer = $( '<div/>', {\n\t\t\t\t\t\t'class': 'item-options'\n\t\t\t\t\t});\n\n\t\t\t\t\t// Create \"Prioritized Field\" field\n\t\t\t\t\tlet prioritizedField = new Field( 'select', {\n\t\t\t\t\t\titemType:     'user-selector',\n\t\t\t\t\t\toptionCode:   'prioritizedField',\n\t\t\t\t\t\tlabel:        UncannyAutomator.i18n.userSelector.newUser.prioritizedFieldLabel,\n\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.fields.newUser.prioritizedField,\n\t\t\t\t\t\tdefaultValue: 'email',\n\t\t\t\t\t\tdescription:  UncannyAutomator.i18n.userSelector.newUser.prioritizedFieldDescription,\n\t\t\t\t\t\tisRequired:   true,\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: 'email',\n\t\t\t\t\t\t\t\ttext:  UncannyAutomator.i18n.userSelector.newUser.email\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: 'username',\n\t\t\t\t\t\t\t\ttext:  UncannyAutomator.i18n.userSelector.newUser.username\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t});\n\t\t\t\t\toptionsFields.push( prioritizedField );\n\n\t\t\t\t\t// Get field container\n\t\t\t\t\tlet $prioritizedField = prioritizedField.getFormElement();\n\t\t\t\t\t$subOptionsContainer.append( $prioritizedField );\n\n\t\t\t\t\t// Append container\n\t\t\t\t\t$fields.append( $subOptionsContainer );\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Add fields\n\t\t$container.append( $fields );\n\n\t\t// Create and add save and cancel buttons\n\t\tconst $buttonsContainer = $( `<div class=\"item-options__buttons\"></div>` );\n\n\t\t// Save button\n\t\tconst $saveButton = $( `<div class=\"uap-btn uap-btn--primary\">${ UncannyAutomator.i18n.save }</div>` );\n\t\tconst $cancelButton = $( `<div class=\"uap-btn uap-btn--secondary\">${ UncannyAutomator.i18n.cancel }</div>` );\n\n\t\t// Add listeners\n\t\t// On save\n\t\t$saveButton.on( 'click', () => {\n\t\t\t// Validate fields\n\t\t\t// Create default response\n\t\t\tlet areAllFieldsValid = true;\n\n\t\t\t// Create object to get all the fields values\n\t\t\tlet fieldsValues = {}\n\n\t\t\t// Iterate fields and validate them\n\t\t\toptionsFields.forEach(( Field ) => {\n\t\t\t\t// Get field validation\n\t\t\t\tconst isFieldValid = Field.validate().isValid;\n\n\t\t\t\t// Update global validation\n\t\t\t\tareAllFieldsValid = areAllFieldsValid && isFieldValid;\n\n\t\t\t\t// Check if the field is valid\n\t\t\t\tif ( isFieldValid ){\n\t\t\t\t\t// Save value\n\t\t\t\t\tfieldsValues[ Field.getAttributes().optionCode ] = Field.getValue();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Save values\n\t\t\tuserSelectorObject( 'update-fields', {\n\t\t\t\tsource: UncannyAutomator.recipe.userSelector.source,\n\t\t\t\tfields: fieldsValues\n\t\t\t});\n\n\t\t\t// Check if all fields are valid, otherwise\n\t\t\t// do nothing. The .validate() method will\n\t\t\t// render the errors\n\t\t\tif ( areAllFieldsValid ){\n\t\t\t\t// Add loading class to button\n\t\t\t\t$saveButton.addClass( 'uap-btn--primary uap-btn--loading uap-btn--disabled' );\n\n\t\t\t\t// Make request\n\t\t\t\trestCall( 'user-selector', {\n\t\t\t\t\trecipeId: UncannyAutomator.recipe.id,\n\t\t\t\t\tsource: UncannyAutomator.recipe.userSelector.source,\n\t\t\t\t\tfields: UncannyAutomator.recipe.userSelector.fields[ UncannyAutomator.recipe.userSelector.source ]\n\t\t\t\t}, ( response ) => {\n\t\t\t\t\t// On success\n\t\t\t\t\t// Set user selector as valid\n\t\t\t\t\tUncannyAutomator.recipe.userSelector.isValid = true;\n\n\t\t\t\t\t// Set step\n\t\t\t\t\tuserSelectorObject( 'set-step', {\n\t\t\t\t\t\tstep: 'show-sentence'\n\t\t\t\t\t});\n\n\t\t\t\t\t// Render actions again\n\t\t\t\t\tnew Actions();\n\t\t\t\t}, ( response ) => {\n\t\t\t\t\t// On error\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// On cancel\n\t\t$cancelButton.on( 'click', () => {\n\t\t\t// Delete fields information\n\t\t\t// userSelectorObject( 'reset-fields' );\n\n\t\t\t// Set step\n\t\t\tuserSelectorObject( 'set-step', {\n\t\t\t\tstep: 'select-source'\n\t\t\t});\n\n\t\t\t// Render actions again\n\t\t\tnew Actions();\n\t\t})\n\n\t\t// Add buttons\n\t\t$buttonsContainer.append( $saveButton );\n\t\t$buttonsContainer.append( $cancelButton );\n\t\t$container.append( $buttonsContainer );\n\n\t\treturn $container;\n\t}\n\n\tgetSentenceNodes(){\n\t\t// Create elements\n\t\tlet $optionsContainer = $( `\n\t\t\t<div class=\"user-selector user-selector--summary\">\n\t\t\t\t<div class=\"item item--user-selector\">\n\t\t\t\t\t<div class=\"item__content\">\n\t\t\t\t\t\t<div class=\"item-options\">\n\t\t\t\t\t\t\t<div class=\"user-selector-summary\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t` );\n\n\t\t$optionsContainer.find( '.item' ).prepend( this.getHeaderNodes() );\n\n\t\t// Get container\n\t\tlet $summaryContainer = $optionsContainer.find( '.user-selector-summary' );\n\n\t\t// Create first row\n\t\tlet $sourceRow = $( `\n\t\t\t<div class=\"user-selector-summary-row\">\n\t\t\t\t<div class=\"user-selector-summary-row__icon\">\n\t\t\t\t\t<span class=\"uo-icon uo-icon--atom\"></span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"user-selector-summary-row__content\"></div>\n\t\t\t</div>\n\t\t` );\n\n\t\t// Create token\n\t\tlet $sourceRowToken = $( `\n\t\t\t<div class=\"user-selector-summary-row__token\"></div>\n\t\t` );\n\t\t$sourceRow.find( '.user-selector-summary-row__content' ).append( $sourceRowToken );\n\n\t\t// If the source is \"existingUser\"\n\t\tif ( UncannyAutomator.recipe.userSelector.source == 'existingUser' ){\n\t\t\t// Then add the \"Existing user\" string\n\t\t\t$sourceRowToken.text( UncannyAutomator.i18n.userSelector.userType.existing );\n\t\t}\n\t\t// If it's \"newUser\"\n\t\telse if ( UncannyAutomator.recipe.userSelector.source == 'newUser' ){\n\t\t\t// Then add the \"New user\" string\n\t\t\t$sourceRowToken.text( UncannyAutomator.i18n.userSelector.userType.new );\n\t\t}\n\n\t\t// Listen clicks\n\t\t$sourceRowToken.on( 'click', () => {\n\t\t\t// Go to the first step.\n\t\t\t\n\t\t\t// Delete fields information\n\t\t\t// userSelectorObject( 'reset-fields' );\n\n\t\t\t// Set step\n\t\t\tuserSelectorObject( 'set-step', {\n\t\t\t\tstep: 'select-source'\n\t\t\t});\n\n\t\t\t// Render actions again\n\t\t\tnew Actions();\n\t\t});\n\n\t\t// Add to container\n\t\t$summaryContainer.append( $sourceRow );\n\n\t\t// Create first row\n\t\tlet $dataRow = $( `\n\t\t\t<div class=\"user-selector-summary-row\">\n\t\t\t\t<div class=\"user-selector-summary-row__icon\">\n\t\t\t\t\t<span class=\"uo-icon uo-icon--fingerprint\"></span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"user-selector-summary-row__content\"></div>\n\t\t\t</div>\n\t\t` );\n\n\t\t// Create token\n\t\tlet $dataRowSentence;\n\n\t\tif ( UncannyAutomator.recipe.userSelector.source == 'existingUser' ){\n\t\t\t$dataRowSentence = $( `\n\t\t\t\t<div>\n\t\t\t\t${\n\t\t\t\t\tvsprintf(\n\t\t\t\t\t\tUncannyAutomator.i18n.userSelector.summary.matches,\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t`<div class=\"user-selector-summary-row__token\">${ UncannyAutomator.i18n.userSelector.summary[ UncannyAutomator.recipe.userSelector.fields.existingUser.uniqueField ] }</div>`,\n\t\t\t\t\t\t\t`<div class=\"user-selector-summary-row__token\">${ UncannyAutomator.recipe.userSelector.fields.existingUser.uniqueFieldValue }</div>`\n\t\t\t\t\t\t]\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t</div>`\n\t\t\t);\n\t\t}\n\t\telse if ( UncannyAutomator.recipe.userSelector.source == 'newUser' ){\n\t\t\t$dataRowSentence = $( `\n\t\t\t\t<div>\n\t\t\t\t${\n\t\t\t\t\tvsprintf(\n\t\t\t\t\t\tUncannyAutomator.i18n.userSelector.summary.withEmail,\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t`<div class=\"user-selector-summary-row__token\">${ UncannyAutomator.recipe.userSelector.fields.newUser.email }</div>`\n\t\t\t\t\t\t]\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t`\n\t\t\t);\n\t\t}\n\n\t\t$dataRow.find( '.user-selector-summary-row__content' ).append( $dataRowSentence );\n\n\t\t// Listen clicks\n\t\t$dataRowSentence.find( '.user-selector-summary-row__token' ).on( 'click', () => {\n\t\t\t// Go to the second step.\n\t\t\t\n\t\t\t// Set step\n\t\t\tuserSelectorObject( 'set-step', {\n\t\t\t\tstep: 'set-options'\n\t\t\t});\n\n\t\t\t// Render actions again\n\t\t\tnew Actions();\n\t\t});\n\n\t\t// Add data row\n\t\t$summaryContainer.append( $dataRow );\n\n\t\t// Add fallback row\n\t\tlet $fallbackRow = $( `\n\t\t\t<div class=\"user-selector-summary-row\">\n\t\t\t\t<div class=\"user-selector-summary-row__icon\">\n\t\t\t\t\t<span class=\"uo-icon uo-icon--directions\"></span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"user-selector-summary-row__content\"></div>\n\t\t\t</div>\n\t\t` );\n\n\t\tlet otherwiseText = '';\n\n\t\tif ( UncannyAutomator.recipe.userSelector.source == 'existingUser' ){\n\t\t\tif ( UncannyAutomator.recipe.userSelector.fields.existingUser.fallback == 'create-new-user' ){\n\t\t\t\totherwiseText = UncannyAutomator.i18n.userSelector.summary.createNewUser;\n\t\t\t}\n\t\t\telse if ( UncannyAutomator.recipe.userSelector.fields.existingUser.fallback == 'do-nothing' ){\n\t\t\t\totherwiseText = UncannyAutomator.i18n.userSelector.summary.doNothing;\n\t\t\t}\n\t\t}\n\t\telse if ( UncannyAutomator.recipe.userSelector.source == 'newUser' ){\n\t\t\tif ( UncannyAutomator.recipe.userSelector.fields.newUser.fallback == 'select-existing-user' ){\n\t\t\t\totherwiseText = UncannyAutomator.i18n.userSelector.summary.selectExistingUser;\n\t\t\t}\n\t\t\telse if ( UncannyAutomator.recipe.userSelector.fields.newUser.fallback == 'do-nothing' ){\n\t\t\t\totherwiseText = UncannyAutomator.i18n.userSelector.summary.doNothing;\n\t\t\t}\n\t\t}\n\n\t\tlet $fallbackRowSentence = $( `\n\t\t\t<div>\n\t\t\t${\n\t\t\t\tvsprintf(\n\t\t\t\t\tUncannyAutomator.i18n.userSelector.summary.otherwise,\n\t\t\t\t\t[\n\t\t\t\t\t\t`<div class=\"user-selector-summary-row__token\">${ otherwiseText }</div>`\n\t\t\t\t\t]\n\t\t\t\t)\n\t\t\t}\n\t\t\t</div>`\n\t\t);\n\t\t$fallbackRow.find( '.user-selector-summary-row__content' ).append( $fallbackRowSentence );\n\n\t\t// Listen clicks\n\t\t$fallbackRow.find( '.user-selector-summary-row__token' ).on( 'click', () => {\n\t\t\t// Go to the second step.\n\n\t\t\t// Set step\n\t\t\tuserSelectorObject( 'set-step', {\n\t\t\t\tstep: 'set-options'\n\t\t\t});\n\n\t\t\t// Render actions again\n\t\t\tnew Actions();\n\t\t});\n\n\t\t// Add data row\n\t\t$summaryContainer.append( $fallbackRow );\n\n\t\t// Return nodes\n\t\treturn $optionsContainer;\n\t}\n\n\tgetHeaderNodes(){\n\t\t// Define title variable\n\t\tlet title;\n\n\t\t// Get title variable\n\t\tswitch ( UncannyAutomator.recipe.userSelector.step ){\n\t\t\tcase 'select-source':\n\t\t\tcase 'show-sentence':\n\t\t\t\t// Define title\n\t\t\t\ttitle = UncannyAutomator.i18n.userSelector.sentenceTitle;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'set-options':\n\t\t\t\t// Define title\n\t\t\t\ttitle = UncannyAutomator.i18n.userSelector.setOptions;\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Create output\n\t\tlet $output = $( `\n\t\t\t<div>\n\t\t\t\t<div class=\"item-actions\">\n\t\t\t\t\t<div class=\"item-actions__btn\">\n\t\t\t\t\t\t<i class=\"uo-icon uo-icon--ellipsis-h-alt\"></i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"item-actions__dropdown\">\n\t\t\t\t\t\t<ul class=\"item-actions-dropdown__ul\">\n\t\t\t\t\t\t\t<a href=\"#\" target=\"_blank\" class=\"item-actions-dropdown__action\">\n\t\t\t\t\t\t\t\t<span>${ UncannyAutomator.i18n.support }</span>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"item-icon\"></div>\n\t\t\t\t<div class=\"item-title clear\">\n\t\t\t\t\t<div class=\"item-title__describe\">\n\t\t\t\t\t\t<div class=\"item-title__non-editable\">\n\t\t\t\t\t\t\t${ title }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t` );\n\n\t\t// Add functionality to open and close the actions dropdown\n\t\t// Listen click on the three dots icon\n        $output.find( '.item-actions__btn' ).on( 'click', () => {\n        \t// Find the actions container and toogle the open class\n        \t$output.find( '.item-actions' ).toggleClass( 'item-actions--open' )\n        } );\n\n\t\t// Return output\n\t\treturn $output;\n\t}\n}\n\nexport default UserSelector;\n\n\n// WEBPACK FOOTER //\n// ./src/components/UserSelector.js","import {\n\tgetDOMElements,\n    restCall,\n    AJAXRequest,\n    isDefined,\n    isEmpty,\n    parseStringWithTokens,\n    vsprintf,\n    getCurrentFieldsValues\n} from './Utilities.js';\n\nimport {\n    validateItemFields,\n} from './Validation';\n\nimport Triggers from './Triggers.js';\nimport Actions  from './Actions.js';\n\nimport Modal    from './Modal.js';\nimport Markdown from './Markdown.js';\n\nclass ItemOptions {\n\tconstructor( itemId, optionId ){\n\t\tthis.itemId   = itemId;\n\t\tthis.optionId = optionId;\n\t\tthis.item \t  = UncannyAutomator.recipe.items[ itemId ];\n\n\t\t// Array to save the Field objects\n\t\tthis.fields   = this.item.options[ this.optionId ].fields;\n\t\t// Array to save the buttons\n\t\tthis.buttons  = this.item.options[ this.optionId ].buttons;\n\n\t\tthis.create();\n\n\t\t// AFTER we added the elements to the DOM let's call init TinyMCE\n\t\t// We're going to call this in ItemOptions.js because TinyMCE needs the item in the DOM before changing it\n\t\t// Select2, the Token selector and the URL checker are called in Field.js\n\t\tthis.initTinyMCE();\n\t}\n\n\tcreate(){\n\t\t// Container\n\t\tlet container = getDOMElements( 'item', {\n\t\t\tid: this.itemId\n\t\t}).contentContainer;\n\n\t\tlet itemOptions\t= $( '<div/>', { 'class': 'item-options' });\n\n\t\t// Buttons. We have to create these before the fields, but append after\n\t\tlet buttons = this.createButtons();\n\n\t\t// Fields\n\t\tlet fields = this.createFields();\n\t\tthis.fieldsContainer = fields;\n\t\titemOptions.append( fields );\n\n\t\t// Create notices container\n\t\tlet noticeContainer  = $( '<div/>', { 'class': 'item-options__notices' });\n\t\tthis.noticeContainer = noticeContainer;\n\t\titemOptions.append( noticeContainer );\n\n\t\t// Append buttons\n\t\titemOptions.append( buttons );\n\n\t\t// Append to the item\n\t\tcontainer.html( itemOptions );\n\t}\n\n\tcreateFields(){\n\t\tlet container = $( '<div/>', { 'class': 'item-options__group' });\n\n\t\t// Create fields\n\t\t$.each( this.fields, ( index, field ) => {\n\t\t\t// Get field type\n\t\t\tlet fieldType = field.getAttributes().fieldType;\n\n\t\t\t// Check if it's a repeater\n\t\t\tif ( fieldType == 'repeater' ){\n\t\t\t\t// Create the fields again first (to avoid showing unsaved changed)\n\t\t\t\tfield.createFields();\n\t\t\t}\n\n\t\t\t// Append the form element to the DOM\n\t\t\tfield.createFormElement();\n\t\t\tcontainer.append( field.getFormElement() );\n\n\t\t\t// Bind submit on Enter (for all except groups and textareas)\n\t\t\tif ( ! [ 'textarea', 'group', 'repeater' ].includes( fieldType ) ){\n\t\t\t\t// Get field element and bind 'keyup'\n\t\t\t\tfield.getField().on( 'keyup', ( event ) => {\n\t\t\t\t\t// Check if it's an enter\n\t\t\t\t\tif ( event.keyCode == 13 ){\n\t\t\t\t\t\t// Trigger a click on the Save Button\n\t\t\t\t\t\tthis.saveButton.trigger( 'click' );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Check if it's a group\n\t\t\telse if ( fieldType == 'group' ){\n\t\t\t\t// Iterate fields\n\t\t\t\tfield.fields.forEach(( field ) => {\n\t\t\t\t\t// Get the field type\n\t\t\t\t\tconst fieldType = field.getAttributes().fieldType;\n\n\t\t\t\t\t// Check if it's not a textarea\n\t\t\t\t\tif ( fieldType !== 'textarea' ){\n\t\t\t\t\t\t// Get field element and bind 'keyup'\n\t\t\t\t\t\tfield.getField().on( 'keyup', ( event ) => {\n\t\t\t\t\t\t\t// Check if it's an enter\n\t\t\t\t\t\t\tif ( event.keyCode == 13 ){\n\t\t\t\t\t\t\t\t// Trigger a click on the Save Button\n\t\t\t\t\t\t\t\tthis.saveButton.trigger( 'click' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if ( fieldType == 'repeater' ){\n\t\t\t\t// Iterate rows\n\t\t\t\tfield.fieldRows.forEach(( row, index ) => {\n\t\t\t\t\t// Iterate each row\n\t\t\t\t\trow.forEach(( Field, index ) => {\n\t\t\t\t\t\t// Get field element and bind 'keyup'\n\t\t\t\t\t\tField.getField().on( 'keyup', ( event ) => {\n\t\t\t\t\t\t\t// Check if it's an enter\n\t\t\t\t\t\t\tif ( event.keyCode == 13 ){\n\t\t\t\t\t\t\t\t// Trigger a click on the Save Button\n\t\t\t\t\t\t\t\tthis.saveButton.trigger( 'click' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn container;\n\t}\n\n\tcreateButtons(){\n\t\t// Buttons\n\t\tlet container \t  \t = $( '<div/>', { 'class': 'item-options__buttons' });\n\n\t\t// Actions buttons\n\t\tlet automatorButtons = $( '<div/>', { 'class': 'item-options__automator-buttons' }),\n\t\t\tdeveloperButtons = $( '<div/>', { 'class': 'item-options__developer-buttons' });\n\n\t\tlet saveButton \t  \t = $( '<div/>', { 'class': 'uap-btn uap-btn--primary' }),\n\t\t\tcancelButton  \t = $( '<div/>', { 'class': 'uap-btn uap-btn--secondary' }).text( UncannyAutomator.i18n.cancel );\n\n\t\tif ( this.item.itemType == 'trigger' ){\n\t\t\tsaveButton.text( UncannyAutomator.i18n.save );\n\t\t}\n\n\t\tif ( this.item.itemType == 'action' ){\n\t\t\tsaveButton.text( UncannyAutomator.i18n.save );\n\t\t}\n\n        if ( this.item.itemType == 'closure' ){\n            saveButton.text( UncannyAutomator.i18n.save );\n        }\n\n        this.saveButton = saveButton;\n\n\t\tautomatorButtons.append( saveButton );\n\t\tautomatorButtons.append( cancelButton );\n\n\t\t// Check developer defined buttons\n\t\t$.each( this.buttons, ( index, button ) => {\n\t\t\t// Create button\n\t\t\tconst $buttonElement = $( '<div/>', { 'class': 'uap-btn' }).text( button.text );\n\n\t\t\t// Check if we have to add a custom class to the button\n\t\t\tif ( isDefined( button.css_classes ) ){\n\t\t\t\t// Add classes\n\t\t\t\t$buttonElement.addClass( button.css_classes );\n\t\t\t}\n\n\t\t\t// Check if it has a defined onClick function\n\t\t\tlet doOnClick = () => {};\n\t\t\tif ( isDefined( button.on_click ) ){\n\t\t\t\t// Try to overwrite empty function\n\t\t\t\ttry {\n\t\t\t\t\t// Try to convert the string to function, but first remove the <script> tags and trim the string\n\t\t\t\t\tdoOnClick = eval( `(${ button.on_click.replace( '<script>', '' ).replace( '</script>', '' ).trim() })` ); \n\t\t\t\t} catch ( e ){ console.log( e ); console.log( button.on_click ); }\n\t\t\t}\n\n\t\t\t// Listen clicks on the button\n\t\t\t$buttonElement.on( 'click', () => {\n\t\t\t\t// Invoke callback\n\t\t\t\tdoOnClick(\n\t\t\t\t\t// button\n\t\t\t\t\t$buttonElement,\n\t\t\t\t\t// data\n\t\t\t\t\t{\n\t\t\t\t\t\titem:      this.item,\n\t\t\t\t\t\tvalues:    getCurrentFieldsValues( this.itemId ),\n\t\t\t\t\t},\n\t\t\t\t\t// modules\n\t\t\t\t\t(function(){\n\t\t\t\t\t\t// Get required modules\n\t\t\t\t\t\tlet modules = {};\n\n\t\t\t\t\t\t// Check if the developer wants custom modules\n\t\t\t\t\t\tif ( isDefined( button.modules ) ){\n\t\t\t\t\t\t\t// Check if we have to add the modal module\n\t\t\t\t\t\t\tif ( button.modules.includes( 'modal' ) ){\n\t\t\t\t\t\t\t\t// Include modal\n\t\t\t\t\t\t\t\tmodules.Modal = Modal;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( button.modules.includes( 'markdown' ) ){\n\t\t\t\t\t\t\t\t// Include Markdown\n\t\t\t\t\t\t\t\tmodules.Markdown = Markdown;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Return modules\n\t\t\t\t\t\treturn modules;\n\t\t\t\t\t})()\n\t\t\t\t);\n\t\t\t});\n\n\t\t\t// Add button to the container\n\t\t\tdeveloperButtons.append( $buttonElement );\n\t\t});\n\n\t\tcontainer.append( automatorButtons );\n\t\tcontainer.append( developerButtons );\n\n\t\tsaveButton.on( 'click', () => {\n\t\t\t// Verify form\n            let formValidation = validateItemFields( this.fieldsContainer );\n\n            // Check if it's valid\n            if ( formValidation.isValid ){\n            \t// Disable button and show loading animation\n            \tsaveButton.addClass( 'uap-btn--loading uap-btn--disabled' );\n\n            \t// The REST call wants:\n            \t// - The item ID\n            \t// - The option code (the one from the token, the main one)\n            \t// - The value. If there is more than one then a serialized object\n            \tlet itemId \t\t= this.itemId,\n            \t\toptionCode \t= this.optionId,\n            \t\toptionValue = this.getOptionValue();\n\n            \t// Get a temporary item sentence\n            \t// This must use values that are not yet saved in the meta of the item\n            \tconst itemSentence = parseStringWithTokens( this.item, this.item.meta.sentence, $.extend({}, this.item.meta, getCurrentFieldsValues( this.itemId ) ) );\n\n            \trestCall( 'update', {\n                    itemId:       itemId,\n                    optionCode:   optionCode,\n                    optionValue:  optionValue,\n                    sentence_human_readable: itemSentence.brackets\n                }, ( response ) => {\n                \t// Trigger \"saved\" on all item fields\n                \tthis.fields.forEach(( Field ) => {\n                \t\tField.getFormElement().trigger( 'saved' );\n                \t});\n\n           \t        if ( this.item.itemType == 'trigger' ){\n                        new Triggers();\n                    }\n\n                    if ( this.item.itemType == 'action' || this.item.itemType == 'closure' ){\n                        new Actions();\n                    }\n\n                    // Get item form element\n                \tconst $item = getDOMElements( 'item', {\n                \t\tid: this.item.id\n                \t});\n\n                \t// Get first token and trigger a click\n                \t$item.item.find( '.item-title__token:not(.item-title__token--filled)' ).first().trigger( 'click' );\n                }, ( response ) => {\n                \tconsole.log( '‼️ ERROR-TODO. Couldn\\'t save the options of the item' );\n\n                \t// Reset UI\n\t\t\t\t\tif ( this.item.itemType == 'trigger' ){\n\t\t\t\t\t\tnew Triggers();\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.item.itemType == 'action' || this.item.itemType == 'closure' ){\n\t\t\t\t\t\tnew Actions();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Try to open the options again\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Get the item elements\n\t\t\t\t\t\tgetDOMElements( 'item', {\n\t\t\t\t\t\t\tid: this.itemId\n\t\t\t\t\t\t})\n\t\t\t\t\t\t// Get the main container\n\t\t\t\t\t\t.item\n\t\t\t\t\t\t// Find the token in the sentence\n\t\t\t\t\t\t.find( `.item-title__token[data-options-id=\"${ optionCode }\"]` )\n\t\t\t\t\t\t// Trigger a click\n\t\t\t\t\t\t.trigger( 'click' ); \n\t\t\t\t\t} catch ( e ){}\n                });\n            }\n\t\t});\n\n\t\tcancelButton.on( 'click', () => {\n\t\t\t// Reset UI\n\t\t\tif ( this.item.itemType == 'trigger' ){\n\t\t\t\tnew Triggers();\n\t\t\t}\n\n\t\t\tif ( this.item.itemType == 'action' || this.item.itemType == 'closure' ){\n\t\t\t\tnew Actions();\n\t\t\t}\n\t\t});\n\n\t\treturn container;\n\t}\n\n\tinitTinyMCE(){\n\t\t$.each( this.fields, ( index, field ) => {\n\t\t\t// Get the field type\n\t\t\tif ( field.getAttributes().fieldType == 'textarea' ){\n\t\t\t\t// TinyMCE will be initialized only if it's a textarea and supportsTinyMCE is true\n\t\t\t\tfield.initTinyMCE();\n\t\t\t}\t\n\t\t});\n\t}\n\n\t/**\n\t * Get the value that we have to send to the REST call\n\t *\n\t * @since 0.5\n\t */\n\n\tgetOptionValue(){\n\t\tlet response = {},\n\t\t\thasSelect = false,\n\t\t\thasRepeater = false;\n\n\t\t$.each( this.fields, ( index, field ) => {\n\t\t\tlet id \t  = field.getAttributes().optionCode,\n\t\t\t\tvalue = field.getValue();\n\n\t\t\tif ( [ 'select', 'radio' ].includes( field.getAttributes().fieldType ) ){\n\t\t\t\t// Has select\n\t\t\t\thasSelect = true;\n\n\t\t\t\t// Check if it's a multiselect\n\t\t\t\t// Then save the value as a JSON string, don't save it\n\t\t\t\t// as an array\n\t\t\t\tif ( field.getAttributes().supportsMultipleValues ){\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvalue = JSON.stringify( value );\n\t\t\t\t\t} catch ( e ){\n\t\t\t\t\t\tconsole.log( e );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Save readable value\n\t\t\t\tresponse[ vsprintf( '%s_readable', [ id ] ) ] = field.getReadableValue();\n\n\t\t\t\t// Check if we have to save the custom value (only for selects)\n\t\t\t\tconst customValue = field.getSelectCustomValue();\n\t\t\t\tif ( value == 'automator_custom_value' ){\n\t\t\t\t\tresponse[ vsprintf( '%s_custom', [ id ] ) ] = customValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( field.getAttributes().fieldType == 'repeater' ){\n\t\t\t\t// Has repeater\n\t\t\t\thasRepeater = true;\n\t\t\t\t\n\t\t\t\t// Convert data to a JSON string\n\t\t\t\tvalue = JSON.stringify( value );\n\t\t\t}\n\n\t\t\tresponse[ id ] = value;\n\t\t});\n\n\t\tif ( ! hasRepeater && ! hasSelect && Object.keys( response ).length == 1 ){\n\t\t\t// One field\n\t\t\tresponse = response[ Object.keys( response )[ 0 ] ];\n\t\t}\n\n\t\treturn response;\n\t}\n}\n\nexport default ItemOptions;\n\n\n// WEBPACK FOOTER //\n// ./src/components/ItemOptions.js","import {\n\tisDefined,\n\tescapeHTML\n} from './Utilities.js';\n\nclass Markdown {\n\tconstructor( content = '' ){\n\t\t// Save content\n\t\tthis.content = content;\n\t}\n\n\tgetHTML(){\n\t\t// Define content and escape HTML\n\t\tlet content = escapeHTML( this.content );\n\t\t\n\t\tcontent = this.parseItalicsAndBold( content );\n\t\tcontent = this.parseAnchors( content );\n\n\t\treturn content;\n\t}\n\n\tparseItalicsAndBold( content ){\n\t\t// Underscores\n\t\t// Since we are consuming a \\s character, we need to add it\n\t\tcontent = content.replace( /(^|\\s|>|\\b)__(?=\\S)([^]+?)__(?=\\b|<|\\s|$)/gm, '$1<strong>$2</strong>' );\n\t\tcontent = content.replace( /(^|\\s|>|\\b)_(?=\\S)([^]+?)_(?=\\b|<|\\s|$)/gm, '$1<em>$2</em>' );\n\n\t\t// Asterisks\n\t\tcontent = content.replace( /(\\*\\*)(?=\\S)([^\\r]*?\\S[*]*)\\1/g, '<strong>$2</strong>' );\n\t\tcontent = content.replace( /(\\*)(?=\\S)([^\\r]*?\\S)\\1/g, '<em>$2</em>' );\n\n\t\t// Return content\n\t\treturn content;\n\t}\n\n\tparseAnchors( content ){\n\t\t// Inline-style links: [link text](url \"optional title\")\n\t\tcontent = content.replace( /(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]\\([ \\t]*()<?(.*?(?:\\(.*?\\).*?)?)>?[ \\t]*((['\"])(.*?)\\6[ \\t]*)?\\))/g, function( wholeMatch, m1, m2, m3, m4, m5, m6, m7 ){\n\t\t\tif ( ! isDefined( m7 ) ){\n\t\t\t\tm7 = '';\n\t\t\t}\n\n\t\t\twholeMatch = m1;\n\t\t\t\n\t\t\tvar linkText = m2,\n\t\t\t\tlinkId \t = m3.toLowerCase(),\n\t\t\t\turl \t = m4,\n\t\t\t\ttitle \t = m7;\n\n\t\t\tif ( ! url ){\n\t\t\t\tif ( ! linkId ){\n\t\t\t\t\t// Lower-case and turn embedded newlines into spaces\n\t\t\t\t\tlinkId = linkText.toLowerCase().replace( / ?\\n/g, ' ' );\n\t\t\t\t}\n\n\t\t\t\turl = '#' + linkId;\n\n\t\t\t\tif ( wholeMatch.search( /\\(\\s*\\)$/m ) > -1 ){\n\t\t\t\t\t// Special case for explicit empty url\n\t\t\t\t\turl = '';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn wholeMatch;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\turl = encodeURI( url, '*_', false );\n\t\t\tvar result = '<a href=\"' + url + '\" target=\"_blank\"';\n\n\t\t\tif ( title !== '' && title !== null ){\n\t\t\t\ttitle = title.replace( /\"/g, '&quot;' );\n\t\t\t\ttitle = encodeURI( title, '*_', false );\n\t\t\t\tresult += ' title=\"' + title + '\"';\n\t\t\t}\n\n\t\t\tresult += '>' + linkText + '</a>';\n\n\t\t\treturn result;\n\t\t});\n\n\t\t// Return content\n\t\treturn content;\n\t}\n}\n\nexport default Markdown;\n\n\n// WEBPACK FOOTER //\n// ./src/components/Markdown.js","import {\n    getDOMElements\n}                              from './Utilities.js';\nimport ItemCreatorIntegrations from './ItemCreatorIntegrations.js';\n\nclass ItemCreatorAdd {\n    constructor( itemType ){\n        let $container    = $( '<div/>', { 'class': 'item item--start' }),\n            $icon         = $( '<div/>', { 'class': 'item-icon' }),\n            $containerBox = $( '<div/>', { 'class': 'item-title clear' }),\n            $button       = $( '<div/>', { 'class': 'uap-btn uap-btn--secondary uap-btn--small' });\n\n        $containerBox.append( $button );\n        $container.append( $icon );\n        $container.append( $containerBox );\n\n        // Add to the metabox\n        let $metabox = getDOMElements( 'metabox', {\n            type: itemType\n        });\n\n        $metabox.append( $container );\n\n        // Add text depending of the itemType\n        if ( itemType == 'trigger' ){\n            $button.text( UncannyAutomator.i18n.trigger.add );\n        }\n\n        if ( itemType == 'action' ){\n            $button.text( UncannyAutomator.i18n.action.add );\n        }\n\n        $button.on( 'click', () => new ItemCreatorIntegrations( itemType ) );\n    }\n}\n\nexport default ItemCreatorAdd;\n\n\n// WEBPACK FOOTER //\n// ./src/components/ItemCreatorAdd.js","import {\n    isDefined,\n    getDOMElements,\n    restCall,\n    vsprintf\n}                         from './Utilities.js';\nimport ItemHeaderMenu     from './ItemHeaderMenu.js';\nimport ItemHeaderIcon     from './ItemHeaderIcon.js';\nimport ItemHeaderTag      from './ItemHeaderTag.js';\nimport ItemHeaderSentence from './ItemHeaderSentence.js';\nimport Actions            from './Actions.js';\nimport Field              from './Field.js';\n\nclass Closures {\n\n    constructor(){\n        // Create console group\n        // console.group( 'Closures' );\n\n        // Get metabox\n        this.elements = {\n            $metabox: getDOMElements( 'metabox', { type: 'action' })\n        }\n\n        // Create closures. It's important to understand that we're going to create all the available closures, not only those already added to the item\n        // That's why we create a separate file instead of using Item.js\n        $.each( UncannyAutomator.closures, ( key, closure ) => this.createClosure( closure ) );\n\n        // Close console group\n        // console.groupEnd();\n    }\n\n    createClosure( closure ){\n        // Variable to check later if this closure already was added to the recipe\n        let wasAdded = false;\n\n        // Container\n        let $container = $( '<div/>', { 'class': 'metabox__footer' });\n\n        // Checkbox attributes. We're going to use this to create our checkbox later.\n        let checkboxAttributes = {\n            label:              closure.select_option_name,\n            formElementClass:   'form-element--nomargin'\n        }\n\n        // Check if this closure already was added to the recipe\n        let closureInRecipe = this.getClosureByCodeFromItemsObject( closure.code );\n\n        if ( isDefined( closureInRecipe ) ){\n            wasAdded = true;\n\n            checkboxAttributes.currentValue = true;\n            checkboxAttributes.itemid       = closureInRecipe.id;\n\n            // Debug\n            // console.groupCollapsed( vsprintf( 'ID: %s', [ closureInRecipe.id ] ) );\n            // console.log( closureInRecipe );\n            // console.groupEnd();\n        }\n\n        // Create checkbox\n        let checkboxField = new Field( 'checkbox', checkboxAttributes ),\n            $checkbox      = checkboxField.getFormElement();\n\n        // Bind changes\n        $checkbox.on( 'change', function(){\n            let isChecked = checkboxField.getValue();\n            checkboxField.startLoadingAnimation();\n\n            // Check if it's checked\n            if ( isChecked ){\n                // Add item to the recipe\n                restCall( 'add', {\n                    recipePostID: UncannyAutomator.recipe.id,\n                    action:       'add-new-closure',\n                    item_code:    closure.code,\n                    default_meta: {\n                        integration_name: UncannyAutomator.integrations[ closure.integration ].name,\n                        sentence:         closure.sentence\n                    }\n                }, ( response ) => {\n                    new Actions();\n\n                    // Check if the ID of the new item is defined\n                    if ( isDefined( response.post_ID ) ){\n                        // Get item form element\n                        const $newItem = getDOMElements( 'item', {\n                            id: response.post_ID\n                        });\n\n                        // Get first token and trigger a click\n                        $newItem.item.find( '.item-title__token:not(.item-title__token--filled)' ).first().trigger( 'click' );\n                    }\n                }, ( response ) => {\n                    console.log( '‼️ ERROR-TODO. Couldn\\'t add the closure' );\n\n                    // Stop the loading animation\n                    checkboxField.stopLoadingAnimation();\n\n                    // Change back the value of the checkbox\n                    checkboxField.setValue( false, false );\n                });\n            }\n            else {\n                restCall( 'delete', {\n                    ID: closureInRecipe.id\n                }, () => {\n                    new Actions();\n                }, () => {\n                    console.log( '‼️ ERROR-TODO. Couldn\\'t delete the closure' );\n\n                    new Actions();\n                });\n            }\n        });\n\n        // Append checkbox to the container\n        $container.append( $checkbox );\n\n        // Create toggle section\n        let $toggleContent = $( '<div/>', { 'class': 'uo-toggle uo-toggle--show' });\n\n        // Check if it was already added. In that case show it\n        if ( wasAdded ){\n            $toggleContent.addClass( 'uo-toggle--show' );\n\n            let $item = $( '<div/>', {\n                'class':   'item item--closure item--margintop',\n                'data-id': closureInRecipe.id\n            });\n\n            let $itemHeader = this.createHeader(\n                UncannyAutomator.recipe.items[ closureInRecipe.id ].integrationCode,\n                'closure',\n                closure.code,\n                closureInRecipe.id,\n            );\n\n            $item.append( $itemHeader );\n\n            let $itemContent = $( '<div/>', { 'class': 'item__content' });\n            $item.append( $itemContent );\n\n            $toggleContent.append( $item );\n        }\n    \n        $container.append( $toggleContent );\n\n        // Append everything to the metabox\n        this.elements.$metabox.append( $container );\n    }\n\n    /**\n     * Creates item header\n     * \n     * @since 0.5\n     *\n     * @param {string}    integrationCode - The integration code\n     * @param {string}    itemType - The item type: 'trigger', 'action' or 'closure'\n     * @param {string}    itemCode - The code of the item\n     * @param {int}       itemId - The ID of the item\n     */\n\n    createHeader( integrationCode, itemType, itemCode, itemId ){\n        let $container = $( '<div/>' ),\n            $title     = $( '<div/>', { 'class': 'item-title clear' });\n\n        let $actions = new ItemHeaderMenu( itemType, integrationCode, itemCode, itemId );\n        $container.append( $actions );\n\n        let $icon    = new ItemHeaderIcon( integrationCode );\n        $container.append( $icon );\n        \n        let $itemTag = new ItemHeaderTag( integrationCode );\n        $title.append( $itemTag );\n\n        let $titleSentence = new ItemHeaderSentence( itemType, integrationCode, itemCode, itemId );\n        $title.append( $titleSentence );\n\n        $container.append( $title );\n\n        return $container;\n    }\n\n    getClosureByCodeFromItemsObject( code ){\n        let theItem;\n\n        $.each( UncannyAutomator.recipe.items, function( itemID, item ){\n            if ( item.itemCode == code ){\n                theItem = item;\n            }\n        })\n\n        return theItem;\n    }\n}\n\nexport default Closures;\n\n\n// WEBPACK FOOTER //\n// ./src/components/Closures.js","import {\n\tgetItemsByIntegration,\n\tgetDOMElements,\n    restCall,\n    isDefined,\n    isEmpty,\n    replaceCurlyBraces,\n    addParametersToURL\n} from './Utilities.js';\n\nimport ItemCreatorIntegrations from './ItemCreatorIntegrations.js';\n\nimport ItemHeaderMenu from './ItemHeaderMenu.js';\nimport ItemHeaderIcon from './ItemHeaderIcon.js';\nimport ItemHeaderTag  from './ItemHeaderTag.js';\n\nimport Triggers \t  from './Triggers.js';\nimport Actions \t\t  from './Actions.js';\n\nclass itemCreatorTaskSelector {\n\tconstructor( itemType, integrationID, $currentItem ){\n\t\tthis.itemType \t\t= itemType;\n\t\tthis.integrationID \t= integrationID;\n\t\tthis.$currentItem \t= $currentItem;\n\n\t\t// Render DOM elements\n\t\tthis.render();\n\t}\n\n\trender(){\n\t\t// Create $container\n\t\tthis.$container = $( `<div class=\"item\"></div>` );\n\t\tthis.$item = this.$container;\n\n\t\tthis.createHeader();\n\t\tthis.createItemsList();\n\n        this.$currentItem.replaceWith( this.$container );\n\t}\n\n\tcreateHeader(){\n\t\tconst $header = $( `\n\t\t\t<div>\n\t\t\t\t<div class=\"item-title clear\">\n\t\t\t\t\t<div class=\"item-title__describe\">\n\t\t\t\t\t\t<div class=\"item-title__non-editable\">\n\t\t\t\t\t\t\t${ this.itemType == 'trigger' ? UncannyAutomator.i18n.trigger.select : UncannyAutomator.i18n.action.select }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t` );\n\n\t\t// Add the item actions (the three dots)\n        let $itemActions = new ItemHeaderMenu( this.itemType );\n        $header.append( $itemActions );\n\n        // Add the item icon\n        let $itemIcon = new ItemHeaderIcon( this.integrationID );\n        $header.append( $itemIcon );\n\n        // Add the integration tag\n        let $integrationTag = new ItemHeaderTag( this.integrationID );\n        $header.find( '.item-title' ).prepend( $integrationTag );\n\n        // Append the header to the main container\n        this.$container.append( $header );\n\t}\n\n\tcreateItemsList(){\n\t\tlet items, searchPlaceholder, unlockItems;\n\n\t\t// Get data depending on the item type\n\t\tif ( this.itemType == 'trigger' ){\n\t\t\titems \t           = getItemsByIntegration( this.integrationID, 'triggers' );\n\t\t\tsearchPlaceholder  = UncannyAutomator.i18n.trigger.search;\n\t\t\tunlockItems        = UncannyAutomator.i18n.proOnly.unlockTriggers;\n\t\t}\n\t\telse if ( this.itemType == 'action' ){\n\t\t\titems              = getItemsByIntegration( this.integrationID, 'actions' );\n\t\t\tsearchPlaceholder  = UncannyAutomator.i18n.action.search;\n\t\t\tunlockItems        = UncannyAutomator.i18n.proOnly.unlockActions;\n\t\t}\n\n\t\t// Create the main container\n\t\tconst $container   = $( `\n\t\t\t<div class=\"item__content\">\n\t\t\t\t<div class=\"item-options item-options--nopadding item-options--noborder\">\n\t\t\t\t\t<div class=\"form-element\">\n\t\t\t\t\t\t<div class=\"item__task-selector\">\n\t\t\t\t\t\t\t<div class=\"item-task-selector__search\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tclass=\"item-task-selector__search-input\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"${ searchPlaceholder }\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"item-task-selector__options\">\n\t\t\t\t\t\t\t\t<div class=\"item-task-selector-options__group item-task-selector-options__group--available\"></div>\n\t\t\t\t\t\t\t\t<div class=\"item-task-selector-options__group item-task-selector-options__group--unavailable\">\n\t\t\t\t\t\t\t\t\t<div class=\"item-task-selector-options__group-items\"></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"item-task-selector__option item-task-selector__option--no-results item-task-selector__option--hide\">\n\t\t\t\t\t\t\t\t\t${ UncannyAutomator.i18n.noResults }\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t` );\n\n\t\t// Get important elements\n\t\tconst $optionsContainer = $container.find( '.item-options' ),\n\t\t      $taskSelector     = $container.find( '.item__task-selector' ),\n\t\t      $searchField      = $container.find( '.item-task-selector__search-input' ),\n\t\t      $itemsList        = {\n\t\t      \tcontainer: $container.find( '.item-task-selector__options' ),\n\t\t      \tavailable: $container.find( '.item-task-selector-options__group--available' ),\n\t\t      \tunavailable: {\n\t\t      \t\tcontainer: $container.find( '.item-task-selector-options__group--unavailable' ),\n\t\t      \t\tlist:      $container.find( '.item-task-selector-options__group-items' )\n\t\t      \t},\n\t\t      \tnoResults: $container.find( '.item-task-selector__option--no-results' )\n\t\t      };\n\n\t\t// Check if it has available items\n\t\tif ( items.hasAvailableItems ){\n\t\t\t// Append available items to the list container\n\t\t\t$itemsList.available.append( items.available.map(( item ) => {\n\t\t\t\t// Check if it's a Pro item\n\t\t\t\tconst isPro = item.is_pro;\n\n\t\t\t\t// Create container\n\t\t\t\tconst $item = $( `\n\t\t\t\t\t<div class=\"item-task-selector__option ${ isPro ? 'item-task-selector__option--pro' : '' }\"\n\t\t\t\t\t\tdata-search=\"${ item.select_option_name.toLowerCase().replace( /\\s+|{|}/g, '' ) }\">\n\t\t\t\t\t\t${ replaceCurlyBraces( item.select_option_name, '<span class=\"item-task-selector__option-variable\">', '</span>' ) }\n\t\t\t\t\t\t${ isPro ? `<span class=\"item-task-selector-option__badge\">${ UncannyAutomator.i18n.proOnly.pro }</span>` : '' }\n\t\t\t\t\t</div>\n\t\t\t\t` );\n\n\t\t\t\t// Listen clicks on the container\n\t\t\t\t$item.on( 'click', () => {\n\t\t\t\t\t// Add loading class to the parent container\n\t\t\t\t\t$taskSelector.addClass( 'item__task-selector--loading' );\n\n\t\t\t\t\t// Add loading class to the container\n\t\t\t\t\t$item.addClass( 'item-task-selector__option--loading' );\n\n\t\t\t\t\t// Get the correct request code\n\t\t\t\t\tconst restRequestCode = [ 'trigger', 'action' ].includes( this.itemType ) ? `add-new-${ this.itemType }` : '';\n\t\t\t\t\t\n\t\t\t\t\t// Save the value of the fields with default values\n\t\t\t\t\t// in the item meta\n\t\t\t\t\tlet defaultMeta = {}\n\t\t\t\t\t$.each( item.options, ( index, option ) => {\n\t\t\t\t\t\tif ( isDefined( option.default_value ) ){\n\t\t\t\t\t\t\tdefaultMeta[ option.option_code ] = option.default_value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// Check if the trigger is an anonymous trigger\n\t\t\t\t\tif ( item.type == 'anonymous' ){\n\t\t\t\t\t\t// Save the \"can_log_in_new_user\" value\n\t\t\t\t\t\tdefaultMeta.can_log_in_new_user = isDefined( item.can_log_in_new_user ) ? item.can_log_in_new_user : true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do REST call to add the item\n\t\t\t\t\trestCall( 'add', {\n\t\t\t\t\t\trecipePostID: UncannyAutomator.recipe.id,\n\t\t\t\t\t\taction:       restRequestCode,\n\t\t\t\t\t\titem_code:    item.code,\n\t\t\t\t\t\tdefault_meta: $.extend( {}, defaultMeta, {\n\t\t\t\t\t\t\tintegration_name: UncannyAutomator.integrations[ this.integrationID ].name,\n\t\t\t\t\t\t\tsentence: \t\t  item.sentence\n\t\t\t\t\t\t})\n\t\t\t\t\t}, ( response ) => {\n\t\t\t\t\t\t// Render both metaboxes again\n\t\t\t\t\t\t// This will close the options panel if it's opened\n\t\t\t\t\t\tnew Triggers();\n\t\t\t\t\t\tnew Actions();\n\n\t\t\t\t\t\t/*\n\t\t\t\t\t\tif ( this.itemType == 'trigger' ){\n\t\t\t\t\t\t\tnew Triggers();\n\n\t\t\t\t\t\t\t// Check if it's an anonymous recipe\n\t                        if ( UncannyAutomator.recipe.type == 'anonymous' ){\n\t                        \t// Render the Actions metabox again\n\t                        \t// We're doing this because we need to update the user selector\n\t                        \tnew Actions();\n\t                        }\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif ( this.itemType == 'action' ){\n\t\t\t\t\t\t\tnew Actions();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n\n\t\t\t\t\t\t// Check if the ID of the new item is defined\n\t\t\t\t\t\tif ( isDefined( response.post_ID ) ){\n\t\t\t\t\t\t\t// Get item form element\n\t\t\t\t\t\t\tconst $newItem = getDOMElements( 'item', {\n\t\t\t\t\t\t\t\tid: response.post_ID\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t// Get first token and trigger a click\n\t\t\t\t\t\t\t$newItem.item.find( '.item-title__token:not(.item-title__token--filled)' ).first().trigger( 'click' );\n\t\t\t\t\t\t}\n\t\t\t\t\t}, ( response ) => {\n\t\t\t\t\t\tconsole.log( '‼️ ERROR-TODO. Couldn\\'t add the item' );\n\n\t\t\t\t\t\t// Remove loading class to the parent container\n\t\t\t\t\t\t$taskSelector.removeClass( 'item__task-selector--loading' );\n\n\t\t\t\t\t\t// Remove loading class to the container\n\t\t\t\t\t\t$item.removeClass( 'item-task-selector__option--loading' );\n\n\t\t\t\t\t\t// Check if it's an invalid action\n\t\t\t\t\t\tif ( response.success == false ){\n\t\t\t\t\t\t\tnew Triggers();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t// Return the\n\t\t\t\treturn $item;\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\t// Remove the available items container\n\t\t\t$itemsList.available.remove();\n\t\t}\n\n\t\t// Check if it has unavailable items\n\t\tif ( items.hasUnavailableItems ){\n\t\t\t// Append unavailable items to the list container\n\t\t\t$itemsList.unavailable.list.append( items.unavailable.map(( item ) => {\n\t\t\t\t// Create container\n\t\t\t\tconst $item = $( `\n\t\t\t\t\t<a  href=\"${ addParametersToURL( 'https://automatorplugin.com/pricing/', {\n\t\t\t\t\t\t    'utm_source':  'uncanny_automator',\n\t\t\t\t\t\t    'utm_medium':  'select_an_item',\n\t\t\t\t\t\t    'utm_content': 'unavailable_item'\n\t\t\t\t\t\t}) }\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\tclass=\"item-task-selector__option item-task-selector__option--pro\"\n\t\t\t\t\t\tdata-search=\"${ item.name.toLowerCase().replace( /\\s+|{|}/g, '' ) }\">\n\t\t\t\t\t\t<span class=\"uo-icon uo-icon--lock-alt\"></span>\n\t\t\t\t\t\t${ replaceCurlyBraces( item.name, '<span class=\"item-task-selector__option-variable\">', '</span>' ) }\n\t\t\t\t\t\t<span class=\"item-task-selector-option__badge\">${ UncannyAutomator.i18n.proOnly.pro }</span>\n\t\t\t\t\t</a>\n\t\t\t\t` );\n\n\t\t\t\treturn $item;\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\t// Remove the unavailable items container\n\t\t\t$itemsList.unavailable.container.remove();\n\t\t}\n\n\t\t// Get the list of items\n\t\tconst $items = $itemsList.container.find( '.item-task-selector__option:not(.item-task-selector__option--no-results)' );\n\n\t\t// Listen changes on the search field\n        $searchField.on( 'input', () => {\n        \t// Get the current value\n            const query = $searchField.val().toLowerCase().replace( /\\s+|{|}/g, '' );\n\n            // Reset before searching\n            $items.removeClass( 'item-task-selector__option--show item-task-selector__option--hide' );\n\n            // Create variable to evaluate later if there were results\n            let hasResults = true;\n\n            // Check if the query is not empty\n            if ( ! isEmpty( query ) ){\n\t\t\t\t// If value it isn't empty then we have to check if there are going to be results, so false by default\n\t\t\t\thasResults = false;\n\n\t\t\t\t$.each( $items, ( index, item ) => {\n\t\t\t\t\tlet $item = $( item ),\n\t\t\t\t\t    text  = $item.data( 'search' );\n\n\t\t\t\t\tif ( text.search( query ) !== -1 ){\n\t\t\t\t\t    $item.addClass( 'item-task-selector__option--show' );\n\n\t\t\t\t\t    // At least one result, so true\n\t\t\t\t\t    hasResults = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t    $item.addClass( 'item-task-selector__option--hide' );\n\t\t\t\t\t}\n\t\t\t\t});\n            }\n\n            // Show and hide noResults\n            $itemsList.noResults.removeClass( 'item-task-selector__option--hide item-task-selector__option--show' );\n\n            if ( ! hasResults ){\n\t\t\t\t$itemsList.noResults.addClass( 'item-task-selector__option--show' );\n            }\n            else {\n\t\t\t\t$itemsList.noResults.addClass( 'item-task-selector__option--hide' )\n            }\n        });\n\n        // Append \"Cancel\" button\n        $optionsContainer.append( this.createCancelButton() );\n\n\t\t// Append the header to the main container\n        this.$container.append( $container );\n\t}\n\n\tcreateCancelButton(){\n\t\tlet $cancelButton = $( '<div/>', { 'class': 'uap-btn uap-btn--secondary' }).text( UncannyAutomator.i18n.cancel );\n\n\t\t$cancelButton.on( 'click', () => {\n\t\t\tnew ItemCreatorIntegrations( this.itemType, this.$item );\n\t\t});\n\n\t\treturn $cancelButton;\n\t}\n}\n\nexport default itemCreatorTaskSelector;\n\n\n// WEBPACK FOOTER //\n// ./src/components/itemCreatorTaskSelector.js","import {\n\tgetDOMElements,\n\tisDefined,\n\tvsprintf\n} from './Utilities.js';\n\nclass MetaboxNotice {\n\tconstructor( itemType, noticeType, noticeMessage ){\n\t\tthis.itemType \t\t= itemType;\n\t\tthis.noticeType \t= noticeType;\n\t\tthis.noticeMessage \t= noticeMessage;\n\n\t\t// Create notice\n        this.create();\n\t}\n\n\tcreate(){\n\t\t// Append to the metabox\n        let metabox = getDOMElements( 'metabox', {\n            type: this.itemType\n        });\n\n        // Get notice\n        let notice = this.createNotice();\n\n        // Append to the metabox\n        metabox.append( notice );\n\t}\n\n\tcreateNotice(){\n\t\tlet container = $( '<div/>', { 'class': 'metabox__notice' });\n\n\t\tif ( isDefined( this.noticeType ) ){\n\t\t\tcontainer.addClass( vsprintf( 'metabox__notice--%s', [ this.noticeType ] ) );\n\t\t}\n\n\t\tcontainer.html( this.noticeMessage );\n\t\treturn container;\n\t}\n}\n\nexport default MetaboxNotice;\n\n\n// WEBPACK FOOTER //\n// ./src/components/MetaboxNotice.js","import {\n\tisDefined,\n\tvsprintf\n} from './Utilities.js';\n\nclass SendFeedback {\n\n\tconstructor(){\n\t\tthis.build();\n\t}\n\n\tbuild(){\n\t\tlet sendFeedbackContainer = $( '<div/>', { 'class': 'uap-report-bug' });\n\n\t\t// Temporal\n\n\t\t/*\n\t\tif ( this.showAgain() ){\n\t\t\tsendFeedbackContainer.addClass( 'uap-report-bug--open' );\n\n\t\t\tlet sendFeedbackOverlay = $( '<div/>', { 'class': 'uap-report-bug__overlay' });\n\t\t\tlet sendFeedbackCircle = $( '<div/>', { 'class': 'uap-report-bug-circle' });\n\t\t\tlet sendFeedbackCircleContainer = $( '<div/>', { 'class': 'uap-report-bug-circle__container' });\n\n\t\t\tlet sendFeedbackCircleText = $( '<div/>', { 'class': 'uap-report-bug-circle__text' });\n\t\t\tsendFeedbackCircleText.text( vsprintf( UncannyAutomator.i18n.sendFeedback.message, [ 'Uncanny Automator' ] ) );\n\t\t\tsendFeedbackCircleText.appendTo( sendFeedbackCircleContainer );\n\n\t\t\tlet sendFeedbackDontShowContainer = $( '<div/>', { 'class': 'uap-report-bug-circle__dont-show' });\n\t\t\tlet sendFeedbackDontShowLabel = $( '<label/>', { 'class': 'uap-report-bug-circle-checkbox' });\n\t\t\tlet sendFeedbackDontShowSpan = $( '<span/>', { 'class': 'uap-report-bug-circle__span' });\n\t\t\tsendFeedbackDontShowSpan.text( UncannyAutomator.i18n.sendFeedback.dontShowAgain );\n\t\t\tsendFeedbackDontShowSpan.appendTo( sendFeedbackDontShowLabel );\n\t\t\tlet sendFeedbackDontShowInput = $( '<input/>', { 'class': 'uap-report-bug-circle-checkbox__input', 'type': 'checkbox' });\n\t\t\tlet sendFeedbackDontShowInputRender = $( '<div/>', { 'class': 'uap-report-bug-circle-checkbox__render' });\n\t\t\tsendFeedbackDontShowInputRender.prependTo( sendFeedbackDontShowLabel );\n\t\t\tsendFeedbackDontShowInput.prependTo( sendFeedbackDontShowLabel );\n\t\t\tsendFeedbackDontShowLabel.appendTo( sendFeedbackDontShowContainer );\n\t\t\tsendFeedbackDontShowContainer.appendTo( sendFeedbackCircleContainer );\n\n\t\t\tlet sendFeedbackFooter = $( '<div/>', { 'class': 'uap-report-bug-circle__footer' });\n\t\t\tlet sendFeedbackFooterBtn = $( '<div/>', { 'class': 'uap-report-bug-circle__btn' });\n\t\t\tsendFeedbackFooterBtn.text( UncannyAutomator.i18n.sendFeedback.gotIt );\n\t\t\tsendFeedbackFooterBtn.appendTo( sendFeedbackFooter );\n\t\t\tsendFeedbackFooter.appendTo( sendFeedbackCircleContainer );\n\n\t\t\tsendFeedbackCircleContainer.appendTo( sendFeedbackCircle );\n\t\t\tsendFeedbackCircle.appendTo( sendFeedbackOverlay );\n\t\t\tsendFeedbackOverlay.appendTo( sendFeedbackContainer );\n\n\t\t\t// Bind\n\t\t\tthis.bind( sendFeedbackFooterBtn, sendFeedbackDontShowInput, sendFeedbackOverlay, sendFeedbackContainer );\n\t\t}\n\t\t*/\n\n\t\t// Check version\n\t\tlet version,\n\t\t\tutmSource;\n\n\t\tif ( ! isDefined( UncannyAutomator.wp ) || ! UncannyAutomator.wp ){\n\t\t\tversion   = vsprintf( 'Uncanny Automator %s', [ UncannyAutomator.version ] );\n\t\t\tutmSource = 'uncanny_automator';\n\t\t}\n\t\telse {\n\t\t\tversion   = vsprintf( 'Uncanny Automator %s %s', [ 'Pro', UncannyAutomator.version ] );\n\t\t\tutmSource = vsprintf( 'uncanny_automator_%s', [ 'pro' ] );\n\t\t}\n\n\t\tlet sendFeedbackButton = $( '<a/>', {\n\t\t\t'class': 'uap-report-bug__btn',\n\t\t\t'uap-tooltip': UncannyAutomator.i18n.sendFeedback.title,\n\t\t\t'uap-flow': 'left',\n\t\t\t'href': vsprintf( 'https://automatorplugin.com/feedback/?version=%s&utm_source=%s&utm_medium=%s', [ version, utmSource, 'send_feedback' ] ),\n\t\t\t'target': '_blank'\n\t\t});\n\n\t\tlet sendFeedbackButtonIcon = $( '<span/>', { 'class': 'uap-report-bug__icon' });\n\t\tsendFeedbackButton.append( sendFeedbackButtonIcon );\n\t\tsendFeedbackButton.appendTo( sendFeedbackContainer );\n\n\t\t// Append to the body\n\n\t\t$('body').append( sendFeedbackContainer );\n\t}\n\n\tbind( close_btn, dont_show_again_checkbox, overlay, mainContainer ){\n\n\t\tclose_btn.on( 'click', function(){\n\t\t\t// Storage\n\t\t\tif ( dont_show_again_checkbox.is(':checked') ){\n\t\t\t\tlocalStorage.uapSendFeedbackWelcome = 'hide';\n\t\t\t}\n\n\t\t\t// Hide\n\t\t\toverlay.fadeOut(150);\n\t\t\tmainContainer.removeClass( 'uap-report-bug--open' );\n\t\t});\n\n\t}\n\n\tshowAgain(){\n\t\t/**\n\t\t * Version 2.0 introduced the recipe selector, which is\n\t\t * shown as an overlay on page load. As having two overlays\n\t\t * is bad for UX, we will hide this one\n\t\t */\n\t\t\n\t\tlet output = false;\n\n\t\t/*\n\t\tlet output = true;\n\n\t\tif ( localStorage.uapSendFeedbackWelcome && localStorage.uapSendFeedbackWelcome == 'hide' ){\n\t\t\toutput = false;\n\t\t}\n\t\t*/\n\n\t\treturn output;\n\t}\n}\n\nexport default SendFeedback;\n\n\n// WEBPACK FOOTER //\n// ./src/components/SendFeedback.js","import {\n    restCall\n} from './Utilities.js';\n\nclass RecipeTitle {\n    constructor(){\n        this.elements = {\n            container: $( '#titlediv' ),\n            input:     $( '#titlediv #title' ),\n            status:    {}\n        }\n\n        this.publishedTitle = this.elements.input.val();\n\n        // Create DOM elements\n        this.createStatus();\n\n        // Bind changes\n        this.bindChanges();\n\n        // Unbind beforeunload.edit-post\n        this.notSavedAlert();\n    }\n\n    createStatus(){\n        let container    = $( '<div/>', { 'class': 'uap-title-status' }),\n            uapContainer = $( '<div/>', { 'class': 'uap' });\n\n        // Saving\n        let saving       = $( '<div/>', { 'class': 'uo-status uo-status--saving' }),\n            savingIcon   = $( '<span/>', { 'class': 'uo-status-icon uo-icon uo-icon--loading uo-icon--rotate' }),\n            savingText   = $( '<span/>', { 'class': 'uo-status__text' }).text( UncannyAutomator.i18n.title.saving );\n\n        saving.append( savingIcon );\n        saving.append( savingText );\n\n        this.elements.status.saving = saving;\n\n        // Saved\n        let saved        = $( '<div/>', { 'class': 'uo-status uo-status--saved' }),\n            savedIcon    = $( '<span/>', { 'class': 'uo-status-icon uo-icon uo-icon--check' }),\n            savedText    = $( '<span/>', { 'class': 'uo-status__text' }).text( UncannyAutomator.i18n.title.saved );\n\n        saved.append( savedIcon );\n        saved.append( savedText );\n\n        this.elements.status.saved = saved;\n\n        uapContainer.append( saving );\n        uapContainer.append( saved );\n        container.append( uapContainer );\n\n        // Append to the WP container\n        this.elements.container.append( container );\n    }\n\n    setStatusSaving(){\n        this.elements.status.saving.stop().fadeIn( 150 );\n    }\n\n    setStatusSaved(){\n        this.elements.status.saving.stop().fadeOut( 150 );\n\n        this.elements.status.saved.stop().fadeIn( 150, () => {\n            setTimeout( () => {\n                this.elements.status.saved.fadeOut( 150 );\n            }, 3000 );\n        });\n    }\n\n    revertChanges(){\n        // Revert the title\n        this.elements.input.val( this.publishedTitle );\n\n        // Stop the saving animation\n        this.elements.status.saving.stop().fadeOut( 150 );\n    }\n\n    bindChanges(){\n        let typingTimeout;\n\n        // Bind\n        this.elements.input.on( 'input', () => {\n            // Clear the timeout if it has already been set.\n            // This will prevent the previous task from executing\n            clearTimeout( typingTimeout );\n\n            // Wait 1.5 seconds\n            typingTimeout = setTimeout( () => {\n                // Set status saving\n                this.setStatusSaving();\n\n                // Update title\n                this.updateTitle();\n            }, 1500 );\n        });\n    }\n\n    getTitle(){\n        return this.elements.input.val();\n    }\n\n    updateTitle(){\n        restCall( 'change_post_title', {\n            post_ID:    UncannyAutomator.recipe.id,\n            post_title: this.getTitle()\n        }, () => {\n            this.setStatusSaved();\n\n            // Update the published title\n            this.publishedTitle = this.getTitle();\n        }, () => {\n            console.log( '‼️ ERROR-TODO. Couldn\\'t save the title' );\n\n            // Revert the changes\n            this.revertChanges();\n        });\n    }\n\n    notSavedAlert(){\n        $(document).ready( () => {\n            $( window ).off( 'beforeunload.edit-post' );\n        });\n    }\n}\n\nexport default RecipeTitle;\n\n\n// WEBPACK FOOTER //\n// ./src/components/RecipeTitle.js","import {\n\trestCall\n} from './Utilities.js';\n\nclass Taxonomies {\n\tconstructor(){\n\t\t// Save categories\n\t\tnew Categories();\n\n\t\t// Save tags\n\t\tnew Tags();\n\t}\n}\n\nclass Categories {\n\tconstructor(){\n\t\t// Get elements\n\t\tthis.getElements();\n\n\t\t// Check if the required element exist before adding\n\t\t// the event listeners\n\t\tif ( this.$elements.allCategories.length == 1 ){\n\t\t\t// Listen changes to the checkboxes\n\t\t\tthis.listenCheckboxes();\n\t\t}\n\t}\n\n\tgetElements(){\n\t\tthis.$elements = {\n\t\t\tcontainer:     $( '#recipe_categorydiv' ),\n\t\t\tallCategories: $( '#recipe_categorychecklist' )\n\t\t}\n\t}\n\n\tlistenCheckboxes(){\n\t\t// Listen changes to each checkbox\n\t\tthis.$elements.container.on( 'change', 'input[type=\"checkbox\"][name=\"tax_input[recipe_category][]\"], .popular-category input[type=\"checkbox\"]', ( event ) => {\n\t\t\t// Get checkbox\n\t\t\tconst $checkbox = $( event.currentTarget );\n\n\t\t\t// Save category\n\t\t\tthis.saveCategory( $checkbox );\n\t\t});\n\n\t\t// Listen when the user adds a new category. This will be\n\t\t// triggered when WP creates a new category after the user\n\t\t// used the \"+ Add New Category\" form\n\t\tnew MutationObserver(( mutations ) => {\n\t\t\t// Iterate mutations\n\t\t\tmutations.forEach( ( mutation ) => {\n\t\t\t\t// Iterate new categories\n\t\t\t\tmutation.addedNodes.forEach(( addedNode ) => {\n\t\t\t\t\t// Get the checkbox of the new category\n\t\t\t\t\tconst $checkbox = $( addedNode ).find( 'input[type=\"checkbox\"][name=\"tax_input[recipe_category][]\"]' );\n\n\t\t\t\t\t// Save category\n\t\t\t\t\tthis.saveCategory( $checkbox );\n\t\t\t\t});\n\t\t\t});\n\t\t}).observe( this.$elements.allCategories[0], {\n\t\t\tchildList: true\n\t\t});\n\t}\n\n\tgetCheckboxData( $checkbox ){\n\t\treturn {\n\t\t\tid:        $checkbox.val(),\n\t\t\tisChecked: $checkbox.is( ':checked' ),\n\t\t}\n\t}\n\n\tsaveCategory( $checkbox ){\n\t\t// Get the data\n\t\tlet checkboxData = this.getCheckboxData( $checkbox );\n\n\t\t// Set checkbox as loading\n\t\tthis.setStatus( 'loading', true, $checkbox );\n\n\t\t// Do call\n\t\trestCall( 'set_recipe_terms', {\n\t\t\tterm_id:      'recipe_category',\n\t\t\trecipe_id:    UncannyAutomator.recipe.id,\n\t\t\tcategory_id:  checkboxData.id,\n\t\t\tset_category: checkboxData.isChecked\n\t\t}, ( response ) => {\n\t\t\t// If the call (not necessarily the task) was successful...\n\n\t\t\tif ( response.success ){\n\t\t\t\t// If everything went well...\n\t\t\t\t// Show a green check icon\n\t\t\t\tthis.setStatus( 'success', true, $checkbox );\n\n\t\t\t\t// Remove it after 2 seconds\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// Remove the green check icon\n\t\t\t\t\tthis.setStatus( 'success', false, $checkbox );\n\t\t\t\t}, 2000 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log( '‼️ ERROR-TODO. Couldn\\'t change the status of the recipe category' );\n\n\t\t\t\t// If something went wrong,\n\t\t\t\t// revert the value of the checkbox\n\t\t\t\tthis.revertCheckboxValue( $checkbox );\n\n\t\t\t\t// Show an error icon\n\t\t\t\tthis.setStatus( 'error', true, $checkbox );\n\t\t\t\t// Remove it after 2 seconds\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// Remove the error icon\n\t\t\t\t\tthis.setStatus( 'error', false, $checkbox );\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Remove loading animation\n\t\t\tthis.setStatus( 'loading', false, $checkbox );\n\t\t}, ( response ) => {\n\t\t\t// On error...\n\n\t\t\t// Revert the value of the checkbox\n\t\t\tthis.revertCheckboxValue( $checkbox );\n\n\t\t\t// Remove loading animation\n\t\t\tthis.setStatus( 'loading', false, $checkbox );\n\n\t\t\t// Show an error icon\n\t\t\tthis.setStatus( 'error', true, $checkbox );\n\t\t\t// Remove it after 2 seconds\n\t\t\tsetTimeout(() => {\n\t\t\t\t// Remove the error icon\n\t\t\t\tthis.setStatus( 'error', false, $checkbox );\n\t\t\t});\n\t\t}, {\n\t\t\trequiresRecipesObject: false,\n\t\t\trenderUI:              false\n\t\t});\n\t}\n\n\trevertCheckboxValue( $checkbox ){\n\t\t// Revert the value of the checkbox\n\t\t$checkbox.prop( 'checked', ! $checkbox.is( ':checked' ) );\n\t}\n\n\tsetStatus( status = '', enable = true, $checkbox ){\n\t\t// Get label container\n\t\tconst $label = $checkbox.closest( '.selectit' );\n\n\t\t// Check what status we have to set or unset\n\t\tif ( status == 'loading' ){\n\t\t\t// Check if we have to add or remove the loading status\n\t\t\tif ( enable ){\n\t\t\t\t// Add loading animation\n\t\t\t\t$label.addClass( 'uap-taxonomy-loading' );\n\n\t\t\t\t// Disable checkbox\n\t\t\t\t$checkbox.prop( 'disabled', true );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Remove loading animation\n\t\t\t\t$label.removeClass( 'uap-taxonomy-loading' );\n\n\t\t\t\t// Enable checkbox\n\t\t\t\t$checkbox.prop( 'disabled', false );\n\t\t\t}\n\t\t}\n\t\telse if ( status == 'success' ){\n\t\t\t// Check if we have to add or remove the loading status\n\t\t\tif ( enable ){\n\t\t\t\t// Add loading animation\n\t\t\t\t$label.addClass( 'uap-taxonomy-success' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Remove loading animation\n\t\t\t\t$label.removeClass( 'uap-taxonomy-success' );\n\t\t\t}\n\t\t}\n\t\telse if ( status == 'error' ){\n\t\t\t// Check if we have to add or remove the loading status\n\t\t\tif ( enable ){\n\t\t\t\t// Add loading animation\n\t\t\t\t$label.addClass( 'uap-taxonomy-error' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Remove loading animation\n\t\t\t\t$label.removeClass( 'uap-taxonomy-error' );\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass Tags {\n\tconstructor(){\n\t\t// Get elements\n\t\tthis.getElements();\n\n\t\t// Check if the required elements exist before adding\n\t\t// the event listeners\n\t\tif ( this.$elements.tagsTextarea.length == 1 ){\n\t\t\t// Listen modifications to the textarea\n\t\t\tthis.listenModificationsToTags();\n\t\t}\n\t}\n\n\tgetElements(){\n\t\tthis.$elements = {\n\t\t\tcontainer:    $( '#tagsdiv-recipe_tag' ),\n\t\t\ttagsTextarea: $( 'textarea#tax-input-recipe_tag' ),\n\t\t\ttagsList:     $( '#tagsdiv-recipe_tag .tagchecklist' )\n\t\t}\n\t}\n\n\tlistenModificationsToTags(){\n\t\t// Listen when the user adds a new tag. This will be\n\t\t// triggered when the user uses the input to add tags\n\t\tnew MutationObserver(( mutations ) => {\n\t\t\t// Save tags\n\t\t\tthis.saveTags();\n\t\t}).observe( this.$elements.tagsList[0], {\n\t\t\tchildList: true\n\t\t});\n\t}\n\n\tsaveTags(){\n\t\t// Get tags\n\t\tconst tags = this.getTags();\n\n\t\t// Set checkbox as loading\n\t\tthis.setStatus( 'loading', true );\n\n\t\t// Do call\n\t\trestCall( 'set_recipe_terms', {\n\t\t\tterm_id:      'recipe_tag',\n\t\t\trecipe_id:    UncannyAutomator.recipe.id,\n\t\t\ttags:         tags,\n\t\t}, ( response ) => {\n\t\t\t// If the call (not necessarily the task) was successful...\n\n\t\t\tif ( response.success ){\n\t\t\t\t// If everything went well...\n\t\t\t\t// Show a green check icon\n\t\t\t\tthis.setStatus( 'success', true );\n\n\t\t\t\t// Remove it after 2 seconds\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// Remove the green check icon\n\t\t\t\t\tthis.setStatus( 'success', false );\n\t\t\t\t}, 2000 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Reload\n\t\t\t\t// location.reload();\n\t\t\t}\n\n\t\t\t// Remove loading animation\n\t\t\tthis.setStatus( 'loading', false );\n\t\t}, ( response ) => {\n\t\t\t// On error...\n\n\t\t\t// Reload\n\t\t\tlocation.reload();\n\t\t}, {\n\t\t\trequiresRecipesObject: false,\n\t\t\trenderUI:              false\n\t\t});\n\t}\n\n\tsetStatus( status = '', enable = true ){\n\t\t// Check what status we have to set or unset\n\t\tif ( status == 'loading' ){\n\t\t\t// Check if we have to add or remove the loading status\n\t\t\tif ( enable ){\n\t\t\t\t// Add loading animation\n\t\t\t\tthis.$elements.container.addClass( 'uap-tags-loading' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Remove loading animation\n\t\t\t\tthis.$elements.container.removeClass( 'uap-tags-loading' );\n\t\t\t}\n\t\t}\n\t\telse if ( status == 'success' ){\n\t\t\t// Check if we have to add or remove the loading status\n\t\t\tif ( enable ){\n\t\t\t\t// Add loading animation\n\t\t\t\tthis.$elements.container.addClass( 'uap-tags-success' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Remove loading animation\n\t\t\t\tthis.$elements.container.removeClass( 'uap-tags-success' );\n\t\t\t}\n\t\t}\n\t\telse if ( status == 'error' ){\n\t\t\t// Check if we have to add or remove the loading status\n\t\t\tif ( enable ){\n\t\t\t\t// Add loading animation\n\t\t\t\tthis.$elements.container.addClass( 'uap-tags-error' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Remove loading animation\n\t\t\t\tthis.$elements.container.removeClass( 'uap-tags-error' );\n\t\t\t}\n\t\t}\n\t}\n\n\tgetTags(){\n\t\t// Get tags separated by comma\n\t\tconst tagsCommaSeparated = this.$elements.tagsTextarea.val();\n\n\t\t// Create array\n\t\tconst tagsArray = tagsCommaSeparated.split( ',' );\n\n\t\t// Return both\n\t\treturn {\n\t\t\tasArray:        tagsArray,\n\t\t\tcommaSeparated: tagsCommaSeparated\n\t\t}\n\t}\n}\n\nexport default Taxonomies;\n\n\n// WEBPACK FOOTER //\n// ./src/components/Taxonomies.js"],"sourceRoot":""}