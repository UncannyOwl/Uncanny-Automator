{"version":3,"file":"bundle.min.js","mappings":"kSAmhCA,QAhgCMA,WACL,c,4FAAa,SAEZC,iBAAiBC,OAAOC,aAAaC,MAAOC,EAAAA,EAAAA,IAAoB,YAGhEC,KAAKC,S,2CAGN,WAEC,IAAIC,EAAW,GAGf,OAASP,iBAAiBC,OAAOC,aAAaC,MAC7C,IAAK,gBAKJH,iBAAiBC,OAAOC,aAAaM,SAAU,GAG/CC,EAAAA,EAAAA,IAAc,YAIdF,EAAWF,KAAKK,uBAChB,MAED,IAAK,cAEJH,EAAWF,KAAKM,kBAChB,MAED,IAAK,iBAEJF,EAAAA,EAAAA,IAAc,YAGdT,iBAAiBC,OAAOW,WAAY,EAGpC,IAAIC,EAAAA,EAGJN,EAAWF,KAAKS,mBAKlB,IAAIC,GAAWC,EAAAA,EAAAA,IAAgB,UAAW,CAChCC,KAAM,WAGVC,QAAQC,IAAK,yBAA0B,oDAGvCJ,EAASK,QAASb,K,kCAGzB,WAEC,IAAIc,EAAgBC,GAAAA,CAAE,qCAAD,OACStB,iBAAiBC,OAAOsB,iBAAmB,sBAAwB,GAD5E,yZAQXvB,iBAAiBwB,KAAKtB,aAAauB,SAASC,SARjC,uTAcX1B,iBAAiBwB,KAAKtB,aAAauB,SAAnC,IAdW,+HAkDrB,OA1BAJ,EAAcM,KAAM,SAAUP,QAASf,KAAKuB,kBAGrBP,EAAcM,KAAM,yBAG1BE,GAAI,SAAS,SAAEC,GAE/B,IAGIC,EAHUT,GAAAA,CAAGQ,EAAME,eAGEC,KAAM,WAG/B7B,EAAAA,EAAAA,IAAoB,aAAc,CACjC8B,OAAQH,IAIT/B,iBAAiBC,OAAOC,aAAaC,KAAO,cAG5C,IAAIgC,KAIEd,I,6BAGR,WAEC,IAAIe,EAAoBd,GAAAA,CAAE,qCAAD,OACKtB,iBAAiBC,OAAOsB,iBAAmB,sBAAwB,GADxE,kMAoBzB,OATAa,EAAkBT,KAAM,SAAUP,QAASf,KAAKuB,kBAGzBQ,EAAkBT,KAAM,iBAG9BU,OAAQhC,KAAKiC,oBAGvBF,I,8BAGR,WAEC,IAAMG,EAAajB,GAAAA,CAAE,eAGjBkB,EAAUlB,GAAAA,CAAE,2CAGZmB,EAAgB,IAGpBrC,EAAAA,EAAAA,IAAoB,gBAAiB,CACpC8B,OAAQ,eACRD,KAAM,MAGP7B,EAAAA,EAAAA,IAAoB,gBAAiB,CACpC8B,OAAQ,UACRD,KAAM,KAIP,IAAIS,EAAQ1C,iBAAiBC,OAAOC,aAAayC,UAAUD,MAI3D,cAHOA,EAAME,cAGJ5C,iBAAiBC,OAAOC,aAAagC,QAC7C,IAAK,eAEJ,IAAIW,EAAiBvB,GAAAA,CAAE,0FAGnBwB,EAAc,IAAIC,EAAAA,EAAO,SAAU,CACtCC,SAAU,gBACVC,WAAY,cACZC,MAAOlD,iBAAiBwB,KAAKtB,aAAaiD,aAAaC,iBACvDC,aAAcrD,iBAAiBC,OAAOC,aAAa+B,KAAKkB,aAAaL,YACrEQ,YAAY,EACZC,QAAS,CACR,CACCC,MAAO,QACPC,KAAOzD,iBAAiBwB,KAAKtB,aAAaiD,aAAaO,wBAExD,CACCF,MAAO,KACPC,KAAOzD,iBAAiBwB,KAAKtB,aAAaiD,aAAaQ,qBAExD,CACCH,MAAO,WACPC,KAAOzD,iBAAiBwB,KAAKtB,aAAaiD,aAAaS,8BAI1DnB,EAAcoB,KAAMf,GAGpB,IAAIgB,EAAa,IAAIf,EAAAA,EAAO,OAAQ,CACnCC,SAAU,gBACVC,WAAY,mBACZI,aAAcrD,iBAAiBC,OAAOC,aAAa+B,KAAKkB,aAAaY,iBACrEb,MAAOlD,iBAAiBwB,KAAKtB,aAAaiD,aAAaa,gBAEvDV,YAAY,EACZW,gBAAgB,IAEjBxB,EAAcoB,KAAMC,GAGpB,IAAII,EAA0BpB,EAAYqB,iBAO1CL,EAAWM,oBACXN,EAAWO,iBAEXxB,EAAeR,OAAQ6B,GAEvB,IAAII,EAAyBR,EAAWK,iBACxCtB,EAAeR,OAAQiC,GAGvB9B,EAAQH,OAAQQ,GAGhB,IAAI0B,EAAgB,IAAIxB,EAAAA,EAAO,QAAS,CACvCC,SAAU,gBACVC,WAAY,WACZuB,KAAM,uCACNtB,MAAOlD,iBAAiBwB,KAAKtB,aAAaiD,aAAasB,wBACvDnB,YAAY,EACZD,aAAcrD,iBAAiBC,OAAOC,aAAa+B,KAAKkB,aAAauB,SACrEnB,QAAS,CACR,CACCC,MAAO,kBACPC,KAAMzD,iBAAiBwB,KAAKtB,aAAaiD,aAAawB,oCAEvD,CACCnB,MAAO,aACPC,KAAMzD,iBAAiBwB,KAAKtB,aAAaiD,aAAayB,sCAIzDnC,EAAcoB,KAAMU,GAGpB,IAAIM,EAA4BN,EAAcJ,iBAuC9C,GAtCA3B,EAAQH,OAAQwC,GAGhBX,EAAwBrC,GAAI,0BAA0B,YAErDzB,EAAAA,EAAAA,IAAoB,gBAAiB,CACpC8B,OAAQ,eACRD,KAAM,CACLa,YAAaA,EAAYgC,iBAK5BR,EAAuBzC,GAAI,0BAA0B,YAEpDzB,EAAAA,EAAAA,IAAoB,gBAAiB,CACpC8B,OAAQ,eACRD,KAAM,CACL8B,iBAAkBD,EAAWgB,iBAMhCD,EAA0BhD,GAAI,0BAA0B,YAEvDzB,EAAAA,EAAAA,IAAoB,gBAAiB,CACpC8B,OAAQ,eACRD,KAAM,CACLyC,SAAUH,EAAcO,cAK1B,IAAI3C,KAImE,cAAnEnC,iBAAiBC,OAAOC,aAAa+B,KAAKkB,aAAauB,SAA0B,CAErF,IAAMK,EAAmBzD,GAAAA,CAAE,qEAAD,OAErBtB,iBAAiBwB,KAAKtB,aAAaiD,aAAa6B,iBAF3B,qCAM1BxC,EAAQH,OAAQ0C,QAEZ,GAAwE,mBAAnE/E,iBAAiBC,OAAOC,aAAa+B,KAAKkB,aAAauB,SAA+B,CAE/F,IAAIO,EAAuB3D,GAAAA,CAAG,SAAU,CACvC,MAAS,iBAIU,CACnB,CACC0B,SAAY,gBACZkC,UAAY,OACZjC,WAAY,YACZI,aAAcrD,iBAAiBC,OAAOC,aAAa+B,KAAKkB,aAAagC,UACrEjC,MAAOlD,iBAAiBwB,KAAKtB,aAAakF,QAAQD,UAClD7B,YAAY,EACZW,gBAAgB,GAEjB,CACCjB,SAAY,gBACZkC,UAAY,OACZjC,WAAY,WACZI,aAAcrD,iBAAiBC,OAAOC,aAAa+B,KAAKkB,aAAakC,SACrEnC,MAAOlD,iBAAiBwB,KAAKtB,aAAakF,QAAQC,SAClD/B,YAAY,EACZW,gBAAgB,GAEjB,CACCjB,SAAY,gBACZkC,UAAY,OACZjC,WAAY,QACZI,aAAcrD,iBAAiBC,OAAOC,aAAa+B,KAAKkB,aAAamC,MACrEpC,MAAOlD,iBAAiBwB,KAAKtB,aAAakF,QAAQE,MAClDhC,YAAY,EACZW,gBAAgB,GAEjB,CACCjB,SAAY,gBACZkC,UAAY,OACZjC,WAAY,WACZI,aAAcrD,iBAAiBC,OAAOC,aAAa+B,KAAKkB,aAAaoC,SACrErC,MAAOlD,iBAAiBwB,KAAKtB,aAAakF,QAAQG,SAClDjC,YAAY,EACZW,gBAAgB,GAEjB,CACCjB,SAAY,gBACZkC,UAAY,OACZjC,WAAY,cACZI,aAAcrD,iBAAiBC,OAAOC,aAAa+B,KAAKkB,aAAaqC,YACrEtC,MAAOlD,iBAAiBwB,KAAKtB,aAAakF,QAAQI,YAClDlC,YAAY,EACZW,gBAAgB,GAEjB,CACCjB,SAAY,gBACZkC,UAAY,OACZjC,WAAY,WACZI,aAAcrD,iBAAiBC,OAAOC,aAAa+B,KAAKkB,aAAasC,SACrEvC,MAAOlD,iBAAiBwB,KAAKtB,aAAakF,QAAQK,SAClDC,YAAa1F,iBAAiBwB,KAAKtB,aAAakF,QAAQO,oBACxDrC,YAAY,EACZW,gBAAgB,GAEjB,CACCjB,SAAY,gBACZkC,UAAY,SACZjC,WAAY,OACZI,cAAgBuC,EAAAA,EAAAA,IAAS5F,iBAAiBC,OAAOC,aAAa+B,KAAKkB,aAAa0C,MAAuE,aAA9D7F,iBAAiBC,OAAOC,aAAa+B,KAAKkB,aAAa0C,KAChJ3C,MAAOlD,iBAAiBwB,KAAKtB,aAAakF,QAAQS,KAClDvC,YAAY,EACZW,gBAAgB,EAChBV,QAASuC,OAAOC,KAAMrD,GAAQsD,KAAK,SAAEC,EAAKC,GACzC,MAAO,CACN1C,MAAOyC,EACPxC,KAAOf,EAAOuD,QAIjB,CACCjD,SAAU,gBACVkC,UAAW,QACXjC,WAAY,YACZuB,KAAM,YACNnB,aAAcrD,iBAAiBC,OAAOkG,iBAAsBP,EAAAA,EAAAA,IAAS5F,iBAAiBC,OAAOC,aAAa+B,KAAKkB,aAAaiD,WAAiF,KAAnEpG,iBAAiBC,OAAOC,aAAa+B,KAAKkB,aAAaiD,UAAqB,KACtNC,UAAYrG,iBAAiBC,OAAOkG,gBACpCjD,MAAOlD,iBAAiBwB,KAAKtB,aAAakG,UAC1CnC,gBAAgB,EAChBV,QAAS,CAAC,CACRC,MAAO,MACPC,KAAOzD,iBAAiBwB,KAAK8E,KAE9B,CACC9C,MAAO,KACPC,KAAOzD,iBAAiBwB,KAAK+E,OAOnBC,SAAQ,SAAEC,GAEvB,IAAMC,EAAQ,IAAI3D,EAAAA,EAAO0D,EAAYvB,UAAWuB,GAG5CE,EAAoBD,EAAMvC,iBAE9Bc,EAAqB5C,OAAQsE,GAM7BD,EAAMtC,oBACNsC,EAAMrC,iBAkBN5B,EAAcoB,KAAM6C,MAIrBlE,EAAQH,OAAQ4C,GAEjB,MAED,IAAK,UAEgB,CACnB,CACCjC,SAAY,gBACZkC,UAAY,OACZjC,WAAY,YACZI,aAAcrD,iBAAiBC,OAAOC,aAAa+B,KAAKmD,QAAQD,UAChEjC,MAAOlD,iBAAiBwB,KAAKtB,aAAakF,QAAQD,UAClD7B,YAAY,EACZW,gBAAgB,GAEjB,CACCjB,SAAY,gBACZkC,UAAY,OACZjC,WAAY,WACZI,aAAcrD,iBAAiBC,OAAOC,aAAa+B,KAAKmD,QAAQC,SAChEnC,MAAOlD,iBAAiBwB,KAAKtB,aAAakF,QAAQC,SAClD/B,YAAY,EACZW,gBAAgB,GAEjB,CACCjB,SAAY,gBACZkC,UAAY,OACZjC,WAAY,QACZI,aAAcrD,iBAAiBC,OAAOC,aAAa+B,KAAKmD,QAAQE,MAChEpC,MAAOlD,iBAAiBwB,KAAKtB,aAAakF,QAAQE,MAClDhC,YAAY,EACZW,gBAAgB,GAEjB,CACCjB,SAAY,gBACZkC,UAAY,OACZjC,WAAY,WACZI,aAAcrD,iBAAiBC,OAAOC,aAAa+B,KAAKmD,QAAQG,SAChErC,MAAOlD,iBAAiBwB,KAAKtB,aAAakF,QAAQG,SAClDjC,YAAY,EACZW,gBAAgB,GAEjB,CACCjB,SAAY,gBACZkC,UAAY,OACZjC,WAAY,cACZI,aAAcrD,iBAAiBC,OAAOC,aAAa+B,KAAKmD,QAAQI,YAChEtC,MAAOlD,iBAAiBwB,KAAKtB,aAAakF,QAAQI,YAClDlC,YAAY,EACZW,gBAAgB,GAEjB,CACCjB,SAAY,gBACZkC,UAAY,OACZjC,WAAY,WACZI,aAAcrD,iBAAiBC,OAAOC,aAAa+B,KAAKmD,QAAQK,SAChEvC,MAAOlD,iBAAiBwB,KAAKtB,aAAakF,QAAQK,SAClDC,YAAa1F,iBAAiBwB,KAAKtB,aAAakF,QAAQO,oBACxDrC,YAAY,EACZW,gBAAgB,GAEjB,CACCjB,SAAY,gBACZkC,UAAY,SACZjC,WAAY,OACZI,cAAgBuC,EAAAA,EAAAA,IAAS5F,iBAAiBC,OAAOC,aAAa+B,KAAKmD,QAAQS,MAAkE,aAAzD7F,iBAAiBC,OAAOC,aAAa+B,KAAKmD,QAAQS,KACtI3C,MAAOlD,iBAAiBwB,KAAKtB,aAAakF,QAAQS,KAClDvC,YAAY,EACZW,gBAAgB,EAChBV,QAASuC,OAAOC,KAAMrD,GAAQsD,KAAK,SAAEC,EAAKC,GACzC,MAAO,CACN1C,MAAOyC,EACPxC,KAAOf,EAAOuD,QAIjB,CACCjD,SAAU,gBACVkC,UAAW,QACXjC,WAAY,YACZuB,KAAM,YACNnB,aAAcrD,iBAAiBC,OAAOkG,iBAAsBP,EAAAA,EAAAA,IAAS5F,iBAAiBC,OAAOC,aAAa+B,KAAKmD,QAAQgB,WAA4E,KAA9DpG,iBAAiBC,OAAOC,aAAa+B,KAAKmD,QAAQgB,UAAqB,KAC5MC,UAAYrG,iBAAiBC,OAAOkG,gBACpCjD,MAAOlD,iBAAiBwB,KAAKtB,aAAakG,UAC1CnC,gBAAgB,EAChBV,QAAS,CAAC,CACRC,MAAO,MACPC,KAAOzD,iBAAiBwB,KAAK8E,KAE9B,CACC9C,MAAO,KACPC,KAAOzD,iBAAiBwB,KAAK+E,OAOnBC,SAAQ,SAAEC,GAEvB,IAAMC,EAAQ,IAAI3D,EAAAA,EAAO0D,EAAYvB,UAAWuB,GAG5CE,EAAoBD,EAAMvC,iBAE9B3B,EAAQH,OAAQsE,GAMhBD,EAAMtC,oBACNsC,EAAMrC,iBAGN5B,EAAcoB,KAAM6C,MAIrB,IAAIE,EAAuB,IAAI7D,EAAAA,EAAO,QAAS,CAC9CC,SAAY,gBACZC,WAAY,WACZuB,KAAM,kCACNtB,MAAOlD,iBAAiBwB,KAAKtB,aAAakF,QAAQyB,uBAClDvD,YAAY,EACZD,aAAcrD,iBAAiBC,OAAOC,aAAa+B,KAAKmD,QAAQV,SAChEnB,QAAS,CACR,CACCC,MAAO,uBACPC,KAAMzD,iBAAiBwB,KAAKtB,aAAakF,QAAQ0B,iCAElD,CACCtD,MAAO,aACPC,KAAMzD,iBAAiBwB,KAAKtB,aAAakF,QAAQ2B,qCAIpDtE,EAAcoB,KAAM+C,GAGpB,IAAII,EAAmCJ,EAAqBzC,iBAyB5D,GAxBA3B,EAAQH,OAAQ2E,GAGhBA,EAAiCnF,GAAI,0BAA0B,WAE9D,IAAIoF,EAAe,GAGnBxE,EAAc+D,SAAQ,SAAEzD,GAEvBkE,EAAclE,EAAMmE,gBAAgBjE,YAAeF,EAAM+B,eAI1D1E,EAAAA,EAAAA,IAAoB,gBAAiB,CACpC8B,OAAQ,UACRD,KAAMgF,IAIP,IAAI9E,KAI8D,cAA9DnC,iBAAiBC,OAAOC,aAAa+B,KAAKmD,QAAQV,SAA0B,CAEhF,IAAMK,EAAmBzD,GAAAA,CAAE,qEAAD,OAErBtB,iBAAiBwB,KAAKtB,aAAakF,QAAQJ,iBAFtB,qCAM1BxC,EAAQH,OAAQ0C,QAEZ,GAAmE,wBAA9D/E,iBAAiBC,OAAOC,aAAa+B,KAAKmD,QAAQV,SAAoC,CAE/F,IAAIO,EAAuB3D,GAAAA,CAAG,SAAU,CACvC,MAAS,iBAIN6F,EAAmB,IAAIpE,EAAAA,EAAO,SAAU,CAC3CC,SAAc,gBACdC,WAAc,mBACdC,MAAclD,iBAAiBwB,KAAKtB,aAAakF,QAAQgC,sBACzD/D,aAAcrD,iBAAiBC,OAAOC,aAAa+B,KAAKmD,QAAQ+B,iBAChEE,aAAc,QACd3B,YAAc1F,iBAAiBwB,KAAKtB,aAAakF,QAAQkC,4BACzDhE,YAAc,EACdC,QAAS,CACR,CACCC,MAAO,QACPC,KAAOzD,iBAAiBwB,KAAKtB,aAAakF,QAAQE,OAEnD,CACC9B,MAAO,WACPC,KAAOzD,iBAAiBwB,KAAKtB,aAAakF,QAAQG,aAIrD9C,EAAcoB,KAAMsD,GAGpB,IAAII,EAAoBJ,EAAiBhD,iBACzCc,EAAqB5C,OAAQkF,GAG7B/E,EAAQH,OAAQ4C,IAOnBjF,iBAAiBC,OAAOC,aAAasH,OAAS/E,EAG9CF,EAAWF,OAAQG,GAGnB,IAAMiF,EAAoBnG,GAAAA,CAAE,6CAGtBoG,EAAcpG,GAAAA,CAAE,yCAAD,OAA4CtB,iBAAiBwB,KAAKmG,KAAlE,WACfC,EAAgBtG,GAAAA,CAAE,2CAAD,OAA8CtB,iBAAiBwB,KAAKqG,OAApE,WAkFvB,OA9EAH,EAAY7F,GAAI,SAAS,WAGxB,IAAIiG,GAAoB,EAGpBb,EAAe,GAGnBxE,EAAc+D,SAAQ,SAAEzD,GAEvB,IAAMgF,EAAehF,EAAMiF,WAAWxH,QAGtCsH,EAAoBA,GAAqBC,EAGpCA,IAEJd,EAAclE,EAAMmE,gBAAgBjE,YAAeF,EAAM+B,gBAK3D1E,EAAAA,EAAAA,IAAoB,gBAAiB,CACpC8B,OAAQlC,iBAAiBC,OAAOC,aAAagC,OAC7CD,KAAMgF,IAMFa,IAEJJ,EAAYO,SAAU,wDAGtBC,EAAAA,EAAAA,IAAU,gBAAiB,CAC1BC,SAAUnI,iBAAiBC,OAAOmI,GAClClG,OAAQlC,iBAAiBC,OAAOC,aAAagC,OAC7CD,KAAMjC,iBAAiBC,OAAOC,aAAa+B,KAAMjC,iBAAiBC,OAAOC,aAAagC,UACpF,SAAEmG,GAGJrI,iBAAiBC,OAAOC,aAAaM,SAAU,GAG/CJ,EAAAA,EAAAA,IAAoB,WAAY,CAC/BD,KAAM,kBAIP,IAAIgC,KACF,SAAEkG,WAOPT,EAAc/F,GAAI,SAAS,YAK1BzB,EAAAA,EAAAA,IAAoB,WAAY,CAC/BD,KAAM,kBAIP,IAAIgC,KAILsF,EAAkBpF,OAAQqF,GAC1BD,EAAkBpF,OAAQuF,GAC1BrF,EAAWF,OAAQoF,GAEZlF,I,8BAGR,WAEC,IAAIH,EAAoBd,GAAAA,CAAE,4DAAD,OAC4BtB,iBAAiBC,OAAOsB,iBAAmB,sBAAwB,GAD/F,yQAYzBa,EAAkBT,KAAM,SAAUP,QAASf,KAAKuB,kBAGhD,IAAI0G,EAAoBlG,EAAkBT,KAAM,0BAG5C4G,EAAajH,GAAAA,CAAE,qQAUfkH,EAAkBlH,GAAAA,CAAE,sEAGxBiH,EAAW5G,KAAM,uCAAwCU,OAAQmG,GAGb,gBAA/CxI,iBAAiBC,OAAOC,aAAagC,OAEzCsG,EAAgB/E,KAAMzD,iBAAiBwB,KAAKtB,aAAauB,SAASC,UAGV,WAA/C1B,iBAAiBC,OAAOC,aAAagC,QAE9CsG,EAAgB/E,KAAMzD,iBAAiBwB,KAAKtB,aAAauB,SAAnC,KAIvB+G,EAAgB3G,GAAI,SAAS,YAO5BzB,EAAAA,EAAAA,IAAoB,WAAY,CAC/BD,KAAM,kBAIP,IAAIgC,KAILmG,EAAkBjG,OAAQkG,GAG1B,IAUIE,EAVAC,EAAWpH,GAAAA,CAAE,4QAYmC,gBAA/CtB,iBAAiBC,OAAOC,aAAagC,OACzCuG,EAAmBnH,GAAAA,CAAE,4BAAD,QAGlBqH,EAAAA,EAAAA,IACC3I,iBAAiBwB,KAAKtB,aAAa0I,QAAQC,QAC3C,CAAC,iDAAD,OACmD7I,iBAAiBwB,KAAKtB,aAAa0I,QAAS5I,iBAAiBC,OAAOC,aAAa+B,KAAKkB,aAAaL,aADtJ,kEAEmD9C,iBAAiBC,OAAOC,aAAa+B,KAAKkB,aAAaY,iBAF1G,YALiB,qBAcoC,WAA/C/D,iBAAiBC,OAAOC,aAAagC,SAC9CuG,EAAmBnH,GAAAA,CAAE,4BAAD,QAGlBqH,EAAAA,EAAAA,IACC3I,iBAAiBwB,KAAKtB,aAAa0I,QAAQE,UAC3C,CAAC,iDAAD,OACmD9I,iBAAiBC,OAAOC,aAAa+B,KAAKmD,QAAQE,MADrG,YALiB,gCAerBoD,EAAS/G,KAAM,uCAAwCU,OAAQoG,GAG/DA,EAAiB9G,KAAM,qCAAsCE,GAAI,SAAS,YAIzEzB,EAAAA,EAAAA,IAAoB,WAAY,CAC/BD,KAAM,gBAIP,IAAIgC,KAILmG,EAAkBjG,OAAQqG,GAG1B,IAAIK,EAAezH,GAAAA,CAAE,2QASjB0H,EAAgB,GAEgC,gBAA/ChJ,iBAAiBC,OAAOC,aAAagC,OAC+B,mBAAnElC,iBAAiBC,OAAOC,aAAa+B,KAAKkB,aAAauB,SAC3DsE,EAAgBhJ,iBAAiBwB,KAAKtB,aAAa0I,QAAQK,cAEiB,cAAnEjJ,iBAAiBC,OAAOC,aAAa+B,KAAKkB,aAAauB,WAChEsE,EAAgBhJ,iBAAiBwB,KAAKtB,aAAa0I,QAAQM,WAGJ,WAA/ClJ,iBAAiBC,OAAOC,aAAagC,SACqB,wBAA9DlC,iBAAiBC,OAAOC,aAAa+B,KAAKmD,QAAQV,SACtDsE,EAAgBhJ,iBAAiBwB,KAAKtB,aAAa0I,QAAQO,mBAEY,cAA9DnJ,iBAAiBC,OAAOC,aAAa+B,KAAKmD,QAAQV,WAC3DsE,EAAgBhJ,iBAAiBwB,KAAKtB,aAAa0I,QAAQM,YAI7D,IAAIE,EAAuB9H,GAAAA,CAAE,wBAAD,QAG1BqH,EAAAA,EAAAA,IACC3I,iBAAiBwB,KAAKtB,aAAa0I,QAAQS,UAC3C,CAAC,iDAAD,OACmDL,EADnD,YALyB,mBA+B5B,OAnBAD,EAAapH,KAAM,uCAAwCU,OAAQ+G,GAGnEL,EAAapH,KAAM,qCAAsCE,GAAI,SAAS,YAIrEzB,EAAAA,EAAAA,IAAoB,WAAY,CAC/BD,KAAM,gBAIP,IAAIgC,KAILmG,EAAkBjG,OAAQ0G,GAGnB3G,I,4BAGR,WAEC,IAAIkH,EAGJ,OAAStJ,iBAAiBC,OAAOC,aAAaC,MAC7C,IAAK,gBACL,IAAK,gBAEJmJ,EAAQtJ,iBAAiBwB,KAAKtB,aAAaqJ,cAE3C,MAED,IAAK,cAEJD,EAAQtJ,iBAAiBwB,KAAKtB,aAAasJ,WAM7C,IAAIC,EAAUnI,GAAAA,CAAE,2SAAD,QAQEoI,EAAAA,EAAAA,IAAoB,8FAA+F,CAC5G,WAAe,wBACf,WAAe,gBACf,YAAe,sBAXxB,2FAaA1J,iBAAiBwB,KAAKmI,QAbtB,gSAsBPL,EAtBO,+EA8BTM,EAAeH,EAAQ9H,KAAM,iBAkCnC,OA9BM8H,EAAQ9H,KAAM,sBAAuBE,GAAI,SAAS,WAE/B+H,EAAaC,SAAU,uBAoBlCD,EAAaE,YAAa,sBAG1BxI,GAAAA,CAAGyI,UAAWC,IAAK,uCAlBnBJ,EAAa3B,SAAU,sBAGvB3G,GAAAA,CAAGyI,UAAWlI,GAAI,qCAAqC,SAAEC,GAC9C8H,EAAaK,GAAInI,EAAMoI,SAAwD,IAA5CN,EAAaO,IAAKrI,EAAMoI,QAASE,SAEvER,EAAaE,YAAa,sBAG1BxI,GAAAA,CAAGyI,UAAWC,IAAK,6CAclCP,O,mBA5/BH1J,G,+BCmBN,QA9BI,WAAaiD,I,4FAAU,SACnB,IAAIT,EAAgBjB,GAAAA,CAAG,SAAU,CAAE,MAAS,qBACxC+I,EAAgB/I,GAAAA,CAAG,SAAU,CAAE,MAAS,cACxCgJ,EAAgBhJ,GAAAA,CAAG,SAAU,CAAE,MAAS,yBACxCiJ,EAAgBjJ,GAAAA,CAAG,SAAU,CAAE,MAAS,8CAE5CgJ,EAAcjI,OAAQkI,GACtBhI,EAAWF,OAAQgI,GACnB9H,EAAWF,OAAQiI,IAGJtJ,EAAAA,EAAAA,IAAgB,UAAW,CACtCC,KAAM+B,IAGDX,OAAQE,GAGA,WAAZS,GACDuH,EAAQ9G,KAAMzD,iBAAiBwB,KAAKgJ,QAAQC,KAG/B,UAAZzH,GACDuH,EAAQ9G,KAAMzD,iBAAiBwB,KAAKkJ,OAAOD,KAG/CF,EAAQ1I,GAAI,SAAS,kBAAM,IAAI8I,EAAAA,EAAyB3H,O,8MCqKhE,QAxLM4H,WAEF,WAAa1H,GAAO,Y,4FAAA,SAKhB7C,KAAKwK,SAAW,CACZ9J,UAAUC,EAAAA,EAAAA,IAAgB,UAAW,CAAEC,KAAM,YAKjDK,IAAAA,KAAQtB,iBAAiB8K,UAAU,SAAE7E,EAAK8E,GAAP,OAAoB,EAAKC,cAAeD,EAAS7H,M,kDAMxF,SAAe6H,EAAS7H,GAEpB,IAAI+H,GAAW,EAGX1I,EAAajB,GAAAA,CAAG,SAAU,CAAE,MAAS,sCAGrC4J,EAAqB,CACrBhI,MAAoBA,EACpBiI,iBAAoB,0BAIpBC,EAAkB/K,KAAKgL,gCAAiCN,EAAQO,OAE/DC,EAAAA,EAAAA,IAAWH,KACZH,GAAW,EAEXC,EAAmB7H,cAAe,EAClC6H,EAAmBM,OAAeJ,EAAgBhD,IAStD,IAAIqD,EAAgB,IAAI1I,EAAAA,EAAO,WAAYmI,GACvCQ,EAAiBD,EAActH,iBAGnCuH,EAAU7J,GAAI,UAAU,WACpB,IAAI8J,EAAYF,EAAc3G,WAC9B2G,EAAcG,wBAGTD,GAEDzD,EAAAA,EAAAA,IAAU,MAAO,CACb2D,aAAc7L,iBAAiBC,OAAOmI,GACtCsC,OAAc,kBACdoB,UAAcf,EAAQO,KACtBS,aAAc,CACVC,iBAAkBhM,iBAAiBiM,aAAclB,EAAQmB,aAAc1H,KACvE2H,SAAkBpB,EAAQoB,YAE/B,SAAE9D,GACD,IAAIlG,GAGCoJ,EAAAA,EAAAA,IAAWlD,EAAS+D,WAEJpL,EAAAA,EAAAA,IAAgB,OAAQ,CACrCoH,GAAIC,EAAS+D,UAIRC,KAAK1K,KAAM,sDAAuD2K,QAAQ9B,QAAS,YAEjG,SAAEnC,GACDnH,QAAQC,IAAK,2CAGbsK,EAAcc,uBAGdd,EAAce,UAAU,GAAO,OAInCtE,EAAAA,EAAAA,IAAU,SAAU,CAChBuE,GAAIrB,EAAgBhD,KACrB,WACC,IAAIjG,KACL,WACCjB,QAAQC,IAAK,8CAEb,IAAIgB,QAMhBI,EAAWF,OAAQqJ,GAGnB,IAAIgB,EAAiBpL,GAAAA,CAAG,SAAU,CAAE,MAAS,8BAG7C,GAAK2J,EAAU,CACXyB,EAAezE,SAAU,mBAEzB,IAAI0E,EAAQrL,GAAAA,CAAG,SAAU,CACrB,MAAW,qCACX,UAAW8J,EAAgBhD,KAG3BwE,EAAcvM,KAAKwM,aACnB7M,iBAAiBC,OAAO6M,MAAO1B,EAAgBhD,IAAK2E,gBACpD,UACAhC,EAAQO,KACRF,EAAgBhD,IAGpBuE,EAAMtK,OAAQuK,GAEd,IAAII,EAAe1L,GAAAA,CAAG,SAAU,CAAE,MAAS,kBAC3CqL,EAAMtK,OAAQ2K,GAEdN,EAAerK,OAAQsK,GAG3BpK,EAAWF,OAAQqK,GAGnBrM,KAAKwK,SAAS9J,SAASsB,OAAQE,K,0BAcnC,SAAcwK,EAAiB/J,EAAUiK,EAAUC,GAC/C,IAAI3K,EAAajB,GAAAA,CAAG,UAChB6L,EAAa7L,GAAAA,CAAG,SAAU,CAAE,MAAS,yBAErC8L,EAAW,IAAIC,EAAAA,EAAgBrK,EAAU+J,EAAiBE,EAAUC,GACxE3K,EAAWF,OAAQ+K,GAEnB,IAAI/C,EAAW,IAAIiD,EAAAA,EAAgBP,GACnCxK,EAAWF,OAAQgI,GAEnB,IAAIkD,EAAW,IAAIC,EAAAA,EAAeT,GAClCI,EAAO9K,OAAQkL,GAEf,IAAIE,EAAiB,IAAIC,EAAAA,EAAoB1K,EAAU+J,EAAiBE,EAAUC,GAKlF,OAJAC,EAAO9K,OAAQoL,GAEflL,EAAWF,OAAQ8K,GAEZ5K,I,6CAGX,SAAiC+I,GAC7B,IAAIqC,EAQJ,OANArM,IAAAA,KAAQtB,iBAAiBC,OAAO6M,OAAO,SAAUc,EAAQvB,GAChDA,EAAKY,UAAY3B,IAClBqC,EAAUtB,MAIXsB,O,mBApLT/C,G,sKCmHN,QAhHMzI,WAMF,c,4FAAa,UAMMnB,EAAAA,EAAAA,IAAgB,UAAW,CAAEC,KAAM,WACzC4M,QAG4B,aAAhC7N,iBAAiBC,OAAOgB,MAEzB,IAAIlB,EAIR,IAAI+N,GAAUC,EAAAA,EAAAA,IAAa,MAAO,CAC9BC,OAAQ,CACJhL,SAAU,YAKlB,KAAO4C,EAAAA,EAAAA,IAASkI,KAAavC,EAAAA,EAAAA,IAAWvL,iBAAiBiO,KAAQjO,iBAAiBiO,GAAI,CAElF,IAAIC,GAAiBC,EAAAA,EAAAA,IAAYL,EAAS,cAAc,GACpDM,GAAiBC,EAAAA,EAAAA,IAAiBP,EAAS,aAAc,SACzDQ,GAAmBD,EAAAA,EAAAA,IAAiBP,EAAS,aAAc,aAExDlI,EAAAA,EAAAA,IAASwI,KAAsBxI,EAAAA,EAAAA,IAAS0I,IAwB3C,IAAIC,EAAAA,EAAc,SAAUL,GAG5B,IAAIM,EAAAA,EAAe,UAGdnO,KAAKoO,qCAEN,IAAI9D,EAAAA,EAAyB,UAIjC,IAAIC,EAAU5K,iBAAiBwB,KAAKkJ,OAAOgE,aAAaC,2BAnCjD/I,EAAAA,EAAAA,IAASsI,IAEZ,IAAIK,EAAAA,EAAc,SAAUL,GAKhC,IAAIM,EAAAA,EAAe,UAGdnO,KAAKoO,qCAEN,IAAI9D,EAAAA,EAAyB,UAGjC,IAAIC,EAAU5K,iBAAiBwB,KAAKkJ,OAAOgE,aAAaC,wBAGxD,IAAIJ,EAAAA,EAAc,SAAUH,GAC5B,IAAIG,EAAAA,EAAc,SAAUD,SAmBxB1I,EAAAA,EAAAA,IAASkI,IAiBjB,IAAIc,EAAgB,UAGfvO,KAAKoO,qCAEN,IAAI9D,EAAAA,EAAyB,UAIjC,IAAIC,EAAU5K,iBAAiBwB,KAAKkJ,OAAOgE,aAAaC,0BAzBxD,IAAIJ,EAAAA,EAAc,SAAUT,GAG5B,IAAIU,EAAAA,EAAe,UAGdnO,KAAKoO,qCAEN,IAAI9D,EAAAA,EAAyB,UAIjC,IAAIC,EAAU5K,iBAAiBwB,KAAKkJ,OAAOgE,aAAaC,yB,sEAoBhE,WACI,OAA+D,IAAxDE,EAAAA,EAAAA,IAAiB,KAAM,8BAAsG,WAAhEA,EAAAA,EAAAA,IAAiB,KAAM,0C,mBA5G7F1M,I,kEClBC,MAAM2M,EAAQ,CACjB,WACA,UACA,cACA,YACA,YACA,gBACA,SACA,gBACA,UACA,gBACA,eACA,yBAESC,EAAW,CACpBC,SAAU,GACVC,YAAY,EACZC,qBAAqB,EACrBC,UAAW,SACXC,UAAU,EACVC,cAAe,qBACfC,QAA2B,iBAAXC,SACoC,IAAhDA,OAAOC,UAAUC,UAAUC,QAAQ,QACvCC,eAAgB,SAChBC,qBAAqB,EACrBC,YAAY,EACZC,eAAe,EACfC,YAAa,KACbC,WAAY,QACZC,YAAa,GACbC,cAAe,EACfC,eAAgB,EAChBC,QAAS,GACTC,eAAe,EACfC,eAAe,EACfC,YAAY,EACZC,aAAeC,GAA2B,oBAAZvP,SAA2BA,QAAQwP,KAAKD,GACtEE,QAAUC,IACN,MAAMC,EAAO,IAAIC,KAAKF,EAAUG,WAChCF,EAAKG,SAAS,EAAG,EAAG,EAAG,GACvBH,EAAKI,QAAQJ,EAAKK,UAAY,GAAML,EAAKM,SAAW,GAAK,GACzD,IAAIC,EAAQ,IAAIN,KAAKD,EAAKQ,cAAe,EAAG,GAC5C,OAAQ,EACJC,KAAKC,QAAQV,EAAKE,UAAYK,EAAML,WAAa,MAC7C,GACEK,EAAMD,SAAW,GAAK,GACxB,IAEZK,cAAe,EACfC,qBAAsB,GACtBC,QAAQ,EACRC,OAAQ,UACRC,gBAAiB,EACjBC,KAAM,SACNC,kBAAmB,WACnBC,UAAW,yOACXC,YAAY,EACZC,IAAK,IAAInB,KACToB,SAAU,GACVC,QAAS,GACTC,YAAa,GACbC,UAAW,GACXC,UAAW,GACXC,cAAe,GACfC,OAAQ,GACRC,cAAe,GACfC,QAAS,GACTC,cAAe,GACfC,aAAc,GACdC,sBAAuB,GACvBC,QAAS,GACTC,SAAU,OACVC,qBAAiBC,EACjBC,UAAW,uOACXC,uBAAuB,EACvBC,WAAY,EACZC,QAAQ,EACRC,WAAW,EACXC,aAAa,EACbC,MAAM,GC/EGC,EAAU,CACnBC,SAAU,CACNC,UAAW,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtDC,SAAU,CACN,SACA,SACA,UACA,YACA,WACA,SACA,aAGRC,OAAQ,CACJF,UAAW,CACP,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJC,SAAU,CACN,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,aAGRE,YAAa,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC1DC,eAAgB,EAChBC,QAAUC,IACN,MAAMC,EAAID,EAAM,IAChB,GAAIC,EAAI,GAAKA,EAAI,GACb,MAAO,KACX,OAAQA,EAAI,IACR,KAAK,EACD,MAAO,KACX,KAAK,EACD,MAAO,KACX,KAAK,EACD,MAAO,KACX,QACI,MAAO,OAGnBC,eAAgB,OAChBC,iBAAkB,KAClBC,YAAa,sBACbC,YAAa,kBACbC,KAAM,CAAC,KAAM,MACbC,cAAe,OACfC,eAAgB,QAChBC,cAAe,OACfC,gBAAiB,SACjBrB,WAAW,GAEf,ICvEasB,EAAM,CAACC,EAAQzK,EAAS,IAAM,MAAMyK,IAASC,OAAgB,EAAV1K,GACnD,EAAO2K,IAAmB,IAATA,EAAgB,EAAI,EAC3C,SAASC,EAASC,EAAIC,GACzB,IAAIC,EACJ,OAAO,WACHC,aAAaD,GACbA,EAAIE,YAAW,IAAMJ,EAAGK,MAAMjV,KAAMkV,YAAYL,IAGjD,MAAMM,EAAYC,GAAQA,aAAeC,MAAQD,EAAM,CAACA,GCTxD,SAASE,EAAYC,EAAMC,EAAWd,GACzC,IAAa,IAATA,EACA,OAAOa,EAAKE,UAAUrL,IAAIoL,GAC9BD,EAAKE,UAAUC,OAAOF,GAEnB,SAASG,EAAcC,EAAKJ,EAAWK,GAC1C,MAAMC,EAAI5G,OAAOxF,SAASiM,cAAcC,GAMxC,OALAJ,EAAYA,GAAa,GACzBK,EAAUA,GAAW,GACrBC,EAAEN,UAAYA,OACE5C,IAAZiD,IACAC,EAAEC,YAAcF,GACbC,EAEJ,SAASE,EAAUC,GACtB,KAAOA,EAAKC,YACRD,EAAKE,YAAYF,EAAKC,YAEvB,SAASE,EAAWH,EAAMI,GAC7B,OAAIA,EAAUJ,GACHA,EACFA,EAAKK,WACHF,EAAWH,EAAKK,WAAYD,QADlC,EAIF,SAASE,EAAkBC,EAAgBC,GAC9C,MAAMC,EAAUf,EAAc,MAAO,mBAAoBgB,EAAWhB,EAAc,QAAS,YAAca,GAAiBI,EAAUjB,EAAc,OAAQ,WAAYkB,EAAYlB,EAAc,OAAQ,aAQxM,IAPiD,IAA7CxG,UAAUC,UAAUC,QAAQ,YAC5BsH,EAAS/V,KAAO,UAGhB+V,EAAS/V,KAAO,OAChB+V,EAASG,QAAU,aAEVlE,IAAT6D,EACA,IAAK,MAAM7Q,KAAO6Q,EACdE,EAASI,aAAanR,EAAK6Q,EAAK7Q,IAIxC,OAHA8Q,EAAQM,YAAYL,GACpBD,EAAQM,YAAYJ,GACpBF,EAAQM,YAAYH,GACbH,EAEJ,SAASO,EAAexV,GAC3B,IACI,MAAkC,mBAAvBA,EAAMyV,aACAzV,EAAMyV,eACP,GAETzV,EAAMoI,OAEjB,MAAOsN,GACH,OAAO1V,EAAMoI,QClDrB,MAAMhB,EAAY,OACLuO,EAAa,CAACC,EAAa/D,EAAWhC,IAAWA,EAAOkC,OAAOF,EAAY,YAAc,YAAY+D,GACrGC,EAAY,CACrBC,EAAG1O,EACH2O,EAAG,SAAUC,EAASC,EAAWpG,GAC7BmG,EAAQE,SAASrG,EAAOkC,OAAOD,SAASlE,QAAQqI,KAEpDE,EAAG,CAACH,EAASI,KACTJ,EAAQ9G,SAASmH,WAAWD,KAEhCE,EAAG,CAACN,EAASI,KACTJ,EAAQ9G,SAASmH,WAAWD,KAEhCG,EAAG,CAACP,EAASQ,KACTR,EAAQ7G,QAAQkH,WAAWG,KAE/BC,EAAG,CAACT,EAASvD,EAAM5C,KACfmG,EAAQ9G,SAAU8G,EAAQU,WAAa,GACnC,GAAK,EAAI,IAAIC,OAAO9G,EAAO4C,KAAK,GAAI,KAAKmE,KAAKnE,MAEtDoE,EAAG,SAAUb,EAASc,EAAYjH,GAC9BmG,EAAQE,SAASrG,EAAOkC,OAAOF,UAAUjE,QAAQkJ,KAErDC,EAAG,CAACf,EAASgB,KACThB,EAAQiB,WAAWZ,WAAWW,KAElCE,EAAG,CAACC,EAAGC,IAAgB,IAAIpI,KAA+B,IAA1BqH,WAAWe,IAC3CC,EAAG,SAAUrB,EAASsB,EAASzH,GAC3B,MAAM0H,EAAaC,SAASF,GACtBvI,EAAO,IAAIC,KAAKgH,EAAQzG,cAAe,EAAG,EAAuB,GAAlBgI,EAAa,GAAQ,EAAG,EAAG,EAAG,GAEnF,OADAxI,EAAKI,QAAQJ,EAAKK,UAAYL,EAAKM,SAAWQ,EAAOoC,gBAC9ClD,GAEX0I,EAAG,CAACzB,EAAS0B,KACT1B,EAAQ2B,YAAYtB,WAAWqB,KAEnCE,EAAG,CAACT,EAAGU,IAAY,IAAI7I,KAAK6I,GAC5BC,EAAG,CAAC9B,EAASQ,KACTR,EAAQ7G,QAAQkH,WAAWG,KAE/BuB,EAAG,CAAC/B,EAASI,KACTJ,EAAQ9G,SAASmH,WAAWD,KAEhC4B,EAAG,CAAChC,EAASiC,KACTjC,EAAQkC,WAAW7B,WAAW4B,KAElCE,EAAG,CAACnC,EAASQ,KACTR,EAAQ7G,QAAQkH,WAAWG,KAE/B4B,EAAGhR,EACHiR,EAAG,CAACrC,EAASsC,KACTtC,EAAQE,SAASG,WAAWiC,GAAS,IAEzCC,EAAG,CAACvC,EAASsC,KACTtC,EAAQE,SAASG,WAAWiC,GAAS,IAEzClG,EAAG,CAAC4D,EAASgB,KACThB,EAAQiB,WAAWZ,WAAWW,KAElCwB,EAAG,CAACrB,EAAGsB,IAAoB,IAAIzJ,KAAKqH,WAAWoC,IAC/CC,EAAGtR,EACHuR,EAAG,CAAC3C,EAAS0B,KACT1B,EAAQ2B,YAAY,IAAOtB,WAAWqB,MAGjCkB,EAAa,CACtB9C,EAAG,SACHC,EAAG,SACHI,EAAG,eACHG,EAAG,eACHC,EAAG,mBACHE,EAAG,GACHI,EAAG,SACHE,EAAG,eACHG,EAAG,OACHG,EAAG,eACHI,EAAG,WACHG,EAAG,OACHE,EAAG,eACHC,EAAG,eACHC,EAAG,eACHG,EAAG,eACHC,EAAG,SACHC,EAAG,eACHE,EAAG,eACHnG,EAAG,eACHoG,EAAG,OACHE,EAAG,eACHC,EAAG,YAEME,EAAU,CACnBjB,EAAI7I,GAASA,EAAK+J,cAClBhD,EAAG,SAAU/G,EAAMc,EAAQpO,GACvB,OAAOoO,EAAO+B,SAASC,UAAUgH,EAAQH,EAAE3J,EAAMc,EAAQpO,KAE7DsU,EAAG,SAAUhH,EAAMc,EAAQpO,GACvB,OAAOkU,EAAWkD,EAAQN,EAAExJ,EAAMc,EAAQpO,GAAW,GAAG,EAAOoO,IAEnEsG,EAAG,SAAUpH,EAAMc,EAAQpO,GACvB,OAAOqR,EAAI+F,EAAQd,EAAEhJ,EAAMc,EAAQpO,KAEvC6U,EAAIvH,GAAS+D,EAAI/D,EAAK2H,YACtBH,EAAG,SAAUxH,EAAMc,GACf,YAA0BsB,IAAnBtB,EAAOqC,QACRnD,EAAKK,UAAYS,EAAOqC,QAAQnD,EAAKK,WACrCL,EAAKK,WAEfqH,EAAG,CAAC1H,EAAMc,IAAWA,EAAO4C,KAAK,EAAI1D,EAAK2H,WAAa,KACvDG,EAAG,SAAU9H,EAAMc,GACf,OAAO8F,EAAW5G,EAAKgK,YAAY,EAAMlJ,IAE7CkH,EAAIhI,GAAS+D,EAAI/D,EAAKiK,cACtB9B,EAAInI,GAASA,EAAKE,UAAY,IAC9BoI,EAAG,SAAUtI,EAAMoI,EAAG1V,GAClB,OAAOA,EAAQoN,QAAQE,IAE3B0I,EAAI1I,GAAS+D,EAAI/D,EAAKQ,cAAe,GACrCuI,EAAI/I,GAAS+D,EAAI/D,EAAKK,WACtB2I,EAAIhJ,GAAUA,EAAK2H,WAAa,GAAK3H,EAAK2H,WAAa,GAAK,GAC5DsB,EAAIjJ,GAAS+D,EAAI/D,EAAKkK,cACtBd,EAAIpJ,GAASA,EAAKK,UAClBgJ,EAAG,SAAUrJ,EAAMc,GACf,OAAOA,EAAO+B,SAASE,SAAS/C,EAAKM,WAEzCgJ,EAAItJ,GAAS+D,EAAI/D,EAAKgK,WAAa,GACnCR,EAAIxJ,GAASA,EAAKgK,WAAa,EAC/B3G,EAAIrD,GAASA,EAAKiK,aAClBR,EAAIzJ,GAASA,EAAKE,UAClByJ,EAAI3J,GAASA,EAAKM,SAClBsJ,EAAI5J,GAASmK,OAAOnK,EAAKQ,eAAe4J,UAAU,IC/HzCC,EAAsB,EAAGC,OAAAA,EAASpM,EAAUqM,KAAAA,EAAO3H,EAAS4H,SAAAA,GAAW,KAAa,CAACvD,EAASwD,EAAMC,KAC7G,MAAM5J,EAAS4J,GAAkBH,EACjC,YAA0BnI,IAAtBkI,EAAOK,YAA6BH,EAGjCC,EACFG,MAAM,IACNzV,KAAI,CAAC0V,EAAG5B,EAAG6B,IAAQhB,EAAQe,IAAqB,OAAfC,EAAI7B,EAAI,GACxCa,EAAQe,GAAG5D,EAASnG,EAAQwJ,GACtB,OAANO,EACIA,EACA,KACLE,KAAK,IATCT,EAAOK,WAAW1D,EAASwD,EAAM3J,IAWnCkK,EAAmB,EAAGV,OAAAA,EAASpM,EAAUqM,KAAAA,EAAO3H,KAAc,CAAC5C,EAAMiL,EAAaC,EAAUC,KACrG,GAAa,IAATnL,IAAeA,EACf,OACJ,MAAMc,EAASqK,GAAgBZ,EAC/B,IAAIa,EACJ,MAAMC,EAAWrL,EACjB,GAAIA,aAAgBC,KAChBmL,EAAa,IAAInL,KAAKD,EAAKE,gBAC1B,GAAoB,iBAATF,QACKoC,IAAjBpC,EAAKsL,QACLF,EAAa,IAAInL,KAAKD,QACrB,GAAoB,iBAATA,EAAmB,CAC/B,MAAMuL,EAASN,IAAgBX,GAAUpM,GAAUiB,WAC7CqM,EAAUrB,OAAOnK,GAAMyL,OAC7B,GAAgB,UAAZD,EACAJ,EAAa,IAAInL,KACjBiL,GAAW,OAEV,GAAI,KAAKrD,KAAK2D,IACf,OAAO3D,KAAK2D,GACZJ,EAAa,IAAInL,KAAKD,QACrB,GAAIsK,GAAUA,EAAOoB,UACtBN,EAAad,EAAOoB,UAAU1L,EAAMuL,OACnC,CACDH,EACKd,GAAWA,EAAOnJ,WAEb,IAAIlB,MAAK,IAAIA,MAAOE,SAAS,EAAG,EAAG,EAAG,IADtC,IAAIF,MAAK,IAAIA,MAAOO,cAAe,EAAG,EAAG,EAAG,EAAG,EAAG,GAE5D,IAAImL,EAASC,EAAM,GACnB,IAAK,IAAI3C,EAAI,EAAG4C,EAAa,EAAGC,EAAW,GAAI7C,EAAIsC,EAAOhS,OAAQ0P,IAAK,CACnE,MAAM8C,EAAQR,EAAOtC,GACf+C,EAAwB,OAAVD,EACdE,EAA4B,OAAlBV,EAAOtC,EAAI,IAAe+C,EAC1C,GAAInC,EAAWkC,KAAWE,EAAS,CAC/BH,GAAYjC,EAAWkC,GACvB,MAAMG,EAAQ,IAAItE,OAAOkE,GAAUK,KAAKnM,GACpCkM,IAAUP,GAAU,IACpBC,EAAc,MAAVG,EAAgB,OAAS,WAAW,CACpC3H,GAAI0C,EAAUiF,GACdK,IAAKF,IAAQL,UAIfG,IACNF,GAAY,KAChBF,EAAIjW,SAAQ,EAAGyO,GAAAA,EAAIgI,IAAAA,KAAWhB,EAAahH,EAAGgH,EAAYgB,EAAKtL,IAAWsK,IAE9EA,EAAaO,EAAUP,OAAahJ,GAG5C,GAAMgJ,aAAsBnL,OAASoM,MAAMjB,EAAWlL,WAMtD,OAFiB,IAAbgL,GACAE,EAAWjL,SAAS,EAAG,EAAG,EAAG,GAC1BiL,EALHd,EAAO3K,aAAa,IAAI2M,MAAM,0BAA0BjB,OAOzD,SAASkB,EAAaC,EAAOC,EAAOvB,GAAW,GAClD,OAAiB,IAAbA,EACQ,IAAIjL,KAAKuM,EAAMtM,WAAWC,SAAS,EAAG,EAAG,EAAG,GAChD,IAAIF,KAAKwM,EAAMvM,WAAWC,SAAS,EAAG,EAAG,EAAG,GAE7CqM,EAAMtM,UAAYuM,EAAMvM,UAc5B,SAASwM,EAAgBpC,GAC5B,IAAIqC,EAAQrC,EAAOlL,YACf8J,EAAUoB,EAAOjL,cACjB4I,EAAUqC,EAAOhL,eACrB,QAAuB8C,IAAnBkI,EAAOsC,QAAuB,CAC9B,MAAMC,EAAUvC,EAAOsC,QAAQjF,WACzBmF,EAAaxC,EAAOsC,QAAQ1C,aAC5B6C,EAAazC,EAAOsC,QAAQ3C,aAC9B0C,EAAQE,IACRF,EAAQE,GAERF,IAAUE,GAAW3D,EAAU4D,IAC/B5D,EAAU4D,GAEVH,IAAUE,GAAW3D,IAAY4D,GAAc7E,EAAU8E,IACzD9E,EAAUqC,EAAOsC,QAAQ3C,cAEjC,QAAuB7H,IAAnBkI,EAAO0C,QAAuB,CAC9B,MAAMC,EAAQ3C,EAAO0C,QAAQrF,WACvBuF,EAAa5C,EAAO0C,QAAQ9C,aAClCyC,EAAQlM,KAAK0M,IAAIR,EAAOM,GACpBN,IAAUM,IACV/D,EAAUzI,KAAK0M,IAAID,EAAYhE,IAC/ByD,IAAUM,GAAS/D,IAAYgE,IAC/BjF,EAAUqC,EAAO0C,QAAQ/C,cAEjC,MAAO,CAAE0C,MAAAA,EAAOzD,QAAAA,EAASjB,QAAAA,GChH7B,SAASmF,EAAkBC,EAASC,GAChC,MAAMC,EAAO,CACTjD,OAAQrV,OAAOuY,OAAOvY,OAAOuY,OAAO,GAAI,GAAiBC,EAAUC,eACnEnD,KAAM,GAuDV,SAASoD,EAAevJ,GACpB,OAAOA,EAAGwJ,KAAKL,GAEnB,SAASM,IACL,MAAMvD,EAASiD,EAAKjD,QACO,IAAvBA,EAAO5H,aAA+C,IAAtB4H,EAAO/H,aAGZ,IAAtB+H,EAAOnJ,YACZzC,OAAOoP,uBAAsB,WAKzB,QAJ+B1L,IAA3BmL,EAAKQ,oBACLR,EAAKQ,kBAAkBC,MAAMC,WAAa,SAC1CV,EAAKQ,kBAAkBC,MAAME,QAAU,cAEhB9L,IAAvBmL,EAAKY,cAA6B,CAClC,MAAMC,GAAab,EAAKc,KAAKC,YAAc,GAAKhE,EAAO/H,WACvDgL,EAAKY,cAAcH,MAAMO,MAAQH,EAAY,KAC7Cb,EAAKQ,kBAAkBC,MAAMO,MACzBH,QAC0BhM,IAArBmL,EAAKiB,YACAjB,EAAKiB,YAAYF,YACjB,GACN,KACRf,EAAKQ,kBAAkBC,MAAMS,eAAe,cAC5ClB,EAAKQ,kBAAkBC,MAAMS,eAAe,eAK5D,SAASC,EAAWpJ,GAChB,GAAkC,IAA9BiI,EAAKoB,cAAcpV,OAAc,CACjC,MAAMqV,OAAsCxM,IAAxBmL,EAAKjD,OAAOsC,SAC5BL,EAAa,IAAItM,KAAQsN,EAAKjD,OAAOsC,UAAY,EAC/C,IAAI3M,KACJ,IAAIA,KAAKsN,EAAKjD,OAAOsC,QAAQ1M,WAC7BhC,EAAWwO,EAAgBa,EAAKjD,QACtCsE,EAAYzO,SAASjC,EAASyO,MAAOzO,EAASgL,QAAShL,EAAS+J,QAAS2G,EAAYC,mBACrFtB,EAAKoB,cAAgB,CAACC,GACtBrB,EAAKuB,sBAAwBF,OAEvBxM,IAANkD,GAA8B,SAAXA,EAAElV,MA+tD7B,SAAqBkV,GACjBA,EAAEyJ,iBACF,MAAMC,EAAuB,YAAX1J,EAAElV,KAAoB6e,EAAcxI,EAAenB,GAAI4J,EAAQD,OAC/D7M,IAAdmL,EAAK7J,MAAsBuL,IAAgB1B,EAAK7J,OAChD6J,EAAK7J,KAAK6B,YACNgI,EAAKhD,KAAK7G,KAAK,EAAI6J,EAAK7J,KAAK6B,cAAgBgI,EAAKhD,KAAK7G,KAAK,MAEpE,MAAMyJ,EAAM7F,WAAW4H,EAAMC,aAAa,QAASC,EAAM9H,WAAW4H,EAAMC,aAAa,QAAS7f,EAAOgY,WAAW4H,EAAMC,aAAa,SAAUE,EAAW5G,SAASyG,EAAMvc,MAAO,IAEhL,IAAI2c,EAAWD,EAAW/f,GAFmKgW,EAAEiK,QAC1LP,EAAyB,KAAZ1J,EAAEkK,MAAe,GAAK,EAAK,IAE7C,QAA2B,IAAhBN,EAAMvc,OAAgD,IAAvBuc,EAAMvc,MAAM4G,OAAc,CAChE,MAAMkW,EAAaP,IAAU3B,EAAKmC,YAAaC,EAAeT,IAAU3B,EAAKqC,cACzEN,EAAWnC,GACXmC,EACIF,EACIE,EACA,GAAKG,IACJ,EAAIA,IAAe,GAAKlC,EAAK7J,OAClCiM,GACAE,OAAkBzN,GAAY,EAAGmL,EAAKmC,cAErCJ,EAAWF,IAChBE,EACIJ,IAAU3B,EAAKmC,YAAcJ,EAAWF,EAAM,GAAK7B,EAAK7J,MAAQyJ,EAChEwC,GACAE,OAAkBzN,EAAW,EAAGmL,EAAKmC,cAEzCnC,EAAK7J,MACL+L,IACU,IAATngB,EACKggB,EAAWD,IAAa,GACxB5O,KAAKqP,IAAIR,EAAWD,GAAY/f,KACtCie,EAAK7J,KAAK6B,YACNgI,EAAKhD,KAAK7G,KAAK,EAAI6J,EAAK7J,KAAK6B,cAAgBgI,EAAKhD,KAAK7G,KAAK,MAEpEwL,EAAMvc,MAAQoR,EAAIuL,IAjwDlBS,CAAYzK,GAEhB,MAAM0K,EAAYzC,EAAK0C,OAAOtd,MAC9Bud,IACAC,KACI5C,EAAK0C,OAAOtd,QAAUqd,GACtBzC,EAAK6C,mBAeb,SAASF,IACL,QAAyB9N,IAArBmL,EAAKmC,kBAAoDtN,IAAvBmL,EAAKqC,cACvC,OACJ,IAAIjD,GAASlE,SAAS8E,EAAKmC,YAAY/c,MAAMsR,OAAO,GAAI,KAAO,GAAK,GAAIiF,GAAWT,SAAS8E,EAAKqC,cAAcjd,MAAO,KAAO,GAAK,GAAIsV,OAAiC7F,IAAvBmL,EAAK8C,eAC9I5H,SAAS8E,EAAK8C,cAAc1d,MAAO,KAAO,GAAK,GAChD,EAjBV,IAAuB0U,EAAM3D,OAkBPtB,IAAdmL,EAAK7J,OAlBU2D,EAmBOsF,EAnBDjJ,EAmBQ6J,EAAK7J,KAAK6B,YAAvCoH,EAlBItF,EAAO,GAAM,GAAK,EAAI3D,IAAS6J,EAAKhD,KAAK7G,KAAK,KAoBtD,MAAM4M,OAAwClO,IAAxBmL,EAAKjD,OAAOiG,SAC7BhD,EAAKjD,OAAOsC,SACTW,EAAKiD,gBACLjD,EAAKuB,uBAED,IADJvC,EAAagB,EAAKuB,sBAAuBvB,EAAKjD,OAAOsC,SAAS,GAQtE,QAN8CxK,IAAxBmL,EAAKjD,OAAOmG,SAC7BlD,EAAKjD,OAAO0C,SACTO,EAAKmD,gBACLnD,EAAKuB,uBAED,IADJvC,EAAagB,EAAKuB,sBAAuBvB,EAAKjD,OAAO0C,SAAS,GAEnD,CACf,MAAMyD,OAAkCrO,IAAxBmL,EAAKjD,OAAOmG,QACtBlD,EAAKjD,OAAOmG,QACZlD,EAAKjD,OAAO0C,QAClBL,EAAQlM,KAAK0M,IAAIR,EAAO8D,EAAQ9I,YAC5BgF,IAAU8D,EAAQ9I,aAClBuB,EAAUzI,KAAK0M,IAAIjE,EAASuH,EAAQvG,eACpChB,IAAYuH,EAAQvG,eACpBjC,EAAUxH,KAAK0M,IAAIlF,EAASwI,EAAQxG,eAE5C,GAAIqG,EAAe,CACf,MAAMC,OAAkCnO,IAAxBmL,EAAKjD,OAAOiG,QACtBhD,EAAKjD,OAAOiG,QACZhD,EAAKjD,OAAOsC,QAClBD,EAAQlM,KAAK2O,IAAIzC,EAAO4D,EAAQ5I,YAC5BgF,IAAU4D,EAAQ5I,YAAcuB,EAAUqH,EAAQrG,eAClDhB,EAAUqH,EAAQrG,cAClBhB,IAAYqH,EAAQrG,eACpBjC,EAAUxH,KAAK2O,IAAInH,EAASsI,EAAQtG,eAE5C9J,EAASwM,EAAOzD,EAASjB,GAE7B,SAAS0I,EAAiB1J,GACtB,MAAMjH,EAAOiH,GAAWsG,EAAKuB,sBACzB9O,GACAG,EAASH,EAAK2H,WAAY3H,EAAKkK,aAAclK,EAAKiK,cAG1D,SAAS9J,EAASwM,EAAOzD,EAASjB,QACK7F,IAA/BmL,EAAKuB,uBACLvB,EAAKuB,sBAAsB3O,SAASwM,EAAQ,GAAIzD,EAASjB,GAAW,EAAG,GAEtEsF,EAAKmC,aAAgBnC,EAAKqC,gBAAiBrC,EAAK/C,WAErD+C,EAAKmC,YAAY/c,MAAQoR,EAAKwJ,EAAKjD,OAAO7H,UAEpCkK,GADE,GAAKA,GAAS,GAAM,GAAK,EAAIA,EAAQ,IAAO,IAEpDY,EAAKqC,cAAcjd,MAAQoR,EAAImF,QACb9G,IAAdmL,EAAK7J,OACL6J,EAAK7J,KAAK6B,YAAcgI,EAAKhD,KAAK7G,KAAK,EAAIiJ,GAAS,WAC7BvK,IAAvBmL,EAAK8C,gBACL9C,EAAK8C,cAAc1d,MAAQoR,EAAIkE,KAEvC,SAAS2I,EAAY3f,GACjB,MAAMge,EAAcxI,EAAexV,GAC7B0X,EAAOF,SAASwG,EAAYtc,QAAU1B,EAAMse,OAAS,IACvD5G,EAAO,IAAO,GACC,UAAd1X,EAAMmE,MAAoB,QAAQyS,KAAKc,EAAKkI,cAC7CC,EAAWnI,GAGnB,SAASiF,EAAKP,EAASpc,EAAO8f,EAASre,GACnC,OAAIzB,aAAiB4T,MACV5T,EAAM0E,SAASqb,GAAOpD,EAAKP,EAAS2D,EAAID,EAASre,KACxD2a,aAAmBxI,MACZwI,EAAQ1X,SAASsb,GAAOrD,EAAKqD,EAAIhgB,EAAO8f,EAASre,MAC5D2a,EAAQ6D,iBAAiBjgB,EAAO8f,EAASre,QACzC6a,EAAK4D,UAAUne,KAAK,CAChBkS,OAAQ,IAAMmI,EAAQ+D,oBAAoBngB,EAAO8f,MAGzD,SAASM,IACLC,GAAa,YAyDjB,SAASC,EAAWC,EAAUH,GAC1B,MAAMI,OAAsBrP,IAAboP,EACTjE,EAAK7B,UAAU8F,GACfjE,EAAKuB,wBACFvB,EAAKjD,OAAOsC,SAAWW,EAAKjD,OAAOsC,QAAUW,EAAKnM,IAC7CmM,EAAKjD,OAAOsC,QACZW,EAAKjD,OAAO0C,SAAWO,EAAKjD,OAAO0C,QAAUO,EAAKnM,IAC9CmM,EAAKjD,OAAO0C,QACZO,EAAKnM,KACjBsQ,EAAUnE,EAAKoE,YACfC,EAAWrE,EAAKsE,aACtB,SACmBzP,IAAXqP,IACAlE,EAAKoE,YAAcF,EAAOjR,cAC1B+M,EAAKsE,aAAeJ,EAAOzH,YAGnC,MAAO1E,GACHA,EAAEwM,QAAU,0BAA4BL,EACxClE,EAAKjD,OAAO3K,aAAa2F,GAEzB+L,GAAiB9D,EAAKoE,cAAgBD,IACtCJ,GAAa,gBACbS,MAEAV,GACC9D,EAAKoE,cAAgBD,GAAWnE,EAAKsE,eAAiBD,GACvDN,GAAa,iBAEjB/D,EAAKyE,SAET,SAASC,EAAc3M,GACnB,MAAM2J,EAAcxI,EAAenB,IAC9B2J,EAAYjK,UAAUnG,QAAQ,UAC/BgR,EAAkBvK,EAAG2J,EAAYhK,UAAUiN,SAAS,WAAa,GAAK,GAE9E,SAASrC,EAAkBvK,EAAGiK,EAAO4C,GACjC,MAAM9Y,EAASiM,GAAKmB,EAAenB,GAC7B4J,EAAQiD,GACT9Y,GAAUA,EAAOyM,YAAczM,EAAOyM,WAAWJ,WAChDzU,EAAQmhB,GAAY,aAC1BnhB,EAAMse,MAAQA,EACdL,GAASA,EAAMmD,cAAcphB,GA0DjC,SAASqhB,EAAUtN,EAAWhF,EAAMuS,EAAWtJ,GAC3C,MAAMuJ,EAAgBC,EAAUzS,GAAM,GAAO0S,EAAavN,EAAc,OAAQ,iBAAmBH,EAAWhF,EAAKK,UAAUwQ,YAuC7H,OAtCA6B,EAAWzL,QAAUjH,EACrB0S,EAAWC,GAAK1J,EAChByJ,EAAWnM,aAAa,aAAcgH,EAAK5C,WAAW3K,EAAMuN,EAAKjD,OAAOxL,kBACnC,IAAjCkG,EAAUnG,QAAQ,WACe,IAAjC0N,EAAavM,EAAMuN,EAAKnM,OACxBmM,EAAKqF,cAAgBF,EACrBA,EAAWzN,UAAUrL,IAAI,SACzB8Y,EAAWnM,aAAa,eAAgB,SAExCiM,GACAE,EAAWG,UAAY,EACnBC,GAAe9S,KACf0S,EAAWzN,UAAUrL,IAAI,YACzB2T,EAAKwF,iBAAmBL,EACC,UAArBnF,EAAKjD,OAAOtJ,OACZ8D,EAAY4N,EAAY,aAAcnF,EAAKoB,cAAc,IACD,IAApDpC,EAAavM,EAAMuN,EAAKoB,cAAc,IAAI,IAC9C7J,EAAY4N,EAAY,WAAYnF,EAAKoB,cAAc,IACC,IAApDpC,EAAavM,EAAMuN,EAAKoB,cAAc,IAAI,IAC5B,iBAAd3J,GACA0N,EAAWzN,UAAUrL,IAAI,cAKrC8Y,EAAWzN,UAAUrL,IAAI,sBAEJ,UAArB2T,EAAKjD,OAAOtJ,MAk3CpB,SAAuBhB,GACnB,QAAyB,UAArBuN,EAAKjD,OAAOtJ,MAAoBuM,EAAKoB,cAAcpV,OAAS,IAExDgT,EAAavM,EAAMuN,EAAKoB,cAAc,KAAO,GACjDpC,EAAavM,EAAMuN,EAAKoB,cAAc,KAAO,EAr3CzCqE,CAAchT,KAAU8S,GAAe9S,IACvC0S,EAAWzN,UAAUrL,IAAI,WAE7B2T,EAAK7K,aACsB,IAA3B6K,EAAKjD,OAAO/H,YACE,iBAAdyC,GACAuN,EAAY,GAAM,GAClBhF,EAAK7K,YAAYuQ,mBAAmB,YAAa,+BAAiC1F,EAAKjD,OAAOxK,QAAQE,GAAQ,WAElHsR,GAAa,cAAeoB,GACrBA,EAEX,SAASQ,EAAeC,GACpBA,EAAWC,QACc,UAArB7F,EAAKjD,OAAOtJ,MACZqS,GAAYF,GAEpB,SAASG,EAAqB/D,GAC1B,MAAMgE,EAAahE,EAAQ,EAAI,EAAIhC,EAAKjD,OAAO/H,WAAa,EACtDiR,EAAWjE,EAAQ,EAAIhC,EAAKjD,OAAO/H,YAAc,EACvD,IAAK,IAAI+G,EAAIiK,EAAYjK,GAAKkK,EAAUlK,GAAKiG,EAAO,CAChD,MAAMhG,EAAQgE,EAAKY,cAAcsF,SAASnK,GACpCoK,EAAanE,EAAQ,EAAI,EAAIhG,EAAMkK,SAASla,OAAS,EACrDoa,EAAWpE,EAAQ,EAAIhG,EAAMkK,SAASla,QAAU,EACtD,IAAK,IAAI0P,EAAIyK,EAAYzK,GAAK0K,EAAU1K,GAAKsG,EAAO,CAChD,MAAM1E,EAAItB,EAAMkK,SAASxK,GACzB,IAAuC,IAAnC4B,EAAE7F,UAAUnG,QAAQ,WAAoB4T,EAAU5H,EAAE5D,SACpD,OAAO4D,IA+BvB,SAAS+I,EAAWC,EAASC,GACzB,MAAMC,EAAaC,EAAS9a,SAAS+a,eAAiB/a,SAASgb,MACzDC,OAAwB/R,IAAZyR,EACZA,EACAE,EACI7a,SAAS+a,mBACiB7R,IAA1BmL,EAAKwF,kBAAkCiB,EAASzG,EAAKwF,kBACjDxF,EAAKwF,sBACkB3Q,IAAvBmL,EAAKqF,eAA+BoB,EAASzG,EAAKqF,eAC9CrF,EAAKqF,cACLU,EAAqBQ,EAAS,EAAI,GAAK,QACvC1R,IAAd+R,EACA5G,EAAK0C,OAAOmD,QAENW,EAxCd,SAA6BF,EAAStE,GAClC,MAAM6E,GAAqD,IAAxCP,EAAQ7O,UAAUnG,QAAQ,SACvCgV,EAAQ5M,QAAQ+C,WAChBuD,EAAKsE,aACL2B,EAAWjE,EAAQ,EAAIhC,EAAKjD,OAAO/H,YAAc,EACjD8R,EAAY9E,EAAQ,EAAI,GAAK,EACnC,IAAK,IAAIjG,EAAI8K,EAAa7G,EAAKsE,aAAcvI,GAAKkK,EAAUlK,GAAK+K,EAAW,CACxE,MAAM9K,EAAQgE,EAAKY,cAAcsF,SAASnK,GACpCoK,EAAaU,EAAa7G,EAAKsE,eAAiBvI,EAChDuK,EAAQlB,GAAKpD,EACbA,EAAQ,EACJhG,EAAMkK,SAASla,OAAS,EACxB,EACJ+a,EAAe/K,EAAMkK,SAASla,OACpC,IAAK,IAAI0P,EAAIyK,EAAYzK,GAAK,GAAKA,EAAIqL,GAAgBrL,IAAMsG,EAAQ,EAAI+E,GAAgB,GAAIrL,GAAKoL,EAAW,CACzG,MAAMxJ,EAAItB,EAAMkK,SAASxK,GACzB,IAAuC,IAAnC4B,EAAE7F,UAAUnG,QAAQ,WACpB4T,EAAU5H,EAAE5D,UACZxG,KAAKqP,IAAI+D,EAAQlB,GAAK1J,IAAMxI,KAAKqP,IAAIP,GACrC,OAAO2D,EAAerI,IAGlC0C,EAAKgH,YAAYF,GACjBT,EAAWN,EAAqBe,GAAY,GAqBxCG,CAAoBL,EAAWL,GAH/BZ,EAAeiB,GAMvB,SAASM,EAAe9L,EAAMY,GAC1B,MAAMmL,GAAgB,IAAIzU,KAAK0I,EAAMY,EAAO,GAAGjJ,SAAWiN,EAAKhD,KAAKrH,eAAiB,GAAK,EACpFyR,EAAgBpH,EAAKqH,MAAMC,gBAAgBtL,EAAQ,EAAI,IAAM,GAAIZ,GACjE1F,EAAcsK,EAAKqH,MAAMC,eAAetL,EAAOZ,GAAO0F,EAAO3P,OAAOxF,SAAS4b,yBAA0BC,EAAexH,EAAKjD,OAAO/H,WAAa,EAAGyS,EAAoBD,EAAe,sBAAwB,eAAgBE,EAAoBF,EAAe,sBAAwB,eAC9R,IAAIxC,EAAYoC,EAAgB,EAAID,EAAcQ,EAAW,EAC7D,KAAO3C,GAAaoC,EAAepC,IAAa2C,IAC5C7G,EAAK7H,YAAY8L,EAAU0C,EAAmB,IAAI/U,KAAK0I,EAAMY,EAAQ,EAAGgJ,GAAYA,EAAW2C,IAEnG,IAAK3C,EAAY,EAAGA,GAAatP,EAAasP,IAAa2C,IACvD7G,EAAK7H,YAAY8L,EAAU,GAAI,IAAIrS,KAAK0I,EAAMY,EAAOgJ,GAAYA,EAAW2C,IAEhF,IAAK,IAAIC,EAASlS,EAAc,EAAGkS,GAAU,GAAKT,IAClB,IAA3BnH,EAAKjD,OAAO/H,YAAoB2S,EAAW,GAAM,GAAIC,IAAUD,IAChE7G,EAAK7H,YAAY8L,EAAU2C,EAAmB,IAAIhV,KAAK0I,EAAMY,EAAQ,EAAG4L,EAASlS,GAAckS,EAAQD,IAE3G,MAAME,EAAejQ,EAAc,MAAO,gBAE1C,OADAiQ,EAAa5O,YAAY6H,GAClB+G,EAEX,SAASC,IACL,QAA2BjT,IAAvBmL,EAAKY,cACL,OAEJ3I,EAAU+H,EAAKY,eACXZ,EAAK7K,aACL8C,EAAU+H,EAAK7K,aACnB,MAAM4S,EAAOpc,SAAS4b,yBACtB,IAAK,IAAI7L,EAAI,EAAGA,EAAIsE,EAAKjD,OAAO/H,WAAY0G,IAAK,CAC7C,MAAMF,EAAI,IAAI9I,KAAKsN,EAAKoE,YAAapE,EAAKsE,aAAc,GACxD9I,EAAE5B,SAASoG,EAAKsE,aAAe5I,GAC/BqM,EAAK9O,YAAYiO,EAAe1L,EAAEvI,cAAeuI,EAAEiB,aAEvDuD,EAAKY,cAAc3H,YAAY8O,GAC/B/H,EAAKc,KAAOd,EAAKY,cAAczI,WACN,UAArB6H,EAAKjD,OAAOtJ,MAAkD,IAA9BuM,EAAKoB,cAAcpV,QACnD8Z,KAGR,SAAStB,IACL,GAAIxE,EAAKjD,OAAO/H,WAAa,GACS,aAAlCgL,EAAKjD,OAAOrJ,kBACZ,OACJ,MAAMsU,EAAmB,SAAUhM,GAC/B,aAA4BnH,IAAxBmL,EAAKjD,OAAOsC,SACZW,EAAKoE,cAAgBpE,EAAKjD,OAAOsC,QAAQpM,eACzC+I,EAAQgE,EAAKjD,OAAOsC,QAAQ5C,iBAGC5H,IAAxBmL,EAAKjD,OAAO0C,SACjBO,EAAKoE,cAAgBpE,EAAKjD,OAAO0C,QAAQxM,eACzC+I,EAAQgE,EAAKjD,OAAO0C,QAAQhD,aAEpCuD,EAAKiI,wBAAwB3C,UAAY,EACzCtF,EAAKiI,wBAAwBC,UAAY,GACzC,IAAK,IAAIxM,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAKsM,EAAiBtM,GAClB,SACJ,MAAMM,EAAQpE,EAAc,SAAU,iCACtCoE,EAAM5W,MAAQ,IAAIsN,KAAKsN,EAAKoE,YAAa1I,GAAGe,WAAW6G,WACvDtH,EAAMhE,YAAcqB,EAAWqC,EAAGsE,EAAKjD,OAAOhI,sBAAuBiL,EAAKhD,MAC1EhB,EAAMsJ,UAAY,EACdtF,EAAKsE,eAAiB5I,IACtBM,EAAMmM,UAAW,GAErBnI,EAAKiI,wBAAwBhP,YAAY+C,IAGjD,SAASoM,IACL,MAAMC,EAAYzQ,EAAc,MAAO,mBACjC0Q,EAAmBnX,OAAOxF,SAAS4b,yBACzC,IAAIgB,EACAvI,EAAKjD,OAAO/H,WAAa,GACS,WAAlCgL,EAAKjD,OAAOrJ,kBACZ6U,EAAe3Q,EAAc,OAAQ,cAGrCoI,EAAKiI,wBAA0BrQ,EAAc,SAAU,kCACvDoI,EAAKiI,wBAAwBjP,aAAa,aAAcgH,EAAKhD,KAAK3G,gBAClEgK,EAAKL,EAAKiI,wBAAyB,UAAWlQ,IAC1C,MAAMjM,EAASoN,EAAenB,GACxByQ,EAAgBtN,SAASpP,EAAO1G,MAAO,IAC7C4a,EAAKgH,YAAYwB,EAAgBxI,EAAKsE,cACtCP,GAAa,oBAEjBS,IACA+D,EAAevI,EAAKiI,yBAExB,MAAMQ,EAAYjQ,EAAkB,WAAY,CAAEkQ,SAAU,OACtDC,EAAcF,EAAUG,qBAAqB,SAAS,GAC5DD,EAAY3P,aAAa,aAAcgH,EAAKhD,KAAK5G,eAC7C4J,EAAKjD,OAAOsC,SACZsJ,EAAY3P,aAAa,MAAOgH,EAAKjD,OAAOsC,QAAQpM,cAAcqQ,YAElEtD,EAAKjD,OAAO0C,UACZkJ,EAAY3P,aAAa,MAAOgH,EAAKjD,OAAO0C,QAAQxM,cAAcqQ,YAClEqF,EAAYE,WACN7I,EAAKjD,OAAOsC,SACVW,EAAKjD,OAAOsC,QAAQpM,gBAAkB+M,EAAKjD,OAAO0C,QAAQxM,eAEtE,MAAMqR,EAAe1M,EAAc,MAAO,2BAK1C,OAJA0M,EAAarL,YAAYsP,GACzBjE,EAAarL,YAAYwP,GACzBH,EAAiBrP,YAAYqL,GAC7B+D,EAAUpP,YAAYqP,GACf,CACHD,UAAAA,EACAM,YAAAA,EACAJ,aAAAA,GAGR,SAASO,IACL7Q,EAAU+H,EAAK+I,UACf/I,EAAK+I,SAAS9P,YAAY+G,EAAKgJ,cAC3BhJ,EAAKjD,OAAO/H,aACZgL,EAAKiJ,aAAe,GACpBjJ,EAAKkJ,cAAgB,IAEzB,IAAK,IAAInN,EAAIiE,EAAKjD,OAAO/H,WAAY+G,KAAM,CACvC,MAAMC,EAAQoM,IACdpI,EAAKiJ,aAAaxjB,KAAKuW,EAAM2M,aAC7B3I,EAAKkJ,cAAczjB,KAAKuW,EAAMuM,cAC9BvI,EAAK+I,SAAS9P,YAAY+C,EAAMqM,WAEpCrI,EAAK+I,SAAS9P,YAAY+G,EAAKmJ,cA+FnC,SAASC,IACApJ,EAAKqJ,iBAGNpR,EAAU+H,EAAKqJ,kBAFfrJ,EAAKqJ,iBAAmBzR,EAAc,MAAO,sBAGjD,IAAK,IAAI8D,EAAIsE,EAAKjD,OAAO/H,WAAY0G,KAAM,CACvC,MAAM2M,EAAYzQ,EAAc,MAAO,8BACvCoI,EAAKqJ,iBAAiBpQ,YAAYoP,GAGtC,OADAiB,IACOtJ,EAAKqJ,iBAEhB,SAASC,IACL,IAAKtJ,EAAKqJ,iBACN,OAEJ,MAAM1T,EAAiBqK,EAAKhD,KAAKrH,eACjC,IAAIL,EAAW,IAAI0K,EAAKhD,KAAK1H,SAASC,WAClCI,EAAiB,GAAKA,EAAiBL,EAAStJ,SAChDsJ,EAAW,IACJA,EAASiU,OAAO5T,EAAgBL,EAAStJ,WACzCsJ,EAASiU,OAAO,EAAG5T,KAG9B,IAAK,IAAI+F,EAAIsE,EAAKjD,OAAO/H,WAAY0G,KACjCsE,EAAKqJ,iBAAiBnD,SAASxK,GAAGwM,UAAY,qDAEhD5S,EAASkI,KAAK,oEAgBpB,SAASwJ,EAAY5hB,EAAOokB,GAAW,GACnC,MAAMxH,EAAQwH,EAAWpkB,EAAQA,EAAQ4a,EAAKsE,aACzCtC,EAAQ,IAAkC,IAA7BhC,EAAKyJ,qBAClBzH,EAAQ,IAAkC,IAA7BhC,EAAK0J,sBAEvB1J,EAAKsE,cAAgBtC,GACjBhC,EAAKsE,aAAe,GAAKtE,EAAKsE,aAAe,MAC7CtE,EAAKoE,aAAepE,EAAKsE,aAAe,GAAK,GAAK,EAClDtE,EAAKsE,cAAgBtE,EAAKsE,aAAe,IAAM,GAC/CP,GAAa,gBACbS,KAEJsD,IACA/D,GAAa,iBACb4F,MA2GJ,SAASC,EAAepS,GACpB,SAAIwI,EAAKjD,OAAO8M,WAAY7J,EAAKjD,OAAO8M,SAASlF,SAASnN,KAEnDwI,EAAKQ,kBAAkBmE,SAASnN,GAE3C,SAASsS,EAAc/R,GACnB,GAAIiI,EAAK+J,SAAW/J,EAAKjD,OAAOzJ,OAAQ,CACpC,MAAMoO,EAAcxI,EAAenB,GAC7BiS,EAAoBJ,EAAelI,GACnCuI,EAAUvI,IAAgB1B,EAAK2B,OACjCD,IAAgB1B,EAAKhP,UACrBgP,EAAKF,QAAQ6E,SAASjD,IACrB3J,EAAEmS,MACCnS,EAAEmS,KAAK5Y,WACLyG,EAAEmS,KAAK5Y,QAAQ0O,EAAK2B,SACjB5J,EAAEmS,KAAK5Y,QAAQ0O,EAAKhP,WAC3BmZ,EAAuB,SAAXpS,EAAElV,KACdonB,GACElS,EAAEqS,gBACDR,EAAe7R,EAAEqS,gBACnBH,IACED,IACAJ,EAAe7R,EAAEqS,eACpBC,GAAarK,EAAKjD,OAAO1J,qBAAqBiX,MAAM9S,GAASA,EAAKmN,SAASjD,KAC7EyI,GAAaE,SACcxV,IAAvBmL,EAAKuK,oBACkB1V,IAAvBmL,EAAKqC,oBACgBxN,IAArBmL,EAAKmC,aACgB,KAArBnC,EAAK2B,MAAMvc,YACUyP,IAArBmL,EAAK2B,MAAMvc,OACX+b,IAEJnB,EAAKwK,QACDxK,EAAKjD,QACgB,UAArBiD,EAAKjD,OAAOtJ,MACkB,IAA9BuM,EAAKoB,cAAcpV,SACnBgU,EAAKyK,OAAM,GACXzK,EAAKyE,YAKrB,SAASlB,EAAWmH,GAChB,IAAKA,GACA1K,EAAKjD,OAAOsC,SAAWqL,EAAU1K,EAAKjD,OAAOsC,QAAQpM,eACrD+M,EAAKjD,OAAO0C,SAAWiL,EAAU1K,EAAKjD,OAAO0C,QAAQxM,cACtD,OACJ,MAAM0X,EAAaD,EAASE,EAAY5K,EAAKoE,cAAgBuG,EAC7D3K,EAAKoE,YAAcuG,GAAc3K,EAAKoE,YAClCpE,EAAKjD,OAAO0C,SACZO,EAAKoE,cAAgBpE,EAAKjD,OAAO0C,QAAQxM,cACzC+M,EAAKsE,aAAepR,KAAK0M,IAAII,EAAKjD,OAAO0C,QAAQhD,WAAYuD,EAAKsE,cAE7DtE,EAAKjD,OAAOsC,SACjBW,EAAKoE,cAAgBpE,EAAKjD,OAAOsC,QAAQpM,gBACzC+M,EAAKsE,aAAepR,KAAK2O,IAAI7B,EAAKjD,OAAOsC,QAAQ5C,WAAYuD,EAAKsE,eAElEsG,IACA5K,EAAKyE,SACLV,GAAa,gBACbS,KAGR,SAASU,EAAUzS,EAAMkL,GAAW,GAChC,IAAIkN,EACJ,MAAMC,EAAc9K,EAAK7B,UAAU1L,OAAMoC,EAAW8I,GACpD,GAAKqC,EAAKjD,OAAOsC,SACbyL,GACA9L,EAAa8L,EAAa9K,EAAKjD,OAAOsC,aAAsBxK,IAAb8I,EAAyBA,GAAYqC,EAAKiD,gBAAkB,GAC1GjD,EAAKjD,OAAO0C,SACTqL,GACA9L,EAAa8L,EAAa9K,EAAKjD,OAAO0C,aAAsB5K,IAAb8I,EAAyBA,GAAYqC,EAAKmD,gBAAkB,EAC/G,OAAO,EACX,IAAKnD,EAAKjD,OAAOgO,QAAyC,IAA/B/K,EAAKjD,OAAO/K,QAAQhG,OAC3C,OAAO,EACX,QAAoB6I,IAAhBiW,EACA,OAAO,EACX,MAAMnU,IAASqJ,EAAKjD,OAAOgO,OAAQC,EAAsC,QAA7BH,EAAK7K,EAAKjD,OAAOgO,cAA2B,IAAPF,EAAgBA,EAAK7K,EAAKjD,OAAO/K,QAClH,IAAK,IAAWwJ,EAAPE,EAAI,EAAMA,EAAIsP,EAAMhf,OAAQ0P,IAAK,CAEtC,GADAF,EAAIwP,EAAMtP,GACO,mBAANF,GACPA,EAAEsP,GACF,OAAOnU,EACN,GAAI6E,aAAa9I,WACFmC,IAAhBiW,GACAtP,EAAE7I,YAAcmY,EAAYnY,UAC5B,OAAOgE,EACN,GAAiB,iBAAN6E,EAAgB,CAC5B,MAAMyP,EAASjL,EAAK7B,UAAU3C,OAAG3G,GAAW,GAC5C,OAAOoW,GAAUA,EAAOtY,YAAcmY,EAAYnY,UAC5CgE,GACCA,EAEN,GAAiB,iBAAN6E,QACI3G,IAAhBiW,GACAtP,EAAE0P,MACF1P,EAAE2P,IACFL,EAAYnY,WAAa6I,EAAE0P,KAAKvY,WAChCmY,EAAYnY,WAAa6I,EAAE2P,GAAGxY,UAC9B,OAAOgE,EAEf,OAAQA,EAEZ,SAAS8P,EAASjP,GACd,YAA2B3C,IAAvBmL,EAAKY,gBACyC,IAAtCpJ,EAAKC,UAAUnG,QAAQ,YACuB,IAAlDkG,EAAKC,UAAUnG,QAAQ,uBACvB0O,EAAKY,cAAc+D,SAASnN,GAGxC,SAAS4T,EAAOrT,GACIA,EAAEjM,SAAWkU,EAAK0C,UAE7B1C,EAAKoB,cAAcpV,OAAS,GAAKgU,EAAK0C,OAAOtd,MAAM4G,OAAS,IAC3D+L,EAAEqS,eAAiBR,EAAe7R,EAAEqS,gBACtCpK,EAAKnN,QAAQmN,EAAK0C,OAAOtd,OAAO,EAAM2S,EAAEjM,SAAWkU,EAAKhP,SAClDgP,EAAKjD,OAAOhM,UACZiP,EAAKjD,OAAOnL,YAG1B,SAASsC,EAAU6D,GACf,MAAM2J,EAAcxI,EAAenB,GAC7BkS,EAAUjK,EAAKjD,OAAO3H,KACtB0K,EAAQ6E,SAASjD,GACjBA,IAAgB1B,EAAK0C,OACrB7R,EAAamP,EAAKjD,OAAOlM,WACzBwa,EAAerL,EAAK+J,UAAYlZ,IAAeoZ,GAC/CqB,EAAqBtL,EAAKjD,OAAOzJ,QAAU2W,IAAYpZ,EAC7D,GAAkB,KAAdkH,EAAEwT,SAAkBtB,EAAS,CAC7B,GAAIpZ,EAIA,OAHAmP,EAAKnN,QAAQmN,EAAK0C,OAAOtd,OAAO,EAAMsc,IAAgB1B,EAAKhP,SACrDgP,EAAKjD,OAAOhM,UACZiP,EAAKjD,OAAOnL,YACX8P,EAAY8J,OAGnBxL,EAAKyL,YAGR,GAAI7B,EAAelI,IACpB2J,GACAC,EAAoB,CACpB,MAAMI,IAAc1L,EAAKuK,eACrBvK,EAAKuK,cAAc5F,SAASjD,GAChC,OAAQ3J,EAAEwT,SACN,KAAK,GACGG,GACA3T,EAAEyJ,iBACFL,IACAwK,MAGAC,GAAW7T,GACf,MACJ,KAAK,GACDA,EAAEyJ,iBACFmK,KACA,MACJ,KAAK,EACL,KAAK,GACG1B,IAAYjK,EAAKjD,OAAOlM,aACxBkH,EAAEyJ,iBACFxB,EAAKyK,SAET,MACJ,KAAK,GACL,KAAK,GACD,GAAKiB,GAAczB,EAeVjK,EAAKmC,aACVnC,EAAKmC,YAAY0D,aAdjB,GADA9N,EAAEyJ,sBACyB3M,IAAvBmL,EAAKY,iBACW,IAAf/P,GACIlF,SAAS+a,eAAiBD,EAAS9a,SAAS+a,gBAAkB,CACnE,MAAM1E,EAAsB,KAAdjK,EAAEwT,QAAiB,GAAK,EACjCxT,EAAE8T,SAGH9T,EAAE+T,kBACF9E,EAAYhF,GACZqE,EAAWN,EAAqB,GAAI,IAJpCM,OAAWxR,EAAWmN,GAUlC,MACJ,KAAK,GACL,KAAK,GACDjK,EAAEyJ,iBACF,MAAMQ,EAAsB,KAAdjK,EAAEwT,QAAiB,GAAK,EACjCvL,EAAKY,oBACa/L,IAAnB6M,EAAY0D,IACZ1D,IAAgB1B,EAAK2B,OACrBD,IAAgB1B,EAAKhP,SACjB+G,EAAE8T,SACF9T,EAAE+T,kBACFvI,EAAWvD,EAAKoE,YAAcpC,GAC9BqE,EAAWN,EAAqB,GAAI,IAE9B2F,GACNrF,OAAWxR,EAAmB,EAARmN,GAErBN,IAAgB1B,EAAK+L,mBAC1BxI,EAAWvD,EAAKoE,YAAcpC,GAEzBhC,EAAKjD,OAAO5K,cACZuZ,GAAa1L,EAAKmC,aACnBnC,EAAKmC,YAAY0D,QACrB1E,EAAWpJ,GACXiI,EAAK6C,oBAET,MACJ,KAAK,EACD,GAAI6I,EAAW,CACX,MAAMM,EAAQ,CACVhM,EAAKmC,YACLnC,EAAKqC,cACLrC,EAAK8C,cACL9C,EAAK7J,MAEJ8V,OAAOjM,EAAKkM,gBACZtc,QAAQuc,GAAMA,IACbzQ,EAAIsQ,EAAM1a,QAAQoQ,GACxB,IAAW,IAAPhG,EAAU,CACV,MAAM5P,EAASkgB,EAAMtQ,GAAK3D,EAAEqU,UAAY,EAAI,IAC5CrU,EAAEyJ,kBACD1V,GAAUkU,EAAK0C,QAAQmD,cAGtB7F,EAAKjD,OAAOnJ,YAClBoM,EAAKY,eACLZ,EAAKY,cAAc+D,SAASjD,IAC5B3J,EAAEqU,WACFrU,EAAEyJ,iBACFxB,EAAK0C,OAAOmD,UAO5B,QAAkBhR,IAAdmL,EAAK7J,MAAsBuL,IAAgB1B,EAAK7J,KAChD,OAAQ4B,EAAElQ,KACN,KAAKmY,EAAKhD,KAAK7G,KAAK,GAAGkW,OAAO,GAC9B,KAAKrM,EAAKhD,KAAK7G,KAAK,GAAGkW,OAAO,GAAGC,cAC7BtM,EAAK7J,KAAK6B,YAAcgI,EAAKhD,KAAK7G,KAAK,GACvCwM,IACAC,KACA,MACJ,KAAK5C,EAAKhD,KAAK7G,KAAK,GAAGkW,OAAO,GAC9B,KAAKrM,EAAKhD,KAAK7G,KAAK,GAAGkW,OAAO,GAAGC,cAC7BtM,EAAK7J,KAAK6B,YAAcgI,EAAKhD,KAAK7G,KAAK,GACvCwM,IACAC,MAIRqH,GAAWL,EAAelI,KAC1BqC,GAAa,YAAahM,GAGlC,SAAS+N,GAAYtO,GACjB,GAAkC,IAA9BwI,EAAKoB,cAAcpV,QAClBwL,KACKA,EAAKE,UAAUiN,SAAS,kBACtBnN,EAAKE,UAAUiN,SAAS,uBAChC,OACJ,MAAM4H,EAAY/U,EACZA,EAAKkC,QAAQ/G,UACbqN,EAAKc,KAAK0L,kBAAkB9S,QAAQ/G,UAAW8Z,EAAczM,EAAK7B,UAAU6B,EAAKoB,cAAc,QAAIvM,GAAW,GAAMlC,UAAW+Z,EAAiBxZ,KAAK0M,IAAI2M,EAAWvM,EAAKoB,cAAc,GAAGzO,WAAYga,EAAezZ,KAAK2O,IAAI0K,EAAWvM,EAAKoB,cAAc,GAAGzO,WACrQ,IAAIia,GAAmB,EACnBC,EAAW,EAAGC,EAAW,EAC7B,IAAK,IAAI/V,EAAI2V,EAAgB3V,EAAI4V,EAAc5V,GD9gC9C,MC+gCQmO,EAAU,IAAIxS,KAAKqE,IAAI,KACxB6V,EACIA,GAAqB7V,EAAI2V,GAAkB3V,EAAI4V,EAC/C5V,EAAI0V,KAAiBI,GAAY9V,EAAI8V,GACrCA,EAAW9V,EACNA,EAAI0V,KAAiBK,GAAY/V,EAAI+V,KAC1CA,EAAW/V,IAGvB,IAAK,IAAIgF,EAAI,EAAGA,EAAIiE,EAAKjD,OAAO/H,WAAY+G,IAAK,CAC7C,MAAMC,EAAQgE,EAAKY,cAAcsF,SAASnK,GAC1C,IAAK,IAAIL,EAAI,EAAGI,EAAIE,EAAMkK,SAASla,OAAQ0P,EAAII,EAAGJ,IAAK,CACnD,MAAMqR,EAAU/Q,EAAMkK,SAASxK,GACzBsR,EADoCD,EAAQrT,QAC3B/G,UACjBsa,EAAcJ,EAAW,GAAKG,EAAYH,GAC3CC,EAAW,GAAKE,EAAYF,EAC7BG,GACAF,EAAQrV,UAAUrL,IAAI,cACtB,CAAC,UAAW,aAAc,YAAYjE,SAASkV,IAC3CyP,EAAQrV,UAAUC,OAAO2F,OAIxBsP,IAAqBK,IAE9B,CAAC,aAAc,UAAW,WAAY,cAAc7kB,SAASkV,IACzDyP,EAAQrV,UAAUC,OAAO2F,WAEhBzI,IAAT2C,IACAA,EAAKE,UAAUrL,IAAIkgB,GAAavM,EAAKoB,cAAc,GAAGzO,UAChD,aACA,YACF8Z,EAAcF,GAAaS,IAAcP,EACzCM,EAAQrV,UAAUrL,IAAI,cACjBogB,EAAcF,GAAaS,IAAcP,GAC9CM,EAAQrV,UAAUrL,IAAI,YACtB2gB,GAAaH,IACC,IAAbC,GAAkBE,GAAaF,KDxjC1BI,ECyjCeT,EDzjCVU,ECyjCuBZ,GDzjChCa,ECyjCQJ,GDxjClB9Z,KAAK0M,IAAIsN,EAAKC,IAAQC,EAAKla,KAAK2O,IAAIqL,EAAKC,KCyjCjCJ,EAAQrV,UAAUrL,IAAI,cD1jCrB,IAAC+gB,EAAIF,EAAKC,EC+jC/B,SAASE,MACDrN,EAAK+J,QAAW/J,EAAKjD,OAAO9H,QAAW+K,EAAKjD,OAAOzJ,QACnDga,KAqCR,SAASC,GAAiB1qB,GACtB,OAAQ4P,IACJ,MAAMiH,EAAWsG,EAAKjD,OAAO,IAAIla,SAAcmd,EAAK7B,UAAU1L,EAAMuN,EAAKjD,OAAOnL,YAC1E4b,EAAiBxN,EAAKjD,OAAO,IAAa,QAATla,EAAiB,MAAQ,kBAChDgS,IAAZ6E,IACAsG,EAAc,QAATnd,EAAiB,iBAAmB,kBACrC6W,EAAQU,WAAa,GACjBV,EAAQiD,aAAe,GACvBjD,EAAQgD,aAAe,GAE/BsD,EAAKoB,gBACLpB,EAAKoB,cAAgBpB,EAAKoB,cAAcxR,QAAQ4L,GAAM0J,EAAU1J,KAC3DwE,EAAKoB,cAAcpV,QAAmB,QAATnJ,GAC9BugB,EAAiB1J,GACrBkJ,MAEA5C,EAAKY,gBACL6D,UACgB5P,IAAZ6E,EACAsG,EAAK+L,mBAAmBlpB,GAAQ6W,EAAQzG,cAAcqQ,WAEtDtD,EAAK+L,mBAAmB0B,gBAAgB5qB,GAC5Cmd,EAAK+L,mBAAmBlD,WAClB2E,QACc3Y,IAAZ6E,GACA8T,EAAeva,gBAAkByG,EAAQzG,gBA+G7D,SAASya,KACL,OAAO1N,EAAKjD,OAAO3H,KACb0K,EAAQ6N,cAAc,gBACtB7N,EAEV,SAAS8N,KAC6B,iBAAvB5N,EAAKjD,OAAOxJ,aAC4B,IAAxC2M,EAAU2N,MAAM7N,EAAKjD,OAAOxJ,SACnCyM,EAAKjD,OAAO3K,aAAa,IAAI2M,MAAM,6BAA6BiB,EAAKjD,OAAOxJ,WAChFyM,EAAKhD,KAAOtV,OAAOuY,OAAOvY,OAAOuY,OAAO,GAAIC,EAAU2N,MAAMC,SAAyC,iBAAvB9N,EAAKjD,OAAOxJ,OACpFyM,EAAKjD,OAAOxJ,OACW,YAAvByM,EAAKjD,OAAOxJ,OACR2M,EAAU2N,MAAM7N,EAAKjD,OAAOxJ,aAC5BsB,GACVyH,EAAWnC,EAAI,IAAI6F,EAAKhD,KAAK7G,KAAK,MAAM6J,EAAKhD,KAAK7G,KAAK,MAAM6J,EAAKhD,KAAK7G,KAAK,GAAGmW,iBAAiBtM,EAAKhD,KAAK7G,KAAK,GAAGmW,sBAErFzX,IADVnN,OAAOuY,OAAOvY,OAAOuY,OAAO,GAAIF,GAAiBgO,KAAKC,MAAMD,KAAKE,UAAUnO,EAAQoO,SAAW,MAClGhZ,gBAC2BL,IAAtCqL,EAAUC,cAAcjL,YACxB8K,EAAKjD,OAAO7H,UAAY8K,EAAKhD,KAAK9H,WAEtC8K,EAAK5C,WAAaN,EAAoBkD,GACtCA,EAAK7B,UAAYV,EAAiB,CAAEV,OAAQiD,EAAKjD,OAAQC,KAAMgD,EAAKhD,OAExE,SAASsQ,GAAiBa,GACtB,GAAoC,mBAAzBnO,EAAKjD,OAAOpI,SACnB,YAAYqL,EAAKjD,OAAOpI,SAASqL,EAAMmO,GAE3C,QAA+BtZ,IAA3BmL,EAAKQ,kBACL,OACJuD,GAAa,yBACb,MAAMnP,EAAkBuZ,GAAyBnO,EAAKoO,iBAChDC,EAAiB/W,MAAMgX,UAAUC,OAAOC,KAAKxO,EAAKQ,kBAAkB0F,UAAU,CAAEuI,EAAKC,IAAUD,EAAMC,EAAMC,cAAe,GAAIC,EAAgB5O,EAAKQ,kBAAkBO,YAAa8N,EAAY7O,EAAKjD,OAAOpI,SAAS0I,MAAM,KAAMyR,EAAoBD,EAAU,GAAIE,EAAsBF,EAAU7iB,OAAS,EAAI6iB,EAAU,GAAK,KAAMG,EAAcpa,EAAgBqa,wBAAyBC,EAAqB/d,OAAOge,YAAcH,EAAYI,OAAQC,EAAkC,UAAtBP,GAC/a,UAAtBA,GACGI,EAAqBb,GACrBW,EAAYM,IAAMjB,EACpBiB,EAAMne,OAAOoe,YACfP,EAAYM,KACVD,GAAgDhB,EAAiB,EAArDzZ,EAAgB+Z,aAAe,GAGjD,GAFApX,EAAYyI,EAAKQ,kBAAmB,YAAa6O,GACjD9X,EAAYyI,EAAKQ,kBAAmB,cAAe6O,GAC/CrP,EAAKjD,OAAOzJ,OACZ,OACJ,IAAIkc,EAAOre,OAAOse,YAAcT,EAAYQ,KACxCE,GAAW,EACXC,GAAU,EACc,WAAxBZ,GACAS,IAASZ,EAAgBI,EAAYhO,OAAS,EAC9C0O,GAAW,GAEkB,UAAxBX,IACLS,GAAQZ,EAAgBI,EAAYhO,MACpC2O,GAAU,GAEdpY,EAAYyI,EAAKQ,kBAAmB,aAAckP,IAAaC,GAC/DpY,EAAYyI,EAAKQ,kBAAmB,cAAekP,GACnDnY,EAAYyI,EAAKQ,kBAAmB,aAAcmP,GAClD,MAAMC,EAAQze,OAAOxF,SAASgb,KAAK5F,aAC9B5P,OAAOse,YAAcT,EAAYY,OAChCC,EAAYL,EAAOZ,EAAgBzd,OAAOxF,SAASgb,KAAK5F,YACxD+O,EAAaF,EAAQhB,EAAgBzd,OAAOxF,SAASgb,KAAK5F,YAEhE,GADAxJ,EAAYyI,EAAKQ,kBAAmB,YAAaqP,IAC7C7P,EAAKjD,OAAO9H,OAGhB,GADA+K,EAAKQ,kBAAkBC,MAAM6O,IAAM,GAAGA,MACjCO,EAIA,GAAKC,EAIL,CACD,MAAMC,EAgBd,WACI,IAAIC,EAAgB,KACpB,IAAK,IAAItU,EAAI,EAAGA,EAAI/P,SAASskB,YAAYjkB,OAAQ0P,IAAK,CAClD,MAAMwU,EAAQvkB,SAASskB,YAAYvU,GACnC,IACIwU,EAAMC,SAEV,MAAO9d,GACH,SAEJ2d,EAAgBE,EAChB,MAEJ,OAAwB,MAAjBF,EAAwBA,EAEnC,WACI,MAAMvP,EAAQ9U,SAASiM,cAAc,SAErC,OADAjM,SAASykB,KAAKnX,YAAYwH,GACnBA,EAAMyP,MALkCG,GA7B/BC,GACZ,QAAYzb,IAARkb,EACA,OACJ,MAAMQ,EAAYpf,OAAOxF,SAASgb,KAAK5F,YACjCyP,EAAatd,KAAK2O,IAAI,EAAG0O,EAAY,EAAI3B,EAAgB,GACzD6B,EAAe,wCACfC,EAAc,uCACdC,EAAcZ,EAAII,SAASnkB,OAC3B4kB,EAAc,SAAS5B,EAAYQ,sBACzCjY,EAAYyI,EAAKQ,kBAAmB,aAAa,GACjDjJ,EAAYyI,EAAKQ,kBAAmB,cAAc,GAClDuP,EAAIc,WAAW,GAAGJ,KAAgBC,IAAcE,IAAeD,GAC/D3Q,EAAKQ,kBAAkBC,MAAM+O,KAAO,GAAGgB,MACvCxQ,EAAKQ,kBAAkBC,MAAMmP,MAAQ,YAjBrC5P,EAAKQ,kBAAkBC,MAAM+O,KAAO,OACpCxP,EAAKQ,kBAAkBC,MAAMmP,MAAQ,GAAGA,WALxC5P,EAAKQ,kBAAkBC,MAAM+O,KAAO,GAAGA,MACvCxP,EAAKQ,kBAAkBC,MAAMmP,MAAQ,OA2C7C,SAASnL,KACDzE,EAAKjD,OAAOnJ,YAAcoM,EAAK/C,WAEnCuH,IACAmF,KACA7B,KAEJ,SAAS6D,KACL3L,EAAK0C,OAAOmD,SACwC,IAAhD1U,OAAOC,UAAUC,UAAUC,QAAQ,cACJuD,IAA/BzD,UAAU0f,iBACV7Z,WAAW+I,EAAKwK,MAAO,GAGvBxK,EAAKwK,QAGb,SAASoB,GAAW7T,GAChBA,EAAEyJ,iBACFzJ,EAAE+T,kBACF,MAIM/U,EAAIsB,EAAWa,EAAenB,IAJdmC,GAAQA,EAAIxC,WAC9BwC,EAAIxC,UAAUiN,SAAS,mBACtBzK,EAAIxC,UAAUiN,SAAS,wBACvBzK,EAAIxC,UAAUiN,SAAS,gBAE5B,QAAU9P,IAANkC,EACA,OACJ,MAAMjL,EAASiL,EACTga,EAAgB/Q,EAAKuB,sBAAwB,IAAI7O,KAAK5G,EAAO4N,QAAQ/G,WACrEqe,GAAqBD,EAAatU,WAAauD,EAAKsE,cACtDyM,EAAatU,WACTuD,EAAKsE,aAAetE,EAAKjD,OAAO/H,WAAa,IAC5B,UAArBgL,EAAKjD,OAAOtJ,KAEhB,GADAuM,EAAKwF,iBAAmB1Z,EACC,WAArBkU,EAAKjD,OAAOtJ,KACZuM,EAAKoB,cAAgB,CAAC2P,QACrB,GAAyB,aAArB/Q,EAAKjD,OAAOtJ,KAAqB,CACtC,MAAMwd,EAAgB1L,GAAewL,GACjCE,EACAjR,EAAKoB,cAAcmI,OAAOrO,SAAS+V,GAAgB,GAEnDjR,EAAKoB,cAAc3b,KAAKsrB,OAEF,UAArB/Q,EAAKjD,OAAOtJ,OACiB,IAA9BuM,EAAKoB,cAAcpV,QACnBgU,EAAKyK,OAAM,GAAO,GAEtBzK,EAAKuB,sBAAwBwP,EAC7B/Q,EAAKoB,cAAc3b,KAAKsrB,GACwC,IAA5D/R,EAAa+R,EAAc/Q,EAAKoB,cAAc,IAAI,IAClDpB,EAAKoB,cAAc8P,MAAK,CAACC,EAAGC,IAAMD,EAAExe,UAAYye,EAAEze,aAG1D,GADAgQ,IACIqO,EAAmB,CACnB,MAAMpG,EAAY5K,EAAKoE,cAAgB2M,EAAa9d,cACpD+M,EAAKoE,YAAc2M,EAAa9d,cAChC+M,EAAKsE,aAAeyM,EAAatU,WAC7BmO,IACA7G,GAAa,gBACbS,KAEJT,GAAa,iBAejB,GAbA4F,KACA7B,IACAlF,KACKoO,GACoB,UAArBhR,EAAKjD,OAAOtJ,MACe,IAA3BuM,EAAKjD,OAAO/H,gBAEmBH,IAA1BmL,EAAKwF,uBACW3Q,IAArBmL,EAAKmC,aACLnC,EAAKwF,kBAAoBxF,EAAKwF,iBAAiBK,QAH/CF,EAAe7Z,QAKM+I,IAArBmL,EAAKmC,kBACgBtN,IAArBmL,EAAKmC,aAA6BnC,EAAKmC,YAAY0D,QACnD7F,EAAKjD,OAAOrL,cAAe,CAC3B,MAAM2f,EAA8B,WAArBrR,EAAKjD,OAAOtJ,OAAsBuM,EAAKjD,OAAO5K,WACvDmf,EAA6B,UAArBtR,EAAKjD,OAAOtJ,MACQ,IAA9BuM,EAAKoB,cAAcpV,SAClBgU,EAAKjD,OAAO5K,YACbkf,GAAUC,IACV3F,KAGR7H,IA3/CJ9D,EAAK7B,UAAYV,EAAiB,CAAEV,OAAQiD,EAAKjD,OAAQC,KAAMgD,EAAKhD,OACpEgD,EAAK4D,UAAY,GACjB5D,EAAKkM,eAAiB,GACtBlM,EAAKuR,cAAgB,GACrBvR,EAAKwR,MAAQnR,EACbL,EAAKyR,kBAAoBrO,EACzBpD,EAAK0R,kBAAoBpE,GACzBtN,EAAKgH,YAAcA,EACnBhH,EAAKuD,WAAaA,EAClBvD,EAAKyK,MA4tBL,SAAekH,GAAqB,EAAMC,GAAY,GAYlD,GAXA5R,EAAK2B,MAAMvc,MAAQ,QACGyP,IAAlBmL,EAAKhP,WACLgP,EAAKhP,SAAS5L,MAAQ,SACDyP,IAArBmL,EAAK6R,cACL7R,EAAK6R,YAAYzsB,MAAQ,IAC7B4a,EAAKoB,cAAgB,GACrBpB,EAAKuB,2BAAwB1M,GACX,IAAd+c,IACA5R,EAAKoE,YAAcpE,EAAK8R,aAAa7e,cACrC+M,EAAKsE,aAAetE,EAAK8R,aAAarV,aAEX,IAA3BuD,EAAKjD,OAAO5K,WAAqB,CACjC,MAAM,MAAEiN,EAAK,QAAEzD,EAAO,QAAEjB,GAAYyE,EAAgBa,EAAKjD,QACzDnK,EAASwM,EAAOzD,EAASjB,GAE7BsF,EAAKyE,SACDkN,GACA5N,GAAa,aA7uBrB/D,EAAKwK,MA+uBL,WACIxK,EAAK+J,QAAS,EACT/J,EAAK/C,gBACyBpI,IAA3BmL,EAAKQ,mBACLR,EAAKQ,kBAAkB9I,UAAUC,OAAO,aAExB9C,IAAhBmL,EAAK0C,QACL1C,EAAK0C,OAAOhL,UAAUC,OAAO,WAGrCoM,GAAa,YAxvBjB/D,EAAK+R,eAAiBna,EACtBoI,EAAKgS,QAyvBL,gBACwBnd,IAAhBmL,EAAKjD,QACLgH,GAAa,aACjB,IAAK,IAAIrI,EAAIsE,EAAK4D,UAAU5X,OAAQ0P,KAChCsE,EAAK4D,UAAUlI,GAAG/D,SAGtB,GADAqI,EAAK4D,UAAY,GACb5D,EAAK6R,YACD7R,EAAK6R,YAAYtZ,YACjByH,EAAK6R,YAAYtZ,WAAWH,YAAY4H,EAAK6R,aACjD7R,EAAK6R,iBAAchd,OAElB,GAAImL,EAAKQ,mBAAqBR,EAAKQ,kBAAkBjI,WACtD,GAAIyH,EAAKjD,OAAO9H,QAAU+K,EAAKQ,kBAAkBjI,WAAY,CACzD,MAAMI,EAAUqH,EAAKQ,kBAAkBjI,WAEvC,GADAI,EAAQsZ,WAAatZ,EAAQP,YAAYO,EAAQsZ,WAC7CtZ,EAAQJ,WAAY,CACpB,KAAOI,EAAQR,YACXQ,EAAQJ,WAAW2Z,aAAavZ,EAAQR,WAAYQ,GACxDA,EAAQJ,WAAWH,YAAYO,SAInCqH,EAAKQ,kBAAkBjI,WAAWH,YAAY4H,EAAKQ,mBAEvDR,EAAKhP,WACLgP,EAAK2B,MAAM9e,KAAO,OACdmd,EAAKhP,SAASuH,YACdyH,EAAKhP,SAASuH,WAAWH,YAAY4H,EAAKhP,iBACvCgP,EAAKhP,UAEZgP,EAAK2B,QACL3B,EAAK2B,MAAM9e,KAAOmd,EAAK2B,MAAMwQ,MAC7BnS,EAAK2B,MAAMjK,UAAUC,OAAO,mBAC5BqI,EAAK2B,MAAM8L,gBAAgB,aAE/B,CACI,iBACA,wBACA,sBACA,sBACA,uBACA,uBACA,WACA,SACA,mBACA,iBACA,iBACA,OACA,gBACA,SACA,mBACA,iBACA,aACA,WACA,gBACA,oBACA,mBACA,eACA,eACA,0BACA,sBACA,qBACA,yBACA,mBACA,UACFrlB,SAASgqB,IACP,WACWpS,EAAKoS,GAEhB,MAAOvX,SA9zBfmF,EAAKkF,UAAYA,EACjBlF,EAAKgE,WAAaA,EAClBhE,EAAKyL,KA+nCL,SAAc1T,EAAGnD,EAAkBoL,EAAKoO,kBACpC,IAAsB,IAAlBpO,EAAK/C,SAAmB,CACxB,GAAIlF,EAAG,CACHA,EAAEyJ,iBACF,MAAME,EAAcxI,EAAenB,GAC/B2J,GACAA,EAAY8J,OAQpB,YALyB3W,IAArBmL,EAAK6R,cACL7R,EAAK6R,YAAYhM,QACjB7F,EAAK6R,YAAYQ,cAErBtO,GAAa,UAGZ,GAAI/D,EAAK0C,OAAOmG,UAAY7I,EAAKjD,OAAOzJ,OACzC,OAEJ,MAAMgf,EAAUtS,EAAK+J,OACrB/J,EAAK+J,QAAS,EACTuI,IACDtS,EAAKQ,kBAAkB9I,UAAUrL,IAAI,QACrC2T,EAAK0C,OAAOhL,UAAUrL,IAAI,UAC1B0X,GAAa,UACbuJ,GAAiB1Y,KAEU,IAA3BoL,EAAKjD,OAAO5K,aAAkD,IAA3B6N,EAAKjD,OAAOnJ,cAChB,IAA3BoM,EAAKjD,OAAOlM,iBACLgE,IAANkD,GACIiI,EAAKuK,cAAc5F,SAAS5M,EAAEqS,gBACnCnT,YAAW,IAAM+I,EAAKmC,YAAYoQ,UAAU,MA7pCxDvS,EAAKyE,OAASA,GACdzE,EAAKwS,IA8/CL,SAAaC,EAAQrtB,GACjB,GAAe,OAAXqtB,GAAqC,iBAAXA,EAAqB,CAC/C/qB,OAAOuY,OAAOD,EAAKjD,OAAQ0V,GAC3B,IAAK,MAAM5qB,KAAO4qB,OACS5d,IAAnB6d,GAAU7qB,IACV6qB,GAAU7qB,GAAKO,SAAS+jB,GAAMA,WAItCnM,EAAKjD,OAAO0V,GAAUrtB,OACIyP,IAAtB6d,GAAUD,GACVC,GAAUD,GAAQrqB,SAAS+jB,GAAMA,MAC5Bzb,EAAMY,QAAQmhB,IAAW,IAC9BzS,EAAKjD,OAAO0V,GAAUrb,EAAShS,IAEvC4a,EAAKyE,SACL7B,IAAY,IA7gDhB5C,EAAKnN,QAijDL,SAAiBJ,EAAMqR,GAAgB,EAAO9F,EAASgC,EAAKjD,OAAOnL,YAC/D,GAAc,IAATa,IAAeA,GAAUA,aAAgB6E,OAAyB,IAAhB7E,EAAKzG,OACxD,OAAOgU,EAAKyK,MAAM3G,GACtB6O,GAAgBlgB,EAAMuL,GACtBgC,EAAKuB,sBACDvB,EAAKoB,cAAcpB,EAAKoB,cAAcpV,OAAS,GACnDgU,EAAKyE,SACLT,OAAWnP,EAAWiP,GACtBV,IACkC,IAA9BpD,EAAKoB,cAAcpV,QACnBgU,EAAKyK,OAAM,GAEf7H,GAAYkB,GACRA,GACAC,GAAa,aA9jDrB/D,EAAK4S,OAisDL,SAAgB7a,GACZ,IAAoB,IAAhBiI,EAAK+J,OACL,OAAO/J,EAAKwK,QAChBxK,EAAKyL,KAAK1T,IA1Nd,MAAM2a,GAAY,CACdnf,OAAQ,CAACqa,GAAatE,GACtBtU,WAAY,CAAC8T,EAAaxI,EAAkB8I,GAC5C/J,QAAS,CAAC2E,GACVvE,QAAS,CAACuE,GACVvS,WAAY,CACR,MACmC,IAA3BuO,EAAKjD,OAAOtL,YACZ4O,EAAKL,EAAK0C,OAAQ,QAAS1C,EAAKyL,MAChCpL,EAAKL,EAAK0C,OAAQ,QAAS1C,EAAKyL,QAGhCzL,EAAK0C,OAAOmB,oBAAoB,QAAS7D,EAAKyL,MAC9CzL,EAAK0C,OAAOmB,oBAAoB,QAAS7D,EAAKyL,UAuB9D,SAASkH,GAAgBE,EAAW7U,GAChC,IAAI8U,EAAQ,GACZ,GAAID,aAAqBvb,MACrBwb,EAAQD,EAAUjrB,KAAK4T,GAAMwE,EAAK7B,UAAU3C,EAAGwC,UAC9C,GAAI6U,aAAqBngB,MAA6B,iBAAdmgB,EACzCC,EAAQ,CAAC9S,EAAK7B,UAAU0U,EAAW7U,SAClC,GAAyB,iBAAd6U,EACZ,OAAQ7S,EAAKjD,OAAOtJ,MAChB,IAAK,SACL,IAAK,OACDqf,EAAQ,CAAC9S,EAAK7B,UAAU0U,EAAW7U,IACnC,MACJ,IAAK,WACD8U,EAAQD,EACHxV,MAAM2C,EAAKjD,OAAOpL,aAClB/J,KAAK6K,GAASuN,EAAK7B,UAAU1L,EAAMuL,KACxC,MACJ,IAAK,QACD8U,EAAQD,EACHxV,MAAM2C,EAAKhD,KAAKjH,gBAChBnO,KAAK6K,GAASuN,EAAK7B,UAAU1L,EAAMuL,UAOhDgC,EAAKjD,OAAO3K,aAAa,IAAI2M,MAAM,0BAA0BgP,KAAKE,UAAU4E,OAChF7S,EAAKoB,cAAiBpB,EAAKjD,OAAOjM,oBAC5BgiB,EACAA,EAAMljB,QAAQ4L,GAAMA,aAAa9I,MAAQwS,EAAU1J,GAAG,KACnC,UAArBwE,EAAKjD,OAAOtJ,MACZuM,EAAKoB,cAAc8P,MAAK,CAACC,EAAGC,IAAMD,EAAExe,UAAYye,EAAEze,YAkB1D,SAASogB,GAAexV,GACpB,OAAOA,EACF7G,QACA9O,KAAKorB,GACc,iBAATA,GACS,iBAATA,GACPA,aAAgBtgB,KACTsN,EAAK7B,UAAU6U,OAAMne,GAAW,GAElCme,GACW,iBAATA,GACPA,EAAK9H,MACL8H,EAAK7H,GACE,CACHD,KAAMlL,EAAK7B,UAAU6U,EAAK9H,UAAMrW,GAChCsW,GAAInL,EAAK7B,UAAU6U,EAAK7H,QAAItW,IAE7Bme,IAENpjB,QAAQuc,GAAMA,IAmHvB,SAASpI,GAAargB,EAAOG,GACzB,QAAoBgR,IAAhBmL,EAAKjD,OACL,OACJ,MAAMkW,EAAQjT,EAAKjD,OAAOrZ,GAC1B,QAAcmR,IAAVoe,GAAuBA,EAAMjnB,OAAS,EACtC,IAAK,IAAI0P,EAAI,EAAGuX,EAAMvX,IAAMA,EAAIuX,EAAMjnB,OAAQ0P,IAC1CuX,EAAMvX,GAAGsE,EAAKoB,cAAepB,EAAK2B,MAAMvc,MAAO4a,EAAMnc,GAE/C,aAAVH,IACAsc,EAAK2B,MAAMmD,cAAcD,GAAY,WACrC7E,EAAK2B,MAAMmD,cAAcD,GAAY,WAG7C,SAASA,GAAYze,GACjB,MAAM2R,EAAIpM,SAASkZ,YAAY,SAE/B,OADA9M,EAAEmb,UAAU9sB,GAAM,GAAM,GACjB2R,EAEX,SAASwN,GAAe9S,GACpB,IAAK,IAAIiJ,EAAI,EAAGA,EAAIsE,EAAKoB,cAAcpV,OAAQ0P,IAC3C,GAAkD,IAA9CsD,EAAagB,EAAKoB,cAAc1F,GAAIjJ,GACpC,MAAO,GAAKiJ,EAEpB,OAAO,EAQX,SAASiO,KACD3J,EAAKjD,OAAOnJ,YAAcoM,EAAK/C,WAAa+C,EAAK+I,WAErD/I,EAAKiJ,aAAa7gB,SAAQ,CAACugB,EAAajN,KACpC,MAAMF,EAAI,IAAI9I,KAAKsN,EAAKoE,YAAapE,EAAKsE,aAAc,GACxD9I,EAAE5B,SAASoG,EAAKsE,aAAe5I,GAC3BsE,EAAKjD,OAAO/H,WAAa,GACS,WAAlCgL,EAAKjD,OAAOrJ,kBACZsM,EAAKkJ,cAAcxN,GAAG1D,YAClBqB,EAAWmC,EAAEiB,WAAYuD,EAAKjD,OAAOhI,sBAAuBiL,EAAKhD,MAAQ,IAG7EgD,EAAKiI,wBAAwB7iB,MAAQoW,EAAEiB,WAAW6G,WAEtDqF,EAAYvjB,MAAQoW,EAAEvI,cAAcqQ,cAExCtD,EAAKyJ,yBACuB5U,IAAxBmL,EAAKjD,OAAOsC,UACPW,EAAKoE,cAAgBpE,EAAKjD,OAAOsC,QAAQpM,cACpC+M,EAAKsE,cAAgBtE,EAAKjD,OAAOsC,QAAQ5C,WACzCuD,EAAKoE,YAAcpE,EAAKjD,OAAOsC,QAAQpM,eACrD+M,EAAK0J,yBACuB7U,IAAxBmL,EAAKjD,OAAO0C,UACPO,EAAKoE,cAAgBpE,EAAKjD,OAAO0C,QAAQxM,cACpC+M,EAAKsE,aAAe,EAAItE,EAAKjD,OAAO0C,QAAQhD,WAC5CuD,EAAKoE,YAAcpE,EAAKjD,OAAO0C,QAAQxM,gBAEzD,SAASkgB,GAAWnV,GAChB,OAAOgC,EAAKoB,cACPxZ,KAAKwrB,GAASpT,EAAK5C,WAAWgW,EAAMpV,KACpCpO,QAAO,CAAC4L,EAAGE,EAAG6B,IAA6B,UAArByC,EAAKjD,OAAOtJ,MACnCuM,EAAKjD,OAAO5K,YACZoL,EAAIjM,QAAQkK,KAAOE,IAClB8B,KAA0B,UAArBwC,EAAKjD,OAAOtJ,KAChBuM,EAAKjD,OAAOpL,YACZqO,EAAKhD,KAAKjH,gBAEpB,SAAS6M,GAAYkB,GAAgB,QACRjP,IAArBmL,EAAK6R,aAA6B7R,EAAKqT,kBACvCrT,EAAK6R,YAAYzsB,WACkByP,IAA/BmL,EAAKuB,sBACCvB,EAAK5C,WAAW4C,EAAKuB,sBAAuBvB,EAAKqT,iBACjD,IAEdrT,EAAK2B,MAAMvc,MAAQ+tB,GAAWnT,EAAKjD,OAAOnL,iBACpBiD,IAAlBmL,EAAKhP,WACLgP,EAAKhP,SAAS5L,MAAQ+tB,GAAWnT,EAAKjD,OAAOhM,aAE3B,IAAlB+S,GACAC,GAAa,iBAErB,SAASuP,GAAgBvb,GACrB,MAAM2J,EAAcxI,EAAenB,GAC7Bwb,EAAcvT,EAAKgJ,aAAarE,SAASjD,GACzC8R,EAAcxT,EAAKmJ,aAAaxE,SAASjD,GAC3C6R,GAAeC,EACfxM,EAAYuM,GAAe,EAAI,GAE1BvT,EAAKiJ,aAAa3X,QAAQoQ,IAAgB,EAC/CA,EAAY6Q,SAEP7Q,EAAYhK,UAAUiN,SAAS,WACpC3E,EAAKuD,WAAWvD,EAAKoE,YAAc,GAE9B1C,EAAYhK,UAAUiN,SAAS,cACpC3E,EAAKuD,WAAWvD,EAAKoE,YAAc,GA0C3C,OAt0DA,WACIpE,EAAKF,QAAUE,EAAK2B,MAAQ7B,EAC5BE,EAAK+J,QAAS,EA+qClB,WACI,MAAM0J,EAAW,CACb,OACA,cACA,aACA,sBACA,aACA,YACA,aACA,aACA,WACA,wBACA,SACA,SACA,gBACA,iBAEEC,EAAahsB,OAAOuY,OAAOvY,OAAOuY,OAAO,GAAI8N,KAAKC,MAAMD,KAAKE,UAAUnO,EAAQoO,SAAW,MAAOnO,GACjGxD,EAAU,GAChByD,EAAKjD,OAAOoB,UAAYuV,EAAWvV,UACnC6B,EAAKjD,OAAOK,WAAasW,EAAWtW,WACpC1V,OAAOisB,eAAe3T,EAAKjD,OAAQ,SAAU,CACzC6W,IAAK,IAAM5T,EAAKjD,OAAO8W,QACvBrB,IAAMM,IACF9S,EAAKjD,OAAO8W,QAAUd,GAAeD,MAG7CprB,OAAOisB,eAAe3T,EAAKjD,OAAQ,UAAW,CAC1C6W,IAAK,IAAM5T,EAAKjD,OAAOnM,SACvB4hB,IAAMM,IACF9S,EAAKjD,OAAOnM,SAAWmiB,GAAeD,MAG9C,MAAMgB,EAA+B,SAApBJ,EAAWjgB,KAC5B,IAAKigB,EAAW9hB,aAAe8hB,EAAWvhB,YAAc2hB,GAAW,CAC/D,MAAMC,EAAoB7T,EAAUC,cAAcvO,YAAc,aAChE2K,EAAQ3K,WACJ8hB,EAAW9f,YAAckgB,EACnB,OAASJ,EAAWxhB,cAAgB,KAAO,IAC3C6hB,EAAoB,QAAUL,EAAWxhB,cAAgB,KAAO,IAE9E,GAAIwhB,EAAW1iB,WACV0iB,EAAWvhB,YAAc2hB,KACzBJ,EAAW3iB,UAAW,CACvB,MAAMijB,EAAmB9T,EAAUC,cAAcpP,WAAa,YAC9DwL,EAAQxL,UACJ2iB,EAAW9f,YAAckgB,EACnB,OAASJ,EAAWxhB,cAAgB,OAAS,MAC7C8hB,EAAmB,OAAON,EAAWxhB,cAAgB,KAAO,OAE1ExK,OAAOisB,eAAe3T,EAAKjD,OAAQ,UAAW,CAC1C6W,IAAK,IAAM5T,EAAKjD,OAAOkX,SACvBzB,IAAKjF,GAAiB,SAE1B7lB,OAAOisB,eAAe3T,EAAKjD,OAAQ,UAAW,CAC1C6W,IAAK,IAAM5T,EAAKjD,OAAOmX,SACvB1B,IAAKjF,GAAiB,SAE1B,MAAM4G,EAAoBtxB,GAAUgc,IAChCmB,EAAKjD,OAAgB,QAATla,EAAiB,WAAa,YAAcmd,EAAK7B,UAAUU,EAAK,UAEhFnX,OAAOisB,eAAe3T,EAAKjD,OAAQ,UAAW,CAC1C6W,IAAK,IAAM5T,EAAKjD,OAAOqX,SACvB5B,IAAK2B,EAAiB,SAE1BzsB,OAAOisB,eAAe3T,EAAKjD,OAAQ,UAAW,CAC1C6W,IAAK,IAAM5T,EAAKjD,OAAOsX,SACvB7B,IAAK2B,EAAiB,SAEF,SAApBT,EAAWjgB,OACXuM,EAAKjD,OAAOnJ,YAAa,EACzBoM,EAAKjD,OAAO5K,YAAa,GAE7BzK,OAAOuY,OAAOD,EAAKjD,OAAQR,EAASmX,GACpC,IAAK,IAAIhY,EAAI,EAAGA,EAAI+X,EAASznB,OAAQ0P,IACjCsE,EAAKjD,OAAO0W,EAAS/X,KACY,IAA7BsE,EAAKjD,OAAO0W,EAAS/X,KACY,SAA7BsE,EAAKjD,OAAO0W,EAAS/X,IACjChL,EAAMd,QAAQ0kB,QAA+Bzf,IAAtBmL,EAAKjD,OAAOuX,KAAqBlsB,SAASksB,IAC7DtU,EAAKjD,OAAOuX,GAAQld,EAAS4I,EAAKjD,OAAOuX,IAAS,IAAI1sB,IAAIwY,MAE9DJ,EAAK/C,UACA+C,EAAKjD,OAAO9K,gBACR+N,EAAKjD,OAAOzJ,QACQ,WAArB0M,EAAKjD,OAAOtJ,OACXuM,EAAKjD,OAAO/K,QAAQhG,SACpBgU,EAAKjD,OAAOgO,SACZ/K,EAAKjD,OAAO5H,aACb,iEAAiEmF,KAAKlJ,UAAUC,WACxF,IAAK,IAAIqK,EAAI,EAAGA,EAAIsE,EAAKjD,OAAOrI,QAAQ1I,OAAQ0P,IAAK,CACjD,MAAM6Y,EAAavU,EAAKjD,OAAOrI,QAAQgH,GAAGsE,IAAS,GACnD,IAAK,MAAMnY,KAAO0sB,EACV7jB,EAAMY,QAAQzJ,IAAQ,EACtBmY,EAAKjD,OAAOlV,GAAOuP,EAASmd,EAAW1sB,IAClCD,IAAIwY,GACJ6L,OAAOjM,EAAKjD,OAAOlV,SAEQ,IAApB6rB,EAAW7rB,KACvBmY,EAAKjD,OAAOlV,GAAO0sB,EAAW1sB,IAGrC6rB,EAAWziB,gBACZ+O,EAAKjD,OAAO9L,cACRyc,KAAejW,UAAY,IAAMuI,EAAKjD,OAAO9L,eAErD8S,GAAa,iBAvxCbyQ,GACA5G,KAinDA5N,EAAK2B,MAAQ+L,KACR1N,EAAK2B,OAIV3B,EAAK2B,MAAMwQ,MAAQnS,EAAK2B,MAAM9e,KAC9Bmd,EAAK2B,MAAM9e,KAAO,OAClBmd,EAAK2B,MAAMjK,UAAUrL,IAAI,mBACzB2T,EAAK0C,OAAS1C,EAAK2B,MACf3B,EAAKjD,OAAO/L,WACZgP,EAAKhP,SAAW4G,EAAcoI,EAAK2B,MAAM8S,SAAUzU,EAAKjD,OAAO9L,eAC/D+O,EAAK0C,OAAS1C,EAAKhP,SACnBgP,EAAKhP,SAAS0jB,YAAc1U,EAAK2B,MAAM+S,YACvC1U,EAAKhP,SAAS6X,SAAW7I,EAAK2B,MAAMkH,SACpC7I,EAAKhP,SAAS2jB,SAAW3U,EAAK2B,MAAMgT,SACpC3U,EAAKhP,SAASsU,SAAWtF,EAAK2B,MAAM2D,SACpCtF,EAAKhP,SAASnO,KAAO,OACrBmd,EAAK2B,MAAM3I,aAAa,OAAQ,WAC3BgH,EAAKjD,OAAO9H,QAAU+K,EAAK2B,MAAMpJ,YAClCyH,EAAK2B,MAAMpJ,WAAW2Z,aAAalS,EAAKhP,SAAUgP,EAAK2B,MAAMiT,cAEhE5U,EAAKjD,OAAOlM,YACbmP,EAAK0C,OAAO1J,aAAa,WAAY,YACzCgH,EAAKoO,iBAAmBpO,EAAKjD,OAAOnI,iBAAmBoL,EAAK0C,QArBxD1C,EAAKjD,OAAO3K,aAAa,IAAI2M,MAAM,oCA5C3C,WACIiB,EAAKoB,cAAgB,GACrBpB,EAAKnM,IAAMmM,EAAK7B,UAAU6B,EAAKjD,OAAOlJ,MAAQ,IAAInB,KAClD,MAAMmiB,EAAgB7U,EAAKjD,OAAOsE,cACJ,UAAxBrB,EAAK2B,MAAM8S,UACe,aAAxBzU,EAAK2B,MAAM8S,WACXzU,EAAK2B,MAAM+S,aACX1U,EAAK2B,MAAMvc,QAAU4a,EAAK2B,MAAM+S,YAE9B1U,EAAK2B,MAAMvc,MADX,MAENyvB,GACAlC,GAAgBkC,EAAe7U,EAAKjD,OAAOnL,YAC/CoO,EAAK8R,aACD9R,EAAKoB,cAAcpV,OAAS,EACtBgU,EAAKoB,cAAc,GACnBpB,EAAKjD,OAAOsC,SACVW,EAAKjD,OAAOsC,QAAQ1M,UAAYqN,EAAKnM,IAAIlB,UACvCqN,EAAKjD,OAAOsC,QACZW,EAAKjD,OAAO0C,SACVO,EAAKjD,OAAO0C,QAAQ9M,UAAYqN,EAAKnM,IAAIlB,UACvCqN,EAAKjD,OAAO0C,QACZO,EAAKnM,IACvBmM,EAAKoE,YAAcpE,EAAK8R,aAAa7e,cACrC+M,EAAKsE,aAAetE,EAAK8R,aAAarV,WAClCuD,EAAKoB,cAAcpV,OAAS,IAC5BgU,EAAKuB,sBAAwBvB,EAAKoB,cAAc,SACxBvM,IAAxBmL,EAAKjD,OAAOiG,UACZhD,EAAKjD,OAAOiG,QAAUhD,EAAK7B,UAAU6B,EAAKjD,OAAOiG,QAAS,aAClCnO,IAAxBmL,EAAKjD,OAAOmG,UACZlD,EAAKjD,OAAOmG,QAAUlD,EAAK7B,UAAU6B,EAAKjD,OAAOmG,QAAS,QAC9DlD,EAAKiD,iBACCjD,EAAKjD,OAAOsC,UACTW,EAAKjD,OAAOsC,QAAQjF,WAAa,GAC9B4F,EAAKjD,OAAOsC,QAAQ1C,aAAe,GACnCqD,EAAKjD,OAAOsC,QAAQ3C,aAAe,GAC/CsD,EAAKmD,iBACCnD,EAAKjD,OAAO0C,UACTO,EAAKjD,OAAO0C,QAAQrF,WAAa,GAC9B4F,EAAKjD,OAAO0C,QAAQ9C,aAAe,GACnCqD,EAAKjD,OAAO0C,QAAQ/C,aAAe,GA5mD/CoY,GAdA9U,EAAKqH,MAAQ,CACTC,eAAc,CAACtL,EAAQgE,EAAKsE,aAAcyQ,EAAK/U,EAAKoE,cAClC,IAAVpI,IAAiB+Y,EAAK,GAAM,GAAKA,EAAK,KAAQ,GAAMA,EAAK,KAAQ,GAC1D,GACJ/U,EAAKhD,KAAKtH,YAAYsG,IAYhCgE,EAAK/C,UAsQd,WACI,MAAM+X,EAAW7jB,OAAOxF,SAAS4b,yBAGjC,GAFAvH,EAAKQ,kBAAoB5I,EAAc,MAAO,sBAC9CoI,EAAKQ,kBAAkB8E,UAAY,GAC9BtF,EAAKjD,OAAOnJ,WAAY,CAGzB,GAFAohB,EAAS/b,aA8Rb+G,EAAK+I,SAAWnR,EAAc,MAAO,oBACrCoI,EAAKiJ,aAAe,GACpBjJ,EAAKkJ,cAAgB,GACrBlJ,EAAKgJ,aAAepR,EAAc,OAAQ,wBAC1CoI,EAAKgJ,aAAad,UAAYlI,EAAKjD,OAAOjI,UAC1CkL,EAAKmJ,aAAevR,EAAc,OAAQ,wBAC1CoI,EAAKmJ,aAAajB,UAAYlI,EAAKjD,OAAOpJ,UAC1CmV,IACAphB,OAAOisB,eAAe3T,EAAM,sBAAuB,CAC/C4T,IAAK,IAAM5T,EAAKiV,qBAChBzC,IAAI7b,GACIqJ,EAAKiV,uBAAyBte,IAC9BY,EAAYyI,EAAKgJ,aAAc,qBAAsBrS,GACrDqJ,EAAKiV,qBAAuBte,MAIxCjP,OAAOisB,eAAe3T,EAAM,sBAAuB,CAC/C4T,IAAK,IAAM5T,EAAKkV,qBAChB1C,IAAI7b,GACIqJ,EAAKkV,uBAAyBve,IAC9BY,EAAYyI,EAAKmJ,aAAc,qBAAsBxS,GACrDqJ,EAAKkV,qBAAuBve,MAIxCqJ,EAAK+L,mBAAqB/L,EAAKiJ,aAAa,GAC5CU,KACO3J,EAAK+I,WAzTR/I,EAAKmV,eAAiBvd,EAAc,MAAO,4BACvCoI,EAAKjD,OAAO5H,YAAa,CACzB,MAAM,YAAE8L,EAAW,YAAE9L,GAuZjC,WACI6K,EAAKQ,kBAAkB9I,UAAUrL,IAAI,YACrC,MAAM4U,EAAcrJ,EAAc,MAAO,yBACzCqJ,EAAYhI,YAAYrB,EAAc,OAAQ,oBAAqBoI,EAAKhD,KAAKhH,mBAC7E,MAAMb,EAAcyC,EAAc,MAAO,mBAEzC,OADAqJ,EAAYhI,YAAY9D,GACjB,CACH8L,YAAAA,EACA9L,YAAAA,GA/ZyCigB,GACrCpV,EAAKmV,eAAelc,YAAYgI,GAChCjB,EAAK7K,YAAcA,EACnB6K,EAAKiB,YAAcA,EAEvBjB,EAAKqV,WAAazd,EAAc,MAAO,wBACvCoI,EAAKqV,WAAWpc,YAAYmQ,KACvBpJ,EAAKY,gBACNZ,EAAKY,cAAgBhJ,EAAc,MAAO,kBAC1CoI,EAAKY,cAAc0E,UAAY,GAEnCwC,IACA9H,EAAKqV,WAAWpc,YAAY+G,EAAKY,eACjCZ,EAAKmV,eAAelc,YAAY+G,EAAKqV,YACrCL,EAAS/b,YAAY+G,EAAKmV,gBAE1BnV,EAAKjD,OAAO5K,YACZ6iB,EAAS/b,YAwSjB,WACI+G,EAAKQ,kBAAkB9I,UAAUrL,IAAI,WACjC2T,EAAKjD,OAAOnJ,YACZoM,EAAKQ,kBAAkB9I,UAAUrL,IAAI,cACzC,MAAMsE,EAAWwO,EAAgBa,EAAKjD,QACtCiD,EAAKuK,cAAgB3S,EAAc,MAAO,kBAC1CoI,EAAKuK,cAAcjF,UAAY,EAC/B,MAAMgQ,EAAY1d,EAAc,OAAQ,2BAA4B,KAC9D2d,EAAY/c,EAAkB,iBAAkB,CAClD,aAAcwH,EAAKhD,KAAK1G,gBAE5B0J,EAAKmC,YAAcoT,EAAU3M,qBAAqB,SAAS,GAC3D,MAAM4M,EAAchd,EAAkB,mBAAoB,CACtD,aAAcwH,EAAKhD,KAAKzG,kBAyB5B,GAvBAyJ,EAAKqC,cAAgBmT,EAAY5M,qBAAqB,SAAS,GAC/D5I,EAAKmC,YAAYmD,SAAWtF,EAAKqC,cAAciD,UAAY,EAC3DtF,EAAKmC,YAAY/c,MAAQoR,EAAIwJ,EAAKuB,sBAC5BvB,EAAKuB,sBAAsBnH,WAC3B4F,EAAKjD,OAAO7H,UACRvE,EAASyO,MAthBvB,SAAuBtF,GACnB,OAAQA,EAAO,IACX,KAAK,EACL,KAAK,GACD,OAAO,GACX,QACI,OAAOA,EAAO,IAihBZ2b,CAAc9kB,EAASyO,QACjCY,EAAKqC,cAAcjd,MAAQoR,EAAIwJ,EAAKuB,sBAC9BvB,EAAKuB,sBAAsB5E,aAC3BhM,EAASgL,SACfqE,EAAKmC,YAAYnJ,aAAa,OAAQgH,EAAKjD,OAAO3J,cAAckQ,YAChEtD,EAAKqC,cAAcrJ,aAAa,OAAQgH,EAAKjD,OAAOvJ,gBAAgB8P,YACpEtD,EAAKmC,YAAYnJ,aAAa,MAAOgH,EAAKjD,OAAO7H,UAAY,IAAM,KACnE8K,EAAKmC,YAAYnJ,aAAa,MAAOgH,EAAKjD,OAAO7H,UAAY,KAAO,MACpE8K,EAAKmC,YAAYnJ,aAAa,YAAa,KAC3CgH,EAAKqC,cAAcrJ,aAAa,MAAO,KACvCgH,EAAKqC,cAAcrJ,aAAa,MAAO,MACvCgH,EAAKqC,cAAcrJ,aAAa,YAAa,KAC7CgH,EAAKuK,cAActR,YAAYsc,GAC/BvV,EAAKuK,cAActR,YAAYqc,GAC/BtV,EAAKuK,cAActR,YAAYuc,GAC3BxV,EAAKjD,OAAO7H,WACZ8K,EAAKuK,cAAc7S,UAAUrL,IAAI,YACjC2T,EAAKjD,OAAO7K,cAAe,CAC3B8N,EAAKuK,cAAc7S,UAAUrL,IAAI,cACjC,MAAMqpB,EAAcld,EAAkB,oBACtCwH,EAAK8C,cAAgB4S,EAAY9M,qBAAqB,SAAS,GAC/D5I,EAAK8C,cAAc1d,MAAQoR,EAAIwJ,EAAKuB,sBAC9BvB,EAAKuB,sBAAsB7E,aAC3B/L,EAAS+J,SACfsF,EAAK8C,cAAc9J,aAAa,OAAQgH,EAAKqC,cAAcT,aAAa,SACxE5B,EAAK8C,cAAc9J,aAAa,MAAO,KACvCgH,EAAK8C,cAAc9J,aAAa,MAAO,MACvCgH,EAAK8C,cAAc9J,aAAa,YAAa,KAC7CgH,EAAKuK,cAActR,YAAYrB,EAAc,OAAQ,2BAA4B,MACjFoI,EAAKuK,cAActR,YAAYyc,GAUnC,OARK1V,EAAKjD,OAAO7H,YACb8K,EAAK7J,KAAOyB,EAAc,OAAQ,kBAAmBoI,EAAKhD,KAAK7G,KAAK,GAAK6J,EAAKuB,sBACxEvB,EAAKmC,YAAY/c,MACjB4a,EAAKjD,OAAOlL,aAAe,MACjCmO,EAAK7J,KAAKjL,MAAQ8U,EAAKhD,KAAK9G,YAC5B8J,EAAK7J,KAAKmP,UAAY,EACtBtF,EAAKuK,cAActR,YAAY+G,EAAK7J,OAEjC6J,EAAKuK,cApWaoL,IAEzBpe,EAAYyI,EAAKQ,kBAAmB,YAAkC,UAArBR,EAAKjD,OAAOtJ,MAC7D8D,EAAYyI,EAAKQ,kBAAmB,WAAmC,IAAxBR,EAAKjD,OAAO7L,SAC3DqG,EAAYyI,EAAKQ,kBAAmB,aAAcR,EAAKjD,OAAO/H,WAAa,GAC3EgL,EAAKQ,kBAAkBvH,YAAY+b,GACnC,MAAMY,OAAwC/gB,IAAzBmL,EAAKjD,OAAO8M,eACKhV,IAAlCmL,EAAKjD,OAAO8M,SAASgM,SACzB,IAAI7V,EAAKjD,OAAOzJ,QAAU0M,EAAKjD,OAAO9H,UAClC+K,EAAKQ,kBAAkB9I,UAAUrL,IAAI2T,EAAKjD,OAAOzJ,OAAS,SAAW,UACjE0M,EAAKjD,OAAOzJ,UACPsiB,GAAgB5V,EAAKF,QAAQvH,WAC9ByH,EAAKF,QAAQvH,WAAW2Z,aAAalS,EAAKQ,kBAAmBR,EAAK0C,OAAOkS,kBAC3C/f,IAAzBmL,EAAKjD,OAAO8M,UACjB7J,EAAKjD,OAAO8M,SAAS5Q,YAAY+G,EAAKQ,oBAE1CR,EAAKjD,OAAO9H,QAAQ,CACpB,MAAM0D,EAAUf,EAAc,MAAO,qBACjCoI,EAAKF,QAAQvH,YACbyH,EAAKF,QAAQvH,WAAW2Z,aAAavZ,EAASqH,EAAKF,SACvDnH,EAAQM,YAAY+G,EAAKF,SACrBE,EAAKhP,UACL2H,EAAQM,YAAY+G,EAAKhP,UAC7B2H,EAAQM,YAAY+G,EAAKQ,mBAG5BR,EAAKjD,OAAO9H,QAAW+K,EAAKjD,OAAOzJ,cACVuB,IAAzBmL,EAAKjD,OAAO8M,SACP7J,EAAKjD,OAAO8M,SACZ1Y,OAAOxF,SAASgb,MAAM1N,YAAY+G,EAAKQ,mBA3T7CsV,GAkKR,WAMI,GALI9V,EAAKjD,OAAO3H,MACZ,CAAC,OAAQ,QAAS,SAAU,SAAShN,SAAS2tB,IAC1Cze,MAAMgX,UAAUlmB,QAAQomB,KAAKxO,EAAKF,QAAQkW,iBAAiB,SAASD,OAAUrS,GAAOrD,EAAKqD,EAAI,QAAS1D,EAAK+V,SAGhH/V,EAAK/C,SAEL,YA29CR,WACI,MAAMgZ,EAAYjW,EAAKjD,OAAO5K,WACxB6N,EAAKjD,OAAOnJ,WACR,OACA,iBACJ,OACNoM,EAAK6R,YAAcja,EAAc,QAASoI,EAAK2B,MAAMlK,UAAY,qBACjEuI,EAAK6R,YAAYvM,SAAW,EAC5BtF,EAAK6R,YAAYhvB,KAAOozB,EACxBjW,EAAK6R,YAAYhJ,SAAW7I,EAAK2B,MAAMkH,SACvC7I,EAAK6R,YAAY8C,SAAW3U,EAAK2B,MAAMgT,SACvC3U,EAAK6R,YAAY6C,YAAc1U,EAAK2B,MAAM+S,YAC1C1U,EAAKqT,gBACa,mBAAd4C,EACM,gBACc,SAAdA,EACI,QACA,QACVjW,EAAKoB,cAAcpV,OAAS,IAC5BgU,EAAK6R,YAAY5oB,aAAe+W,EAAK6R,YAAYzsB,MAAQ4a,EAAK5C,WAAW4C,EAAKoB,cAAc,GAAIpB,EAAKqT,kBAErGrT,EAAKjD,OAAOsC,UACZW,EAAK6R,YAAYjS,IAAMI,EAAK5C,WAAW4C,EAAKjD,OAAOsC,QAAS,UAC5DW,EAAKjD,OAAO0C,UACZO,EAAK6R,YAAYhQ,IAAM7B,EAAK5C,WAAW4C,EAAKjD,OAAO0C,QAAS,UAC5DO,EAAK2B,MAAMC,aAAa,UACxB5B,EAAK6R,YAAY9vB,KAAO6a,OAAOoD,EAAK2B,MAAMC,aAAa,UAC3D5B,EAAK2B,MAAM9e,KAAO,cACIgS,IAAlBmL,EAAKhP,WACLgP,EAAKhP,SAASnO,KAAO,UACzB,IACQmd,EAAK2B,MAAMpJ,YACXyH,EAAK2B,MAAMpJ,WAAW2Z,aAAalS,EAAK6R,YAAa7R,EAAK2B,MAAMiT,aAExE,MAAO/J,IACPxK,EAAKL,EAAK6R,YAAa,UAAW9Z,IAC9BiI,EAAKnN,QAAQqG,EAAenB,GAAG3S,OAAO,EAAO4a,EAAKqT,iBAClDtP,GAAa,YACbA,GAAa,cAlgDbmS,GAGJ,MAAMC,EAAkBvf,EAASyW,GAAU,IAwB3C,GAvBArN,EAAK6C,iBAAmBjM,EAASkN,EAzNb,KA0NhB9D,EAAKY,gBAAkB,oBAAoBtG,KAAKlJ,UAAUC,YAC1DgP,EAAKL,EAAKY,cAAe,aAAc7I,IACV,UAArBiI,EAAKjD,OAAOtJ,MACZqS,GAAY5M,EAAenB,OAEvCsI,EAAKlP,OAAOxF,SAASgb,KAAM,UAAWzS,GACjC8L,EAAKjD,OAAOzJ,QAAW0M,EAAKjD,OAAO9H,QACpCoL,EAAKlP,OAAQ,SAAUglB,QACCthB,IAAxB1D,OAAOilB,aACP/V,EAAKlP,OAAOxF,SAAU,aAAcme,GAEpCzJ,EAAKlP,OAAOxF,SAAU,YAAame,GACvCzJ,EAAKlP,OAAOxF,SAAU,QAASme,EAAe,CAAEuM,SAAS,KAC1B,IAA3BrW,EAAKjD,OAAOtL,aACZ4O,EAAKL,EAAK0C,OAAQ,QAAS1C,EAAKyL,MAChCpL,EAAKL,EAAK0C,OAAQ,QAAS1C,EAAKyL,YAET5W,IAAvBmL,EAAKY,gBACLP,EAAKL,EAAK+I,SAAU,QAASuK,IAC7BjT,EAAKL,EAAK+I,SAAU,CAAC,QAAS,aAAc1F,GAC5ChD,EAAKL,EAAKY,cAAe,QAASgL,UAEX/W,IAAvBmL,EAAKuK,oBACkB1V,IAAvBmL,EAAKqC,oBACgBxN,IAArBmL,EAAKmC,YAA2B,CAChC,MAAMmU,EAAWve,GAAMmB,EAAenB,GAAGwa,SACzClS,EAAKL,EAAKuK,cAAe,CAAC,aAAcpJ,GACxCd,EAAKL,EAAKuK,cAAe,OAAQpJ,EAAY,CAAEkV,SAAS,IACxDhW,EAAKL,EAAKuK,cAAe,QAAS7F,GAClCrE,EAAK,CAACL,EAAKmC,YAAanC,EAAKqC,eAAgB,CAAC,QAAS,SAAUiU,QACtCzhB,IAAvBmL,EAAK8C,eACLzC,EAAKL,EAAK8C,cAAe,SAAS,IAAM9C,EAAK8C,eAAiB9C,EAAK8C,cAAcyP,gBACnE1d,IAAdmL,EAAK7J,MACLkK,EAAKL,EAAK7J,KAAM,SAAU4B,IACtBoJ,EAAWpJ,GACX+L,OAIR9D,EAAKjD,OAAOlM,YACZwP,EAAKL,EAAK0C,OAAQ,OAAQ0I,GArN9BmL,IACIvW,EAAKoB,cAAcpV,QAAUgU,EAAKjD,OAAOnJ,cACrCoM,EAAKjD,OAAO5K,YACZiR,EAAiBpD,EAAKjD,OAAOnJ,WAAaoM,EAAKuB,2BAAwB1M,GAE3E+N,IAAY,IAEhBtC,IACA,MAAMkW,EAAW,iCAAiClc,KAAKlJ,UAAUC,YAC5D2O,EAAK/C,UAAYuZ,GAClBlJ,KAEJvJ,GAAa,WA+yDjB0S,GACOzW,EAEX,SAAS0W,EAAWC,EAAU5Z,GAC1B,MAAM6Z,EAAQtf,MAAMgX,UAAU5X,MACzB8X,KAAKmI,GACL/mB,QAAQuc,GAAMA,aAAa0K,cAC1BC,EAAY,GAClB,IAAK,IAAIpb,EAAI,EAAGA,EAAIkb,EAAM5qB,OAAQ0P,IAAK,CACnC,MAAMxD,EAAO0e,EAAMlb,GACnB,IACI,GAA0C,OAAtCxD,EAAK0J,aAAa,gBAClB,cACoB/M,IAApBqD,EAAKwe,aACLxe,EAAKwe,WAAW1E,UAChB9Z,EAAKwe,gBAAa7hB,GAEtBqD,EAAKwe,WAAa7W,EAAkB3H,EAAM6E,GAAU,IACpD+Z,EAAUrxB,KAAKyS,EAAKwe,YAExB,MAAO3e,GACHjV,QAAQsW,MAAMrB,IAGtB,OAA4B,IAArB+e,EAAU9qB,OAAe8qB,EAAU,GAAKA,E,OAExB,oBAAhBD,aACmB,oBAAnBE,gBACa,oBAAbC,WACPD,eAAezI,UAAUpO,UAAY8W,SAAS1I,UAAUpO,UAAY,SAAUnD,GAC1E,OAAO2Z,EAAWz0B,KAAM8a,IAE5B8Z,YAAYvI,UAAUpO,UAAY,SAAUnD,GACxC,OAAO2Z,EAAW,CAACz0B,MAAO8a,KAGlC,IAAImD,EAAY,SAAU+W,EAAUla,GAChC,MAAwB,iBAAbka,EACAP,EAAWvlB,OAAOxF,SAASqqB,iBAAiBiB,GAAWla,GAEzDka,aAAoBC,KAClBR,EAAW,CAACO,GAAWla,GAGvB2Z,EAAWO,EAAUla,IAGpCmD,EAAUC,cAAgB,GAC1BD,EAAU2N,MAAQ,CACdsJ,GAAIzvB,OAAOuY,OAAO,GAAI,GACtB6N,QAASpmB,OAAOuY,OAAO,GAAI,IAE/BC,EAAUkX,SAAYpa,IAClBkD,EAAU2N,MAAMC,QAAUpmB,OAAOuY,OAAOvY,OAAOuY,OAAO,GAAIC,EAAU2N,MAAMC,SAAU9Q,IAExFkD,EAAUmX,YAAeta,IACrBmD,EAAUC,cAAgBzY,OAAOuY,OAAOvY,OAAOuY,OAAO,GAAIC,EAAUC,eAAgBpD,IAExFmD,EAAU/B,UAAYV,EAAiB,IACvCyC,EAAU9C,WAAaN,EAAoB,IAC3CoD,EAAUlB,aAAeA,EACH,oBAAXsY,aAA+C,IAAdA,OAAOzgB,KAC/CygB,OAAOzgB,GAAGqJ,UAAY,SAAUnD,GAC5B,OAAO2Z,EAAWz0B,KAAM8a,KAGhCrK,KAAK4b,UAAUiJ,QAAU,SAAUzW,GAC/B,OAAO,IAAIpO,KAAKzQ,KAAKgR,cAAehR,KAAKwa,WAAYxa,KAAK6Q,WAA6B,iBAATgO,EAAoB5F,SAAS4F,EAAM,IAAMA,KAErG,oBAAX3P,SACPA,OAAO+O,UAAYA,G,iuDCj6DFsX,EACjB,WAAa7yB,GAET,GAFgB,UAEXA,EAAM8yB,WAAW5xB,eAElB,MAAmB,YAAdlB,EAAM9B,KACA,IAAI60B,EAAuB/yB,GAG3B,IAAIgzB,EAAoBhzB,IAMzCgzB,EAAAA,SAAAA,G,kBACF,WAAahzB,GAAO,wBAChB,cACIA,EAAM8yB,WAAW7yB,SACjBD,EAAM9B,OAIL8B,MAAQA,EAGb,EAAKA,MAAM6yB,cAAX,KAGA,EAAKt1B,SAGL,EAAK01B,UAGL,EAAKjzB,MAAMkzB,WAAWp0B,GAAI,uBAAuB,WAE7C,EAAKq0B,sBAGL,EAAKC,OAAO3pB,SAAU,EAAK2pB,OAAOrxB,YAClC,EAAKsxB,eAGL,EAAKC,kBAGL,EAAKC,4BA/BO,E,gCAmCpB,WACIj2B,KAAKk2B,oBAAsB,IAAIA,EAAqBl2B,KAAK0C,MAAO1C,KAAKm2B,U,qBAGzE,WACIn2B,KAAK4B,KAAO,CACRw0B,uBAAwB,O,iCAKhC,WACIp2B,KAAK81B,OAAS91B,KAAK0C,MAAM2zB,U,6BAG7B,WAAiB,WAEbr2B,KAAK0C,MAAM2D,MACNsD,IAAK,gBACLnI,GAAI,gBAAgB,SAAEC,EAAO8a,GAErB,CAAE,OAAQ,QAAS+Z,SAAU,EAAK5zB,MAAM8yB,WAAW3wB,YAEpD,EAAKixB,OAAO3pB,SAAU,IAI1B,EAAKoqB,mBAAL,YAA+Bha,EAAMxU,GAArC,OAGA,EAAKguB,aAAa,CACdS,yBAAyB,IAItB,CAAE,OAAQ,QAASF,SAAU,EAAK5zB,MAAM8yB,WAAW3wB,YAEtD,EAAKixB,OAAOlS,QAIX,CAAE,OAAQ,QAAS0S,SAAU,EAAK5zB,MAAM8yB,WAAW3wB,YAEpD,EAAKnC,MAAMyJ,SAAX,YAA2BoQ,EAAMxU,GAAjC,Y,qBAKhB,WAEI/H,KAAKk2B,oBAAoBnG,Y,gCAU7B,SAAoB3sB,GAChBpD,KAAK81B,OAAOhI,IAAI2I,aAAcrzB,EAAMpD,KAAK81B,OAAOhI,IAAI4I,e,oCAGxD,WAAwB,WACpB12B,KAAK81B,OAAOt0B,GAAI,WAAWmT,EAAAA,EAAAA,KAAU,SAAElT,GAEnC,EAAKs0B,iBACN/1B,KAAK4B,KAAKw0B,2B,0BAGjB,SAAclzB,GAAS,WAMnBA,EAAUuC,OAAOuY,OAAO,CACpBwY,yBAAyB,GAC1BtzB,GAMH,IAHA,IAAMyzB,EAAoB32B,KAAK81B,OAAOc,gBAAiB,iBAXpC,aAgBf,IAAMlkB,EAAW,CACbuW,KAAM0N,EAAkB1N,OACxBC,GAAMyN,EAAkBzN,MAUtB2N,EANU,EAAKf,OAAOgB,SACxBpkB,EAASuW,KACTvW,EAASwW,IAIW6N,QAAS,KAAM,IAAKA,QAAS,KAAM,IAGrDC,EAAa,EAAKC,mBAAoBJ,GAGtCK,EAAS,EAAKpB,OAAOqB,SACvBzkB,EAASuW,KACTvW,EAASwW,GACT,CACIkO,aAAcJ,IAItB,GAEoC,aAAhCr3B,iBAAiBC,OAAOgB,OAEnBjB,iBAAiBC,OAAOsB,mBAGzB,EAAKm2B,sBAAsBf,SAAUO,IAElCA,EAAQS,WAAY,gBAGtBp0B,EAAQszB,wBAqBb,OAnBA,EAAKe,oBAAqBP,EAAY,CAElCQ,YAAa,WAET,IAAMC,EAAiBP,EAAO51B,OAG9B41B,EAAO1O,QAGP,EAAKsN,OAAOW,aACR,GACAgB,EAAexO,KACfwO,EAAevO,OAM3B,QAIG,EAAKxmB,MAAM8yB,WAAWkC,YAEzBV,EAAWtV,iBAAkB,SAAS,WAElC,IAAOsV,EAAWvhB,UAAUiN,SAAU,yBAA2B,CAE7DsU,EAAWvhB,UAAUrL,IAAK,yBAE1B,IAAMutB,EAAa,WAEfX,EAAWvhB,UAAUC,OAAQ,yBAI7BhM,SAASkY,oBAAqB,UAAWgW,GAIzCluB,SAASkY,oBAAqB,OAAQiW,GAGtCnuB,SAASkY,oBAAqB,UAAWkW,GAIzCpuB,SAASkY,oBAAqB,UAAWmW,IAIvCH,EAAiB,SAAEn2B,GAGbu1B,IAAev1B,EAAMoI,QAGlBmtB,EAAWtU,SAAUjhB,EAAMoI,SAElC8tB,KAGRjuB,SAASgY,iBAAkB,UAAWkW,GAGtC,IAAMC,EAAS,SAAEp2B,GACbk2B,KAGAK,EAAAA,EAAAA,IAAgB,KAAD,OAAQnB,EAAR,QAEnBntB,SAASgY,iBAAkB,OAAQmW,GAGnC,IAAMC,EAAW,SAAEr2B,GAEf,IAAMmE,EAAMnE,EAAM6nB,SAAW7nB,EAAMw2B,SAGnC,GAAY,GAAPryB,GAAmB,IAAPA,EAAW,CAExB,IAAM6xB,EAAiBP,EAAO51B,OAG9B41B,EAAO1O,QAGP,EAAKsN,OAAOW,aACR,GACAgB,EAAexO,KACfwO,EAAevO,IAGnByO,MAGRjuB,SAASgY,iBAAkB,UAAWoW,GAGtC,IAAMC,EAAe,SAAEt2B,GAEnB,IAAMmE,EAAMnE,EAAM6nB,SAAW7nB,EAAMw2B,SAGnC,GAAY,IAAPryB,GAAoB,IAAPA,EAAW,CACzB+xB,IAGA,IAGIjlB,EAHE+kB,EAAiBP,EAAO51B,OAMlB,IAAPsE,IAED8M,EAAW+kB,EAAexO,MAIlB,IAAPrjB,IAED8M,EAAW+kB,EAAevO,IAI9B,EAAK4M,OAAOlS,QAGZ,EAAKkS,OAAOoC,UAAWxlB,KAG/BhJ,SAASgY,iBAAkB,UAAWqW,QA/K9CpB,EAAkBwB,YAAY,mB,iCA4L1C,SAAqBnB,GAA4B,IAKzCoB,EALyC,OAAhBC,EAAgB,uDAAJ,GAQzC,IAAOntB,EAAAA,EAAAA,IAAWvL,iBAAiBiO,KAAUjO,iBAAiBiO,GA6DzD,CAGD,IAAM0qB,EAA6B34B,iBAAiBC,OAAO24B,QAE3DH,EAAQ,IAAII,EAAAA,EAAM,CACdvvB,MAAO,GAAF,OAAQtJ,iBAAiBwB,KAAKtB,aAAa44B,cAAcpuB,OAAOquB,QAAQzvB,MAAxE,gGAAuKtJ,iBAAiBwB,KAAKw3B,QAAQC,IAArM,WACL/iB,QAAS,gIAAF,QAE8CvN,EAAAA,EAAAA,IAAU3I,iBAAiBwB,KAAKtB,aAAa44B,cAAclc,MAAMmc,QAAQ7iB,QAAQgjB,cAAe,CAAE7B,EAAW8B,YAF3J,iJAIiCn5B,iBAAiBwB,KAAKtB,aAAa44B,cAAclc,MAAMmc,QAAQ7iB,QAAQxQ,YAJxG,wFAQP0zB,QAAS,CACLvxB,OAAS7H,iBAAiBwB,KAAKtB,aAAa44B,cAAclc,MAAMmc,QAAQM,aACxEC,QAASt5B,iBAAiBwB,KAAKtB,aAAa44B,cAAclc,MAAMmc,QAAQQ,gBAE7E,CACCC,KAAM,WAGJC,UAAU,CACZC,UAAW,WACP,IAAIC,EAAgBlB,EAAMmB,cAG1BD,EAAclB,MAAMoB,IAAIT,QAAQE,QAAQrxB,SAAU,oBAAqB6xB,KAAM,YAAY,IAGzFC,EAAAA,EAAAA,KAEI,GAEA,SAAE1xB,GAEEowB,EAAMrI,UAGN,EAAKgG,kBAGT,SAAE/tB,GAEEsxB,EAAclB,MAAMoB,IAAIT,QAAQE,QAAQxvB,YAAa,oBAAqBgwB,KAAM,YAAY,MAK/FnB,GACD34B,iBAAiBC,OAAO+5B,QAAQC,aAAaztB,UAAU,IAItDjB,EAAAA,EAAAA,IAAWmtB,EAAUwB,iBACtBxB,EAAUwB,kBAGlBC,SAAU,WAEN1B,EAAMrI,WAGD7kB,EAAAA,EAAAA,IAAWmtB,EAAUb,cACtBa,EAAUb,eAITtsB,EAAAA,EAAAA,IAAWmtB,EAAU0B,gBACtB1B,EAAU0B,wBAlItB3B,EAAQ,IAAII,EAAAA,EAAM,CACdvvB,MAAO,GAAF,OAAQtJ,iBAAiBwB,KAAKtB,aAAa44B,cAAcpuB,OAAO2vB,UAAU/wB,MAA1E,0DAAmItJ,iBAAiBwB,KAAKw3B,QAAQC,IAAjK,WACL/iB,QAAS,gIAAF,QAE8CvN,EAAAA,EAAAA,IAAU3I,iBAAiBwB,KAAKtB,aAAa44B,cAAclc,MAAMyd,UAAUnkB,QAAQgjB,cAAe,CAAE7B,EAAW8B,YAF7J,uLAKqCxwB,EAAAA,EAAAA,IAAU3I,iBAAiBwB,KAAKtB,aAAa44B,cAAclc,MAAMyd,UAAUnkB,QAAQxQ,YAAa,CAAE1F,iBAAiBwB,KAAK84B,sBAL7J,sBAKmM5wB,EAAAA,EAAAA,IAAoB,uCAAwC,CAAE,WAAgB,oBAAqB,WAAc,iBAAkB,aAAgB,gBAAiB,YAAe,uBALtX,6BAM8B1J,iBAAiBwB,KAAK+4B,WANpD,4MASqCv6B,iBAAiBwB,KAAKtB,aAAa44B,cAAclc,MAAMyd,UAAUnkB,QAAQskB,aAT9G,sBASyI9wB,EAAAA,EAAAA,IAAoB,6EAA8E,CAAE,WAAc,oBAAqB,WAAc,iBAAkB,YAAe,kCAT/T,6BAU8B1J,iBAAiBwB,KAAKi5B,UAVpD,uLAePrB,QAAS,CACLvxB,OAAS7H,iBAAiBwB,KAAKtB,aAAa44B,cAAclc,MAAMyd,UAAUhB,aAC1EC,QAASt5B,iBAAiBwB,KAAKtB,aAAa44B,cAAclc,MAAMyd,UAAUd,gBAE/E,CACCC,KAAM,WAGJC,UAAU,CACZC,UAAW,WAEPjB,EAAMrI,WAGNsK,EAAAA,EAAAA,KAAchxB,EAAAA,EAAAA,IAAoB,uCAAwC,CAAE,WAAgB,oBAAqB,WAAc,YAAa,aAAgB,gBAAiB,YAAe,yBAIvL6B,EAAAA,EAAAA,IAAWmtB,EAAUb,cACtBa,EAAUb,eAITtsB,EAAAA,EAAAA,IAAWmtB,EAAUiC,mBACtBjC,EAAUiC,oBAGlBR,SAAU,WAEN1B,EAAMrI,WAGD7kB,EAAAA,EAAAA,IAAWmtB,EAAUb,cACtBa,EAAUb,eAITtsB,EAAAA,EAAAA,IAAWmtB,EAAUkC,kBACtBlC,EAAUkC,yB,EArX5B7E,CAA2B8E,EAAAA,GAwc3B/E,EAAAA,SAAAA,G,kBACF,WAAa/yB,GAAO,wBAChB,cAAOA,IAGGA,MAAM8yB,WAAWiF,iBAEvB,EAAK/3B,MAAMkzB,WAAWp0B,GAAI,oBAAoB,WAE1C,EAAKk5B,mBAGL,EAAKC,oBAGL3lB,YAAW,WACP,EAAK4lB,8BACN,EAAKh5B,KAAKw0B,wBAGbphB,YAAW,WACP,EAAK6lB,mCACN,EAAKj5B,KAAKw0B,wBAGb,EAAKJ,kBAGL,EAAK8E,kCAGL,EAAKC,gCA9BG,E,iCAmCpB,WACI/6B,KAAK4B,KAAO,CACRw0B,uBAAwB,IACxB4E,cAAe,uB,oBAIvB,WACIh7B,KAAKk2B,oBAAsB,IAAIA,EAAqBl2B,KAAK0C,MAAO1C,KAAKm2B,U,gCAGzE,WAAgC,WAAZ5Z,EAAY,uDAAJ,GAGxB,KAEMrR,EAAAA,EAAAA,IAAWlL,KAAKi7B,iBAEf/vB,EAAAA,EAAAA,IAAWlL,KAAKi7B,gBAAmBj7B,KAAKi7B,cAAcC,OAGzDl7B,KAAK81B,OAAOhI,IAAI2I,aAAcla,EAAOvc,KAAK81B,OAAOhI,IAAI4I,iBAGpD,CAEDna,EAAQA,EAAMwa,QAAS,KAAM,IAAKA,QAAS,KAAM,IAGjD,IAAMC,EAAah3B,KAAKi3B,mBAAoB1a,GAMR,aAAhC5c,iBAAiBC,OAAOgB,MAEnBjB,iBAAiBC,OAAOsB,mBAIzBlB,KAAKq3B,sBAAsBf,SAAU/Z,KAElCA,EAAM+a,WAAY,cAgBzBt3B,KAAKi7B,cAAcE,YAAa,oBAAoB,EAApD,uBAA4En7B,KAAK4B,KAAKo5B,cAAtF,oDAAiJze,EAAjJ,aAA6Jya,EAAW8B,UAAxK,YAGA94B,KAAK0C,MAAMkzB,WACNzrB,QAAS,iBAjBdnK,KAAKu3B,oBAAqBP,EAAY,CAClC6C,eAAgB,WAEZ,EAAKoB,cAAcE,YAAa,oBAAoB,EAApD,uBAA4E,EAAKv5B,KAAKo5B,cAAtF,oDAAiJze,EAAjJ,aAA6Jya,EAAW8B,UAAxK,YAGA,EAAKp2B,MAAMkzB,WACNzrB,QAAS,sB,8BAelC,WACInK,KAAKi7B,cAAgBj7B,KAAK0C,MAAM04B,e,+BAGpC,WACIp7B,KAAKi7B,cAAcI,IAAIC,SAAvB,0qH,6CAgGJ,WAAiC,WAE7Bt7B,KAAK0C,MAAMkzB,WACNp0B,GAAI,gBACDmT,EAAAA,EAAAA,KAAS,WAEL,EAAKkmB,mCACN76B,KAAK4B,KAAKw0B,yBAKrBp2B,KAAK0C,MAAMkzB,WACNp0B,GAAI,iCAAiC,WAElCwT,YAAW,WACP,EAAK6lB,mCACN,EAAKj5B,KAAKw0B,6B,wCAIzB,WAA4B,WAGxBp2B,KAAK0C,MAAMkzB,WACNp0B,GAAI,mCAAmC,WAEpCwT,YAAW,WACP,EAAK4lB,8BACN,EAAKh5B,KAAKw0B,6B,uCAIzB,WAEI,IAAMmF,EAAgBv7B,KAAKi7B,cAAcO,WAAW,CAChDzf,OAAQ,QAIN0f,EAA0Bz7B,KAAK07B,qBACjCH,EACA,CAEII,SAAU,gBAAF,OAAmB37B,KAAK4B,KAAKo5B,cAA7B,gEAKXO,GAAiBE,GAElBz7B,KAAKi7B,cAAcW,WAAYH,EAAwBxV,a,4CAI/D,WAEI,IAAIpQ,EAAU7V,KAAK0C,MAAMkzB,WAAWhZ,MAGhCif,EAAqBnyB,SAASiM,cAAe,OACjDkmB,EAAmB5V,UAAYpQ,EAG/B,IAAMimB,EAAUD,EAAmB9H,iBAAnB,WAA0C/zB,KAAK4B,KAAKo5B,gBAIpE,GAAKc,EAAQ/xB,OAAS,EAAG,CAErB+xB,EAAQ31B,SAAQ,SAAE6wB,GAEd,IAAM+E,EAAU/E,EAAW/K,QAAQ4K,QAGnCG,EAAW8B,UAAX,YAA6BiD,EAA7B,SAIJlmB,EAAUgmB,EAAmB5V,UAI7B,IACIjmB,KAAK81B,OAAO3pB,SAAU0J,GACxB,MAAQC,GACN9V,KAAK0C,MAAMkzB,WAAWhZ,IAAK/G,O,qBAKvC,WACI7V,KAAKk2B,oBAAoBnG,c,EAzS3B0F,CAA8BC,GA6S9BQ,EAAAA,WACF,WAAaxzB,EAAOyzB,GAAQ,UACxBn2B,KAAK0C,MAASA,EACd1C,KAAKm2B,OAASA,EAGdn2B,KAAKg8B,UAGLh8B,KAAKu5B,cAGLv5B,KAAKi8B,gBAGLj8B,KAAKk8B,eAGLl8B,KAAKm8B,uBAGLn8B,KAAKo8B,qBAGLp8B,KAAKq8B,+BAGLr8B,KAAKs8B,+BAGLt8B,KAAKu8B,uBAGLv8B,KAAKw8B,SAGAx8B,KAAKy8B,wBACNz8B,KAAK08B,WAAW,G,iCAIxB,WACI18B,KAAK4B,KAAO,CACRkmB,QAAU,EACVpV,SAAU,W,yBAIlB,WACI1S,KAAK28B,UAAY,CACbjmB,QAAS,KACTkmB,aAAc,KACdC,YAAa,KACbC,SAAU,KACVC,UAAW,KACXC,wBAAyB,KACzBC,eAAgB,KAChBC,gBAAiB,Q,2BAIzB,WACI,IAAMC,EAAWl8B,GAAAA,CAAE,orBAAD,OAasBtB,iBAAiBwB,KAAKg1B,OAAOqG,OAbnD,0NAuBZY,EAAgB,GAGE,YAAnBp9B,KAAK0C,MAAM9B,MACZw8B,EAAc55B,KAAMxD,KAAK0C,MAAMkzB,aAI9B1qB,EAAAA,EAAAA,IAAWlL,KAAK0C,MAAM26B,eACvBD,EAAc55B,KAAMxD,KAAK0C,MAAM26B,cAInCD,EAAcj3B,SAAQ,SAAEm3B,GAEpBH,EACKI,YAAaD,GAElBH,EACK77B,KAAM,oCACNU,OAAQs7B,MAIjBt9B,KAAK28B,UAAUjmB,QAAUymB,EAGzBn9B,KAAK28B,UAAUa,gBAAkBL,EAC5B77B,KAAM,oCAGXtB,KAAK28B,UAAUc,qBAAuBN,EAAS77B,KAAM,0BAGrDtB,KAAK28B,UAAUE,YAAcM,EAAS77B,KAAM,gCAG5CtB,KAAK28B,UAAUC,aAAeO,EAAS77B,KAAM,0BAG7CtB,KAAK28B,UAAUG,SAAWK,EAAS77B,KAAM,4BAGzCtB,KAAK28B,UAAUK,wBAA0BG,EAAS77B,KAAM,4B,0BAG5D,WAAc,WAEV,GAAKtB,KAAKy8B,uBAAwB,CAE9B,IAAM53B,EAAY7E,KAAK0C,MAAM8yB,WAAW3wB,UAGlC64B,GAAyBxyB,EAAAA,EAAAA,IAAWvL,iBAAiBwB,KAAKg1B,OAAOwH,UAAW94B,IAAgBlF,iBAAiBwB,KAAKg1B,OAAOwH,UAAW94B,GAAcA,EAGlJ+4B,EAAmB38B,GAAAA,CAAE,6EAKrB48B,EAAe,IAAIn7B,EAAO,WAAY,CACxCE,WAAc,sBACdI,cAAc,EACdH,MAAO,8CAA+CyF,EAAAA,EAAAA,IAAU3I,iBAAiBwB,KAAKg1B,OAAOxoB,OAAQ,CAAC,4CAAD,OAA+C+vB,EAA/C,aAA9F,WAILI,EAAqBD,EAAaE,oBAGxCH,EAAiB78B,QAAS+8B,GAG1B99B,KAAK28B,UAAUc,qBAAqBz7B,OAAQ47B,GAG5C59B,KAAK28B,UAAUqB,gBAAkBJ,EAGjCE,EAAmBt8B,GAAI,0BAA0B,WAEzBq8B,EAAap5B,WAI7B,EAAKi4B,WAAW,GAGhB,EAAKA,WAAW,S,kCAMhC,WAAsB,WAEZx6B,EAAalC,KAAK28B,UAAUjmB,QAAQpV,KAAM,0BAGhDtB,KAAKm2B,OAAOhwB,SAAQ,SAAE83B,GAClB/7B,EAAWF,OAAQ,EAAKk8B,8BAA+BD,OAI3Dj+B,KAAK28B,UAAUI,UAAY76B,EAAWZ,KAAM,yBAG5CtB,KAAK28B,UAAUM,eAAiB/6B,EAAWZ,KAAM,8BAGjDtB,KAAK28B,UAAUO,gBAAkBj8B,GAAAA,CAAE,8MAAD,OAGnBtB,iBAAiBwB,KAAKg1B,OAAOgI,UAHV,yIAMnBn+B,KAAKy8B,uBAAyB98B,iBAAiBwB,KAAKg1B,OAAOiI,+BAAiCz+B,iBAAiBwB,KAAKg1B,OAAOkI,qBANtG,2DAUlCn8B,EAAWF,OAAQhC,KAAK28B,UAAUO,mB,2CAGtC,SAA+Be,GAAe,WACpCK,EAASr9B,GAAAA,CAAE,+FAAD,OAGIg9B,EAAcl2B,GAHlB,+hBAiBVw2B,EAAYN,EAAc95B,KACL,WAArB,EAAQo6B,KACEA,EAAUC,KAAKC,Q,4DAA3B,IAGJH,EACKh9B,KAAM,4CACNU,OAAQi8B,EAAc95B,MAG3B,IAAI6F,EAAQi0B,EAAcS,KAAKD,QAG/BH,EAAOh9B,KAAM,qCAAsCU,OAAQgI,GAGrCs0B,EAAOh9B,KAAM,gCAErBE,GAAI,SAAS,WACvB88B,EAAOhpB,YAAa,iCAIxB,IAAMqpB,EAAuBL,EAAOh9B,KAAM,kCAyG1C,OAtGA28B,EAAc9H,OAAOhwB,SAAQ,SAAEoW,GAC3B,IAAIqiB,GAAcr5B,EAAAA,EAAAA,IAASgX,EAAMpY,MAAsB,GAAboY,EAAMpY,KAG1C06B,EAAS59B,GAAAA,CAAE,oHAAD,OAIJ29B,EACK3iB,OACAoO,cACA0M,QAAS,MAAO,IAPjB,6CASMxa,EAAM3b,KATZ,qDAWLg+B,EAXK,mCAa2B,aAAhCj/B,iBAAiBC,OAAOgB,OAAyBjB,iBAAiBC,OAAOsB,mBAAoBgK,EAAAA,EAAAA,IAAWqR,EAAMuiB,eAAkBviB,EAAMuiB,aAAe,+CAAiDn/B,iBAAiBwB,KAAK49B,cAAgB,UAAY,GAbnP,2CAkBC,gBAAZxiB,EAAMxU,GAEP82B,EAAOr9B,GAAI,SAAS,WAEhB,EAAK+mB,QAGL,IAAMyW,EAAgB/9B,GAAAA,CAAE,eAGlBg+B,EAAe,IAAIv8B,EAAO,OAAQ,CACpCE,WAAY,sBACZC,MAAOlD,iBAAiBwB,KAAKg1B,OAAO+I,cAAcC,SAAS/G,MAAMgH,YACjE/5B,YAAa1F,iBAAiBwB,KAAKg1B,OAAO+I,cAAcC,SAAS/G,MAAMiH,uBACvEp8B,YAAY,IAIhB+7B,EAAch9B,OAAQi9B,EAAalB,qBAGnC,IAAM3F,EAAQ,IAAII,EAAAA,EAAM,CACpBvvB,MAAOtJ,iBAAiBwB,KAAKg1B,OAAO+I,cAAcC,SAAS/G,MAAMnvB,MACjE4M,QAASmpB,EACTjG,QAAS,CACLvxB,OAAS7H,iBAAiBwB,KAAKqG,OAC/ByxB,QAASt5B,iBAAiBwB,KAAKg1B,OAAO+I,cAAcC,SAAS/G,MAAMc,iBAI3Ed,EAAMgB,UAAU,CACZkG,eAAgB,WACZlH,EAAMmH,QAEVlG,UAAW,WAEP,IAAMmG,EAAkBP,EAAat3B,WAG/B83B,EAAaR,EAAax6B,WAG3B+6B,EAAgBr/B,WAEjBoc,EAAQtb,IAAAA,QAAU,EAAM,GAAIsb,IAGtBxU,GAAKwU,EAAMxU,GAAGgvB,QAAS,MAAO0I,GAGpCljB,EAAMpY,MAAOmE,EAAAA,EAAAA,IAAU3I,iBAAiBwB,KAAKg1B,OAAOuJ,OAAOC,oBAAqB,CAAEF,IAGlF,EAAK/8B,MAAM2D,MAAM8D,QAAS,eAAgBoS,GAG1C6b,EAAMrI,YAGd6P,UAAW,WACPxH,EAAMrI,gBAOlB8O,EAAOr9B,GAAI,SAAS,WAEhB,EAAKkB,MAAM2D,MAAM8D,QAAS,eAAgBoS,GAG1C,EAAKgM,WAKboW,EAAqB38B,OAAQ68B,MAG1BP,I,gCAGX,WAAoB,WAChBt+B,KAAK28B,UAAUC,aAAap7B,GAAI,SAAS,WAE9B,EAAKI,KAAKkmB,OAIb,EAAKS,QAHL,EAAKiB,Y,oBAQjB,WAAQ,WAEJxpB,KAAK28B,UAAUE,YAAYr7B,GAAI,SAASq+B,EAAAA,EAAAA,KAAU,WAE9C,IAAIC,EAAQ,EAAKnD,UAAUE,YAAYjgB,MAGvCkjB,EAAQA,EACH7jB,OACAoO,cACA0M,QAAS,MAAO,KAEdxxB,EAAAA,EAAAA,IAASu6B,IAsBZ,EAAKnD,UAAUI,UACVtzB,YAAa,8BAGlB,EAAKkzB,UAAUM,eACVxzB,YAAa,iDAzBlB,EAAKkzB,UAAUI,UACVn1B,SAAU,8BAGf,EAAK+0B,UAAUM,eACVr1B,SAAU,+CAGQ,EAAK+0B,UAAUM,eACjCtvB,QAAO,SAAE8L,EAAG8C,GACT,OAAiD,IAA1CA,EAAM0P,QAAQuQ,OAAOA,OAAQsD,MAMvCr2B,YAAa,gDAatB,EAAKs2B,mCACN,O,uBAGP,WAAgC,WAArBC,IAAqB,yDAE5B,GAAKA,EAAc,CAEfhgC,KAAK28B,UAAUM,eACVr1B,SAAU,+CAGf,IAAMq4B,EAAgBjgC,KAAK28B,UAAUM,eAChCtvB,QAAO,SAAE8L,EAAG8C,GAOT,OAH0C,OAAtBA,EAAM0P,QAAQrrB,MAAoD,SAAnC,EAAK8B,MAAM8yB,WAAW3wB,UAAyB,QAAU0X,EAAM0P,QAAQrrB,OAGtG,EAAK8B,MAAM8yB,WAAW3wB,aAKlDo7B,EACKx2B,YAAa,oDAIlBzJ,KAAK28B,UAAUM,eACVxzB,YAAa,+CAItBzJ,KAAK+/B,mC,4CAGT,WAMI,IAAIG,GAAa,EAGjBlgC,KAAK28B,UAAUI,UACVtzB,YAAa,kDAGlBzJ,KAAK28B,UAAUI,UACVpvB,QAAO,SAAE8L,EAAG0mB,GAEuBA,EAC3BpM,iBAAkB,kIAClBhqB,OAAS,EAQVm2B,GAAa,EAJbC,EAAM1qB,UAAUrL,IAAK,qDAU5B81B,EACDlgC,KAAK28B,UAAUO,gBACVt1B,SAAU,8CAGf5H,KAAK28B,UAAUO,gBACVzzB,YAAa,gD,kBAI1B,WAGI,GAAK,CAAE,OAAQ,QAAS6sB,SAAUt2B,KAAK0C,MAAM8yB,WAAW3wB,WACpD,IACI7E,KAAK0C,MAAM09B,kBAAkB7X,QAC/B,MAAQzS,IAId9V,KAAK28B,UAAUjmB,QAAQ9O,SAAU,uBAGjC5H,KAAK4B,KAAKkmB,QAAS,EAGnB9nB,KAAKqgC,0BAGLrgC,KAAK28B,UAAUE,YACVjgB,IAAK,IACLzS,QAAS,SAGTm2B,IAAI,CACD,4BAAyBp1B,EAAAA,EAAAA,IAAWlL,KAAK28B,UAAUqB,iBAAoBh+B,KAAK28B,UAAUqB,gBAAgBuC,aAAe,GAAM,GAA3H,QAIRvgC,KAAK28B,UAAUE,YACVjZ,QAGL5jB,KAAKwgC,uBAGLxgC,KAAKygC,sB,mBAGT,WACIzgC,KAAK28B,UAAUjmB,QAAQjN,YAAa,uBAGpCzJ,KAAK4B,KAAKkmB,QAAS,EAGnB9nB,KAAK28B,UAAUE,YACVjgB,IAAK,IACLzS,QAAS,SAGdlJ,GAAAA,CAAGyI,UAAWC,IAAK,8C,qBAGvB,WAEI3J,KAAK28B,UAAUa,gBAAgBvZ,WAAWsZ,YAAav9B,KAAK28B,UAAUjmB,SACtE1W,KAAK28B,UAAUjmB,QAAQhB,W,qCAG3B,WAAyB,WACrBzU,GAAAA,CAAGyI,UAAWlI,GAAI,4CAA4C,SAAEC,GAE5D,IAAMS,EAAa,EAAKy6B,UAAUjmB,QAE3BxU,EAAW0H,GAAInI,EAAMoI,SAAsD,IAA1C3H,EAAW4H,IAAKrI,EAAMoI,QAASE,QAEnE,EAAKwe,a,iCAKjB,WACI,IAAMmY,EAAUz/B,GAAAA,CAAGiO,QAEbwD,EAAW,GACjBA,EAASiuB,MAAQ3gC,KAAK28B,UAAUjmB,QAAQ4N,SAAS+I,IAAMqT,EAAQE,YAC/DluB,EAASmuB,MAAQH,EAAQI,UAAapuB,EAASiuB,MAAQ3gC,KAAK28B,UAAUjmB,QAAQqqB,eAGtD,YAAnB/gC,KAAK0C,MAAM9B,OAEZ8R,EAASmuB,MAAQH,EAAQI,UAAapuB,EAASiuB,MAAQ,KAK3D3gC,KAAK28B,UAAUG,SAASl1B,SAAU,eAElC,IAAMo5B,EAAiBhhC,KAAK28B,UAAUG,SAASiE,cAAgB,IAW/D,OAVA/gC,KAAK28B,UAAUG,SAASrzB,YAAa,eAGb,YAAnBzJ,KAAK0C,MAAM9B,KACZ8R,EAASuuB,eAAgB,EAGzBvuB,EAASuuB,cAAgBvuB,EAASmuB,OAASG,EAGxCtuB,I,kCAGX,WAEI,IAAMA,EAAW1S,KAAKkhC,sBAGtBlhC,KAAK28B,UAAUjmB,QAAQjN,YAAa,6CAG/BiJ,EAASmuB,MAAQnuB,EAASiuB,OAASjuB,EAASuuB,eAE7CjhC,KAAK28B,UAAUjmB,QAAQ9O,SAAU,wBAGjC5H,KAAK4B,KAAK8Q,SAAW,UAIrB1S,KAAK28B,UAAUjmB,QAAQ9O,SAAU,wBAGjC5H,KAAK4B,KAAK8Q,SAAW,W,+BAI7B,WAEI,GAAK1S,KAAK4B,KAAKkmB,OAAQ,CAEnB,IAAMqZ,EAAYnhC,KAAKkhC,sBAAuBlhC,KAAK4B,KAAK8Q,UAAa1S,KAAK28B,UAAUE,YAAYkE,cAAgB,GAGhH/gC,KAAK28B,UAAUK,wBACVsD,IAAI,CACD,uBAAmBa,EAAnB,W,8BAKhB,WACInhC,KAAK28B,UAAUE,YACVjZ,U,0CAGT,WAA8B,WAC1B3iB,GAAAA,CAAGiO,QAAS1N,GAAI,UACZq+B,EAAAA,EAAAA,KAAU,WAEN,EAAKW,uBAGL,EAAKC,sBACN,O,0CAIX,WAA8B,WAC1Bx/B,GAAAA,CAAGiO,QAAS1N,GAAI,UACZmT,EAAAA,EAAAA,KAAU,WAEN,EAAK6rB,uBAGL,EAAKC,sBACN,Q,kCAIX,WAAsB,WAElBzgC,KAAK0C,MAAM0+B,YAAY5/B,GAAI,0BAA0B,WAEjD,EAAKg/B,uBAGL,EAAKC,yB,kCAIb,WAEI,IAAM57B,EAAY7E,KAAK0C,MAAM8yB,WAAW3wB,UAExC,MAAO,CAAE,QAAS,MAAO,QAAS,MAAO,OAAQ,QAASyxB,SAAUzxB,O,EAtqBtEqxB,G,oQC29DN,QA7rFMxzB,WACL,WAAa9B,EAAM40B,GAAuE,IAA3D6L,IAA2D,yDAAjCC,EAAiC,uDAAN,KAAM,UACzFthC,KAAKY,KAAOA,EAEZZ,KAAKw1B,WAAkBx1B,KAAKuhC,cAAe/L,GAC3Cx1B,KAAKshC,yBAA2BA,EAE3BD,GACJrhC,KAAK+9B,oB,sDAUP,WAAyC,WAAtByD,IAAsB,yDAEpCx5B,EAAW,KAGXpH,EAAOZ,KAAKY,KACV40B,EAAax1B,KAAKw1B,WAGxB,IAAKiM,EAAAA,EAAAA,IAAS7gC,GAAM8gC,EAAAA,EAAAA,OAAmB,CAEtC,IAAIN,EAAcngC,GAAAA,CAAG,SAAU,CAAE,MAAS,kBAGrCiK,EAAAA,EAAAA,IAAWsqB,EAAW1qB,mBAC1Bs2B,EAAYx5B,SAAU4tB,EAAW1qB,kBAIlC,IAsBI62B,EAAgBt7B,EAwhBhBu7B,EA9iBAC,EAAkB,CACrB,KAAyBrM,EAAW5yB,WACpC,GAAyB4yB,EAAWsM,cAEpC,cAAyBtM,EAAWuM,OACpC,mBAAyBvM,EAAWwM,YACpC,qBAAyBxM,EAAWyM,cACpC,gBAAyBzM,EAAW0M,SAEpC,sBAAyB1M,EAAW5xB,eACpC,uBAAyB4xB,EAAWiF,gBACpC,gBAAyBjF,EAAWvyB,WACpC,iBAAyBuyB,EAAW7yB,SACpC,eAAyB6yB,EAAW3oB,OAEpC,oBAAyB2oB,EAAW2M,QAEpC,iBAAyB3M,EAAWxvB,SACpC,sBAAyBwvB,EAAW4M,cAOrC,OAASxhC,GACR,IAAK,SAEJ+gC,EAAiB1gC,GAAAA,CAAG,SAAU,CAC7B,MAAS,gBAGVjB,KAAK2hC,eAAiBA,EAGtBt7B,EAAQpF,GAAAA,CAAG,YAAaA,IAAAA,OAAU,GAAI4gC,EAAiB,CACtD,YAAa,SACb,MAAU,uBACV,6BAA8BrM,EAAW6M,uBAIrC7M,EAAW8M,wBAEfj8B,EAAMozB,KAAM,WAAY,YAGzBz5B,KAAKqG,MAAQA,EAEb,IAECW,EACAu7B,EAHGC,GAAoB,EACvBC,EAAkB,EAKdjN,EAAWkN,kBAMd17B,GALMzB,EAAAA,EAAAA,IAASiwB,EAAWxuB,aAAa27B,gBAAoBp9B,EAAAA,EAAAA,IAASiwB,EAAWxuB,aAAa47B,aAK7EpN,EAAWxuB,aAHXwuB,EAAWxuB,aAAa27B,cAQzC,IAAIE,EAAiB5hC,GAAAA,CAAE,6JAyCvB,GA9BAu0B,EAAWtyB,QAAUsyB,EAAWtyB,QAAQyK,QAAO,SAAE6iB,GAChD,MAAwB,2BAAjBA,EAAOrtB,SAGflC,IAAAA,KAAQu0B,EAAWtyB,SAAS,SAAWC,EAAO2/B,GAC7C,IAAIC,EAAe9hC,GAAAA,CAAG,YAAa,CAClC,MAAU6hC,EAAY3/B,MACtB,KAAU2/B,EAAY1/B,OAIlBoyB,EAAWkN,kBAAmBM,EAAAA,EAAAA,IAAgBh8B,EAAc7D,KAChE4/B,EAAatJ,KAAM,YAAY,GAC/B8I,GAAsB,EACtBC,GAAsB,GAIlBhN,EAAWyN,WAAYD,EAAAA,EAAAA,IAAgBxN,EAAWxyB,aAAc8/B,EAAY3/B,SAChF4/B,EAAatJ,KAAM,YAAY,GAC/B+I,GAAoB,GAGrBO,EAAanb,SAAUib,GACvBJ,OAGDI,EAAejb,SAAUvhB,GAGpBmvB,EAAW8M,uBAAwB,CAEvC,KAAO/8B,EAAAA,EAAAA,IAASiwB,EAAWxyB,cAC1B,IACCqD,EAAMuW,IAAK4Y,EAAWxyB,cACrB,MAAQ8S,KAMJvQ,EAAAA,EAAAA,IAASc,EAAMuW,SACrB4lB,GAAoB,GAKtB,GAAKhN,EAAWkN,kBAAqBH,KAE7Bh9B,EAAAA,EAAAA,IAASiwB,EAAWxuB,aAAa27B,iBAAoBp9B,EAAAA,EAAAA,IAASiwB,EAAWxuB,aAAa47B,aAAe,CAE3G,IAAIM,EAAgBjiC,GAAAA,CAAG,YAAa,CACnC,MAASu0B,EAAWxuB,aAAa27B,aACjC,KAASnN,EAAWxuB,aAAa47B,cAG3BpN,EAAWyN,WAAcD,EAAAA,EAAAA,IAAgBxN,EAAWxuB,aAAa27B,aAAcnN,EAAWxyB,gBAChGkgC,EAAczJ,KAAM,YAAY,GAChC+I,GAAoB,GAIrBU,EAAcC,UAAW98B,GACzBo8B,IAkBF,GAbKjN,EAAW4N,iBAEf/8B,EAAMtF,QAAS,qBAIRy0B,EAAWkN,iBAAqBlN,EAAWyN,UACjD58B,EAAM/E,KAAM,mBAAoBm4B,KAAM,YAAY,IAM/CjE,EAAW6M,oBAAqB,CACpC,IAAIgB,EAAmB7N,EAAW8N,YAG5BC,EAAgBtiC,GAAAA,CAAE,oCAAD,OACFtB,iBAAiBwB,KAAKqiC,WAAWn9B,MAAMiqB,OAAOmT,aAD5C,sEAEqB9jC,iBAAiBwB,KAAKqiC,WAAWn9B,MAAMiqB,OAAOgT,YAFnE,uDAOvBj9B,EAAMrE,OAAQuhC,GAGT/N,EAAWyN,WAAYD,EAAAA,EAAAA,IAAgBxN,EAAWxyB,aAAc,4BAEpEugC,EAAcjiC,KAAM,UAAWoiC,KAAM,YAAY,GACjDlB,GAAoB,GAIhBhN,EAAWyN,WAAcT,IAE7Be,EAAcjiC,KAAM,UAAWoiC,KAAM,YAAY,GACjDlB,GAAoB,EAGpBa,EAAmB7N,EAAWxyB,cAI/BhD,KAAK2jC,iBAAmB,IAAIjhC,EAAO,OAAQ,CAC1CmK,OAAQ2oB,EAAW3oB,OACnBlK,SAAU6yB,EAAW7yB,SAErBM,WAAYuyB,EAAWvyB,WACvBy0B,YAAY,EACZ+C,iBAAiB,EACjBmJ,yBAAyB,EACzBhgC,eAAgB4xB,EAAW5xB,eAE3Bm+B,QAAQ,EAERl9B,UAAW,OACXjC,WAAY,GAAF,OAAM4yB,EAAW5yB,WAAjB,WAEVC,MAAO,GACPwC,YAAamwB,EAAWqO,0BAA4BrO,EAAWsO,4BAAyBlxB,EACxF6f,YAAa,GACbzsB,UAAU,EACV44B,WAAWt2B,EAAAA,EAAAA,IAAU3I,iBAAiBwB,KAAKqiC,WAAWn9B,MAAMiqB,OAAOyT,iBAAkB,CAAEvO,EAAW3yB,QAElGmE,aAAc,KACdhE,aAAcqgC,EAEdjB,cAAc,EACd4B,iBAAkBxO,EAAW5yB,aAQ/B,GAHA5C,KAAKikC,wBAA0BzB,EAGP,GAAnBC,EAAsB,CAC1B,IAAIyB,EAAajjC,GAAAA,CAAK,IAAIkjC,OAAQxkC,iBAAiBwB,KAAKg9B,UAAW,IAAI,GAAM,IAE7E+F,EAAWzK,KAAM,YAAY,GAE7Bz5B,KAAKqG,MAAM/E,KAAM,wCAAyCU,OAAQkiC,GAE3DlkC,KAAKw1B,WAAW6M,qBAEtBriC,KAAKqG,MAAMozB,KAAM,YAAY,GAK/BpzB,EAAM7E,GAAI,UAAU,SAAUC,EAAO2iC,GACpChD,EAAYj3B,QAAS,yBAA0Bi6B,MAGhD,MAED,IAAK,OACL,IAAK,MACL,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,OACL,IAAK,OAIJ,IAAIC,EAAsB,0BAAH,OAA8BzjC,GAoDrD,GAjDA+gC,EAAiB1gC,GAAAA,CAAG,SAAU,CAC7B,MAASojC,IAIVrkC,KAAKskC,qBAAuBrjC,GAAAA,CAAG,SAAU,CACxC,MAAS,2BAGV0gC,EAAe3/B,OAAQhC,KAAKskC,sBAE5BtkC,KAAK2hC,eAAiBA,EAGtBt7B,EAAQpF,GAAAA,CAAG,WAAYA,IAAAA,OAAU,GAAI4gC,EAAiB,CACrD,MAAa,sBACb,KAAa,OACb,YAAajhC,MAITsK,EAAAA,EAAAA,IAAWsqB,EAAW+O,YAC1Bl+B,EAAMozB,KAAM,YAAajE,EAAW+O,WAGrCvkC,KAAKqG,MAAQA,EAGRmvB,EAAW5xB,gBACf+9B,EAAe/5B,SAAU,qBAIrB4tB,EAAW4N,gBACf/8B,EAAMozB,KAAM,cAAejE,EAAW/C,aAIlC+C,EAAWyN,SACf58B,EAAMozB,KAAM,QAASjE,EAAWxyB,cAI3BwyB,EAAWkN,iBACfr8B,EAAMozB,KAAM,QAASjE,EAAWxuB,cAK7B,CAAE,OAAQ,QAASsvB,SAAUd,EAAW3wB,WAAa,CAEzD,IAAM2/B,EAAevjC,GAAAA,CAAE,yEAAD,OACmCtB,iBAAiBwB,KAAKqnB,MADzD,6GAOtBmZ,EACE/5B,SAAU,yBAGZ5H,KAAKskC,qBACHtiC,OAAQwiC,GAGVA,EAAahjC,GAAI,SAAS,WACzB,EAAKijC,gBAKPp+B,EAAM7E,GAAI,SAAS,WAClB4/B,EAAYj3B,QAAS,6BAGtB,MAED,IAAK,WAEJw3B,EAAiB1gC,GAAAA,CAAG,SAAU,CAAC,MAAS,kBAExCjB,KAAK2hC,eAAiBA,EAGtBt7B,EAAQpF,GAAAA,CAAG,cAAeA,IAAAA,QAAU,EAAM4gC,EAAiB,CAC1D,YAAe,WACf,MAAY,yBACZ,iBAAmBrM,EAAW7yB,aAI1BuI,EAAAA,EAAAA,IAAWsqB,EAAW+O,YAC1Bl+B,EAAMozB,KAAM,YAAajE,EAAW+O,WAGrCvkC,KAAKqG,MAAQA,EAGRmvB,EAAW5xB,gBACf+9B,EAAe/5B,SAAU,wBAIrB4tB,EAAW4N,gBACf/8B,EAAMozB,KAAM,cAAejE,EAAW/C,aAMvCzyB,KAAKskC,qBAAuBrjC,GAAAA,CAAG,SAAU,CACxC,MAAS,2BAGV0gC,EAAe3/B,OAAQhC,KAAKskC,sBAGvB9O,EAAWyN,SACf58B,EAAMjD,KAAMoyB,EAAWxyB,cAIlBwyB,EAAWkN,iBACfr8B,EAAMjD,KAAMoyB,EAAWxuB,cAKzBX,EAAM7E,GAAI,SAAS,WAClB4/B,EAAYj3B,QAAS,6BAGtB,MAED,IAAK,WAEJw3B,EAAiB1gC,GAAAA,CAAG,SAAU,CAAC,MAAS,kBAExCjB,KAAK2hC,eAAiBA,EAEtB,IAAI+C,EAAgBzjC,GAAAA,CAAG,WAAY,CAAC,MAAS,6BACzC0jC,EAAiB1jC,GAAAA,CAAG,SAAU,CAAC,MAAS,mBA2B5C,GAxBAoF,EAAQpF,GAAAA,CAAG,WAAYA,IAAAA,OAAU,GAAI4gC,EAAiB,CACrD,KAAa,WACb,YAAa,WACb,MAAU,wCAINrM,EAAWyN,UAAYzN,EAAWxyB,cACtCqD,EAAMozB,KAAM,WAAW,GAGxBz5B,KAAKqG,MAAQA,EAGRmvB,EAAWoP,UACfF,EAAclG,KAAMhJ,EAAW3yB,OAIhC8+B,EAAe3/B,OAAQ0iC,GACvBA,EAAc1iC,OAAQqE,GACtBq+B,EAAc1iC,OAAQ2iC,IAGjBz5B,EAAAA,EAAAA,IAAWsqB,EAAWqP,WAAcrP,EAAWqP,WACnDlD,EAAe/5B,SAAU,0BAGpBsD,EAAAA,EAAAA,IAAWsqB,EAAW7E,SAAU,CAEpC,IAAKzlB,EAAAA,EAAAA,IAAWsqB,EAAW7E,OAAOnvB,IAAM,CACvC,IAAIsjC,EAAmB7jC,GAAAA,CAAG,UAAW,CAAE,MAAS,sCAAuCmC,KAAMoyB,EAAW7E,OAAOnvB,IAC/GkjC,EAAc1iC,OAAQ8iC,GAIvB,IAAK55B,EAAAA,EAAAA,IAAWsqB,EAAW7E,OAAOhnB,KAAO,CACxC,IAAIo7B,EAAoB9jC,GAAAA,CAAG,UAAW,CAAE,MAAS,uCAAwCmC,KAAMoyB,EAAW7E,OAAOhnB,KACjH+6B,EAAc1iC,OAAQ+iC,IAMzB,IAAK75B,EAAAA,EAAAA,IAAWsqB,EAAWwP,OAE1B,IAAKvD,EAAAA,EAAAA,IAASjM,EAAWwP,MAAO,CAAE,YAAa,UAE9C,OAASxP,EAAWwP,OACnB,IAAK,YACJrD,EAAe/5B,SAAU,mCACzB,MAED,IAAK,QACJ+5B,EAAe/5B,SAAU,oCAK3B/G,QAAQsW,OAAO7O,EAAAA,EAAAA,IAAU,oEAAqE,CAAEktB,EAAWwP,UAKxG95B,EAAAA,EAAAA,IAAWsqB,EAAWyP,UAErBxD,EAAAA,EAAAA,IAASjM,EAAWyP,MAAO,CAAE,OAAQ,UAEhB,SAApBzP,EAAWyP,OAEftD,EAAe/5B,SAAU,+BAI1B/G,QAAQsW,OAAO7O,EAAAA,EAAAA,IAAU,6DAA8D,CAAEktB,EAAWyP,MAAO,aAK7G5+B,EAAM7E,GAAI,UAAU,SAAUC,EAAO2iC,GACpChD,EAAYj3B,QAAS,yBAA0Bi6B,MAIhD/9B,EAAQq+B,EAER,MAED,IAAK,QAEJ/C,EAAiB1gC,GAAAA,CAAG,SAAU,CAAC,MAAS,eACxCjB,KAAK2hC,eAAiBA,EAGtB,IAAIx/B,EAAUlB,GAAAA,GACbikC,EAAmBjkC,GAAAA,GAGpBA,IAAAA,KAAQu0B,EAAWtyB,SAAS,SAAU2C,EAAO2qB,GAE5C,IAAM2U,EAAsBlkC,GAAAA,CAAG,WAAY,CAAE,MAAS,0BAGtDkkC,EAAoB3G,KAAMhO,EAAOptB,MAGjC,IAAMk6B,EAASr8B,GAAAA,CAAG,WAAYA,IAAAA,OAAU,GAAI4gC,EAAiB,CAC5D,KAAa,QACb,YAAa,QACb,MAAU,+BAEV,MAAcrR,EAAOrtB,MACrB,KAAc0+B,EAAgB95B,MAI/B5F,EAAUA,EAAQiI,IAAKkzB,GAGvB,IAAM8H,EAAankC,GAAAA,CAAG,SAAU,CAAE,MAAS,gBAG3CkkC,EAAoBnjC,OAAQs7B,GAC5B6H,EAAoBnjC,OAAQojC,IAIvB5P,EAAWyN,UAAYzN,EAAWxyB,cAAgBwtB,EAAOrtB,QAIlDqyB,EAAWyN,UAAYzN,EAAWkN,iBAAmBlN,EAAWxuB,cAAgBwpB,EAAOrtB,QAHlGm6B,EAAO7D,KAAM,WAAW,GAQzByL,EAAmBA,EAAiB96B,IAAK+6B,MAI1CnlC,KAAKqG,MAAQ6+B,EACb7+B,EAAQ6+B,EAGR/iC,EAAQX,GAAI,UAAU,SAAEC,EAAO2iC,GAE9BhD,EAAYj3B,QAAS,yBAA0Bi6B,MA2BlD,GApBAzC,EAAe3/B,OAAQqE,GAOV,YAARzF,IAAwB40B,EAAWoP,UAAYpP,EAAWvyB,cAC9D2+B,EAAa3gC,GAAAA,CAAG,WAAY,CAC3B,MAAS,sBACT,IAASu0B,EAAWsM,gBAIhBtM,EAAWoP,UACfhD,EAAWpD,KAAMhJ,EAAW3yB,QAKzB2yB,EAAWvyB,WAKf,GAHA0+B,EAAe/5B,SAAU,0BAGI,YAAxB4tB,EAAW3wB,WAKf,GAHAwB,EAAM/E,KAAM,SAAUm4B,KAAM,YAAY,GAGnCjE,EAAWoP,SAAU,CAEzB,IAAIS,EAAqBpkC,GAAAA,CAAG,UAAW,CAAE,MAAS,iCAClDoF,EAAMrE,OAAQqjC,SAQf,GAHAh/B,EAAMozB,KAAM,YAAY,GAGnBjE,EAAWoP,SAAU,CAEzB,IAAIS,EAAqBpkC,GAAAA,CAAG,UAAW,CAAE,MAAS,iCAClD2gC,EAAW5/B,OAAQqjC,IAMjBn6B,EAAAA,EAAAA,IAAWsqB,EAAWkC,aAAgBlC,EAAWkC,aAE9C,CAAE,OAAQ,QAASpB,SAAUt2B,KAAKw1B,WAAW3wB,YAEnD88B,EAAe/5B,SAAU,0BAIG,UAAxB4tB,EAAW3wB,UAEfwB,EAAMozB,KAAM,YAAY,GAEf,CAAE,WAAY,SAAUnD,SAAUd,EAAW3wB,WAEtDwB,EAAM/E,KAAM,SAAUm4B,KAAM,YAAY,GAIxCpzB,EAAMozB,KAAM,YAAY,KAKrBjE,EAAWoP,UAAYpP,EAAWvyB,aACtC0+B,EAAe5gC,QAAS6gC,GAIzB,IAAI0D,EAAarkC,GAAAA,CAAG,SAAU,CAAE,MAAS,wBAMzC,GALA0gC,EAAe3/B,OAAQsjC,GAEvBtlC,KAAK2hC,eAAiBA,EAGjBnM,EAAW+P,eAAgB,CAC/B,IAAIC,EAAmBvkC,GAAAA,CAAG,SAAU,CAAE,MAAS,gBAC/CukC,EAAiBhH,KAAMhJ,EAAWnwB,aAClCs8B,EAAe3/B,OAAQwjC,GAInBhQ,EAAWxvB,UAEf27B,EAAe/5B,SAAU,wBAI1Bw5B,EAAYp/B,OAAQ2/B,GAIS,UAAxBnM,EAAW3wB,YAAyBqG,EAAAA,EAAAA,IAAWlL,KAAK2jC,oBAExD3jC,KAAKylC,0BAA4BxkC,GAAAA,CAAE,6GAOnCjB,KAAKylC,0BAA0BnkC,KAAM,0BAA2BU,OAAQhC,KAAK2jC,iBAAiB5F,qBAG9FqD,EAAYp/B,OAAQhC,KAAKylC,2BAGD,0BAAnBzlC,KAAKyE,WACTzE,KAAKylC,0BAA0B79B,SAAU,+BAGzC5H,KAAKylC,0BAA0Bh8B,YAAa,gCAK9CzB,EAAWo5B,EAGXphC,KAAKohC,YAAcA,EAGdI,GACJxhC,KAAKwhC,gBAINxhC,KAAK6R,WAGL7R,KAAK0lC,eAIL7kC,QAAQsW,OAAO7O,EAAAA,EAAAA,IAAU,wDAAyD,CAAE1H,GAAM8gC,EAAAA,EAAAA,MAAgBnmB,KAAM,SAGjH,OAAOvT,I,2BAaR,SAAewtB,GAoGd,GAlGAA,EAAW3wB,UAAY7E,KAAKY,KAG5B40B,EAAWsM,cAAX,UAA+BtM,EAAW5yB,WAA1C,cAA2D+iC,EAAAA,EAAAA,OAG9B,YAAxBnQ,EAAW3wB,YAA6BU,EAAAA,EAAAA,IAASiwB,EAAWxyB,eAE3D,CAAE,OAAQ,SAAUszB,SAAUd,EAAWxyB,gBAE7CwyB,EAAWxyB,aAA0C,QAA3BwyB,EAAWxyB,aAG9BwyB,EAAWxyB,aAIjBwyB,EAAWyN,UAAW,EAHtBzN,EAAWyN,UAAW,IASlB/3B,EAAAA,EAAAA,IAAWsqB,EAAWyN,aACrB19B,EAAAA,EAAAA,IAASiwB,EAAWxyB,cAI1BwyB,EAAWyN,UAAW,EAHtBzN,EAAWyN,UAAW,IAQjB/3B,EAAAA,EAAAA,IAAWsqB,EAAW4N,mBACrB79B,EAAAA,EAAAA,IAASiwB,EAAW/C,aAI1B+C,EAAW4N,gBAAiB,EAH5B5N,EAAW4N,gBAAiB,IAQvBl4B,EAAAA,EAAAA,IAAWsqB,EAAWkN,oBACrBn9B,EAAAA,EAAAA,IAASiwB,EAAWxuB,cAI1BwuB,EAAWkN,iBAAkB,EAH7BlN,EAAWkN,iBAAkB,IAQxBx3B,EAAAA,EAAAA,IAAWsqB,EAAWoP,aACrBr/B,EAAAA,EAAAA,IAASiwB,EAAW3yB,OAI1B2yB,EAAWoP,UAAW,EAHtBpP,EAAWoP,UAAW,IAQjB15B,EAAAA,EAAAA,IAAWsqB,EAAW+P,mBACrBhgC,EAAAA,EAAAA,IAASiwB,EAAWnwB,aAI1BmwB,EAAW+P,gBAAiB,EAH5B/P,EAAW+P,gBAAiB,IAQvBr6B,EAAAA,EAAAA,IAAWsqB,EAAWvyB,cAC5BuyB,EAAWvyB,YAAa,IAIlBiI,EAAAA,EAAAA,IAAWsqB,EAAW4M,gBAC5B5M,EAAW4M,cAAe,IAIpBl3B,EAAAA,EAAAA,IAAWsqB,EAAW5xB,kBAC5B4xB,EAAW5xB,gBAAiB,GAIxB4xB,EAAW5xB,gBAA0C,UAAxB4xB,EAAW3wB,YAA2B,CAAE,SAAU,WAAYyxB,SAAUd,EAAW7yB,YACpH6yB,EAAW5xB,gBAAiB,IAItBsH,EAAAA,EAAAA,IAAWsqB,EAAWkC,cAC5BlC,EAAWkC,YAAa,GAII,UAAxBlC,EAAW3wB,UAAuB,CAgBtC,IAdOqG,EAAAA,EAAAA,IAAWsqB,EAAW8M,0BAC5B9M,EAAW8M,wBAAyB,GAKhC9M,EAAW8M,yBACf9M,EAAW6M,qBAAsB,GAO7B7M,EAAW8M,uBACf,IACC9M,EAAWxyB,aAAe8oB,KAAKC,MAAOyJ,EAAWxyB,cAChD,MAAQ8S,KAMJ5K,EAAAA,EAAAA,IAAWsqB,EAAW6M,uBAC5B7M,EAAW6M,qBAAsB,GASlC7M,EAAWqO,4BAA8Bt+B,EAAAA,EAAAA,IAASiwB,EAAWsO,wBA8E9D,MA1E6B,QAAxBtO,EAAW3wB,YACf2wB,EAAWkC,YAAa,GAGjBxsB,EAAAA,EAAAA,IAAWsqB,EAAW7lB,cAC5B6lB,EAAW7lB,WAAa,UAIlBzE,EAAAA,EAAAA,IAAWsqB,EAAWoQ,iBAC5BpQ,EAAWoQ,cAAgBjmC,iBAAiBoc,OAAOvL,OAI/CtF,EAAAA,EAAAA,IAAWsqB,EAAWpY,WAC1BoY,EAAWpY,QAAUoY,EAAWpY,UAI5BlS,EAAAA,EAAAA,IAAWsqB,EAAWhY,WAC1BgY,EAAWhY,QAAUgY,EAAWhY,UAI1BtS,EAAAA,EAAAA,IAAWsqB,EAAWqQ,iBAC5BrQ,EAAWqQ,eAAgB,IAKA,QAAxBrQ,EAAW3wB,YACf2wB,EAAWkC,YAAa,GAGjBxsB,EAAAA,EAAAA,IAAWsqB,EAAWsQ,cAC5BtQ,EAAWsQ,WAAa,UAIlB56B,EAAAA,EAAAA,IAAWsqB,EAAWuQ,iBAC5BvQ,EAAWuQ,cAAgB,UAIvB76B,EAAAA,EAAAA,IAAWsqB,EAAWzU,WAC1ByU,EAAWzU,QAAUyU,EAAWzU,UAI5B7V,EAAAA,EAAAA,IAAWsqB,EAAWvU,WAC1BuU,EAAWvU,QAAUuU,EAAWvU,WAK3B/V,EAAAA,EAAAA,IAAWsqB,EAAWiF,mBAC5BjF,EAAWiF,iBAAkB,KAIvBvvB,EAAAA,EAAAA,IAAWsqB,EAAWqP,YAAc35B,EAAAA,EAAAA,IAAWsqB,EAAW7E,UAChE6E,EAAWqP,UAAW,IAIhB35B,EAAAA,EAAAA,IAAWsqB,EAAWuM,UAC5BvM,EAAWuM,QAAS,IAId72B,EAAAA,EAAAA,IAAWsqB,EAAWxvB,YAC5BwvB,EAAWxvB,UAAW,GAGhBwvB,I,sBAaR,WAA8B,IAK5BryB,EALQ6iC,IAAoB,yDAIzB3/B,EAAQ,KAGP2/B,GACJ3/B,EAAQrG,KAAKimC,oBACb9iC,EAAQnD,KAAKyE,YAGbtB,EAAQnD,KAAKw1B,WAAWxyB,aAIThD,KAAKY,KAArB,IAGI40B,EAAa,CAChB5xB,eAAgB5D,KAAKw1B,WAAW5xB,eAChC8uB,SAAgB1yB,KAAKw1B,WAAWvyB,YAIjC,OAAOijC,EAAAA,EAAAA,IAAe7/B,EAAOrG,KAAKY,KAAMuC,EAAOqyB,EAAYx1B,KAAKshC,4B,sBASjE,WAAU,WACTthC,KAAKohC,YAAY5/B,GAAI,0BAA0B,SAAEC,EAAO2iC,IAMlDl5B,EAAAA,EAAAA,IAAW,EAAKy2B,mBACbp8B,EAAAA,EAAAA,IAAS,EAAKd,YAKpB,EAAKk9B,eACHl4B,YAAa,yBALf,EAAKk4B,eACH/5B,SAAU,0BAQoB,UAA7B,EAAK4tB,WAAW3wB,WAAyB,EAAK2wB,WAAW6M,sBACrC,0BAAnB,EAAK59B,WAET,EAAKghC,0BAA0B79B,SAAU,+BAIzC,EAAK69B,0BAA0Bh8B,YAAa,gCAI9C,IAAM08B,EAAuB,WAa5B,GAXK,EAAK3Q,WAAWuM,QAEf,EAAKvM,WAAWwM,cAAgB,EAAKxM,WAAW5yB,YAIpD,EAAKwjC,UAKFl7B,EAAAA,EAAAA,IAAW,EAAKsqB,WAAW4M,eAAkB,EAAK5M,WAAW4M,eAE5Dl3B,EAAAA,EAAAA,IAAW,EAAKsqB,WAAWwO,kBAAoB,CAEnD,IAAMqC,GAAczQ,EAAAA,EAAAA,IAAU,EAAKJ,WAAW3oB,OAAQ,EAAK2oB,WAAWwO,mBAGjE94B,EAAAA,EAAAA,IAAWm7B,IAKfA,EAAYD,WAQhB,GAEC,EAAK5Q,WAAWuM,SAEb72B,EAAAA,EAAAA,IAAW,EAAKsqB,WAAWwM,cAG3B,EAAKxM,WAAWwM,cAAgB,EAAKxM,WAAW5yB,aAGlD,EAAK4yB,WAAW8Q,qBAKf/gC,EAAAA,EAAAA,IAAS,EAAKiwB,WAAWxyB,gBACpB,EAAKwyB,WAAWkN,kBAChB,EAAKlN,WAAW8Q,oBAGvB,CAEA,IAAItE,GAAcpM,EAAAA,EAAAA,IAAU,EAAKJ,WAAW3oB,OAAQ,EAAK2oB,WAAWwM,aAKpEA,EAAY71B,SAAU,MAAM,GAC5B61B,EAAYuE,eAAgB,MAAM,GAqBnC,MAjBK,CAAE,SAAU,QAAS,YAAajQ,SAAU,EAAKd,WAAW3wB,WAEhEshC,MAIKj7B,EAAAA,EAAAA,IAAW,EAAKs7B,kBACpBzxB,aAAc,EAAKyxB,iBAIpB,EAAKA,gBAAkBxxB,YAAW,WACjCmxB,MACE,QAIG,O,qBAUT,WAAS,WACRnmC,KAAKqG,MAAM7E,GAAI,WAAW,SAAEC,GAEtB,EAAK+zB,WAAWkC,YAEpBz2B,GAAAA,CAAGQ,EAAME,eAAgB2uB,YAI3BtwB,KAAKqG,MAAM7E,GAAI,YAAY,iB,qBAS5B,WACC,IAAIilC,GAAQ,EAMZ,OAJKv7B,EAAAA,EAAAA,IAAWvL,iBAAiBC,OAAO6M,MAAOzM,KAAKw1B,WAAW3oB,WAC9D45B,GAAQ,GAGFA,I,oBASR,WAAQ,WAKP,IAHiBv7B,EAAAA,EAAAA,IAAWlL,KAAKyE,YAAezE,KAAKyE,WAAazE,KAAK0mC,eAGlE1mC,KAAKw1B,WAAWuM,OAAQ,CAE5B,IAAIC,EAAchiC,KAOlB,GALKA,KAAKw1B,WAAW5yB,YAAc5C,KAAKw1B,WAAWwM,cAClDA,GAAcpM,EAAAA,EAAAA,IAAU51B,KAAKw1B,WAAW3oB,OAAQ7M,KAAKw1B,WAAWwM,gBAI1Dz8B,EAAAA,EAAAA,IAASvF,KAAKw1B,WAAWmR,kBAAqBphC,EAAAA,EAAAA,IAASvF,KAAKw1B,WAAWoR,UAAY,CAEzF5mC,KAAKuL,wBAELy2B,EAAYz2B,wBAGZ,IAAIs7B,EAAmB7mC,KAAKyE,WACtBqiC,GAAmB57B,EAAAA,EAAAA,IAAW82B,EAAYv9B,YAAeu9B,EAAYv9B,WAAau9B,EAAY0E,gBAEpGK,EAAAA,EAAAA,IAAa/mC,KAAKw1B,WAAWoR,SAAU,CACtCI,UAAgBrnC,iBAAiBC,OAAOmI,GACxCk/B,eAAgBjnC,KAAKw1B,WAAWmR,cAChCO,QAAclnC,KAAKw1B,WAAW3oB,OAC9Bs6B,SAAennC,KAAKw1B,WAAW2M,QAC/BiF,SAAepnC,KAAKw1B,WAAW5yB,WAC/BykC,aAAgBrnC,KAAKw1B,WAAWwM,YAChC7+B,MAAa0jC,EACbS,QAAUC,EAAAA,EAAAA,IAAwBvnC,KAAKw1B,WAAW3oB,UAChD,SAAE7E,GAsBJ,GAjBA,EAAKkE,uBACL81B,EAAY91B,uBAgB4B,UAdZ81B,EAAYn7B,gBAcbhC,WAAyB5D,IAAAA,QAAW+G,GAAY,CAkC1E,GA7BC,EAAKwtB,WAAWuM,SAEb72B,EAAAA,EAAAA,IAAW,EAAKsqB,WAAWwM,cAG3B,EAAKxM,WAAWwM,cAAgB,EAAKxM,WAAW5yB,aAGlD,EAAK4yB,WAAW8Q,qBAKf/gC,EAAAA,EAAAA,IAAS,EAAKiwB,WAAWxyB,gBACpB,EAAKwyB,WAAWkN,kBAChB,EAAKlN,WAAW8Q,sBAIvBQ,EAAmB,MAUK,0BAApBA,EAA8C,CAElD,IAAMzD,EAAmBrB,EAAYwF,uBASpCV,GANMvhC,EAAAA,EAAAA,IAAS89B,GAMI,KAJAA,EAcrBrB,EAAYyF,iBAAkBz/B,GAAU,GAMxCg6B,EAAY71B,SAAU26B,QAItB9E,EAAY71B,SAAUnE,GAIvB,EAAKwtB,WAAW8Q,oBAAqB,S,4BAczC,WAAgB,WACf,GAAKtmC,KAAK0nC,UAAW,CAEpB1nC,KAAKw1B,WAAW8Q,oBAAqB,EAMrC,IAAIqB,GAAkB,EAEtB,IAKCA,EAHehoC,iBAAiBC,OAAO6M,MAAOzM,KAAKw1B,WAAW3oB,QAAS3J,QAASlD,KAAKw1B,WAAW2M,SAAUh7B,OAGnFmlB,QAAQ,SAAEsb,EAAavhC,GAC7C,OAAOuhC,GAEJvhC,EAAMmvB,WAAWwM,aAAe,EAAKxM,WAAW5yB,YAE5CyD,EAAMmvB,WAAW5yB,YAAc,EAAK4yB,WAAW5yB,YAElDyD,EAAMmvB,WAAWuM,UAEnB,GAEJ,MAAQjsB,IAKD6xB,IAML3nC,KAAKw1B,WAAWwM,aAAehiC,KAAKw1B,WAAW5yB,YAC5C5C,KAAKw1B,WAAWuM,QAEnB/hC,KAAKomC,SAGNpmC,KAAKqG,MAAM8D,QAAS,yBAA0B,CAC7C09B,aAAa,KAKhB,OAAO7nC,KAAKohC,c,+BAWb,WACC,OAAOphC,KAAK2hC,iB,wBAWb,WACC,OAAO3hC,KAAKw1B,WAAW5yB,a,sBAWxB,WACC,OAAO5C,KAAKqG,Q,wBAGb,WACC,OAAOrG,KAAKskC,uB,2BAWb,WACC,OAAOtkC,KAAKw1B,a,sBAYb,WACC,IAAIxtB,EAAW,KAEf,IAAKkD,EAAAA,EAAAA,IAAWlL,KAAKqG,OACpB,OAASrG,KAAKY,MACb,IAAK,SACL,IAAK,OACL,IAAK,MACL,IAAK,QACL,IAAK,MACL,IAAK,QACJoH,EAAWhI,KAAKqG,MAAMuW,MACtB,MAED,IAAK,WAEJ,IAAK1R,EAAAA,EAAAA,IAAWlL,KAAKu1B,eACpB,IACCv1B,KAAKu1B,cAAcsF,iCAClB,MAAQ/kB,GACTjV,QAAQC,IAAKgV,GAMf,GAFA9N,EAAWhI,KAAKqG,MAAMuW,MAEjB5c,KAAKw1B,WAAWiF,gBACpB,IAGCzyB,EAAWA,EAAS8/B,WAAY,KAAM,IACrC,MAAQhyB,GACTjV,QAAQC,IAAKgV,GAIf,MAED,IAAK,WACJ9N,EAAWhI,KAAKqG,MAAMuD,GAAI,YAC1B,MAED,IAAK,QACJ5B,EAAWhI,KAAKqG,MAAM/E,KAAM,iBAAkBsb,MAC9C,MAED,IAAK,OAIL,IAAK,OACJ5U,EAAWhI,KAAKqG,MAAMuW,MAwBzB,OAlBG1R,EAAAA,EAAAA,IAAWlL,KAAKqG,SACb6E,EAAAA,EAAAA,IAAWlD,KAGXhI,KAAKw1B,WAAWyN,SAEpBj7B,EAAWhI,KAAKw1B,WAAWxyB,aAKtBhD,KAAKw1B,WAAWkN,kBAEpB16B,EAAWhI,KAAKw1B,WAAWxuB,eAKvBgB,I,8BAWR,WAAkB,WACbA,EAAW,KACd7E,EAAUnD,KAAKyE,WAEhB,OAASzE,KAAKY,MACb,IAAK,SAEJ,IAAKsK,EAAAA,EAAAA,IAAWlL,KAAKqG,OAKnB2B,EAHIhI,KAAKw1B,WAAW8M,wBAA0BrhC,IAAAA,QAAWkC,GAG9CA,EAAMwC,KAAI,SAAEoiC,GACtB,OAAO,EAAK1hC,MAAM/E,MAAMgH,EAAAA,EAAAA,IAAU,qBAAsB,CAAEy/B,KAAkB3kC,UAC1EmY,KAFQ,UAEE5b,iBAAiBwB,KAAK6mC,cAFxB,MAKAhoC,KAAKqG,MAAM/E,MAAMgH,EAAAA,EAAAA,IAAU,qBAAsB,CAAEnF,KAAYC,YAK3E,GAAKpD,KAAKw1B,WAAW8M,wBAA0BrhC,IAAAA,QAAWkC,GACzD,IAGC6E,EAAW7E,EAAMwC,KAAI,SAAEoiC,GACtB,OAAO,EAAKE,uBAAwBF,GAAc3kC,QAChDmY,KAFQ,UAEE5b,iBAAiBwB,KAAK6mC,cAFxB,MAIZ,MAAQlyB,SAKR,IAEC9N,EAAWhI,KAAKioC,uBAAwB9kC,GAAQC,KAEjD,MAAQ0S,IAKV,MAED,IAAK,OACL,IAAK,MACL,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,WAEJ3S,EAAQlC,GAAAA,CAAG,QAASu9B,KAAMr7B,GAAQC,OAClC,MAED,IAAK,WAEH4E,EADI7E,EACOxD,iBAAiBwB,KAAK+mC,UAGtBvoC,iBAAiBwB,KAAKgnC,WAElC,MAED,IAAK,QAEJ,IAAKj9B,EAAAA,EAAAA,IAAWlL,KAAKqG,OAAS,CAE7B,IAAM+hC,EAAgBpoC,KAAKqG,MAAM/E,KAAM,iBAGV,GAAxB8mC,EAAcr+B,SAKlB/B,EAHwBogC,EAAcC,QAAS,0BAGpBjlC,OAAO6Y,aAInC,IAECjU,EAAWhI,KAAKioC,uBAAwB9kC,GAAQC,KAEjD,MAAQ0S,IAIT,MAED,IAAK,OAKL,IAAK,OAEJ3S,EAAQlC,GAAAA,CAAG,QAASu9B,KAAMr7B,GAAQC,OAIpC,OAAO4E,I,kCAUR,WAEC,IAAIy3B,EAAa,KAGjB,GAAkC,UAA7Bz/B,KAAKw1B,WAAW3wB,WAAyB7E,KAAKw1B,WAAW6M,qBAA0C,0BAAnBriC,KAAKyE,WAEzF,IAAKyG,EAAAA,EAAAA,IAAWlL,KAAK2jC,kBACpBlE,EAAaz/B,KAAK2jC,iBAAiBl/B,gBAInC,IACCg7B,EAAa9/B,iBAAiBC,OAAO6M,MAAOzM,KAAKw1B,WAAW3oB,QAASy7B,KAAxD,UAAkEtoC,KAAKw1B,WAAW5yB,WAAlF,YAEd,MAAQkT,IAMV,OAAO2pB,I,oCAUR,WAAoC,IAAZt8B,EAAY,uDAAJ,GAC3BqtB,EAAS,KAGTttB,EAAUlD,KAAKw1B,WAAWtyB,QAqB9B,OAlBKlD,KAAKw1B,WAAW6M,qBACpBn/B,EAAQM,KAAK,CACZL,MAAO,yBACPC,KAAOzD,iBAAiBwB,KAAKqiC,WAAWn9B,MAAMiqB,OAAOgT,eAKhD/9B,EAAAA,EAAAA,IAASrC,IAEfA,EAAQiD,SAAQ,SAAE48B,GAEZ5/B,GAAS4/B,EAAa5/B,QAC1BqtB,EAASuS,MAKLvS,I,0BAWR,WACC,IAAIxoB,EAGJ,IAAKkD,EAAAA,EAAAA,IAAWvL,iBAAiBC,OAAO6M,MAAOzM,KAAKw1B,WAAW3oB,SAAY,CAC1E,IAAI07B,EAAY5oC,iBAAiBC,OAAO6M,MAAOzM,KAAKw1B,WAAW3oB,QAASy7B,KAAMtoC,KAAKw1B,WAAW5yB,aAEzFsI,EAAAA,EAAAA,IAAWq9B,KACfvgC,EAAWugC,GAIb,OAAOvgC,I,sBAWR,SAAU7E,GAA+D,WAAxDqlC,IAAwD,yDAAtCtlC,EAAsC,uDAA5B,CAAEulC,kBAAkB,GAIhE,IAAKv9B,EAAAA,EAAAA,IAAWlL,KAAKqG,OACpB,OAASrG,KAAKY,MACb,IAAK,UAEGsK,EAAAA,EAAAA,IAAW/H,KAEhBA,EADInD,KAAKw1B,WAAW8M,uBACZ,GAGA,IAKV,IAAIoG,EAAa1oC,KAAKqG,MAAM/E,KAAM,UAElC,GAAKtB,KAAKw1B,WAAW8M,uBAEpBoG,EAAWjP,KAAM,YAAY,GAGxBx4B,IAAAA,QAAWkC,MAAaoC,EAAAA,EAAAA,IAASpC,KAErCA,EAAMgD,SAAQ,SAAEwiC,GAEf,IAAInY,EAAS,EAAKnqB,MAAM/E,KAAM,iBAAmBqnC,EAAW,MAGvDnY,EAAOzmB,OAAS,GAEpBymB,EAAOiJ,KAAM,YAAY,MAKtB+O,GACJxoC,KAAKqG,MAAM8D,QAAS,SAAU,CAC7B09B,aAAa,SAKZ,CAEJ,IAAIrX,EAASxwB,KAAKqG,MAAM/E,KAAM,iBAAmB6B,EAAQ,MAGpDqtB,EAAOzmB,OAAS,GAEpB2+B,EAAWjP,KAAM,YAAY,GAG7BjJ,EAAOiJ,KAAM,YAAY,GAGpB+O,GACJxoC,KAAKqG,MAAM8D,QAAS,SAAU,CAC7B09B,aAAa,MAMfa,EAAWjP,KAAM,YAAY,GAI5Bz5B,KAAKw1B,WAAW6M,uBACX98B,EAAAA,EAAAA,IAASpC,IAGdnD,KAAKumC,eAAgBpjC,GAAO,GAIxBqlC,GACJxoC,KAAKqG,MAAM8D,QAAS,SAAU,CAC7B09B,aAAa,KAQjB,MAED,IAAK,OACL,IAAK,MACL,IAAK,QACL,IAAK,MACL,IAAK,QAEJ,IAAK38B,EAAAA,EAAAA,IAAWhI,EAAQulC,mBAAsBvlC,EAAQulC,mBAAoBv9B,EAAAA,EAAAA,IAAWlL,KAAKq2B,SAEzF,IAICr2B,KAAKq2B,QAAQlqB,SAAUhJ,GACtB,MAAQ2S,GAGT9V,KAAKqG,MAAMuW,IAAKzZ,QAMjBnD,KAAKqG,MAAMuW,IAAKzZ,GAIZqlC,GACJxoC,KAAKqG,MAAM8D,QAAS,0BAErB,MAED,IAAK,WAEEnK,KAAKqG,MAAMuW,IAAKzZ,IAGX+H,EAAAA,EAAAA,IAAWlL,KAAKo7B,eACpBp7B,KAAKo7B,aAAaQ,WAAYz4B,GAmBhCqlC,GACJxoC,KAAKqG,MAAM8D,QAAS,0BAErB,MAED,IAAK,WACJ,IAAIy+B,EAAezlC,EAClBmI,EAAYtL,KAAKyE,WAGbmkC,IAAkBt9B,GACtBtL,KAAKqG,MAAMozB,KAAM,WAAW,IAGtBmP,GAAgBt9B,GACtBtL,KAAKqG,MAAMozB,KAAM,WAAW,GAGxB+O,IAAiBI,IAAkBt9B,IAAmBs9B,GAAgBt9B,IAE1EtL,KAAKqG,MAAM8D,QAAS,0BAGrB,MAED,IAAK,QAEJnK,KAAKqG,MAAMsH,OAAX,iBAA8BxK,EAA9B,OAA2Cs2B,KAAM,WAAW,GAGvD+O,GAEJxoC,KAAKqG,MAAM8D,QAAS,0BAGrB,MAED,IAAK,OAUL,IAAK,OAEJnK,KAAKqG,MAAMuW,IAAKzZ,GAGXqlC,GACJxoC,KAAKqG,MAAM8D,QAAS,6B,wBAazB,WAECnK,KAAKmM,SAAU,IAAI,GAGnB,IACCnM,KAAKq2B,QAAQlqB,SAAU,IACtB,MAAQ2J,IAGV,GAAK,CAAE,OAAQ,QAASwgB,SAAUt2B,KAAKw1B,WAAW3wB,WAEjD,IACC7E,KAAKogC,kBAAkB5X,QACtB,MAAQ1S,O,4BAUZ,SAAgB3S,GAAyB,IAAlBqlC,IAAkB,yDAOV,UAA7BxoC,KAAKw1B,WAAW3wB,YACbqG,EAAAA,EAAAA,IAAWlL,KAAK2jC,oBAGnB3jC,KAAKqG,MAAMuW,IAAK,0BAGhB5c,KAAK2jC,iBAAiBx3B,SAAUhJ,EAAOqlC,GAGlCA,GACJxoC,KAAKqG,MAAM8D,QAAS,SAAU,CAC7B09B,aAAa,O,+BAYjB,WACC,OAAO7nC,KAAKikC,0B,8BAWb,SAAkB/gC,GAA+B,IAAtB2e,IAAsB,yDAEhD7hB,KAAK6oC,sBAGL,IACC3lC,EAAUA,EAAQyK,QAAO,SAAE6iB,GAC1B,OAAOtlB,EAAAA,EAAAA,IAAWslB,EAAOrtB,SAAW+H,EAAAA,EAAAA,IAAWslB,EAAOptB,SAEtD,MAAQ0S,IAEV,IAAK5K,EAAAA,EAAAA,IAAWlL,KAAKqG,OAAS,CAE7B,IAAMtE,EAAoB/B,KAAKqG,MAAM/E,KAAM,wCAE3C,GAAK4B,EAAQ6G,OAAS,EAAG,CAExB/J,KAAKqG,MAAMozB,KAAM,YAAY,GAG7B,IAAIt2B,GAAQ+H,EAAAA,EAAAA,IAAWlL,KAAKyE,YAAezE,KAAKyE,WAAazE,KAAK0mC,eAG9DoC,EAAa,GAGjB7nC,IAAAA,KAAQiC,GAAS,SAAE2C,EAAO2qB,GACzB,IAAIuY,EAAY,IAAI5E,OAAQ3T,EAAOptB,KAAMotB,EAAOrtB,OAAO,GAAO,GAE9DpB,EAAkBC,OAAQ+mC,GAC1BD,EAAWtlC,KAAMulC,OAGXxjC,EAAAA,EAAAA,IAASpC,IACflC,IAAAA,KAAQjB,KAAKqG,MAAM/E,KAAM,WAAY,SAAEuE,EAAO2qB,GACxCA,EAAOrtB,OAASA,GACpBlC,GAAAA,CAAGuvB,GAASiJ,KAAM,YAAY,UAK7B,CACJ,IAAIyK,EAAajjC,GAAAA,CAAK,IAAIkjC,OAAQxkC,iBAAiBwB,KAAKg9B,UAAW,IAAMn+B,KAAKw1B,WAAW6M,qBAAuBriC,KAAKw1B,WAAW6M,sBAChI6B,EAAWzK,KAAM,YAAY,GAE7B13B,EAAkBC,OAAQkiC,GAEnBlkC,KAAKw1B,WAAW6M,qBAEtBriC,KAAKqG,MAAMozB,KAAM,YAAY,GAI1B5X,GACJ7hB,KAAKqG,MAAM8D,QAAS,UAKrBnK,KAAKgpC,qB,iCAUP,YACM99B,EAAAA,EAAAA,IAAWlL,KAAKqG,QACpBrG,KAAKqG,MAAM/E,KAAM,wCAAyCkM,U,uBAY5D,WACC,OAAOxN,KAAKohC,YAAY53B,SAAU,2B,mCASnC,WAEC,IAAIy/B,EAAW,yBAEV/9B,EAAAA,EAAAA,IAAWlL,KAAKohC,eAAmBphC,KAAKohC,YAAY53B,SAAUy/B,KAGlEjpC,KAAKohC,YAAYx5B,SAAUqhC,GAGT,YAAbjpC,KAAKY,OAAwBsK,EAAAA,EAAAA,IAAWlL,KAAKw1B,WAAWqP,WAC5D7kC,KAAK2hC,eAAe/5B,SAAU,iCAI/B5H,KAAKohC,YAAYj3B,QAAS,8B,kCAU5B,WAEC,IAAI8+B,EAAW,yBAEV/9B,EAAAA,EAAAA,IAAWlL,KAAKohC,cAAiBphC,KAAKohC,YAAY53B,SAAUy/B,KAGhEjpC,KAAKohC,YAAY33B,YAAaw/B,GAG9BjpC,KAAK2hC,eAAel4B,YAAa,iCAGjCzJ,KAAKohC,YAAYj3B,QAAS,8B,2BAU5B,WACC,OAASnK,KAAKY,MACb,IAAK,SAEJZ,KAAKkpC,YAAalpC,KAAKqG,OACvB,MAED,IAAK,OACL,IAAK,MACL,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,WAE8B,OAA7BrG,KAAKw1B,WAAW3wB,YACpBskC,EAAAA,EAAAA,IAAgBnpC,KAAK2hC,gBAEtB,MAED,IAAK,OACL,IAAK,OAEJ3hC,KAAKopC,cAAeppC,KAAKqG,U,gCAa5B,WAEC,IAAIgjC,EAAW,CACdC,MAAO,cACDC,uBAAwB5pC,iBAAiBwB,KAAKq7B,OAC9CgN,SAAU,CACNrL,UAAW,WACP,OAAOx+B,iBAAiBwB,KAAKg9B,YAGlCsL,eAAgB,SAAE7nC,GACjB,IAAI+5B,EAAW/5B,EAAKwB,KAUjB,OAPK8H,EAAAA,EAAAA,IAAWtJ,EAAKmG,KAEZ2hC,OAAOC,UAAW1wB,SAAUrX,EAAKmG,MAAUkR,SAAUrX,EAAKmG,IAAO,IAClE4zB,EAAW,yCAAH,QAA6CrzB,EAAAA,EAAAA,IAAU3I,iBAAiBwB,KAAKyoC,kBAAmB,CAAEhoC,EAAKmG,GAAGgvB,QAAS,aAAc,MAAjI,oBAAoJn1B,EAAKwB,OAIlKu4B,GAEXkO,kBAAmB,SAAWjoC,GAC1B,IAAI+5B,EAAW/5B,EAAKwB,KAUpB,OAPK8H,EAAAA,EAAAA,IAAWtJ,EAAKmG,KAEZ2hC,OAAOC,UAAW1wB,SAAUrX,EAAKmG,MAAUkR,SAAUrX,EAAKmG,IAAO,IAClE4zB,EAAW,yCAAH,QAA6CrzB,EAAAA,EAAAA,IAAU3I,iBAAiBwB,KAAKyoC,kBAAmB,CAAEhoC,EAAKmG,GAAGgvB,QAAS,aAAc,MAAjI,oBAAoJ4E,IAI7JA,GAEXmO,aAAc,SAAWC,GACrB,OAAOA,IAerB,OAVK/pC,KAAKw1B,WAAW4N,iBAEpBiG,EAAS5W,YAAczyB,KAAKw1B,WAAW/C,aAInCzyB,KAAKw1B,WAAWwU,cACpBX,EAASW,YAAchqC,KAAKw1B,WAAWwU,aAGjCX,I,yBASR,SAAa/L,GACZ,IAAI+L,EAAWrpC,KAAKiqC,qBAEb3M,EAAO9zB,SAAU,8BACvB8zB,EAAO4M,QAASb,K,2BAUlB,SAAe/L,GAAQ,YAEfpyB,EAAAA,EAAAA,IAAWxB,SAASygC,eAAgB,4BAC1ClpC,GAAAA,CAAG,QACDe,OAAQf,GAAAA,CAAE,+EAEb,IAAMmlB,EAAY1c,SAASygC,eAAgB,0BAEvCd,EAAW,CACdz6B,YAAY,EAEZ+D,gBAAiB3S,KAAKskC,qBAAqB,GAE3Cv1B,UAAY,EAEZS,YAAY,EAEZoY,SAAUxB,EAEV9U,OAAQ,CACP+B,SAAU,CACTC,UAAW,CACV3T,iBAAiBwB,KAAK4a,OAAOvL,KAAK6C,SAASC,UAAU82B,OAAQzqC,iBAAiBwB,KAAK4a,OAAOvL,KAAK6C,SAASC,UAAU+2B,OAAQ1qC,iBAAiBwB,KAAK4a,OAAOvL,KAAK6C,SAASC,UAAUg3B,QAAS3qC,iBAAiBwB,KAAK4a,OAAOvL,KAAK6C,SAASC,UAAUi3B,UAAW5qC,iBAAiBwB,KAAK4a,OAAOvL,KAAK6C,SAASC,UAAUk3B,SAAU7qC,iBAAiBwB,KAAK4a,OAAOvL,KAAK6C,SAASC,UAAUm3B,OAAQ9qC,iBAAiBwB,KAAK4a,OAAOvL,KAAK6C,SAASC,UAAUo3B,UAC1an3B,SAAU,CAAE5T,iBAAiBwB,KAAK4a,OAAOvL,KAAK6C,SAASE,SAAS62B,OAAQzqC,iBAAiBwB,KAAK4a,OAAOvL,KAAK6C,SAASE,SAAS82B,OAAQ1qC,iBAAiBwB,KAAK4a,OAAOvL,KAAK6C,SAASE,SAAS+2B,QAAS3qC,iBAAiBwB,KAAK4a,OAAOvL,KAAK6C,SAASE,SAASg3B,UAAW5qC,iBAAiBwB,KAAK4a,OAAOvL,KAAK6C,SAASE,SAASi3B,SAAU7qC,iBAAiBwB,KAAK4a,OAAOvL,KAAK6C,SAASE,SAASk3B,OAAQ9qC,iBAAiBwB,KAAK4a,OAAOvL,KAAK6C,SAASE,SAASm3B,WAE/al3B,OAAQ,CACPF,UAAW,CACV3T,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOF,UAAUq3B,QAAShrC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOF,UAAUs3B,SAAUjrC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOF,UAAUu3B,MAAOlrC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOF,UAAUw3B,MAAOnrC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOF,UAAUy3B,IAAKprC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOF,UAAU03B,KAAMrrC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOF,UAAU23B,KAAMtrC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOF,UAAU43B,OAAQvrC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOF,UAAU63B,UAAWxrC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOF,UAAU83B,QAASzrC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOF,UAAU+3B,SAAU1rC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOF,UAAUg4B,UAE9rB/3B,SAAU,CACR5T,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOD,SAASo3B,QAAShrC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOD,SAASq3B,SAAUjrC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOD,SAASs3B,MAAOlrC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOD,SAASu3B,MAAOnrC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOD,SAASw3B,IAAKprC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOD,SAASy3B,KAAMrrC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOD,SAAS03B,KAAMtrC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOD,SAAS23B,OAAQvrC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOD,SAAS43B,UAAWxrC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOD,SAAS63B,QAASzrC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOD,SAAS83B,SAAU1rC,iBAAiBwB,KAAK4a,OAAOvL,KAAKgD,OAAOD,SAAS+3B,WAGlrBx3B,eAAgB,IAAF,OAAOnU,iBAAiBwB,KAAK4a,OAAOvL,KAAKsD,eAAzC,KAGdJ,eAAkBuF,SAAUtZ,iBAAiBwB,KAAK4a,OAAOvL,KAAKkD,iBAAoB,GAAKuF,SAAUtZ,iBAAiBwB,KAAK4a,OAAOvL,KAAKkD,iBAAoB,EAAMuF,SAAUtZ,iBAAiBwB,KAAK4a,OAAOvL,KAAKkD,gBAAmB,EAAI,EAChOK,iBAAkB,IAAF,OAAOpU,iBAAiBwB,KAAK4a,OAAOvL,KAAKuD,iBAAzC,KAChBC,YAAarU,iBAAiBwB,KAAKoqC,kBAC7Bt3B,YAAatU,iBAAiBwB,KAAKqqC,cACnCt3B,KAAM,CAAEvU,iBAAiBwB,KAAK4a,OAAOvL,KAAKi7B,GAAI9rC,iBAAiBwB,KAAK4a,OAAOvL,KAAKk7B,IAChFv3B,cAAexU,iBAAiBwB,KAAK4a,OAAOvL,KAAK2I,KACjD/E,eAAgBzU,iBAAiBwB,KAAK4a,OAAOvL,KAAKuJ,MAClD1F,cAAe1U,iBAAiBwB,KAAK4a,OAAOvL,KAAKqH,KACjDvD,gBAAiB3U,iBAAiBwB,KAAK4a,OAAOvL,KAAKm7B,QAG1Dt5B,QAAS,SAAE8M,EAAeysB,EAASC,GAKlC,IACC,IAAMC,EAAuB,WAErB,EAAKrnC,WAAW6xB,SAAU,OAG3B,EAAKD,QAAQ5xB,YAAconC,EAAS98B,SAAS5L,OACjD,EAAKkzB,QAAQlqB,SAAU0/B,EAAS98B,SAAS5L,SAMvC+H,EAAAA,EAAAA,IAAW,EAAKmrB,SACpByV,IAGA,EAAKzlC,MAAM7E,GAAI,uBAAuB,WACrCsqC,OAGD,MAAQh2B,GAAKjV,QAAQC,IAAKgV,KAG7BjE,SAAU,SAAEsN,EAAeysB,EAASC,GAEnC,IACC,IAAME,EAAqB,WAG1B,EAAK1V,QAAQlqB,SAAU0/B,EAAS98B,SAAS5L,SAIrC+H,EAAAA,EAAAA,IAAW,EAAKmrB,SACpB0V,IAGA,EAAK1lC,MAAM7E,GAAI,uBAAuB,WACrCuqC,OAGD,MAAQj2B,GAAKjV,QAAQC,IAAKgV,MAMI,QAA7B9V,KAAKw1B,WAAW3wB,YACpBwkC,EAAWpoC,IAAAA,OAAUooC,EAAU,CAE9B15B,WAAY3P,KAAKw1B,WAAW7lB,WAC5Bb,UAAY9O,KAAKw1B,WAAWoQ,gBAIxB5lC,KAAKw1B,WAAWqQ,gBACpBwD,EAAS73B,KAAO,UAIZtG,EAAAA,EAAAA,IAAWlL,KAAKw1B,WAAWpY,WAC/BisB,EAASjsB,QAAUpd,KAAKw1B,WAAWpY,UAI/BlS,EAAAA,EAAAA,IAAWlL,KAAKw1B,WAAWhY,WAC/B6rB,EAAS7rB,QAAUxd,KAAKw1B,WAAWhY,UAIH,QAA7Bxd,KAAKw1B,WAAW3wB,YACpBwkC,EAAWpoC,IAAAA,OAAUooC,EAAU,CAC9Bn5B,YAAY,EACVyB,YAAY,EAGZhC,WAAY3P,KAAKw1B,WAAWsQ,WAC9Bh3B,UAAY9O,KAAKw1B,WAAWuQ,iBAIxB76B,EAAAA,EAAAA,IAAWlL,KAAKw1B,WAAWzU,WAC/BsoB,EAAStoB,QAAU/gB,KAAKw1B,WAAWzU,UAI/B7V,EAAAA,EAAAA,IAAWlL,KAAKw1B,WAAWwW,WAC/B3C,EAAS2C,QAAUhsC,KAAKw1B,WAAWwW,UAKrChsC,KAAKogC,kBAAoB9C,EAAOrf,UAAWorB,K,4BAS5C,WAAgB,WAEf,GACC,CAAE,OAAQ,MAAO,QAAS,MAAO,QAAS,OAAQ,OAAQ,YAAa/S,SAAUt2B,KAAKw1B,WAAW3wB,WACjG,CAEA7E,KAAKisC,oBAEL,IAAMC,EAAelsC,KAAKyE,WAG1BzE,KAAKq2B,QAAU8V,WAAYnsC,KAAKskC,qBAAqB,GAAI,CACxD8H,YAAa,EACbC,QAAS,EACTlpC,MAAO+oC,EACP16B,KAAM,UACN86B,UAAU,EACVC,eAAgBC,EAAAA,EAChBC,cAAc,EACdC,aAAa,EAGbC,aAA6C,YAA7B3sC,KAAKw1B,WAAW3wB,WAEhC+nC,eAA6C,YAA7B5sC,KAAKw1B,WAAW3wB,UAA0B,SAAW,KAErEgoC,UAAW,CACVC,IAAK,WAEJ,IAAMC,EAAY,EAAKC,eAQvB,OALK9hC,EAAAA,EAAAA,IAAW6hC,IAEfA,EAAUnpB,SAGJ,IAITqpB,SAAUjtC,KAAKw1B,WAAWkC,aAItB13B,KAAKw1B,WAAW4N,gBACpBpjC,KAAKq2B,QAAQ6W,UAAW,cAAeltC,KAAKw1B,WAAW/C,aAGxDzyB,KAAKq2B,QAAQ70B,GAAI,WAAW,SAAEC,EAAOI,GAE7B,CAAE,OAAQ,QAASy0B,SAAU,EAAKd,WAAW3wB,YACnD,EAAKsH,SAAU,EAAKkqB,QAAQ5xB,YAAY,EAAM,CAC7CgkC,kBAAkB,OAKrBzoC,KAAKq2B,QAAQ70B,GAAI,SAAS,WAEzB,GAAK,CAAE,OAAQ,QAAS80B,SAAU,EAAKd,WAAW3wB,WACjD,IAECmQ,YAAY,WACX,EAAKorB,kBAAkB5W,SACrB,IACF,MAAQ1T,GACTjV,QAAQC,IAAKgV,OAKhB9V,KAAKqG,MAAM7E,GAAI,SAAS,WACvB,EAAK60B,QAAQzS,WAGd5jB,KAAKqG,MAAM8D,QAAS,uBAGa,UAA7BnK,KAAKw1B,WAAW3wB,YAEfqG,EAAAA,EAAAA,IAAWlL,KAAK2jC,mBACpB3jC,KAAK2jC,iBAAiB3/B,mB,0BAWzB,WACC,IAAI+oC,EAAY,KAGhB,IAAK7hC,EAAAA,EAAAA,IAAWlL,KAAKw1B,WAAW3oB,UAAY3B,EAAAA,EAAAA,IAAWlL,KAAKw1B,WAAW2M,SAAW,CAEjF,IAAMgL,EAAgBxtC,iBAAiBC,OAAO6M,MAAOzM,KAAKw1B,WAAW3oB,QAAS3J,QAASlD,KAAKw1B,WAAW2M,SAAUh7B,OAGjH,IAAK+D,EAAAA,EAAAA,IAAWiiC,IAAmBlsC,IAAAA,QAAWksC,GAAiB,CAE9D,IAAMC,EAAgBD,EAAc99B,QAASrP,OAGtB,GAAlBotC,GAECA,GAAiBD,EAAcpjC,OAAS,IAE5CgjC,EAAYI,EAAeC,EAAgB,KAO/C,IAAKliC,EAAAA,EAAAA,IAAWlL,KAAKw1B,WAAW7yB,WAA0C,iBAA5B3C,KAAKw1B,WAAW7yB,SAA6B,CAE1F,IAAMwqC,EAAgBxtC,iBAAiBC,OAAOC,aAAasH,OAG3D,IAAK+D,EAAAA,EAAAA,IAAWiiC,IAAmBlsC,IAAAA,QAAWksC,GAAiB,CAE9D,IAAMC,EAAgBD,EAAc99B,QAASrP,OAGtB,GAAlBotC,GAECA,GAAiBD,EAAcpjC,OAAS,IAE5CgjC,EAAYI,EAAeC,EAAgB,KAM/C,OAAOL,I,mBASR,WACC,IAAK7hC,EAAAA,EAAAA,IAAWlL,KAAKqG,OACpB,OAASrG,KAAKY,MACb,IAAK,SAEJ,IACCZ,KAAKqG,MAAM6jC,QAAS,SACnB,MAAQp0B,GAET9V,KAAKqG,MAAMud,QAEZ,MAED,IAAK,OACL,IAAK,MACL,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,OACL,IAAK,QAEC1Y,EAAAA,EAAAA,IAAWlL,KAAKq2B,SACpBr2B,KAAKq2B,QAAQzS,QAGb5jB,KAAKqG,MAAMud,QAGZ,MAED,IAAK,WAEJ,IAAK1Y,EAAAA,EAAAA,IAAWlL,KAAKo7B,cAEpB,GAAKp7B,KAAKqG,MAAMuD,GAAI,YACnB5J,KAAKqG,MAAMud,aAGX,IAEC5jB,KAAKo7B,aAAaxX,QACjB,MAAQ9N,SAIX9V,KAAKqG,MAAMud,QAGZ,MAED,IAAK,WAIL,IAAK,QACJ5jB,KAAKqG,MAAMud,W,+BAWf,WAEC,IAAK1Y,EAAAA,EAAAA,IAAWlL,KAAKq2B,SACpB,IACC,IAAMiH,EAASt9B,KAAKq2B,QAAQgX,oBAC5B/P,EAAOhnB,WAAWH,YAAamnB,GAC/Bt9B,KAAKq2B,QAAU,KACd,MAAQvgB,O,6BASZ,WACC,IAAIuzB,EAAWrpC,KAAKiqC,uBAEb1kC,EAAAA,EAAAA,IAASvF,KAAKqG,QAAWrG,KAAKqG,MAAMmD,SAAU,8BACpDxJ,KAAKqG,MAAM6jC,QAAS,WAAYA,QAASb,K,+BAU3C,WAEErpC,KAAKw1B,WAAW5xB,iBAGhB5D,KAAKstC,uBAELttC,KAAKutC,cAAgB,IAAIhY,EAAev1B,OAGP,UAA7BA,KAAKw1B,WAAW3wB,YAEfqG,EAAAA,EAAAA,IAAWlL,KAAK2jC,mBACpB3jC,KAAK2jC,iBAAiB5/B,sB,kCAWzB,YAEOmH,EAAAA,EAAAA,IAAWlL,KAAKutC,gBACrBvtC,KAAKutC,cAAcxd,Y,yBAWrB,WAAa,WAIZ,GAHgB/vB,KAAKqG,OAGhB6E,EAAAA,EAAAA,IAAWlL,KAAKqG,QAAwC,YAA7BrG,KAAKw1B,WAAW3wB,WAA2B7E,KAAKw1B,WAAWiF,gBAAiB,CAE3G,IAAM+S,EAAUxtC,KAAKqG,MAAMozB,KAAM,MAGvB3D,EAAS2X,QAAQ9b,IAAK6b,IAErBtiC,EAAAA,EAAAA,IAAW4qB,IACfloB,GAAGkoB,OAAOpgB,OAAQ83B,GAGzB5/B,GAAGkoB,OAAO4X,WAAYF,EAAS,CAC9BG,cAAc,EACdF,QAAS,CAERG,SAAU,2GACVC,SAAU,0FAEXC,WAAW,KAINhY,EAAS2X,QAAQ9b,IAAK6b,IAIVtS,OACXl7B,KAAK2hC,eACH/5B,SAAU,+BAGZ5H,KAAK2hC,eACH/5B,SAAU,iCAIb5H,KAAKohC,YAAY9/B,KAAM,gBAAiBE,GAAI,SAAS,WACpD,EAAK6E,MAAM8D,QAAS,mCAGpB,EAAKw3B,eACHl4B,YAAa,+BACb7B,SAAU,oCAGb5H,KAAKohC,YAAY9/B,KAAM,gBAAiBE,GAAI,SAAS,WACpD,EAAK6E,MAAM8D,QAAS,iCAGpB,EAAKw3B,eACHl4B,YAAa,iCACb7B,SAAU,+BAIZ,IACC,EAAKyuB,QAAQlqB,SAAU2pB,EAAO0F,WAAW,CAC9Czf,OAAS,SAEH,MAAQjG,GACT,EAAKzP,MAAMuW,IAAKkZ,EAAO0F,WAAW,CACvCzf,OAAS,aAKN/b,KAAKo7B,aAAetF,EAEpBA,EAAOt0B,GAAI,QAAQ,WAClB,EAAK6E,MAAM8D,QAAS,6B,mBAvrFxBzH,IAysFN,SAAUzB,GAGN,IAAI8sC,EAAW9sC,EAAE2T,GAAGs1B,QAAQ8D,IAAIC,QAAS,oBAGzChtC,EAAEitC,OAAQH,EAASr/B,SAAU,CACzB66B,uBAAwB,KAI5B,IAAI4E,EAAiBltC,EAAE2T,GAAGs1B,QAAQ8D,IAAIC,QAAS,2BAG3CG,EAAwBD,EAAe9hB,UAAUpsB,OAErDkuC,EAAe9hB,UAAUpsB,OAAS,SAAWouC,GAEzC,IAAIC,EAAYF,EAAsBn5B,MAAOjV,KAAMqV,MAAMgX,UAAU5X,MAAMQ,MAAOC,YAIhF,OAHAlV,KAAKuuC,QAAQ7K,KAAM,cAAe1jC,KAAKkD,QAAQyuB,IAAK,2BAC1D3xB,KAAKuuC,QAAQ3mC,SAAU5H,KAAKkD,QAAQyuB,IAAK,gBAE5B2c,GAtBf,CAwBIp/B,OAAOmmB,S,sSC5tEX,QAjiBMmZ,WACL,WAAa7rC,EAAUs/B,EAAewM,I,4FAAc,SACnDzuC,KAAK2C,SAAaA,EAClB3C,KAAKiiC,cAAiBA,EACtBjiC,KAAKyuC,aAAgBA,EAGrBzuC,KAAKC,S,2CAGN,WAECD,KAAKkC,WAAajB,GAAAA,CAAE,4BACpBjB,KAAKsM,MAAQtM,KAAKkC,WAElBlC,KAAKwM,eACLxM,KAAK0uC,kBACL1uC,KAAK2uC,yCAEC3uC,KAAKyuC,aAAaG,YAAa5uC,KAAKkC,c,0BAG3C,WACC,IAAM2sC,EAAU5tC,GAAAA,CAAE,8KAAD,OAKQ,WAAjBjB,KAAK2C,SAAwBhD,iBAAiBwB,KAAKgJ,QAAQmmB,OAAS3wB,iBAAiBwB,KAAKkJ,OAAOimB,OALxF,+EAaP/mB,EAAe,IAAIyD,EAAAA,EAAgBhN,KAAK2C,UAC5CksC,EAAQ7sC,OAAQuH,GAGhB,IAAIulC,EAAY,IAAI7hC,EAAAA,EAAgBjN,KAAKiiC,eACzC4M,EAAQ7sC,OAAQ8sC,GAGhB,IAAIC,EAAkB,IAAI5hC,EAAAA,EAAenN,KAAKiiC,eAC9C4M,EAAQvtC,KAAM,eAAgBP,QAASguC,GAGvC/uC,KAAKkC,WAAWF,OAAQ6sC,K,6BAG/B,WAAiB,IACZpiC,EAAOuiC,EADK,OAIM,WAAjBhvC,KAAK2C,UACT8J,GAAoBwiC,EAAAA,EAAAA,IAAuBjvC,KAAKiiC,cAAe,YAC/D+M,EAAqBrvC,iBAAiBwB,KAAKgJ,QAAQqyB,OAC9B78B,iBAAiBwB,KAAKw3B,QAAQuW,gBAEzB,UAAjBlvC,KAAK2C,WACd8J,GAAqBwiC,EAAAA,EAAAA,IAAuBjvC,KAAKiiC,cAAe,WAChE+M,EAAqBrvC,iBAAiBwB,KAAKkJ,OAAOmyB,OAC7B78B,iBAAiBwB,KAAKw3B,QAAQwW,eAIpD,IAAMjtC,EAAejB,GAAAA,CAAE,0ZAAD,OASC+tC,EATD,+kBAkBZrvC,iBAAiBwB,KAAKg9B,UAlBV,6HA4BhBp8B,EAAoBG,EAAWZ,KAAM,iBACrC8tC,EAAoBltC,EAAWZ,KAAM,wBACrC+tC,EAAoBntC,EAAWZ,KAAM,qCACrCguC,EAAoB,CACnBlpB,UAAWlkB,EAAWZ,KAAM,gCAC5BiuC,UAAWrtC,EAAWZ,KAAM,iDAC5BkuC,YAAa,CACZppB,UAAWlkB,EAAWZ,KAAM,mDAC5BmuC,KAAWvtC,EAAWZ,KAAM,6CAE7B68B,UAAWj8B,EAAWZ,KAAM,4CAInC,GAAKmL,EAAMijC,kBAAmB,CAI7B,MAEKxkC,EAAAA,EAAAA,IAAWvL,iBAAiBiO,KAAUjO,iBAAiBiO,IAEf,aAAhCjO,iBAAiBC,OAAOgB,MACpC,CACA,IAAM+uC,EAA+B,GAC/BC,EAA+B,GAErCnjC,EAAM8iC,UAAUppC,SAAQ,SAAE6F,GACpBA,EAAK6jC,cACTF,EAAyBnsC,KAAMwI,GAG/B4jC,EAA6BpsC,KAAMwI,MAIrCS,EAAM8iC,UAAN,UAAuBK,EAAiCD,GAIzDL,EAAWC,UAAUvtC,OAAQyK,EAAM8iC,UAAU5pC,KAAI,SAAEqG,GAElD,IAAM8jC,EAAQ9jC,EAAK+jC,OAIbC,KAED9kC,EAAAA,EAAAA,IAAWvL,iBAAiBiO,MAAUjO,iBAAiBiO,KAEZ,aAAhCjO,iBAAiBC,OAAOgB,MAExBoL,EAAK6jC,cAIfvjC,EAAQrL,GAAAA,CAAE,sDAAD,OAC4B6uC,EAAQ,kCAAoC,GADxE,YACgF9jC,EAAK6jC,cAAgB,4CAA8C,GADnJ,YAC2JG,EAA4B,wCAA0C,GADjO,uCAEGhkC,EAAKikC,mBAAmB5lB,cAAc0M,QAAS,WAAY,IAF9D,4FAITiZ,EAA4B,kDAAoD,GAJvE,4BAKTE,EAAAA,EAAAA,IAAoBlkC,EAAKikC,mBAAoB,qDAAsD,WAL1F,YAK2GH,EAAQ,kDAAH,OAAsDnwC,iBAAiBwB,KAAKw3B,QAAQC,IAApF,WAAoG,GALpN,gHAQuB,aAAhCj5B,iBAAiBC,OAAOgB,OAAyBjB,iBAAiBC,OAAOsB,kBAAoB8K,EAAK6jC,cAAlG,iEAA6KlwC,iBAAiBwB,KAAK49B,cAAnM,WAA6N,GARpN,qDAkRf,OApQAzyB,EAAM9K,GAAI,SAAS,WAElB4tC,EAAcxnC,SAAU,gCAGxB0E,EAAM1E,SAAU,uCAGhB,IAAMuoC,EAAkB,CAAE,UAAW,UAAW7Z,SAAU,EAAK3zB,UAAvC,kBAAgE,EAAKA,UAAc,GAIvGytC,EAAc,GAClBnvC,IAAAA,KAAQ+K,EAAK9I,SAAS,SAAE2C,EAAO2qB,IACzBtlB,EAAAA,EAAAA,IAAWslB,EAAO6f,iBACtBD,EAAa5f,EAAO8f,aAAgB9f,EAAO6f,kBAK3B,aAAbrkC,EAAKpL,OAETwvC,EAAYG,sBAAsBrlC,EAAAA,EAAAA,IAAWc,EAAKukC,sBAAwBvkC,EAAKukC,qBAIhF,IAwGKnY,EAxGCoY,EAAc,SAAEC,EAAWC,IAChC7oC,EAAAA,EAAAA,IAAU,MAAO,CAChB2D,aAAc7L,iBAAiBC,OAAOmI,GACtCsC,OAAc8lC,EACd1kC,UAAcO,EAAKf,KACnBS,aAAczK,IAAAA,OAAU,GAAImvC,EAAa,CACxCzkC,iBAAkBhM,iBAAiBiM,aAAc,EAAKq2B,eAAgB99B,KACtE2H,SAAcE,EAAKF,aAElB,SAAE9D,GAwBJ,GArBA,IAAI2oC,EAAAA,EACJ,IAAI7uC,EAAAA,GAoBCoJ,EAAAA,EAAAA,IAAWlD,EAAS+D,SAAW,CAEnC,IAAM6kC,GAAWjwC,EAAAA,EAAAA,IAAgB,OAAQ,CACxCoH,GAAIC,EAAS+D,UAMEpM,iBAAiBC,OAAO6M,MAAOzE,EAAS+D,SAAU5L,QAK1DR,iBAAiBC,OAAO24B,QAE9BqY,EAAS5kC,KACP1K,KAAM,uCACNm4B,KAAM,WAAW,GACjBtvB,QAAS,UAMZymC,EAAS5kC,KACP1K,KAAM,sDACN2K,QACA9B,QAAS,UAKRe,EAAAA,EAAAA,IAAWulC,IACfA,EAAWzoC,MAEV,SAAEA,GACJnH,QAAQC,IAAK,qCAGbsuC,EAAc3lC,YAAa,gCAG3B6C,EAAM7C,YAAa,uCAGM,GAApBzB,EAAS6oC,SACb,IAAIF,EAAAA,GAIAzlC,EAAAA,EAAAA,IAAWwlC,IACfA,EAAQ1oC,OAMX,GAEkB,UAAjB,EAAKrF,UAE8B,aAAhChD,iBAAiBC,OAAOgB,OAItBjB,iBAAiBC,OAAOsB,kBAE1B8K,EAAK6jC,cAYR,GANAT,EAAc3lC,YAAa,gCAG3B6C,EAAM7C,YAAa,wCAGZyB,EAAAA,EAAAA,IAAWvL,iBAAiBiO,KAAUjO,iBAAiBiO,GA4CzD,CAGJ,IAAM0qB,EAA6B34B,iBAAiBC,OAAO24B,QAE3DH,EAAQ,IAAII,EAAAA,EAAM,CACXvvB,MAAO,GAAF,OAAQtJ,iBAAiBwB,KAAKtB,aAAa44B,cAAcpuB,OAAOquB,QAAQzvB,MAAxE,gGAAuKtJ,iBAAiBwB,KAAKw3B,QAAQC,IAArM,WACL/iB,QAAS,0HAAF,OAEkClW,iBAAiBwB,KAAKtB,aAAa44B,cAAcpuB,OAAOquB,QAAQ7iB,QAAQgjB,cAF1G,6GAIPqX,EAAAA,EAAAA,IAAoBlkC,EAAKikC,mBAAoB,SAAU,WAJhD,6JAOkBtwC,iBAAiBwB,KAAKtB,aAAa44B,cAAcpuB,OAAOquB,QAAQ7iB,QAAQxQ,YAP1F,kFAWP0zB,QAAS,CACLvxB,OAAS7H,iBAAiBwB,KAAKqG,OAC/ByxB,QAASt5B,iBAAiBwB,KAAKtB,aAAa44B,cAAcpuB,OAAOquB,QAAQQ,gBAE9E,CACFC,KAAM,WAGDC,UAAU,CACZC,UAAW,WACV,IAAIC,EAAgBlB,EAAMmB,cAG1BD,EAAclB,MAAMoB,IAAIT,QAAQE,QAAQrxB,SAAU,oBAAqB6xB,KAAM,YAAY,IAGzFC,EAAAA,EAAAA,KAEC,GAEA,SAAE1xB,GAEEwoC,GAAY,WAEXpY,EAAMrI,aAGJ,WAGLuJ,EAAclB,MAAMoB,IAAIT,QAAQE,QAAQxvB,YAAa,oBAAqBgwB,KAAM,YAAY,SAI9F,SAAEzxB,GAEDsxB,EAAclB,MAAMoB,IAAIT,QAAQE,QAAQxvB,YAAa,oBAAqBgwB,KAAM,YAAY,MAK/FnB,GACJ34B,iBAAiBC,OAAO+5B,QAAQC,aAAaztB,UAAU,IAGnD2tB,SAAU,WAET1B,EAAMrI,kBA5GdqI,EAAQ,IAAII,EAAAA,EAAM,CACXvvB,MAAO,GAAF,OAAQtJ,iBAAiBwB,KAAKtB,aAAa44B,cAAcpuB,OAAO2vB,UAAU/wB,MAA1E,0DAAmItJ,iBAAiBwB,KAAKw3B,QAAQC,IAAjK,WACL/iB,QAAS,8HAAF,OAEkClW,iBAAiBwB,KAAKtB,aAAa44B,cAAcpuB,OAAO2vB,UAAUnkB,QAAQgjB,cAF5G,6GAIPqX,EAAAA,EAAAA,IAAoBlkC,EAAKikC,mBAAoB,SAAU,WAJhD,2LAQmB3nC,EAAAA,EAAAA,IAAU3I,iBAAiBwB,KAAKtB,aAAa44B,cAAcpuB,OAAO2vB,UAAUnkB,QAAQxQ,YAAa,CAAE1F,iBAAiBwB,KAAK84B,sBAR5I,sBAQkL5wB,EAAAA,EAAAA,IAAoB,uCAAwC,CAAE,WAAgB,oBAAqB,WAAc,iBAAkB,aAAgB,gBAAiB,YAAe,uBARrW,6BASe1J,iBAAiBwB,KAAK+4B,WATrC,wLAYmBv6B,iBAAiBwB,KAAKtB,aAAa44B,cAAcpuB,OAAO2vB,UAAUnkB,QAAQskB,aAZ7F,sBAYwH9wB,EAAAA,EAAAA,IAAoB,6EAA8E,CAAE,WAAc,oBAAqB,WAAc,iBAAkB,YAAe,kCAZ9S,6BAae1J,iBAAiBwB,KAAKi5B,UAbrC,2KAkBPrB,QAAS,CACLvxB,OAAS7H,iBAAiBwB,KAAKqG,OAC/ByxB,QAASt5B,iBAAiBwB,KAAKtB,aAAa44B,cAAcpuB,OAAO2vB,UAAUd,gBAEhF,CACFC,KAAM,WAGDC,UAAU,CACZC,UAAW,WAEVjB,EAAMrI,WAGNsK,EAAAA,EAAAA,KAAchxB,EAAAA,EAAAA,IAAoB,uCAAwC,CAAE,WAAgB,oBAAqB,WAAc,iBAAkB,aAAgB,gBAAiB,YAAe,yBAGlMywB,SAAU,WAET1B,EAAMrI,kBA4EfygB,OAKKlkC,WAKRgjC,EAAWC,UAAU75B,SAIjBjJ,EAAMqkC,oBAEVxB,EAAWE,YAAYC,KAAKztC,OAAQyK,EAAM+iC,YAAY7pC,KAAI,SAAEqG,GAG3D,IAAM+kC,EAAa,oBAAH,OAAwB,EAAK9O,cAA7B,YAAgD,EAAKA,cAArD,aAAwEiO,EAAAA,EAAAA,IAAoBlkC,EAAK7H,KAAM,GAAI,IAAKkmB,cAAc0M,QAAS,WAAY,MAqBnK,OAlBc91B,GAAAA,CAAE,wBAAD,QACFoI,EAAAA,EAAAA,IAAoB,uCAAwC,CACnE,WAAgB,oBAChB,WAAgB,iBAChB,aAAgB,gBAChB,YAAgB0nC,IALP,oJASG/kC,EAAK7H,KAAKkmB,cAAc0M,QAAS,WAAY,IAThD,4JAYTmZ,EAAAA,EAAAA,IAAoBlkC,EAAK7H,KAAM,qDAAsD,WAZ5E,0EAasCxE,iBAAiBwB,KAAKw3B,QAAQC,IAbpE,8DAuBhB0W,EAAWE,YAAYppB,UAAU1Q,SAIlC,IAAMs7B,EAAS1B,EAAWlpB,UAAU9kB,KAAM,4EAGpC+tC,EAAa7tC,GAAI,SAAS,WAEtB,IAAMs+B,EAAQuP,EAAazyB,MAAMyN,cAAc0M,QAAS,WAAY,IAGpEia,EAAOvnC,YAAa,qEAGpB,IAAIy2B,GAAa,GAGV36B,EAAAA,EAAAA,IAASu6B,KAExBI,GAAa,EAEbj/B,IAAAA,KAAQ+vC,GAAQ,SAAEnrC,EAAOmG,GACxB,IAAIM,EAAQrL,GAAAA,CAAG+K,IAGgB,IAFnBM,EAAM1K,KAAM,UAEd46B,OAAQsD,IACdxzB,EAAM1E,SAAU,oCAGhBs4B,GAAa,GAGb5zB,EAAM1E,SAAU,wCAMb0nC,EAAWnR,UAAU10B,YAAa,qEAE3By2B,EAIfoP,EAAWnR,UAAUv2B,SAAU,oCAH/B0nC,EAAWnR,UAAUv2B,SAAU,uCAQ3B7F,EAAkBC,OAAQhC,KAAKixC,sBAG/BjxC,KAAKkC,WAAWF,OAAQE,K,gCAG/B,WAAoB,WACfqF,EAAgBtG,GAAAA,CAAG,SAAU,CAAE,MAAS,+BAAgCmC,KAAMzD,iBAAiBwB,KAAKqG,QAMxG,OAJAD,EAAc/F,GAAI,SAAS,WAC1B,IAAI8I,EAAyB,EAAK3H,SAAU,EAAK2J,UAG3C/E,I,oDAGR,YAGO8B,EAAAA,EAAAA,IAAoB6F,OAAOgiC,SAASC,KAAM,CACtCC,0BAA8B,GAC9BC,6BAA8B,GAC9BC,kCAAmC,IACpC,CACCC,UAAU,EACVC,SAAS,S,mBA5hBfhD,G,gRCitBN,QAttBMlkC,WACF,WAAa3H,EAAU8rC,I,4FAAc,SACjCzuC,KAAK2C,SAAeA,EACpB3C,KAAKyuC,aAAeA,EACpBzuC,KAAK4L,aAAe,GAGpB5L,KAAKC,SAGLD,KAAKyxC,sC,2CAGT,WAEI,IAAIrrB,EAAYnlB,GAAAA,CAAG,SAAU,CAAE,MAAS,SACxCjB,KAAKsM,MAAW8Z,EAEhB,IAAIsrB,EAAe1xC,KAAKwM,eACpBmlC,EAAe1wC,GAAAA,CAAG,SAAU,CAAC,MAAS,kBACtC2K,EAAe5L,KAAK4xC,qBACpBC,EAAe7xC,KAAK8xC,iCAUxB,GARA1rB,EAAUpkB,OAAQ0vC,GAElBC,EAAY3vC,OAAQ4J,GACpB+lC,EAAY3vC,OAAQ6vC,GAEpBzrB,EAAUpkB,OAAQ2vC,IAGbzmC,EAAAA,EAAAA,IAAWlL,KAAKyuC,cAEjBzuC,KAAKyuC,aAAaG,YAAaxoB,OAE9B,CAED,IAAI2rB,GAAWpxC,EAAAA,EAAAA,IAAgB,WAAY,CACvCC,KAAMZ,KAAK2C,WAGO,WAAjB3C,KAAK2C,WAEDovC,EAAShoC,OAAS,EACnBqc,EAAUmX,YAAawU,IAITpxC,EAAAA,EAAAA,IAAgB,UAAW,CACrCC,KAAMZ,KAAK2C,WAGPX,OAAQokB,IAIF,UAAjBpmB,KAAK2C,YAEMhC,EAAAA,EAAAA,IAAgB,QAAS,CACjCC,KAAMZ,KAAK2C,WAGJoH,OAAS,EAEhBqc,EAAU6J,aAAchvB,GAAAA,CAAE,qBAKZN,EAAAA,EAAAA,IAAgB,UAAW,CACrCC,KAAMZ,KAAK2C,WAGcrB,KAAM,qBACpBstC,YAAaxoB,O,0BAM5C,WACI,IAAIsrB,EAAUzwC,GAAAA,CAAG,UAEby9B,EAAiBz9B,GAAAA,CAAG,SAAU,CAAE,MAAS,cACzC+wC,EAAiB/wC,GAAAA,CAAG,SAAU,CAAE,MAAS,yBACzCgxC,EAAiBhxC,GAAAA,CAAG,SAAU,CAAE,MAAS,yBACzCgI,EAAiBhI,GAAAA,CAAG,SAAU,CAAE,MAAS,6BAA8BmC,KAAMzD,iBAAiBwB,KAAK0K,YAAYykB,QAE/G7iB,EAAiB,IAAIT,EAAAA,EAAgBhN,KAAK2C,UAS9C,OARA+uC,EAAO1vC,OAAQyL,GAEfikC,EAAO1vC,OAAQ08B,GAEfuT,EAAajwC,OAAQiH,GACrB+oC,EAAehwC,OAAQiwC,GACvBP,EAAO1vC,OAAQgwC,GAERN,I,gCAGX,WAAoB,WACZtrB,EAAenlB,GAAAA,CAAG,SAAU,CAAE,MAAS,sBAwF3C,OArFAjB,KAAKkyC,6BAA8BlyC,KAAK2C,UAGxC3C,KAAKmyC,iCAGLnyC,KAAK4L,aAAazF,SAAQ,SAAE0F,GAExB,IAAMo2B,EAAgBp2B,EAAY9D,GAG9BqqC,EAAqB,EAAKC,kBAAmBpQ,EAAep2B,GAG5DymC,EAAU,WACV,IAAI9D,EAAyB,EAAK7rC,SAAUs/B,EAAe,EAAK31B,QAKpE,IAAKpB,EAAAA,EAAAA,IAAWW,EAAY0mC,WAExB,OAAS,EAAKC,4BAA6B3mC,IAEvC,KAAK,EACDymC,EAAU,YAENjpC,EAAAA,EAAAA,IAAoB6F,OAAOgiC,SAASC,KAAM,CACtCC,0BAA2B,EAC3BC,6BAA8BpP,EAC9BqP,kCAAmC,EAAK3uC,UACzC,CACC4uC,UAAU,EACVC,SAAS,IAIb,EAAKiB,wBAAyBxQ,EAAep2B,EAAa,CACtD6mC,YAAa,KAIrB,MAGJ,KAAK,EAEDJ,EAAU,YAENjpC,EAAAA,EAAAA,IAAoB6F,OAAOgiC,SAASC,KAAM,CACtCC,0BAA2B,EAC3BC,6BAA8BpP,EAC9BqP,kCAAmC,EAAK3uC,UACzC,CACC4uC,UAAU,EACVC,SAAS,IAIb,EAAKiB,wBAAyBxQ,EAAep2B,EAAa,CACtD6mC,YAAa,KAgBjCN,EAAmB5wC,GAAI,SAAS,WAC5B8wC,OAIJlsB,EAAUpkB,OAAQowC,MAIfhsB,I,qCAGX,SAAyB6b,EAAep2B,GAA2B,IAAd3I,EAAc,uDAAJ,GAE3DA,EAAUuC,OAAOuY,OAAO,CACpB00B,YAAa,GACdxvC,GAGH,IAAMyvC,GAAgBtpC,EAAAA,EAAAA,IAAoB1J,iBAAiBgzC,cAAe,CACtEC,cAAcvpC,EAAAA,EAAAA,IAAoB1J,iBAAiBkzC,aAAc,CAC7DC,gBAAiB,MAKrBC,EAAiB,GAIjBA,GADC7nC,EAAAA,EAAAA,IAAWvL,iBAAiBiO,KAAQjO,iBAAiBiO,GACrC,gEAAH,OACoC1K,EAAQwvC,YAAc,EAAI,4CAA8C,GAD5G,yZAOyBpqC,EAAAA,EAAAA,IAAU3I,iBAAiBwB,KAAK6xC,gBAAgBC,sBAAsBC,SAAU,CAAEvzC,iBAAiBwB,KAAK84B,sBAPjI,kTAYKt6B,iBAAiBwB,KAAK6xC,gBAAgBC,sBAAsBE,SAZjE,8JAmBG,gEAAH,OACoCjwC,EAAQwvC,YAAc,EAAI,4CAA8C,GAD5G,uZAOyBpqC,EAAAA,EAAAA,IAAU3I,iBAAiBwB,KAAK6xC,gBAAgBC,sBAAsBG,MAAO,CAAEzzC,iBAAiBwB,KAAKkyC,mBAP9H,ySAYK1zC,iBAAiBwB,KAAK6xC,gBAAgBC,sBAAsBK,OAZjE,8JAoBlB,IAAMlb,EAAQ,IAAII,EAAAA,EAAM,CACpBvvB,MAAO,GAAF,OAAQtJ,iBAAiBwB,KAAK6xC,gBAAgBC,sBAAsBM,oBACzE19B,QAAS,kKAAF,QAGQvN,EAAAA,EAAAA,IAAU3I,iBAAiBwB,KAAK6xC,gBAAgBC,sBAAsBO,YAAa,CAAEtwC,EAAQwvC,YAAc,EAAG,MAHtH,qNAOYK,EAPZ,oFAQuD7vC,EAAQwvC,YAAc,EAAI,4CAA8C,GAR/H,YAQ8J,GAAvBxvC,EAAQwvC,YAAmB,yDAA2D,GAR7N,ydAc4CpqC,EAAAA,EAAAA,IAAU3I,iBAAiBwB,KAAK6xC,gBAAgBC,sBAAsBQ,MAAO,CAAE,kEAAmEC,EAAAA,EAAAA,IAAoBzR,GAAgBhsB,KAAK6iB,UAAYjtB,EAAY1H,KAAO,UAAWxE,iBAAiBwB,KAAKkyC,mBAdvS,iOAkBiD,GAAvBnwC,EAAQwvC,YAAmB,gBAAkB/yC,iBAAiBwB,KAAK6xC,gBAAgBC,sBAAsBU,iBAAmB,IAAM,GAlB5J,4MAoB4Bh0C,iBAAiBwB,KAAK6xC,gBAAgBC,sBAAsBW,eApBxF,uUA6BP7a,QAAS,CACLvxB,OAAS7H,iBAAiBwB,KAAKqG,OAC/ByxB,QAAS,OAEd,CACCE,KAAM,gBAGVf,EAAMgB,UAAU,CACZU,SAAU,WAEN1B,EAAMrI,UAGN/a,YAAW,YACP3L,EAAAA,EAAAA,IAAoB6F,OAAOgiC,SAASC,KAAM,CACtCC,0BAA8B,GAC9BC,6BAA8B,GAC9BC,kCAAmC,IACpC,CACCC,UAAU,EACVC,SAAS,MAEd,OAKXpZ,EAAMmB,cAAcnB,MAAMhS,UAAU9kB,KAAM,sCACrCE,GAAI,SAAS,SAAEC,GAEZA,EAAM8d,iBAGN9d,EAAME,cAAc8T,UACfrL,IAAK,2DAGQypC,EAAAA,EAAAA,IAAmB,CACjCC,IAAOnB,EACPx4B,EAAO,IACPX,EAAO,IACP1H,QAAS,WACLo/B,SAAS6C,eAMzB3b,EAAMmB,cAAcnB,MAAMhS,UAAU9kB,KAAM,+CACrCE,GAAI,SAAS,SAAEC,GAEZA,EAAM8d,iBAGN9d,EAAME,cAAc8T,UACfrL,IAAK,2DAGQypC,EAAAA,EAAAA,IAAmB,CACjCC,IAAOn0C,iBAAiBq0C,WACxB75B,EAAO,IACPX,EAAO,IACP1H,QAAS,WACLo/B,SAAS6C,eAMG,GAAvB7wC,EAAQwvC,aACTta,EAAMmB,cAAcnB,MAAMhS,UAAU9kB,KAAM,8CACrCE,GAAI,SAAS,SAAEC,GAEZA,EAAM8d,iBAGN9d,EAAME,cAAc8T,UACfrL,IAAK,2DAGQypC,EAAAA,EAAAA,IAAmB,CACjCC,KAAOzqC,EAAAA,EAAAA,IAAoBwC,EAAYooC,aAAc,CACjDC,QAAS,EACTC,mBAAoB,IAExBh6B,EAAO,IACPX,EAAO,IACP1H,QAAS,WACLo/B,SAAS6C,iB,iDAOjC,WAEI,GAC4D,IAAxDvlC,EAAAA,EAAAA,IAAiB,KAAM,+BACpBA,EAAAA,EAAAA,IAAiB,KAAM,sCAAyCxO,KAAK2C,SAC3E,CAEG,IAAMs/B,GAAgBzzB,EAAAA,EAAAA,IAAiB,KAAM,gCAG7C,KAAOjJ,EAAAA,EAAAA,IAAS08B,GAAiB,CAE7B,IAAMp2B,EAAclM,iBAAiBiM,aAAcq2B,GAGnD,IAAK/2B,EAAAA,EAAAA,IAAWW,KAIRX,EAAAA,EAAAA,IAAWW,EAAY0mC,WAGvB,OAASvyC,KAAKwyC,4BAA6B3mC,IAEvC,KAAK,EAGD7L,KAAKyyC,wBAAyBxQ,EAAep2B,EAAa,CACtD6mC,YAAa,IAGjB,MAGJ,KAAK,EAED1yC,KAAKyyC,wBAAyBxQ,EAAep2B,EAAa,CACtD6mC,YAAa,IAGjB,MAGJ,KAAK,EAED,IAAIlE,EAAyBxuC,KAAK2C,SAAUs/B,EAAejiC,KAAKsM,Y,+BAU5F,SAAmB21B,EAAep2B,GAC9B,IAsGIuoC,EAtGAhuB,EAAcnlB,GAAAA,CAAG,SAAU,CAAE,MAAS,qBACtCozC,EAAcpzC,GAAAA,CAAG,SAAU,CAAE,MAAS,2BACtCkD,EAAclD,GAAAA,CAAG,SAAU,CAAE,MAAS,2BA0H1C,OAvHK4K,EAAYyoC,YAEbluB,EAAUxe,SAAU,yBAGpBwe,EAAUpkB,OAAQf,GAAAA,CAAE,0DAAD,OACyBtB,iBAAiBwB,KAAKw3B,QAAQC,IADvD,2BAMhB/sB,EAAY0oC,aASVrpC,EAAAA,EAAAA,IAAWW,EAAY0mC,WAEnB5yC,iBAAiB60C,oBAGX3oC,EAAY0mC,UAcfnsB,EAAUxe,SAAU,gCAZpBwe,EAAUxe,SAAU,yFAGpBwe,EAAUsd,KAAM,eAAep7B,EAAAA,EAAAA,IAAU3I,iBAAiBwB,KAAK6xC,gBAAgByB,wBAAyB,CAAE5oC,EAAY1H,QAGtHiiB,EAAUpkB,OAAQf,GAAAA,CAAE,uGAAD,OAC0DtB,iBAAiBwB,KAAK6xC,gBAAgB0B,aADhG,wCAWvBtuB,EAAUxe,SAAU,wFAGpBwe,EAAUsd,KAAM,eAAep7B,EAAAA,EAAAA,IAAU3I,iBAAiBwB,KAAK6xC,gBAAgByB,wBAAyB,CAAE5oC,EAAY1H,QAGtHiiB,EAAUpkB,OAAQf,GAAAA,CAAE,mGAAD,OAC0DtB,iBAAiBwB,KAAK6xC,gBAAgB0B,aADhG,mCAQD,UAAjB10C,KAAK2C,UAKEuI,EAAAA,EAAAA,IAAWvL,iBAAiBiO,KAAUjO,iBAAiBiO,IAExB,aAAhCjO,iBAAiBC,OAAOgB,KAqB3BwlB,EAAUxe,SAAU,+BAd0B,GAJPiE,EAAYY,MAAMgB,QAAQ8hC,UAAU5hC,QAAO,SAAEtD,GAChF,OAA+B,GAAxBA,EAAOwlC,iBAGkB9lC,QAEhCqc,EAAUxe,SAAU,kFAGpBwe,EAAUsd,KAAM,cAAe/jC,iBAAiBwB,KAAK6xC,gBAAgB2B,4BAIrEvuB,EAAUxe,SAAU,+BAU5Bwe,EAAUxe,SAAU,gCA9E5Bwe,EAAUxe,SAAU,4EAGpBwe,EAAUsd,KAAM,eAAep7B,EAAAA,EAAAA,IAAU3I,iBAAiBwB,KAAKw3B,QAAQic,YAAa,CAAEj1C,iBAAiBwB,KAAK84B,yBAoF3G/uB,EAAAA,EAAAA,IAAWW,EAAYgpC,UACxBT,EAAWnzC,GAAAA,CAAE,aAAD,OAAgB4K,EAAYgpC,SAA5B,kBAAgDhpC,EAAY1H,KAA5D,QAGN+G,EAAAA,EAAAA,IAAWW,EAAYipC,WAAa5pC,EAAAA,EAAAA,IAAWW,EAAYkpC,WACjEX,EAAWnzC,GAAAA,CAAE,aAAD,OAAgB4K,EAAYipC,QAA5B,sBAAkDxsC,EAAAA,EAAAA,IAAU,eAAgB,CAAEuD,EAAYipC,QAASjpC,EAAYkpC,UAA/G,kBAAqIlpC,EAAY1H,KAAjJ,QAMhBA,EAAKf,KAAMyI,EAAY1H,MAGvBkwC,EAAKryC,OAAQoyC,GACbhuB,EAAUpkB,OAAQqyC,GAClBjuB,EAAUpkB,OAAQmC,GAGXiiB,I,4CAGX,WACI,OAAOnlB,GAAAA,CAAE,0EAAD,OAEmC,aAAhCtB,iBAAiBC,OAAOgB,KAAsBjB,iBAAiBwB,KAAK0K,YAAYmpC,eAAiBr1C,iBAAiBwB,KAAK0K,YAAYgmC,aAFtI,sBAEiKxoC,EAAAA,EAAAA,IAAoB,4CAA6C,CAC1N,WAAe,oBACf,WAAe,wBACf,YAAe,+BALvB,6BAM6B1J,iBAAiBwB,KAAKi5B,UANnD,kG,0CAWZ,SAA8Bz3B,GAAU,WAEpC,GAAK,CAAE,UAAW,UAAW2zB,SAAU3zB,GAAY,CAE/C,IAAMiJ,EAAe3K,IAAAA,QAAU,EAAM,GAAItB,iBAAiBiM,cAG1DnG,OAAOwvC,QAASrpC,GAAezF,SAAQ,YAAoC,IASnEsG,E,IATmE,G,EAAA,E,4CAAA,I,gxBAAjCw1B,EAAiC,KAAlBp2B,EAAkB,KAEnEqpC,GAAW,EAEXZ,GAAY,EAEZC,GAAc,EAKD,WAAZ5xC,GAIDuyC,GAFAzoC,GAAc0oC,EAAAA,EAAAA,IAAuBtpC,EAAYY,MAAM2oC,WAEnCC,YACpBd,EAAc9nC,EAAMijC,kBACpB4E,EAAc7nC,EAAM6oC,gBAEF,UAAZ3yC,IAINuyC,GAFAzoC,GAAc0oC,EAAAA,EAAAA,IAAuBtpC,EAAYY,MAAMgB,UAEnC8nC,WACpBhB,EAAc9nC,EAAMijC,kBACpB4E,EAAc7nC,EAAM6oC,gBAInBJ,GAED,EAAKtpC,aAAapI,KAAMvC,IAAAA,OAAS,GAAI4K,EAAa,CAC9C9D,GAAak6B,EACbsS,YAAaA,EACbD,UAAaA,W,4CAOjC,WAEIt0C,KAAK4L,cAAe4pC,EAAAA,EAAAA,IAAkCx1C,KAAK4L,aAAc,U,yCAgB7E,WAA+C,IACvC9L,EADqB+L,EAAkB,uDAAJ,GAqFvC,SA3EcX,EAAAA,EAAAA,IAAWvL,iBAAiBiO,MAC3B1C,EAAAA,EAAAA,IAAWvL,iBAAiBiO,MAAUjO,iBAAiBiO,MAI5DjO,iBAAiB60C,sBAUftpC,EAAAA,EAAAA,IAAWvL,iBAAiBiO,KAAQjO,iBAAiBiO,KAIvDjO,iBAAiB60C,sBAGjB70C,iBAAiB81C,mBAKvB31C,EAAO,MASGoL,EAAAA,EAAAA,IAAWvL,iBAAiBiO,MAC3B1C,EAAAA,EAAAA,IAAWvL,iBAAiBiO,MAAUjO,iBAAiBiO,KAI9DjO,iBAAiB60C,sBASbtpC,EAAAA,EAAAA,IAAWvL,iBAAiBiO,KAAQjO,iBAAiBiO,KAKrDjO,iBAAiB60C,qBAGjB70C,iBAAiB81C,uBAarB31C,EARG+L,EAAY0mC,UAQR,EALA,GASRzyC,O,mBAltBTwK,I,iPC4BN,QA1CM2C,WACL,WAAaP,GAGZ,O,4FAH6B,SAC7B1M,KAAK0M,gBAAkBA,EAEhB1M,KAAK01C,iB,mDAWV,WACC,IAAItvB,EAAcnlB,GAAAA,CAAG,SAAU,CAAE,MAAS,cAE1C,IAAKiK,EAAAA,EAAAA,IAAWvL,iBAAiBiM,aAAc5L,KAAK0M,kBAAqB,CAErE,IAGI1C,EAHA6B,EAAclM,iBAAiBiM,aAAc5L,KAAK0M,kBAMvDxB,EAAAA,EAAAA,IAAWW,EAAYgpC,UAC3B7qC,EAAQ/I,GAAAA,CAAE,aAAD,OAAgB4K,EAAYgpC,SAA5B,kBAAgDhpC,EAAY1H,KAA5D,QAGA+G,EAAAA,EAAAA,IAAWW,EAAYipC,WAAa5pC,EAAAA,EAAAA,IAAWW,EAAYkpC,WACpE/qC,EAAQ/I,GAAAA,CAAE,aAAD,OAAgB4K,EAAYipC,QAA5B,sBAAkDxsC,EAAAA,EAAAA,IAAU,eAAgB,CAAEuD,EAAYipC,QAASjpC,EAAYkpC,UAA/G,kBAAqIlpC,EAAY1H,KAAjJ,QAGJiiB,EAAUpkB,OAAQgI,GAInB,OAAOoc,O,mBAtCTnZ,I,2QC0ON,QAlOMD,WASF,WAAarK,EAAUs/B,EAAer1B,EAAUC,GAO5C,O,4FAPoD,SACpD7M,KAAK2C,SAAgBA,EACrB3C,KAAKiiC,cAAgBA,EACrBjiC,KAAK4M,SAAgBA,EACrB5M,KAAK6M,OAAgBA,EACrB7M,KAAKgM,KAAgBrM,iBAAiBC,OAAO6M,MAAOI,GAE7C7M,KAAK21C,oB,sDAGhB,WAAmB,WAEXvvB,EAAgBnlB,GAAAA,CAAG,SAAU,CAAE,MAAS,iBACxC20C,EAAgB30C,GAAAA,CAAG,SAAU,CAAE,MAAS,sBACxC40C,EAAgB50C,GAAAA,CAAG,OAAQ,CAAE,MAAS,oCACtC67B,EAAgB77B,GAAAA,CAAG,SAAU,CAAE,MAAS,2BACxC60C,EAAgB70C,GAAAA,CAAG,QAAS,CAAE,MAAS,8BAE3C20C,EAAI5zC,OAAQ6zC,GACZzvB,EAAUpkB,OAAQ4zC,GAGlB,IAAIG,EAAgB90C,GAAAA,CAAG,QAAS,CAAE,MAAS,kCACvC+0C,EAAgB/0C,GAAAA,CAAG,WAAYmC,KAAMzD,iBAAiBwB,KAAjB,QAMzC,GAJA40C,EAAa/zC,OAAQg0C,GACrBF,EAAW9zC,OAAQ+zC,IAGd7qC,EAAAA,EAAAA,IAAWlL,KAAK2C,YAAcuI,EAAAA,EAAAA,IAAWlL,KAAK4M,cACxC1B,EAAAA,EAAAA,IAAWlL,KAAKgM,QAASd,EAAAA,EAAAA,IAAWlL,KAAKgM,QAAYhM,KAAKgM,KAAKiqC,WAAW,CAC7E,IAAIC,GAAiBC,EAAAA,EAAAA,IAAen2C,KAAKiiC,cAAejiC,KAAK2C,SAAU3C,KAAK4M,UAE5E,IAAK1B,EAAAA,EAAAA,IAAWgrC,EAAeE,cAAgB,CAC3C,IAAIC,EAAa,qBAAH,OAAyBr2C,KAAKiiC,cAA9B,YAAiDjiC,KAAKiiC,cAAtD,YAAyEjiC,KAAK4M,SAA9E,YAA4F5M,KAAKiiC,cAAjG,aAAoHiO,EAAAA,EAAAA,IAAoBgG,EAAejG,mBAAoB,GAAI,IAAK5lB,cAAc0M,QAAS,WAAY,MAEjOuf,EAAgBr1C,GAAAA,CAAG,OAAQ,CAC3B,MAASoI,EAAAA,EAAAA,IAAoB6sC,EAAeE,aAAc,CACtD,WAAe,oBACf,WAAe,cACf,YAAeC,IAEnB,MAAS,gCACT,OAAU,WAEVE,EAAgBt1C,GAAAA,CAAG,WAAYmC,KAAMzD,iBAAiBwB,KAAKmI,SAE/DgtC,EAAct0C,OAAQu0C,GACtBT,EAAW9zC,OAAQs0C,IAqK/B,OAhKAxZ,EAAS96B,OAAQ8zC,GACjB1vB,EAAUpkB,OAAQ86B,GAGlB8Y,EAAIp0C,GAAI,SAAS,WAEE4kB,EAAU5c,SAAU,uBAoB/B4c,EAAU3c,YAAa,sBAGvBxI,GAAAA,CAAGyI,UAAWC,IAAK,uCAlBnByc,EAAUxe,SAAU,sBAGpB3G,GAAAA,CAAGyI,UAAWlI,GAAI,qCAAqC,SAAEC,GAC9C2kB,EAAUxc,GAAInI,EAAMoI,SAAqD,IAAzCuc,EAAUtc,IAAKrI,EAAMoI,QAASE,SAEjEqc,EAAU3c,YAAa,sBAGvBxI,GAAAA,CAAGyI,UAAWC,IAAK,6CAcnCosC,EAAav0C,GAAI,SAAS,WACtB,IAAK0J,EAAAA,EAAAA,IAAW,EAAK2B,SAAYlN,iBAAiBC,OAAO24B,QAAU54B,iBAAiBC,OAAO6M,MAAO,EAAKI,QAAS0rB,OAAQ,CAEpHnS,EAAU3c,YAAa,sBAIvB,IAAI2uB,EAAQ,IAAII,EAAAA,EAAM,CAClBvvB,MAAatJ,iBAAiBwB,KAAKq1C,kBAAkBvtC,MACrDwtC,SAAavG,EAAAA,EAAAA,IAAoBvwC,iBAAiBwB,KAAKq1C,kBAAkBE,cAAe,WAAY,aACpG3d,QAAS,CACLvxB,OAAS7H,iBAAiBwB,KAAKqG,OAC/ByxB,QAASt5B,iBAAiBwB,KAAK83B,WAIvCb,EAAMgB,UAAU,CACZkG,eAAgB,WACZlH,EAAMmH,QAEVlG,UAAW,WACejB,EAAMmB,cACGnB,MAAMoB,IAAIT,QAAQE,QAGnCrxB,SAAU,oBAAqB6xB,KAAM,YAAY,IAG/D5xB,EAAAA,EAAAA,IAAU,SAAU,CAChB,GAAM,EAAKgF,SACZ,WAECurB,EAAMrI,UAGgB,WAAjB,EAAKptB,WACN,IAAIguC,EAAAA,EAGiC,aAAhChxC,iBAAiBC,OAAOgB,MAGzB,IAAIkB,EAAAA,GAIU,UAAjB,EAAKa,UAAyC,WAAjB,EAAKA,UACnC,IAAIb,EAAAA,EAIDnC,iBAAiBC,OAAOO,SAC3BR,iBAAiBC,OAAO+5B,QAAQC,aAAaztB,UAAU,MAE5D,WAECisB,EAAMrI,UAENlvB,QAAQC,IAAK,2CAGS,WAAjB,EAAK6B,UACN,IAAIguC,EAAAA,EAGc,UAAjB,EAAKhuC,UAAyC,WAAjB,EAAKA,UACnC,IAAIb,EAAAA,MAIhB89B,UAAW,WACPxH,EAAMrI,kBAMT7kB,EAAAA,EAAAA,IAAW,EAAK2B,SAEjBkpC,EAAanuC,SAAU,2CAGvBC,EAAAA,EAAAA,IAAU,SAAU,CAChB,GAAM,EAAKgF,SACZ,WAEuB,WAAjB,EAAKlK,WACN,IAAIguC,EAAAA,EAGiC,aAAhChxC,iBAAiBC,OAAOgB,MAGzB,IAAIkB,EAAAA,GAIU,UAAjB,EAAKa,UAAyC,WAAjB,EAAKA,UACnC,IAAIb,EAAAA,KAET,WACCjB,QAAQC,IAAK,2CAGS,WAAjB,EAAK6B,UACN,IAAIguC,EAAAA,EAGc,UAAjB,EAAKhuC,UAAyC,WAAjB,EAAKA,UACnC,IAAIb,EAAAA,OAMU,WAAjB,EAAKa,UACN,IAAIguC,EAAAA,EAGc,UAAjB,EAAKhuC,UACN,IAAIb,EAAAA,MAMbskB,O,mBA9NTpZ,I,+SC2QN,QAlQMK,WACF,WAAa1K,EAAUs/B,EAAer1B,EAAUC,GAO5C,O,4FAPoD,SACpD7M,KAAK2C,SAAWA,EAChB3C,KAAKiiC,cAAgBA,EACrBjiC,KAAK4M,SAAWA,EAChB5M,KAAK6M,OAAWA,EAChB7M,KAAKgM,KAAWrM,iBAAiBC,OAAO6M,MAAOI,GAExC7M,KAAK22C,mBAAoBh0C,EAAUiK,EAAUC,G,uDAWxD,SAAoBlK,EAAUiK,EAAUC,GAEpC,IAII+pC,EAJAC,GAAaV,EAAAA,EAAAA,IAAen2C,KAAKiiC,cAAet/B,EAAUiK,GAC9D5M,KAAK62C,WAAaA,EASdD,EAJG52C,KAAKgM,KAAKiqC,UAIEj2C,KAAKgM,KAAKF,UAHVqqC,EAAAA,EAAAA,IAAen2C,KAAKiiC,cAAejiC,KAAKgM,KAAKrJ,SAAU3C,KAAKgM,KAAKY,UAAWd,SAM/F8qC,GAAeE,EAAAA,EAAAA,IACX92C,KAAKgM,KACL4qC,EACAj3C,iBAAiBC,OAAO6M,MAAOzM,KAAK6M,QAASy7B,MAC7C,GAUGtoC,KAAKgM,KAAKiqC,WAEbW,EAAapsC,SAAS+R,MAAM/a,GAAI,SAAS,SAAEC,GAEvC,IAAMo9B,EAAS59B,GAAAA,CAAGQ,EAAME,eAGxBi1C,EAAapsC,SAAS+R,MAAM9S,YAAa,2BAEzCo1B,EAAOj3B,SAAU,2BAGjB,IAAM0E,EAAQuyB,EAAOkY,QAAQ,SAC7BzqC,EAAM1E,SAAU,cAEhB0E,EAAMnC,QAAS,sBAAuBmC,EAAM9C,SAAU,eAGtD,IAAIwtC,EAAYnY,EAAOj9B,KAAM,eAGRjB,EAAAA,EAAAA,IAAgB,cAAe,CAChD4M,OAASV,EACToqC,QAASD,IAIb,IAAIE,EAAAA,EAAarqC,EAAQmqC,MAKjC,IAAI5wB,EAAYnlB,GAAAA,CAAG,SAAU,CAAE,MAAS,mCACpCk2C,EAAYl2C,GAAAA,CAAG,SAAU,CAAE,MAAS,gBAExCmlB,EAAUpkB,OAAQ40C,EAAapY,KAAK52B,SAAU,yBAG9C,IAAIwvC,EAAa,IAAI10C,EAAAA,EAAO,WAAY,CACpCsiC,MAAO,QACPC,MAAO,QACPtU,OAAQ,CACJnvB,GAAK7B,iBAAiBwB,KAAKg2C,OAAOE,eAClC1tC,IAAKhK,iBAAiBwB,KAAKg2C,OAAOG,iBAEtCt0C,aAAcrD,iBAAiBC,OAAO6M,MAAOI,GAAS0rB,SAGtDgf,EAAmBH,EAAWtzC,iBA8JlC,OA7JIqzC,EAAOn1C,OAAQu1C,GACfnxB,EAAUpkB,OAAQm1C,GAEfn3C,KAAKgM,KAAKiqC,WACbsB,EAAiB/1C,GAAI,0BAA0B,WAC3C,IAAIg2C,EAAWJ,EAAW3yC,WACtBgzC,GAAc,EAalB,GAVKD,IAGDC,GADiBC,EAAAA,EAAAA,IAAc7qC,GACN1M,SAK7Bi3C,EAAW7rC,wBAENksC,EAAa,CAEd,IAAIE,EAAcH,EAAW,UAAY,QAGzC,IAAOA,GAAY73C,iBAAiBC,OAAO24B,OAAQ,CAG/C,IAAIH,EAAQ,IAAII,EAAAA,EAAM,CAClBvvB,MAAatJ,iBAAiBwB,KAAKq1C,kBAAkBvtC,MACrDwtC,SAAavG,EAAAA,EAAAA,IAAoBvwC,iBAAiBwB,KAAKq1C,kBAAkBoB,cAAe,WAAY,aACpG7e,QAAS,CACLvxB,OAAS7H,iBAAiBwB,KAAKqG,OAC/ByxB,QAASt5B,iBAAiBwB,KAAK83B,WAIvCb,EAAMgB,UAAU,CACZkG,eAAgB,WACZlH,EAAMmH,QAEVlG,UAAW,WACP,IAUIwe,EAVkBzf,EAAMmB,cACGnB,MAAMoB,IAAIT,QAAQE,QAGnCrxB,SAAU,oBAAqB6xB,KAAM,YAAY,GAG/D2d,EAAW7rC,wBAIX,IACIssC,EAAmBjB,EAAapY,KAAK7M,IAAI,GAAGmH,UAC9C,MAAQhjB,KAEVjO,EAAAA,EAAAA,IAAU,qBAAsB,CAC5BkE,QAAcc,EACd8qC,YAAcA,EACdG,wBAAyBlB,EAAamB,SACtCC,6BAA8BH,IAC/B,WAGCzf,EAAMrI,UAGN,IAAI4gB,EAAAA,EACJ,IAAI7uC,EAAAA,EAGJ,IAAItB,EAAAA,EAGGb,iBAAiBC,OAAOO,SAC3BR,iBAAiBC,OAAO+5B,QAAQC,aAAaztB,UAAU,MAE5D,WAECtL,QAAQC,IAAK,+CAGbs3B,EAAMrI,UAGNqnB,EAAWlrC,uBAGXkrC,EAAWjrC,UAAYqrC,GAAU,OAGzC1d,SAAU,WAEN1B,EAAMrI,UAENqnB,EAAWjrC,UAAYqrC,GAAU,GAGjCJ,EAAWlrC,wBAEf0zB,UAAW,WACPxH,EAAMrI,iBAIb,CAED,IAAI8nB,EACJ,IACIA,EAAmBjB,EAAapY,KAAK7M,IAAI,GAAGmH,UAC9C,MAAQhjB,KAGVjO,EAAAA,EAAAA,IAAU,qBAAsB,CAC5BkE,QAAcc,EACd8qC,YAAcA,EACdG,wBAAyBlB,EAAamB,SACtCC,6BAA8BH,IAC/B,WAUCT,EAAWlrC,uBAGX,IAAI1L,EAAAA,KACL,WAECK,QAAQC,IAAK,+CAGbs2C,EAAWlrC,uBAGXkrC,EAAWjrC,UAAYqrC,GAAU,YAMzCxiC,YAAW,WAEPoiC,EAAWlrC,uBAGXkrC,EAAWjrC,UAAU,GAAO,KAC7B,QAKRia,O,mBA9PT/Y,I,+UCsBN,QAxCMF,WACF,WAAaw5B,GAAuC,IAAxBsR,EAAwB,uDAAN,KAI1C,OAJgD,UAChDj4C,KAAK2mC,cAAgBA,EACrB3mC,KAAKi4C,gBAAkBA,EAEhBj4C,KAAKk4C,gB,kDAahB,WAEI,IAAIrsC,EAAclM,iBAAiBiM,aAAc5L,KAAK2mC,eAGlDvgB,EAAcnlB,GAAAA,CAAG,SAAU,CAAE,MAAS,sCACtC2U,EAAc3U,GAAAA,CAAG,SAAU,CAAE,MAAS,oBAY1C,OAVKiK,EAAAA,EAAAA,IAAWW,GACZ+J,EAAIxS,KAAMyI,EAAY1H,MAGtByR,EAAIxS,KAAMpD,KAAKi4C,iBAGnB7xB,EAAUpkB,OAAQ4T,GAGXwQ,O,mBApCTjZ,I,kmCCiBA+pC,YAAAA,WACL,qBAAarqC,EAAQsrC,GAAU,kCAC9Bn4C,KAAK6M,OAAWA,EAChB7M,KAAKm4C,SAAWA,EAChBn4C,KAAKgM,KAAUrM,iBAAiBC,OAAO6M,MAAOI,GAG9C7M,KAAKmH,OAAWnH,KAAKgM,KAAK9I,QAASlD,KAAKm4C,UAAWhxC,OAEnDnH,KAAK+4B,QAAW/4B,KAAKgM,KAAK9I,QAASlD,KAAKm4C,UAAWpf,QAEnD/4B,KAAKo4C,SAOLp4C,KAAK+D,oBACL/D,KAAKq4C,cACLr4C,KAAKgE,iB,qDAGN,WAEC,IAAIoiB,GAAYzlB,EAAAA,2CAAAA,IAAgB,OAAQ,CACvCoH,GAAI/H,KAAK6M,SACPyrC,iBAECC,EAAct3C,6CAAAA,CAAG,SAAU,CAAE,MAAS,iBAGtC83B,EAAU/4B,KAAKw4C,gBAGfrxC,EAASnH,KAAKy4C,eAClBz4C,KAAK04C,gBAAkBvxC,EACvBoxC,EAAYv2C,OAAQmF,GAGpB,IAAIwxC,EAAmB13C,6CAAAA,CAAG,SAAU,CAAE,MAAS,0BAC/CjB,KAAK24C,gBAAkBA,EACvBJ,EAAYv2C,OAAQ22C,GAGpBJ,EAAYv2C,OAAQ+2B,GAGpB3S,EAAUoY,KAAM+Z,K,0BAGjB,WAAc,WACTnyB,EAAYnlB,6CAAAA,CAAG,SAAU,CAAE,MAAS,wBAkExC,OA/DAA,8CAAAA,KAAQjB,KAAKmH,QAAQ,SAAEtB,EAAOQ,GAE7B,IAAIxB,EAAYwB,EAAMQ,gBAAgBhC,UAGpB,YAAbA,GAEJwB,EAAMoyC,eAIPpyC,EAAM03B,oBACN3X,EAAUpkB,OAAQqE,EAAMvC,kBAGjB,CAAE,WAAY,QAAS,YAAawyB,SAAUzxB,GAW9B,SAAbA,EAETwB,EAAMc,OAAOhB,SAAQ,SAAEE,GAKH,aAHDA,EAAMQ,gBAAgBhC,WAKvCwB,EAAMuvB,WAAWp0B,GAAI,SAAS,SAAEC,GAET,IAAjBA,EAAM6nB,SAEV,EAAKsvB,WAAWzuC,QAAS,eAMP,YAAbtF,GAETwB,EAAMwyC,UAAU1yC,SAAQ,SAAE2yC,EAAKjzC,GAE9BizC,EAAI3yC,SAAQ,SAAEzD,EAAOmD,GAEpBnD,EAAMkzB,WAAWp0B,GAAI,SAAS,SAAEC,GAET,IAAjBA,EAAM6nB,SAEV,EAAKsvB,WAAWzuC,QAAS,kBAtC7B9D,EAAMuvB,WAAWp0B,GAAI,SAAS,SAAEC,GAET,IAAjBA,EAAM6nB,SAEV,EAAKsvB,WAAWzuC,QAAS,eA0CtBic,I,2BAGR,SAAAoyB,gBAAe,gBAEVpyB,UAAiBnlB,6CAAAA,CAAG,SAAU,CAAE,MAAS,0BAGzC83C,iBAAmB93C,6CAAAA,CAAG,SAAU,CAAE,MAAS,oCAC9C+3C,iBAAmB/3C,6CAAAA,CAAG,SAAU,CAAE,MAAS,oCAExC23C,WAAkB33C,6CAAAA,CAAG,SAAU,CAAE,MAAS,6BAC7C+3B,aAAkB/3B,6CAAAA,CAAG,SAAU,CAAE,MAAS,+BAAgCmC,KAAMzD,iBAAiBwB,KAAKqG,QA2MvG,MAzM2B,WAAtBxH,KAAKgM,KAAKrJ,UACdi2C,WAAWx1C,KAAMzD,iBAAiBwB,KAAKmG,MAGb,UAAtBtH,KAAKgM,KAAKrJ,UACdi2C,WAAWx1C,KAAMzD,iBAAiBwB,KAAKmG,MAGP,WAAtBtH,KAAKgM,KAAKrJ,UACXi2C,WAAWx1C,KAAMzD,iBAAiBwB,KAAKmG,MAG3CtH,KAAK44C,WAAaA,WAExBG,iBAAiB/2C,OAAQ42C,YACzBG,iBAAiB/2C,OAAQg3B,cAGzB/3B,8CAAAA,KAAQjB,KAAK+4B,SAAS,SAAElzB,MAAOozC,QAE9B,IAAMC,eAAiBj4C,6CAAAA,CAAG,SAAU,CAAE,MAAS,YAAamC,KAAM61C,OAAO71C,OAGpE8H,EAAAA,2CAAAA,IAAW+tC,OAAOE,cAEtBD,eAAetxC,SAAUqxC,OAAOE,aAIjC,IAAIC,UAAY,aAChB,IAAKluC,EAAAA,2CAAAA,IAAW+tC,OAAOI,UAEtB,IAECD,UAAYE,KAAK,IAAD,OAAOL,OAAOI,SAAStiB,QAAS,WAAY,IAAKA,QAAS,aAAa,IAAK9a,OAA5E,MACf,MAAQnG,GAAKjV,QAAQC,IAAKgV,GAAKjV,QAAQC,IAAKm4C,OAAOI,UAItDH,eAAe13C,GAAI,SAAS,WAWzB,IAEI+3C,EAXNH,UAECF,eAEA,CACCltC,KAAW,OAAKA,KAChBs7B,QAAWC,EAAAA,2CAAAA,IAAwB,OAAK16B,UAKpC0sC,EAAU,IAGTruC,EAAAA,2CAAAA,IAAW+tC,OAAOM,WAEjBN,OAAOM,QAAQjjB,SAAU,WAE7BijB,EAAQ/gB,MAAQA,uCAAAA,GAGZygB,OAAOM,QAAQjjB,SAAU,cAE7BijB,EAAQC,SAAWA,0CAAAA,IAKdD,OAMVP,iBAAiBh3C,OAAQk3C,mBAG1B9yB,UAAUpkB,OAAQ+2C,kBAClB3yB,UAAUpkB,OAAQg3C,kBAElBJ,WAAWp3C,GAAI,SAAS,WAKd,IAHqBi4C,EAAAA,yCAAAA,IAAoB,OAAKf,iBAG1Bv4C,QAAS,CAE5By4C,WAAWhxC,SAAU,sCAMrB,IASIiwC,EATAhrC,EAAW,OAAKA,OACnBjK,EAAc,OAAKu1C,SACnBpQ,EAAc,OAAK2R,iBAId9C,GAAeE,EAAAA,2CAAAA,IAAuB,OAAK9qC,KAAM,OAAKA,KAAKs8B,KAAKx8B,SAAU7K,8CAAAA,OAAS,GAAI,OAAK+K,KAAKs8B,MAAMf,EAAAA,2CAAAA,IAAwB,OAAK16B,UAI1I,IACCgrC,EAAmBjB,EAAapY,KAAK7M,IAAI,GAAGmH,UAC3C,MAAQhjB,KAEVjO,EAAAA,2CAAAA,IAAU,SAAU,CACbgF,OAAcA,EACdjK,WAAcA,EACdmlC,YAAcA,EACd+P,wBAAyBlB,EAAamB,SACtCC,6BAA8BH,IAC/B,SAAE7vC,GAEJ,OAAKb,OAAOhB,SAAQ,SAAEzD,GACrBA,EAAMoB,iBAAiBqG,QAAS,YAGH,WAAtB,OAAK6B,KAAKrJ,UACX,IAAIguC,0CAAAA,EAGmB,UAAtB,OAAK3kC,KAAKrJ,UAA8C,WAAtB,OAAKqJ,KAAKrJ,UAC7C,IAAIb,yCAAAA,EAMvB,IAAM3B,EAAUR,iBAAiBC,OAAO6M,MAAO,OAAKT,KAAKjE,IAAK5H,QAG5CmM,GAAQ3L,EAAAA,2CAAAA,IAAgB,OAAQ,CACrCoH,GAAI,OAAKiE,KAAKjE,KAItB5H,EAEGR,iBAAiBC,OAAO24B,QAGvB,OAAKvsB,KAAKusB,QAEhBjsB,EAAMN,KACJ1K,KAAM,uCACNm4B,KAAM,WAAW,GACjBtvB,QAAS,UAObmC,EAAMN,KACJ1K,KAAM,sDACN2K,QACA9B,QAAS,YAEE,SAAEnC,GACJnH,QAAQC,IAAK,wDAGE,WAAtB,OAAKkL,KAAKrJ,UACd,IAAIguC,0CAAAA,EAGsB,UAAtB,OAAK3kC,KAAKrJ,UAA8C,WAAtB,OAAKqJ,KAAKrJ,UAChD,IAAIb,yCAAAA,EAIL,KAECnB,EAAAA,2CAAAA,IAAgB,OAAQ,CACvBoH,GAAI,OAAK8E,SAGTb,KAEA1K,KAND,8CAM+CsB,EAN/C,OAQCuH,QAAS,SACT,MAAQ2L,YAKbkjB,aAAax3B,GAAI,SAAS,WAEE,WAAtB,OAAKwK,KAAKrJ,UACd,IAAIguC,0CAAAA,EAGsB,UAAtB,OAAK3kC,KAAKrJ,UAA8C,WAAtB,OAAKqJ,KAAKrJ,UAChD,IAAIb,yCAAAA,KAICskB,Y,+BAGR,WACCnlB,8CAAAA,KAAQjB,KAAKmH,QAAQ,SAAEtB,EAAOQ,GAE7BA,EAAMtC,yB,yBAIR,WACC9C,8CAAAA,KAAQjB,KAAKmH,QAAQ,SAAEtB,EAAOQ,GAEW,YAAnCA,EAAMQ,gBAAgBhC,WAE1BwB,EAAMgyC,mB,4BAKT,WACCp3C,8CAAAA,KAAQjB,KAAKmH,QAAQ,SAAEtB,EAAOQ,GAE7BA,EAAMrC,sB,4BAUR,WACC,IAAIgE,EAAW,GACd2xC,GAAY,EACZC,GAAc,EA8Cf,OA5CA34C,8CAAAA,KAAQjB,KAAKmH,QAAQ,SAAEtB,EAAOQ,GAC7B,IAAI0B,EAAQ1B,EAAMQ,gBAAgBjE,WACjCO,EAAQkD,EAAM5B,WAEf,GAAK,CAAE,SAAU,SAAU6xB,SAAUjwB,EAAMQ,gBAAgBhC,WAAa,CAOvE,GALA80C,GAAY,EAKPtzC,EAAMQ,gBAAgBy7B,uBAC1B,IACCn/B,EAAQ2oB,KAAKE,UAAW7oB,GACvB,MAAQ2S,GACTjV,QAAQC,IAAKgV,GAKf9N,GAAUM,EAAAA,2CAAAA,IAAU,cAAe,CAAEP,KAAW1B,EAAMwzC,mBAGtD,IAAMvW,EAAcj9B,EAAMmhC,uBACZ,0BAATrkC,IACJ6E,GAAUM,EAAAA,2CAAAA,IAAU,YAAa,CAAEP,KAAWu7B,OAGH,YAAnCj9B,EAAMQ,gBAAgBhC,YAE/B+0C,GAAc,EAGdz2C,EAAQ2oB,KAAKE,UAAW7oB,IAGzB6E,EAAUD,GAAO5E,KAGXy2C,GAAiBD,GAA+C,GAAlCl0C,OAAOC,KAAMsC,GAAW+B,SAE5D/B,EAAWA,EAAUvC,OAAOC,KAAMsC,GAAY,KAGxCA,M,YA/ZHkvC,GAmaN,8C,oUCnWA,QAhFMsC,WACL,aAA2B,IAAd3jC,EAAc,uDAAJ,GAAI,UAE1B7V,KAAK6V,QAAUA,E,4CAGhB,WAEC,IAAIA,GAAUikC,EAAAA,EAAAA,GAAY95C,KAAK6V,SAK/B,OAHAA,EAAU7V,KAAK+5C,oBAAqBlkC,GAC1B7V,KAAKg6C,aAAcnkC,K,iCAK9B,SAAqBA,GAWpB,OAJAA,GAHAA,GADAA,EAAUA,EAAQkhB,QAAS,8CAA+C,0BACxDA,QAAS,4CAA6C,kBAGtDA,QAAS,iCAAkC,wBAC3CA,QAAS,2BAA4B,iB,0BAMxD,SAAclhB,GA8Cb,OA5CUA,EAAQkhB,QAAS,kGAAkG,SAAUkjB,EAAYC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,IACnKtvC,EAAAA,EAAAA,IAAWsvC,KACjBA,EAAK,IAGNP,EAAaC,EAEb,IAAIO,EAAWN,EACdO,EAAWN,EAAG/vB,cACdypB,EAAQuG,EACRpxC,EAAUuxC,EAEX,IAAO1G,EAAK,CAQX,GAPO4G,IAENA,EAASD,EAASpwB,cAAc0M,QAAS,QAAS,MAGnD+c,EAAM,IAAM4G,IAEPT,EAAWzd,OAAQ,cAAiB,GAKxC,OAAOyd,EAHPnG,EAAM,GAQR,IAAI6G,EAAS,aADb7G,EAAM8G,UAAW9G,EAAK,MAAM,IACK,oBAUjC,MARe,KAAV7qC,GAA0B,OAAVA,IACpBA,EAAQA,EAAM8tB,QAAS,KAAM,UAE7B4jB,GAAU,YADV1xC,EAAQ2xC,UAAW3xC,EAAO,MAAM,IACD,KAGhC0xC,EAAU,IAAMF,EAAW,e,mBAtExBjB,I,+QCiIN,QAzHMrrC,WAEF,WAAaxL,I,4FAAU,SACnB3C,KAAK2C,SAAWA,EAEX3C,KAAK66C,6BACN76C,KAAK86C,e,8DAIb,WAKI,IAAI1C,GAAS,EAEb,GAAsB,WAAjBp4C,KAAK2C,SAAuB,CAE7B,IAAIo4C,GAAgBrtC,EAAAA,EAAAA,IAAa,MAAO,CACpCC,OAAQ,CACJhL,SAAU,cAKE4C,EAAAA,EAAAA,IAASw1C,KAGH7vC,EAAAA,EAAAA,IAAWvL,iBAAiBiO,KAAUjO,iBAAiBiO,IAA0C,aAAhCjO,iBAAiBC,OAAOgB,OAC/Gw3C,GAAS,GAIjB,GAAsB,UAAjBp4C,KAAK2C,SAAsB,CAE5B,IAAIo4C,GAAgBrtC,EAAAA,EAAAA,IAAa,MAAO,CACpCC,OAAQ,CACJhL,SAAU,cAKC4C,EAAAA,EAAAA,IAASw1C,KAIxB3C,GAAS,GAIjB,OAAOA,I,0BAGX,WAAc,WAENhyB,EAAanlB,GAAAA,CAAG,SAAU,CAAE,MAAS,oBAGrC+5C,EAAa/5C,GAAAA,CAAG,SAAU,CAAE,MAAS,+BAQzC,IALsB,UAAjBjB,KAAK2C,UAA2C,WAAjB3C,KAAK2C,UAAyD,QAAhChD,iBAAiBC,OAAOgB,OAEtFwlB,EAAUpkB,OAAQg5C,GAGA,WAAjBh7C,KAAK2C,WAE+B,QAAhChD,iBAAiBC,OAAOgB,MAEzBo6C,EAAW53C,KAAMzD,iBAAiBwB,KAAKgJ,QAAQ6wC,YAId,aAAhCr7C,iBAAiBC,OAAOgB,MAAqB,CAE9C,IAAIq6C,EAAmBj7C,KAAKk7C,wBAC5B90B,EAAUpkB,OAAQi5C,GAIJ,UAAjBj7C,KAAK2C,WAENq4C,EAAW53C,KAAMzD,iBAAiBwB,KAAKkJ,OAAO2wC,YAC9C50B,EAAUxe,SAAS,mBAIC,WAAjB5H,KAAK2C,UAA4C,UAAjB3C,KAAK2C,UAExCq4C,EAAWx5C,GAAI,SAAS,WAGpB,IAAI8I,EAAAA,EAAyB,EAAK3H,cAK5BhC,EAAAA,EAAAA,IAAgB,UAAW,CACrCC,KAAMZ,KAAK2C,WAGPX,OAAQokB,K,mCAGpB,WAWI,OAVcnlB,GAAAA,CAAE,4DAAD,OAEJtB,iBAAiBwB,KAAKg6C,WAAWC,uBAF7B,sBAEkE/xC,EAAAA,EAAAA,IAAoB,gEAAiE,CACtJ,WAAe,oBACf,WAAe,+BACf,YAAe,eALhB,6BAMsB1J,iBAAiBwB,KAAKi5B,UAN5C,qG,mBA3GjBjsB,I,8ZCknBN,QAvnBMktC,WAmCF,WAAa14C,EAAUs/B,EAAer1B,EAAUC,GAQ5C,O,4FARoD,kgBACpD7M,KAAK2C,SAAgBA,EACrB3C,KAAKiiC,cAAgBA,EACrBjiC,KAAK4M,SAAgBA,EACrB5M,KAAK6M,OAAgBA,EACrB7M,KAAKgM,KAAgBrM,iBAAiBC,OAAO6M,MAAOI,GACpD7M,KAAKs7C,UAAgBt7C,KAAKgM,KAAKs8B,KAAKiT,WAE/B57C,iBAAiB67C,WAAWlkB,WAAY,KAClC,KAGJt3B,KAAKy7C,oB,gDAIhB,WACI,QAAOz7C,KAAKs7C,YAIW,SAAlBt7C,KAAKs7C,UACCt7C,KAAKgM,KAAKs8B,KAAKoT,oBAAsB17C,KAAKgM,KAAKs8B,KAAKqT,iBAGxC,YAAlB37C,KAAKs7C,WACCt7C,KAAKgM,KAAKs8B,KAAKsT,qBAAuB57C,KAAKgM,KAAKs8B,KAAKuT,uB,2BAMpE,WACI,GAAK77C,KAAK87C,cAAgB,CACtB,IAAI14C,EAAOzD,iBAAiBwB,KAAKkJ,OAAOgE,aAAarO,KAAKs7C,WAG1D,OAFAl4C,GAAQ,KACA,WAAapD,KAAKgM,KAAKs8B,KAAKyT,eAAiB,YAGzD,OAAOp8C,iBAAiBwB,KAAKkJ,OAAOgE,aAAa2tC,Q,+BAGrD,WAAmB,WAyCf,OAtCAh8C,KAAKi8C,gBAAsBh7C,GAAAA,CAAG,SAAU,CAAE,MAAS,eACnDjB,KAAKi5C,OAAmBh4C,GAAAA,CAAG,SAAU,CAAE,MAAS,oBAChDjB,KAAKk8C,WAAmBj7C,GAAAA,CAAG,OAAQ,CAAE,MAAS,2BAE9CjB,KAAKi5C,OAAOza,KAAMx+B,KAAKm8C,iBACvBn8C,KAAKi5C,OAAOl4C,QAASf,KAAKk8C,YAE1Bl8C,KAAKi8C,gBAAgBj6C,OAAQhC,KAAKi5C,QAE7Bj5C,KAAK87C,eACN97C,KAAKo8C,qBAGJp8C,KAAKq8C,SACNr8C,KAAKs8C,YAAa38C,iBAAiBwB,KAAKkJ,OAAOgE,aAA7B,KAItBrO,KAAKi5C,OAAOz3C,GAAI,SAAS,WACd,EAAKy6C,gBAAgBzyC,SAAS,aACjC,EAAK+yC,eAIbv8C,KAAKi8C,gBAAgBz6C,GAAG,sCAAsC,SAACsU,EAAG/F,GAC9D,IAAIksC,EAAkBh7C,GAAAA,CAAG6U,EAAEnU,eAEtBoO,GACDksC,EAAgBvY,KAAM,cAAe/jC,iBAAiBwB,KAAKkJ,OAAOgE,aAAamuC,YAC/EP,EAAgBvY,KAAM,WAAY,QAClCuY,EAAgBr0C,SAAS,cAEzBq0C,EAAgBQ,WAAY,eAC5BR,EAAgBxyC,YAAY,gBAK7BzJ,KAAKi8C,kB,oBAGhB,WACIj8C,KAAKi5C,OAAOwD,WAAW,eACvBz8C,KAAKi5C,OAAOwD,WAAW,c,mBAG3B,WAEI,OAAO,I,yBAGX,SAAa55C,GACT7C,KAAK08C,YAAcz7C,GAAAA,CAAG,UAAW,CAAE,MAAS,wBAC5CjB,KAAK08C,YAAYt5C,KAAMP,GACvB7C,KAAKi5C,OAAOj3C,OAAQhC,KAAK08C,e,gCAG7B,WAAqB,WACjB18C,KAAK28C,aAAe17C,GAAAA,CAAG,UAAW,CAAE,MAAS,iBAC7CjB,KAAK48C,iBAAmB37C,GAAAA,CAAG,OAAQ,CAAE,MAAS,2BAE9CjB,KAAK28C,aAAav5C,KAAMzD,iBAAiBwB,KAAKkJ,OAAOgE,aAAaqH,QAClE1V,KAAK28C,aAAan7C,GAAI,SAAS,WAC3B,EAAKq7C,oBAET78C,KAAK28C,aAAa57C,QAASf,KAAK48C,kBAChC58C,KAAKi8C,gBAAgBj6C,OAAQhC,KAAK28C,gB,gCAGtC,WAEI,IAAIG,EAAe77C,GAAAA,CAAE,SAAW,CAAE,MAAS,uBAY3C,GAVAjB,KAAK+8C,cAAgB/8C,KAAKg9C,sBAE1Bh9C,KAAK+8C,cAAcz7C,KAAM,gCAAiC27C,MAAOj9C,KAAKk9C,sBACtEl9C,KAAK+8C,cAAcz7C,KAAM,+BAAgC27C,MAAOj9C,KAAKm9C,yBAErEn9C,KAAKo9C,wBAGLN,EAAa96C,OAAQhC,KAAK+8C,eAErB/8C,KAAK87C,cAAgB,CACtB,IAAIuB,EAAkBp8C,GAAAA,CAAG,SAAU,CAAE,MAAS,oCAC1Cq8C,EAAkBr8C,GAAAA,CAAG,OAAQ,CAAE,MAAS,0CAC5Co8C,EAAgBr7C,OAAQs7C,GACxBD,EAAgBr7C,OAAQrC,iBAAiBwB,KAAKkJ,OAAOgE,aAAa+pB,MAAMmlB,iBACxET,EAAa96C,OAAQq7C,GAGzB,OAAOP,I,uBAGX,WAEI,IAAIU,EAAoB79C,iBAAiBwB,KAAKkJ,OAAOgE,aAAa+pB,MAAMa,QAEnEj5B,KAAK87C,eAAmC,YAAlB97C,KAAKs7C,YAC5BkC,EAAoB79C,iBAAiBwB,KAAKkJ,OAAOgE,aAAaovC,UAIlEz9C,KAAKo4B,MAAQ,IAAII,EAAAA,EAAO,CACpBvvB,MAAOtJ,iBAAiBwB,KAAKkJ,OAAOgE,aAAa+pB,MAAMnvB,MACvD4M,QAAS7V,KAAK09C,qBACd3kB,QAAS,CACLvxB,OAAS7H,iBAAiBwB,KAAKqG,OAC/ByxB,QAASukB,IAEd,CACCrkB,KAAM,QACN6Q,YAAa,iBAGjBhqC,KAAK29C,gB,yBAGT,WAAc,WACV39C,KAAKo4B,MAAMgB,UAAW,CAClBkG,eAAgB,WAEZ,EAAKlH,MAAMmH,QAEflG,UAAW,WACP,EAAKukB,eAGThe,UAAW,WACP,EAAKxH,MAAMrI,e,yBAKvB,WACI,IACImJ,EADkBl5B,KAAKo4B,MAAMmB,cACFnB,MAAMoB,IAAIT,QAAQE,QAKjD,GAFAC,EAActxB,SAAU,oBAAqB6xB,KAAM,YAAY,GAExDz5B,KAAK69C,eAAe19C,QAA3B,CAKA,IAOI2L,EAPAwvC,EAAYt7C,KAAK89C,eAAer5C,WAChCs5C,EAAc/9C,KAAKg+C,iBAAiBv5C,WACpCw5C,EAAYj+C,KAAKk+C,eAAez5C,WAChC05C,EAAen+C,KAAKo+C,kBAAkB35C,WACtC45C,EAAer+C,KAAKs+C,kBAAkB75C,WAMtCqH,EADc,SAAbwvC,EACUt7C,KAAKu+C,gBAELv+C,KAAKw+C,mBAGpBx+C,KAAKy+C,aAAcnD,EAAWyC,EAAaE,EAAWE,EAAcE,EAAcvyC,QAnB9EotB,EAAczvB,YAAa,oBAAqBgwB,KAAM,YAAY,K,0BAuB1E,WACI,IAEIilB,EAFAT,EAAYj+C,KAAKk+C,eAAez5C,WAChCs5C,EAAc/9C,KAAKg+C,iBAAiBv5C,WAGxC,OAASw5C,GACL,IAAK,UACDS,EAAa,EACb,MACJ,IAAK,UACDA,EAAa,GACb,MACJ,IAAK,QACDA,EAAa,KACb,MACJ,IAAK,OACDA,EAAa,MACb,MACJ,IAAK,QACDA,EAAa,QACb,MACJ,QACIA,EAAa,EAIrB,OAAOX,EAAcW,I,2BAGzB,WACI,IAAIC,EAAO3+C,KAAKk+C,eAAez5C,WAM/B,OAJyC,GAApCzE,KAAKg+C,iBAAiBv5C,aACvBk6C,EAAOA,EAAKlqC,MAAM,GAAI,IAGdzU,KAAKg+C,iBAAiBv5C,WAAa,IAAM9E,iBAAiBwB,KAAKkJ,OAAOgE,aAAa+pB,MAAMumB,GAAMt0B,gB,6BAG/G,WACI,OAAO5Z,KAAKsb,MAAO/rB,KAAKs+C,kBAAkB75C,WAAa,IAAMzE,KAAKo+C,kBAAkB35C,c,8BAGxF,WACI,OAAOzE,KAAKs+C,kBAAkB75C,WAAa,MAAQzE,KAAKo+C,kBAAkB35C,a,0BAG9E,SAAc62C,GAA6G,WAAlGyC,EAAkG,uDAApF,KAAME,EAA8E,uDAAlE,KAAME,EAA4D,uDAA7C,KAAME,EAAuC,uDAAxB,KAAMvyC,EAAkB,uDAAP,MAEhHjE,EAAAA,EAAAA,IAAU,kBAAmB,CACzB,SAAYlI,iBAAiBC,OAAOmI,GACpC,SAAY/H,KAAK6M,OACjB,UAAayuC,EACb,YAAeyC,EACf,UAAaE,EACb,aAAgBE,EAChB,aAAgBE,EAChB,iBAAoBvyC,IACrB,WAEC,EAAKssB,MAAMrI,UAEX,IAAIjuB,EAAAA,EAGGnC,iBAAiBC,OAAOO,SAC3BR,iBAAiBC,OAAO+5B,QAAQC,aAAaztB,UAAU,MAE5D,WAEC,EAAKisB,MAAMrI,UAEXlvB,QAAQC,IAAK,6CAEb,IAAIgB,EAAAA,O,4BAKZ,WACI9B,KAAK48C,iBAAiBnzC,YAAY,kBAClCzJ,KAAK48C,iBAAiBh1C,SAAS,qCAE/BC,EAAAA,EAAAA,IAAU,kBAAmB,CACzB,SAAYlI,iBAAiBC,OAAOmI,GACpC,SAAY/H,KAAK6M,SAClB,WAEC,IAAI/K,EAAAA,EAGGnC,iBAAiBC,OAAOO,SAC3BR,iBAAiBC,OAAO+5B,QAAQC,aAAaztB,UAAU,MAE5D,WAECtL,QAAQC,IAAK,6CAEb,IAAIgB,EAAAA,O,4BAKZ,WAEI,IAAI88C,EAAe39C,GAAAA,CAAG,OAAQ,CAC1B,KAAStB,iBAAiBwB,KAAKkJ,OAAOgE,aAAa+pB,MAAMymB,aACzD,OAAU,WAGVC,EAAmB79C,GAAAA,CAAG,OAAQ,CAAE,MAAS,qCAEzC89C,EAAe99C,GAAAA,CAAG,UAAW,CAAE,MAAS,iCAAkCu9B,KAAM,WAAa7+B,iBAAiBwB,KAAKkJ,OAAOgE,aAAa+pB,MAAM4mB,SAAW,cAAgBr/C,iBAAiBwB,KAAKkJ,OAAOgE,aAAa+pB,MAAM6mB,gBAM5N,OAJAL,EAAa58C,OAAQ88C,GAErBC,EAAa/8C,OAAQ48C,GAEdG,I,iCAIX,WAqBI,OAnBA/+C,KAAK89C,eAAiB,IAAIp7C,EAAAA,EAAO,QAAS,CACtCC,SAAU,SACVC,WAAY,gBACZuB,KAAM,gBACNlB,YAAY,EACZD,aAAchD,KAAKs7C,UAAYt7C,KAAKs7C,UAAY,QAChDp4C,QAAS,CACL,CACIC,MAAO,QACPC,KAAMzD,iBAAiBwB,KAAKkJ,OAAOgE,aAAa2tC,OAEpD,CACI74C,MAAO,WACPC,KAAMzD,iBAAiBwB,KAAKkJ,OAAOgE,aAAaovC,aAMrDz9C,KAAK89C,eAAe/f,oBAAoBn2B,SAAU,yB,mCAG7D,WAAwB,WAEpB5H,KAAK+8C,cAAcv7C,GAAI,0BAA0B,WAC7C,IACI4B,EADA87C,EAAoB,EAAKpB,eAAer5C,WAIxCrB,EADsB,YAArB87C,EACMv/C,iBAAiBwB,KAAKkJ,OAAOgE,aAAaovC,SAE1C99C,iBAAiBwB,KAAKkJ,OAAOgE,aAAa+pB,MAAMa,QAGpD,EAAK6iB,gBACkB,YAArBoD,EACD,EAAKC,mBAAmB11C,YAAa,UAErC,EAAK01C,mBAAmBv3C,SAAU,WAI1C,EAAKwwB,MAAM5tB,SAAS4tB,MAAMoB,IAAIT,QAAQE,QAAQ71B,KAAMA,Q,mCAI5D,WAEI,IAAIg8C,EAAkBn+C,GAAAA,CAAE,SAAW,CAAE,MAAS,qBAE1Co+C,EAAep+C,GAAAA,CAAG,UAAW,CAAE,MAAS,4BAA8BmC,KAAMzD,iBAAiBwB,KAAKkJ,OAAOgE,aAAa+pB,MAAMinB,cAE5HC,EAAiBr+C,GAAAA,CAAG,SAAU,CAAE,MAAS,oBAsB7C,OApBOjB,KAAK87C,gBACR97C,KAAKm/C,mBAAqBl+C,GAAAA,CAAG,SAAU,CAAE,MAAS,2BACzBA,GAAAA,CAAG,OAAQ,CAAE,MAAS,qCAC/CjB,KAAKm/C,mBAAmB/7C,KAAMzD,iBAAiBwB,KAAKkJ,OAAOgE,aAAa+pB,MAAMmnB,iBAE9Ev/C,KAAKm/C,mBAAmBv3C,SAAU,4BAGtCw3C,EAAgBp9C,OAAQq9C,GAExBC,EAAet9C,OAAQhC,KAAKw/C,0BAE5BF,EAAet9C,OAAQhC,KAAKy/C,0BAE5BL,EAAgBp9C,OAAQs9C,GAExBF,EAAgBp9C,OAAQhC,KAAK0/C,kBAE7BN,EAAgBp9C,OAAQhC,KAAKm/C,oBAEtBC,I,gCAGX,WACI,IAAIO,EAAe1+C,GAAAA,CAAE,SAAW,CAAE,MAAS,kBAEvC2+C,EAAY3+C,GAAAA,CAAG,UAAW,CAAE,MAAS,4BAA8BmC,KAAMzD,iBAAiBwB,KAAKkJ,OAAOgE,aAAa+pB,MAAMwnB,WAEzHC,EAAc5+C,GAAAA,CAAG,SAAU,CAAE,MAAS,iBAG1CjB,KAAK8/C,gBAAkB9/C,KAAK+/C,wBAE5B//C,KAAKggD,cAAgBhgD,KAAKigD,sBAE1B,IAAIC,EAAkBj/C,GAAAA,CAAG,UAAW,CAAE,MAAS,8BAAgCmC,KAAMzD,iBAAiBwB,KAAKkJ,OAAOgE,aAAa+pB,MAAM6kB,OAgBrI,OAZA4C,EAAY79C,OAAQhC,KAAK8/C,iBAEzBD,EAAY79C,OAAQhC,KAAKggD,eAEzBH,EAAY79C,OAAQk+C,GAGpBP,EAAa39C,OAAQ49C,GAErBD,EAAa39C,OAAQ69C,GAGdF,I,mCAGX,WAEI3/C,KAAKg+C,iBAAmB,IAAIt7C,EAAAA,EAAO,MAAO,CACtCC,SAAU,SACVC,WAAY,eACZK,YAAY,EACZwvB,YAAa,KACb7uB,gBAAgB,EAChBZ,aAAchD,KAAKgM,KAAKs8B,KAAKoT,mBAAqB17C,KAAKgM,KAAKs8B,KAAKoT,mBAAqB,KAE1F,EACA17C,KAAKmgD,qBAGL,IAAMC,EAAoBpgD,KAAKg+C,iBAAiBjgB,oBAOhD,OALAqiB,EAAkBx4C,SAAU,wBAG5B5H,KAAKg+C,iBAAiBh6C,iBAEfo8C,I,iCAGX,WAgCI,OA9BApgD,KAAKk+C,eAAiB,IAAIx7C,EAAAA,EAAO,SAAU,CACvCC,SAAU,SACVC,WAAY,aACZI,aAAchD,KAAKgM,KAAKs8B,KAAKqT,iBAAmB37C,KAAKgM,KAAKs8B,KAAKqT,iBAAmB,UAClF3R,YAAa,YACb/mC,YAAY,EACZC,QAAS,CACL,CACIC,MAAO,UACPC,KAAOzD,iBAAiBwB,KAAKkJ,OAAOgE,aAAa+pB,MAAM3f,SAE3D,CACItV,MAAO,UACPC,KAAOzD,iBAAiBwB,KAAKkJ,OAAOgE,aAAa+pB,MAAM1e,SAE3D,CACIvW,MAAO,QACPC,KAAOzD,iBAAiBwB,KAAKkJ,OAAOgE,aAAa+pB,MAAMjb,OAE3D,CACIha,MAAO,OACPC,KAAOzD,iBAAiBwB,KAAKkJ,OAAOgE,aAAa+pB,MAAMvZ,MAE3D,CACI1b,MAAO,QACPC,KAAOzD,iBAAiBwB,KAAKkJ,OAAOgE,aAAa+pB,MAAMioB,UAK5DrgD,KAAKk+C,eAAengB,oBAAoBn2B,SAAU,wB,oCAG7D,WAEI5H,KAAKs+C,kBAAoB,IAAI57C,EAAAA,EAAO,OAAX,GACrBC,SAAU,SACVC,WAAY,gBACZK,YAAY,EACZwvB,YAAa9yB,iBAAiBwB,KAAKkJ,OAAOgE,aAAa+pB,MAAMkoB,MAC7D3wC,WAAYhQ,iBAAiBwB,KAAKkJ,OAAOgE,aAAa+pB,MAAMzoB,WAC5D/L,gBAAgB,EAChBZ,aAAchD,KAAKgM,KAAKs8B,KAAKuT,oBAAsB77C,KAAKgM,KAAKs8B,KAAKuT,oBAAsB,IAPnE,cAQRl8C,iBAAiBwB,KAAK4a,OAAOvL,KAAKmZ,aAInD,IAAM42B,EAAqBvgD,KAAKs+C,kBAAkBvgB,oBAOlD,OALAwiB,EAAmB34C,SAAU,yBAG7B5H,KAAKs+C,kBAAkBt6C,iBAEhBu8C,I,oCAGX,WAEIvgD,KAAKo+C,kBAAoB,IAAI17C,EAAAA,EAAO,OAAX,GACrBC,SAAU,SACVC,WAAY,gBACZK,YAAY,EACZwvB,YAAY,WACZqT,WAAY,QACZC,cAAe,QACfniC,gBAAgB,EAChBZ,aAAchD,KAAKgM,KAAKs8B,KAAKsT,oBAAsB57C,KAAKgM,KAAKs8B,KAAKsT,oBAAsB,IARnE,cASRj8C,iBAAiBwB,KAAK4a,OAAOvL,KAAKgwC,aAInD,IAAMC,EAAqBzgD,KAAKo+C,kBAAkBrgB,oBAOlD,OALA0iB,EAAmB74C,SAAU,yBAG7B5H,KAAKo+C,kBAAkBp6C,iBAEhBy8C,I,0BAGX,WAEI,IAEIC,EAEJ,OAJgB1gD,KAAK89C,eAAer5C,YAKhC,IAAK,WACDi8C,EAAgB1gD,KAAK2gD,yBACrB,MACJ,IAAK,QAEDD,EAAgB1gD,KAAKg+C,iBAAiBr2C,WACtC,MACJ,QACI+4C,EAAgB,CAAEvgD,SAAS,EAAOmiB,QAAS3iB,iBAAiBwB,KAAKkJ,OAAOgE,aAAa+pB,MAAMoL,WAAWod,aAI9G,OAAOF,EAAcvgD,QAId,CAAEA,SAAS,GAHPugD,I,oCAMf,WACI,IAAIA,EAAgB1gD,KAAKs+C,kBAAkB32C,WAM3C,OAJK+4C,EAAcvgD,UACfugD,EAAiB1gD,KAAKo+C,kBAAkBz2C,YAGrC+4C,I,iCAGX,SAAqBv9C,EAAO09C,GAExB,OAAK19C,EAAQ,EACF,CAAEhD,SAAS,EAAOmiB,QAAS3iB,iBAAiBwB,KAAKkJ,OAAOgE,aAAa+pB,MAAMoL,WAAWsd,gBAG1F,CAAE3gD,SAAS,Q,mBAnnBpBk7C,G,mLCgJN,QA5IMntC,WACF,WAAavL,EAAU8J,GAAO,Y,4FAAA,SAC1BxL,IAAAA,KAAQwL,GAAO,SAAEI,EAAQb,GACrB,GAAKrJ,GAAYqJ,EAAKrJ,SAAU,CAE5B,IAAIqJ,EAAO,EAAK+0C,WAAYl0C,IAGdlM,EAAAA,EAAAA,IAAgB,UAAW,CACrCC,KAAM+B,IAGFX,OAAQgK,O,+CAK5B,SAAYa,GAER,IAAIb,EAAOrM,iBAAiBC,OAAO6M,MAAOI,GAGtCuZ,EAAYnlB,GAAAA,CAAG,SAAU,CACzB,MAAW,OACX,UAAW4L,IAGVb,EAAKiqC,WACN7vB,EAAUxe,SAAU,iBAGnBoE,EAAKs8B,KAAKiT,YACXn1B,EAAUxe,SAAU,sBAIjBrC,EAAAA,EAAAA,IAASyG,EAAKg1C,aACjBh1C,EAAKg1C,UAAYh1C,EAAKg1C,UAAUjqB,QAAS,eAAgBlqB,GAGzDuZ,EAAUrlB,QAASiL,EAAKg1C,YAI5B,IAAItP,EAAS1xC,KAAKwM,aACdR,EAAKU,gBACLV,EAAKrJ,SACLqJ,EAAKY,SACLC,GAGAo0C,EAASjhD,KAAKkhD,aAAcl1C,GAehC,OAbAoa,EAAUpkB,OAAQ0vC,GAClBtrB,EAAUpkB,OAAQi/C,GAElB76B,EAAU5kB,GAAI,uBAAuB,SAACsU,EAAG0T,GACrC,IAAI23B,EAAe/6B,EAAU9kB,KAAK,eAClCL,GAAAA,CAAGkgD,EAAa,IAAKh3C,QAAS,qCAAsCqf,MAQjEpD,I,0BAcX,SAAc1Z,EAAiB/J,EAAUiK,EAAUC,GAC/C,IAAIuZ,EAAYnlB,GAAAA,CAAG,UACfgI,EAAYhI,GAAAA,CAAG,SAAU,CAAE,MAAS,yBAGpC+K,EAAOrM,iBAAiBC,OAAO6M,MAAOI,GAIrCb,EAAKiqC,YACNvpC,EAAkB,MAGtB,IAAIe,EAAU,IAAIT,EAAAA,EAAgBrK,EAAU+J,EAAiBE,EAAUC,GACvEuZ,EAAUpkB,OAAQyL,GAElB,IAAIixB,EAAU,IAAIzxB,EAAAA,EAAgBP,GAClC0Z,EAAUpkB,OAAQ08B,GAGlB,IAAIuZ,EAAkBjsC,EAAKisC,gBAEvBmJ,EAAU,IAAIj0C,EAAAA,EAAeT,EAAiBurC,GAClDhvC,EAAMjH,OAAQo/C,GAEd,IAAIC,EAAgB,IAAIh0C,EAAAA,EAAoB1K,EAAU+J,EAAiBE,EAAUC,GACjF5D,EAAMjH,OAAQq/C,GACdj7B,EAAUpkB,OAAQiH,GAElB,IAAI0oC,EAAc1wC,GAAAA,CAAG,SAAU,CAAE,MAAS,kBAG1C,GAFAmlB,EAAUpkB,OAAQ2vC,GAED,UAAZhvC,IAAwBuI,EAAAA,EAAAA,IAAWvL,iBAAiBiO,KAAQjO,iBAAiBiO,GAAK,CACnF,IAAI0zC,EAAc,IAAIjG,EAAiB14C,EAAU+J,EAAiBE,EAAUC,EAAQuZ,GAEpFA,EAAUpkB,OAAQs/C,GAGtB,OAAOl7B,I,0BAUX,SAAcpa,GACV,IAAIoa,EAOJ,OALKpa,EAAKiqC,YACN7vB,EAAYnlB,GAAAA,CAAG,SAAU,CAAE,MAAS,iBAC1BmC,KAAMzD,iBAAiBwB,KAAKogD,aAGnCn7B,O,mBAxITlY,I,8UCkWN,QApWMsqB,WAqBL,WAAa3iB,GAAsB,IAAbiF,EAAa,uDAAJ,GA4C9B,OA5CkC,UAElC9a,KAAKwK,SAAW,CACf4b,UAAW,KACXo7B,mBAAoB,KACpBppB,MAAO,CACNhS,UAAW,KACXoT,IAAK,CACJpT,UAAW,KACXnd,MAAO,KACPwtC,QAAS,KACT1d,QAAS,CACR3S,UAAW,KACX5e,OAAQ,KACRyxB,QAAS,SAObj5B,KAAKwK,SAAS4b,UAAYnlB,GAAAA,CAAG,QAG7BjB,KAAKyhD,WAAY,EAGjBzhD,KAAK8a,OAAS7Z,IAAAA,QAAU,EAAM,CAC7BygD,aAAc,IACdvoB,KAAM,SACNwoB,cAAc,GACZ7mC,GAGH9a,KAAK6V,QAAU5U,IAAAA,OAAU,GAAI,CAC5B83B,QAAS,CACRvxB,OAAQ7H,iBAAiBwB,KAAKqG,SAE7BqO,GAGH7V,KAAKo4C,SAGEp4C,K,2CASR,WACC,IA8BI88C,EAkBA8E,EAhDAJ,EAAqBvgD,GAAAA,CAAG,SAAU,CAAE,MAAS,QAC7Cm3B,EAAQn3B,GAAAA,CAAG,SAAU,CAAE,MAAS,UAChC4gD,EAAW5gD,GAAAA,CAAG,SAAU,CAAE,MAAS,eAmBvC,IAhBKiK,EAAAA,EAAAA,IAAWlL,KAAK8a,OAAOqe,OAAU,CAAE,QAAS,SAAU,QAAS,eAAgB7C,SAAUt2B,KAAK8a,OAAOqe,OAEzGf,EAAMxwB,SAAN,iBAA2B5H,KAAK8a,OAAOqe,QAInCjuB,EAAAA,EAAAA,IAAWlL,KAAK8a,OAAOkvB,cAC3B5R,EAAMxwB,SAAN,iBAA2B5H,KAAK8a,OAAOkvB,cAIxChqC,KAAKwK,SAASg3C,mBAAqBA,EACnCxhD,KAAKwK,SAAS4tB,MAAMhS,UAAYgS,EAChCp4B,KAAKwK,SAAS4tB,MAAMoB,IAAIpT,UAAYy7B,GAG/B32C,EAAAA,EAAAA,IAAWlL,KAAK6V,QAAQ5M,OAAS,CACrC,IAAI64C,EAAa7gD,GAAAA,CAAG,SAAU,CAAE,MAAS,iBAAkBu9B,KAAMx+B,KAAK6V,QAAQ5M,OAC9E44C,EAAS7/C,OAAQ8/C,GAGjB9hD,KAAKwK,SAAS4tB,MAAMoB,IAAIvwB,MAAQ64C,EAKjC,IAAK52C,EAAAA,EAAAA,IAAWlL,KAAK6V,QAAQA,SAAW,CACvCinC,EAAe77C,GAAAA,CAAG,SAAU,CAAE,MAAS,mBAGvC,IACC67C,EAAa96C,OAAQhC,KAAK6V,QAAQA,SACjC,MAAQC,GACTgnC,EAAate,KAAMx+B,KAAK6V,QAAQA,SAGjCgsC,EAAS7/C,OAAQ86C,GAGjB98C,KAAKwK,SAAS4tB,MAAMoB,IAAI3jB,QAAUinC,GAK9B5xC,EAAAA,EAAAA,IAAWlL,KAAK6V,QAAQ4gC,WAC5BmL,EAAe3gD,GAAAA,CAAG,SAAU,CAAE,MAAS,mBAAoBu9B,KAAMx+B,KAAK6V,QAAQ4gC,SAG9Ez2C,KAAKwK,SAAS4tB,MAAMoB,IAAIid,QAAUmL,IAI9B12C,EAAAA,EAAAA,IAAWlL,KAAK8a,OAAO6mC,eAAkB3hD,KAAK8a,OAAO6mC,eACpDz2C,EAAAA,EAAAA,IAAWlL,KAAK6V,QAAQ4gC,UAC5BoL,EAAS7/C,OAAQ4/C,IAGb12C,EAAAA,EAAAA,IAAWlL,KAAK6V,QAAQA,UAC5BgsC,EAAS7/C,OAAQ86C,MAIb5xC,EAAAA,EAAAA,IAAWlL,KAAK6V,QAAQA,UAC5BgsC,EAAS7/C,OAAQ86C,IAGb5xC,EAAAA,EAAAA,IAAWlL,KAAK6V,QAAQ4gC,UAC5BoL,EAAS7/C,OAAQ4/C,IAKnB,IAAIG,EAAe9gD,GAAAA,CAAG,SAAU,CAAE,MAAS,mBACvC+3B,EAAe/3B,GAAAA,CAAG,YAAa,CAAE,MAAS,+BAAgCu9B,KAAMx+B,KAAK6V,QAAQkjB,QAAQvxB,QAOzG,GANAu6C,EAAa//C,OAAQg3B,GAGrBh5B,KAAKwK,SAAS4tB,MAAMoB,IAAIT,QAAQ3S,UAAY27B,EAC5C/hD,KAAKwK,SAAS4tB,MAAMoB,IAAIT,QAAQvxB,OAASwxB,GAEpC9tB,EAAAA,EAAAA,IAAWlL,KAAK6V,QAAQkjB,QAAQE,SAAW,CAC/C,IAAIC,EAAgBj4B,GAAAA,CAAG,YAAa,CAAE,MAAS,6BAA8Bu9B,KAAMx+B,KAAK6V,QAAQkjB,QAAQE,SACxG8oB,EAAa//C,OAAQk3B,GAGrBl5B,KAAKwK,SAAS4tB,MAAMoB,IAAIT,QAAQE,QAAUC,EAG3C2oB,EAAS7/C,OAAQ+/C,GAGjB3pB,EAAMp2B,OAAQ6/C,GACdL,EAAmBx/C,OAAQo2B,GAC3Bp4B,KAAKwK,SAAS4b,UAAUpkB,OAAQw/C,GAGhCvgD,GAAAA,CAAG,QAAS2G,SAAU,wBAGtB5H,KAAKoe,S,uBASN,SAAW4jC,GAAQ,WACdC,EAAgB,aAGpBjiD,KAAKgiD,OAAS,CACb1iB,gBAAgBp0B,EAAAA,EAAAA,IAAW82C,EAAO1iB,gBAAoB0iB,EAAO1iB,eAAiB2iB,EAC9EC,WAAah3C,EAAAA,EAAAA,IAAW82C,EAAOE,WAAiBF,EAAOE,UAAcD,EACrEriB,WAAa10B,EAAAA,EAAAA,IAAW82C,EAAOpiB,WAAiBoiB,EAAOpiB,UAAcqiB,EACrE5oB,WAAanuB,EAAAA,EAAAA,IAAW82C,EAAO3oB,WAAgB2oB,EAAO3oB,UAAc4oB,EACpEnoB,UAAa5uB,EAAAA,EAAAA,IAAW82C,EAAOloB,UAAgBkoB,EAAOloB,SAAamoB,IAG7D/2C,EAAAA,EAAAA,IAAW82C,EAAOloB,YACxB95B,KAAKgiD,OAAOloB,SAAW,WAGtB,EAAKqoB,SAKPniD,KAAKgiD,OAAO1iB,mB,qBASb,WACC,IAAI8iB,EAAYpiD,KAGhBA,KAAKqiD,SAGAriD,KAAKyhD,UAETzhD,KAAKmiD,MAAK,WACTC,EAAU53C,SAASg3C,mBAAmB9rC,YAIvC0sC,EAAU53C,SAASg3C,mBAAmB9rC,SAIvCzU,GAAAA,CAAG,QAASwI,YAAa,0B,kBAS1B,WACC,IAAI24C,EAAYpiD,MAGXkL,EAAAA,EAAAA,IAAWlL,KAAKwK,SAAS4tB,MAAMoB,IAAIT,QAAQvxB,SAC/CxH,KAAKwK,SAAS4tB,MAAMoB,IAAIT,QAAQvxB,OAAOhG,GAAI,SAAS,WACnD4gD,EAAUJ,OAAOloB,eAKd5uB,EAAAA,EAAAA,IAAWlL,KAAKwK,SAAS4tB,MAAMoB,IAAIT,QAAQE,UAC/Cj5B,KAAKwK,SAAS4tB,MAAMoB,IAAIT,QAAQE,QAAQz3B,GAAI,SAAS,WACpD4gD,EAAUJ,OAAO3oB,iB,oBAWpB,YACMnuB,EAAAA,EAAAA,IAAWlL,KAAKwK,SAAS4tB,MAAMoB,IAAIT,QAAQvxB,SAC/CxH,KAAKwK,SAAS4tB,MAAMoB,IAAIT,QAAQvxB,OAAO66C,OAAQ,UAG3Cn3C,EAAAA,EAAAA,IAAWlL,KAAKwK,SAAS4tB,MAAMoB,IAAIT,QAAQE,UAC/Cj5B,KAAKwK,SAAS4tB,MAAMoB,IAAIT,QAAQE,QAAQopB,OAAQ,W,kBAalD,WAAuB,IAAjBC,EAAiB,uDAAN,KACZF,EAAYpiD,KAYhBsiD,GAPKp3C,EAAAA,EAAAA,IAAWo3C,GACPA,EAGAtiD,KAAKgiD,OAAOE,UAMrBliD,KAAKyhD,WAAY,EAGjBzhD,KAAKwK,SAAS4tB,MAAMhS,UAAUm8B,OAAQH,EAAUtnC,OAAO4mC,aAAcY,K,kBAWtE,WAAuB,IAAjBA,EAAiB,uDAAN,KACZF,EAAYpiD,KAYhBsiD,GAPKp3C,EAAAA,EAAAA,IAAWo3C,GACPA,EAGAtiD,KAAKgiD,OAAOpiB,UAMrB5/B,KAAKyhD,WAAY,EAGjBzhD,KAAKwK,SAAS4tB,MAAMhS,UAAUo8B,QAASJ,EAAUtnC,OAAO4mC,aAAcY,GAGtErhD,GAAAA,CAAG,QAASwI,YAAa,0B,yBAW1B,WACC,OAAOzJ,KAAKwK,c,mBAhWRguB,I,mQCigBN,QA7fMiqB,WAEL,c,4FAAa,SAEZziD,KAAKwK,SAAW,CACfk4C,QAASzhD,GAAAA,CAAG,iCACZ0hD,aAAc,CACbC,SAAW,KACXC,UAAa,KACbjK,WAAa,KACb5f,aAAe,KACfkJ,SAAY,8BAEb4gB,eAAgB,CACfF,SAAW,KACXC,UAAa,KACbjK,WAAa,KACb5f,aAAe,KACfkJ,SAAY,kCAEbvR,OAAQ,MAIT3wB,KAAK+iD,gB,kDAGN,WACC,IAAI38B,EAAqBnlB,GAAAA,CAAG,SAAU,CAAE8G,GAAI,wBAC3C8N,EAAqB5U,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,qBAC3CC,EAAqBhiD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,oBAG5C,GAAqC,aAAhCrjD,iBAAiBC,OAAOgB,KAAqB,CAEjD,IAAIsiD,EAAmBjiD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,gBAC5CG,EAAqBliD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,yBAC3CI,EAAqBniD,GAAAA,CAAG,UAAW,CAAE+hD,MAAO,sBAC5CK,EAAqBpiD,GAAAA,CAAG,OAAQ,CAAE+hD,MAAO,gCACzCM,EAAqBriD,GAAAA,CAAG,UAAW,CAAE+hD,MAAO,sBAAuB5/C,KAAMzD,iBAAiBwB,KAAKw4B,QAAQgpB,cAGxGhjD,iBAAiBC,OAAO+5B,QAAQgpB,cAAgE,GAAjDhjD,iBAAiBC,OAAO+5B,QAAQgpB,aAAqB,GAAKhjD,iBAAiBC,OAAO+5B,QAAQgpB,aACzI,IAAIY,GAAkBh+C,EAAAA,EAAAA,IAAS5F,iBAAiBC,OAAO+5B,QAAQgpB,cAAiBhjD,iBAAiBwB,KAAKw4B,QAAQ6pB,UAAY7jD,iBAAiBC,OAAO+5B,QAAQgpB,aAEtJc,EAAqBxiD,GAAAA,CAAG,UAAW,CAAE+hD,MAAO,uBAAwB5/C,KAAMmgD,GAC7EG,EAAqBziD,GAAAA,CAAG,UAAW,CAAE+hD,MAAO,sBAAuB5/C,KAAMzD,iBAAiBwB,KAAKwiD,MAC/FC,EAAqB3iD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,wBAC3Ca,EAAqB5iD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,0BAE5ChjD,KAAKwK,SAASm4C,aAAaC,SAAYc,EACvC1jD,KAAKwK,SAASm4C,aAAaE,UAAYe,EAEvC,IAAIE,EAAoB,IAAIphD,EAAAA,EAAO,MAAO,CACzCM,aAAcrD,iBAAiBC,OAAO+5B,QAAQgpB,aAC9Ct9C,YAAc1F,iBAAiBwB,KAAKw4B,QAAQoqB,WAC5CtxB,YAAc9yB,iBAAiBwB,KAAKw4B,QAAQ6pB,YAC1C,GAAM,SAAUrgD,EAAO6gD,GAGzB,IAAIh8C,EAAW,CACd7H,SAAS,EACTmiB,QAAS,IAYV,OARKnf,GAAS,EACb6E,EAAS7H,SAAU,EAGnB6H,EAASsa,QAAU3iB,iBAAiBwB,KAAKw4B,QAAQsqB,YAI3Cj8C,KAGRhI,KAAKkkD,WAAiBJ,EAEtB,IAAIK,EAAqBljD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,yBAC9CoB,EAAqBnjD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,6BAA8B5/C,KAAMzD,iBAAiBwB,KAAKmG,MACrG+8C,EAAqBpjD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,+BAAgC5/C,KAAMzD,iBAAiBwB,KAAKqG,QAExGxH,KAAKwK,SAASm4C,aAAa/J,WAAewL,EAC1CpkD,KAAKwK,SAASm4C,aAAa3pB,aAAeqrB,EAE1CF,EAAgBniD,OAAQoiD,GACxBD,EAAgBniD,OAAQqiD,GAExBR,EAAkB7hD,OAAQ8hD,EAAchgD,kBACxC+/C,EAAkB7hD,OAAQmiD,GAC1BP,EAAe5hD,OAAQ6hD,GAEvBT,EAAgBphD,OAAQqhD,GACxBF,EAAgBnhD,OAAQohD,GACxBD,EAAgBnhD,OAAQshD,GACxBH,EAAgBnhD,OAAQyhD,GACxBN,EAAgBnhD,OAAQ0hD,GAExBR,EAASlhD,OAAQmhD,GACjBD,EAASlhD,OAAQ4hD,GAEjB/tC,EAAQ7T,OAAQkhD,GAGjB,IAAIJ,EAAiB9iD,KAAK8iD,iBAC1BjtC,EAAQ7T,OAAQ8gD,GAGhB,IAAIwB,EAAuBrjD,GAAAA,CAAG,SAAW,CAAE+hD,MAAO,gBACjDuB,EAAuBtjD,GAAAA,CAAG,SAAW,CAAE+hD,MAAO,yBAC9CwB,EAAuBvjD,GAAAA,CAAG,UAAW,CAAE+hD,MAAO,sBAC9CyB,EAAuBxjD,GAAAA,CAAG,OAAW,CAAE+hD,MAAO,oCAC9C0B,EAAuBzjD,GAAAA,CAAG,UAAW,CAAE+hD,MAAO,sBAAuB5/C,KAAMzD,iBAAiBwB,KAAKw4B,QAAQwhB,YACzGwJ,EAAuB1jD,GAAAA,CAAG,UAAW,CAAE+hD,MAAO,uBAC9C4B,EAAuB3jD,GAAAA,CAAE,sBAAD,QACXoI,EAAAA,EAAAA,IAAoB,gEAAiE,CAC7E,WAAe,oBACf,WAAe,kBACf,YAAe,8BAJZ,yHAQY,QAAhC1J,iBAAiBC,OAAOgB,MAC5B+jD,EAAmBvhD,KAAMzD,iBAAiBwB,KAAKg6C,WAAW0J,gBAGtB,aAAhCllD,iBAAiBC,OAAOgB,MAC5B+jD,EAAmBvhD,KAAMzD,iBAAiBwB,KAAKg6C,WAAW2J,oBAG3DN,EAAqBxiD,OAAQyiD,GAC7BF,EAAqBviD,OAAQwiD,GAC7BD,EAAqBviD,OAAQ0iD,GAC7BH,EAAqBviD,OAAQ2iD,GAC7BJ,EAAqBviD,OAAQ4iD,GAC7BN,EAActiD,OAAQuiD,GAEtB1uC,EAAQ7T,OAAQsiD,GAGhB,IAAIS,EAAkB9jD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,gBAC3CgC,EAAqB/jD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,yBAC3CiC,EAAqBhkD,GAAAA,CAAG,UAAW,CAAE+hD,MAAO,sBAC5CkC,EAAqBjkD,GAAAA,CAAG,OAAQ,CAAE+hD,MAAO,kCACzCmC,EAAqBlkD,GAAAA,CAAG,UAAW,CAAE+hD,MAAO,sBAAuB5/C,KAAMzD,iBAAiBwB,KAAKw4B,QAAQyrB,WACvGC,EAAqBpkD,GAAAA,CAAG,UAAW,CAAE+hD,MAAO,uBAAwB5/C,KAAMzD,iBAAiBC,OAAO+5B,QAAQyrB,WAE3GH,EAAkBjjD,OAAQkjD,GAC1BF,EAAkBhjD,OAAQijD,GAC1BD,EAAkBhjD,OAAQmjD,GAC1BH,EAAkBhjD,OAAQqjD,GAC1BN,EAAW/iD,OAAQgjD,GAEnBnvC,EAAQ7T,OAAQ+iD,GAGhB,IAAIO,EAAqBrkD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,gBAC9CuC,EAAwBtkD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,yBAC9CwC,EAAwBvkD,GAAAA,CAAG,OAAQ,CAAE+hD,MAAO,qDAAsD7R,KAAMxxC,iBAAiBC,OAAO+5B,QAAQ8rB,YAAY1uB,QAAS,SAAU,OAAS3zB,KAAMzD,iBAAiBwB,KAAKw4B,QAAQ+rB,YAErNH,EAAqBvjD,OAAQwjD,GAC7BF,EAActjD,OAAQujD,GAEtB1vC,EAAQ7T,OAAQsjD,GAIhB,IAAIK,EAAqB1kD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,kCAC9C4C,EAAqB3kD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,yBAC3C6C,EAAqB5kD,GAAAA,CAAG,OAAQ,CAAE+hD,MAAO,gCAAiC7R,KAAMxxC,iBAAiBC,OAAO+5B,QAAQmsB,YAAY/uB,QAAS,SAAU,OAAS3zB,KAAMzD,iBAAiBwB,KAAKw3B,QAAQmtB,aAC5LC,EAAqB9kD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,0BAExCgD,EAAqB,IAAItjD,EAAAA,EAAO,WAAY,CACtCsiC,MAAO,YACPC,MAAO,QACPtU,OAAQ,CACJnvB,GAAK7B,iBAAiBwB,KAAKg2C,OAAO8O,WAClCt8C,IAAKhK,iBAAiBwB,KAAKg2C,OAAO+O,aAEtCljD,aAAcrD,iBAAiBC,OAAO24B,SAIhD54B,iBAAiBC,OAAO+5B,QAAQC,aAAeosB,EAE/C,IAAIG,EAAwBH,EAAmBliD,iBAC/C9D,KAAKgmD,mBAAuBA,EAE5BhmD,KAAKwK,SAASmmB,OAAWw1B,EAEzBP,EAAc5jD,OAAQ6jD,GACtBE,EAAe/jD,OAAQmkD,GACvBR,EAAU3jD,OAAQ4jD,GAClBD,EAAU3jD,OAAQ+jD,GAElB9C,EAAOjhD,OAAQ2jD,GAGfv/B,EAAUpkB,OAAQ6T,GAClBuQ,EAAUpkB,OAAQihD,GAGlBjjD,KAAKwK,SAASk4C,QAAQlkB,KAAMpY,GAG5B,IAAI5lB,EAAAA,EAGJR,KAAKoe,OAGLpe,KAAKomD,mB,4BAGN,WAEC,IAAIC,EAAyBplD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,gBAClDsD,EAA2BrlD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,yBACjDuD,EAA2BtlD,GAAAA,CAAG,UAAW,CAAE+hD,MAAO,sBAClDwD,EAA2BvlD,GAAAA,CAAG,OAAQ,CAAE+hD,MAAO,kCAC/CyD,EAA2BxlD,GAAAA,CAAG,UAAW,CAAE+hD,MAAO,sBAAuB5/C,KAAMzD,iBAAiBwB,KAAKw4B,QAAQmpB,gBAG9GnjD,iBAAiBC,OAAO+5B,QAAQmpB,gBAAoE,GAAnDnjD,iBAAiBC,OAAO+5B,QAAQmpB,eAAuB,GAAKnjD,iBAAiBC,OAAO+5B,QAAQmpB,eAC7I,IAAI4D,GAAwBnhD,EAAAA,EAAAA,IAAS5F,iBAAiBC,OAAO+5B,QAAQmpB,gBAAmBnjD,iBAAiBwB,KAAKw4B,QAAQ6pB,UAAY7jD,iBAAiBC,OAAO+5B,QAAQmpB,eAE9J6D,EAA2B1lD,GAAAA,CAAG,UAAW,CAAE+hD,MAAO,uBAAwB5/C,KAAMsjD,GACnFE,EAA2B3lD,GAAAA,CAAG,UAAW,CAAE+hD,MAAO,sBAAuB5/C,KAAMzD,iBAAiBwB,KAAKwiD,MACrGkD,EAA2B5lD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,wBACjD8D,EAA2B7lD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,0BAElDhjD,KAAKwK,SAASs4C,eAAeF,SAAYgE,EACzC5mD,KAAKwK,SAASs4C,eAAeD,UAAYgE,EAEzC,IAAIE,EAA0B,IAAIrkD,EAAAA,EAAO,MAAO,CAC/CM,aAAcrD,iBAAiBC,OAAO+5B,QAAQmpB,eAC9Cz9C,YAAc1F,iBAAiBwB,KAAKw4B,QAAQoqB,WAC5CtxB,YAAc9yB,iBAAiBwB,KAAKw4B,QAAQ6pB,YAC1C,GAAM,SAAUrgD,EAAO6gD,GAGzB,IAAIh8C,EAAW,CACd7H,SAAS,EACTmiB,QAAS,IAYV,OARKnf,GAAS,EACb6E,EAAS7H,SAAU,EAGnB6H,EAASsa,QAAU3iB,iBAAiBwB,KAAKw4B,QAAQsqB,YAI3Cj8C,KAGRhI,KAAKgnD,iBAAuBD,EAE5B,IAAIE,EAA2BhmD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,yBACpDkE,EAA2BjmD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,6BAA8B5/C,KAAMzD,iBAAiBwB,KAAKmG,MAC3G6/C,EAA2BlmD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,+BAAgC5/C,KAAMzD,iBAAiBwB,KAAKqG,QAqB9G,OAnBAxH,KAAKwK,SAASs4C,eAAelK,WAAesO,EAC5ClnD,KAAKwK,SAASs4C,eAAe9pB,aAAemuB,EAE5CF,EAAsBjlD,OAAQklD,GAC9BD,EAAsBjlD,OAAQmlD,GAE9BL,EAAwB9kD,OAAQ+kD,EAAoBjjD,kBACpDgjD,EAAwB9kD,OAAQilD,GAChCJ,EAAqB7kD,OAAQ8kD,GAE7BP,EAAsBvkD,OAAQwkD,GAC9BF,EAAsBtkD,OAAQukD,GAC9BD,EAAsBtkD,OAAQykD,GAC9BH,EAAsBtkD,OAAQ2kD,GAC9BL,EAAsBtkD,OAAQ4kD,GAE9BP,EAAerkD,OAAQskD,GACvBD,EAAerkD,OAAQ6kD,GAEhBR,I,4BAGR,WAEM1mD,iBAAiBC,OAAO24B,SAAY54B,iBAAiBC,OAAOO,SAEhER,iBAAiBC,OAAO+5B,QAAQC,aAAaztB,UAAU,K,oCAIzD,SAAuBi7C,EAAUC,EAAaC,GAE7CF,EAASxE,SAASphD,GAAI,SAAS,WAE9B4lD,EAASvE,UAAU0E,YAAa,QAIjCH,EAASpuB,aAAax3B,GAAI,SAAS,WAElC4lD,EAASvE,UAAU0E,YAAa,KAAK,WAEpC,IAAI9E,QAKN2E,EAASxO,WAAWp3C,GAAI,SAAS,WAKhC,GAHiB8lD,EAAW3/C,WAGZxH,QAAS,CAGxBinD,EAASxO,WAAWhxC,SAAU,sCAG9B,IAAI4/C,EAAgBF,EAAW7iD,YAE1Bc,EAAAA,EAAAA,IAASiiD,KACbA,GAAiB,IAGlB3/C,EAAAA,EAAAA,IAAUu/C,EAASllB,SAAU,CAC5Bn2B,QAAcpM,iBAAiBC,OAAOmI,GACtC0/C,2BAA4BD,IAC1B,WAEG,8BAAgCJ,EAASllB,SAC7CviC,iBAAiBC,OAAO+5B,QAAQgpB,aAAe6E,EAE/C7nD,iBAAiBC,OAAO+5B,QAAQmpB,eAAiB0E,EAIlDJ,EAASvE,UAAU0E,YAAa,KAAK,WAEpC,IAAI9E,QAEH,WACF5hD,QAAQC,IAAK,+CAGbwmD,EAAWn7C,SAAUk7C,GAGrBD,EAASxO,WAAWnvC,YAAa,6CAMpC69C,EAAW1xB,WAAWp0B,GAAI,SAAS,SAAEC,GAEd,IAAjBA,EAAM6nB,SAEV89B,EAASxO,WAAWzuC,QAAS,c,kBAKhC,WAAM,WAEgC,aAAhCxK,iBAAiBC,OAAOgB,MAE5BZ,KAAK0nD,uBAAwB1nD,KAAKwK,SAASm4C,aAAchjD,iBAAiBC,OAAO+5B,QAAQgpB,aAAc3iD,KAAKkkD,YAoE7GlkD,KAAK0nD,uBAAwB1nD,KAAKwK,SAASs4C,eAAgBnjD,iBAAiBC,OAAO+5B,QAAQmpB,eAAgB9iD,KAAKgnD,kBAEhHhnD,KAAKwK,SAASmmB,OAAOnvB,GAAI,0BAA0B,WAElD,EAAKwkD,mBAAmBz6C,wBAGxB,IAAIisC,EAAa,EAAKwO,mBAAmBvhD,WACxCkjD,EAAanQ,EAAW,UAAY,SAGhB9pC,EAAAA,EAAAA,IAAa,MAAO,CACvCC,OAAQ,CACPhL,SAAU,cAMW60C,GAAcA,GAAY73C,iBAAiBC,OAAOO,SAEzE0H,EAAAA,EAAAA,IAAU,qBAAsB,CAC/BkE,QAAWpM,iBAAiBC,OAAOmI,GACnC4vC,YAAagQ,IACX,WAEFhoD,iBAAiBC,OAAO24B,OAASif,EAGjC,IAAIiL,KACF,WAEF5hD,QAAQC,IAAK,iDAGbkU,YAAY,WAEX,EAAKgxC,mBAAmB95C,uBAGxB,EAAK85C,mBAAmB75C,UAAU,GAAO,KACvC,SAWJxM,iBAAiBC,OAAOW,WAAY,EAGpC,IAAIC,EAAAA,EAGJwU,YAAY,WAEX,EAAKgxC,mBAAmB95C,uBAGxB,EAAK85C,mBAAmB75C,UAAU,GAAO,KACvC,c,mBAvfDs2C,I,iPCkDN,QA3DMjiD,WACL,c,4FAAa,SAEZR,KAAKwK,SAAW,CACf4b,UAAWnlB,GAAAA,CAAG,oBAKwB,GAAlCjB,KAAKwK,SAAS4b,UAAUrc,SAC5B/J,KAAK4nD,kBACL5nD,KAAKwK,SAAS4b,UAAYnlB,GAAAA,CAAG,oBAI9BjB,KAAK6nD,iBAGL7nD,KAAK8nD,gBAGAnoD,iBAAiBC,OAAOW,WAE5BP,KAAK+nD,c,mDAIP,WACC/nD,KAAKwK,SAAS4b,UAAU5Y,U,6BAGzB,WAEI,IAAImrC,EAAkB13C,GAAAA,CAAG,SAAU,CAAE8G,GAAI,iBAAkBi7C,MAAO,QAClE/hD,GAAAA,CAAG,wBAAyBF,QAAS43C,K,yBAGzC,WAIC,KAAOpzC,EAAAA,EAAAA,IAAS5F,iBAAiBC,OAAO0iB,QAAQnL,OAAS,CAExD,IAAI8pC,EAAShgD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,+BAAgC5/C,KAAMzD,iBAAiBC,OAAO0iB,QAAQnL,OACzGnX,KAAKwK,SAAS4b,UAAUpkB,OAAQi/C,M,2BAIlC,WAIC,KAAO17C,EAAAA,EAAAA,IAAS5F,iBAAiBC,OAAO0iB,QAAQm0B,SAAW,CAC1D,IAAIwK,EAAShgD,GAAAA,CAAG,SAAU,CAAE+hD,MAAO,iCAAkC5/C,KAAMzD,iBAAiBC,OAAO0iB,QAAQm0B,SAC3Gz2C,KAAKwK,SAAS4b,UAAUpkB,OAAQi/C,S,mBAtD7BzgD,I,iPCsMN,QArMMwnD,WACL,WAAaC,I,4FAAa,SAEzBjoD,KAAKioD,YAAcA,EAGnBjoD,KAAKC,SAGLD,KAAKu5B,cAGLv5B,KAAKkoD,mB,2CAGN,WAEC,IAAMC,EAAsBlnD,GAAAA,CAAE,oSAAD,OAMpBtB,iBAAiBwB,KAAKg6C,WAAWlyC,MANb,41BAkBftJ,iBAAiBwB,KAAKg6C,WAAW0J,eAlBlB,kJAqBfllD,iBAAiBwB,KAAKg6C,WAAWiN,sBArBlB,q2BAkCfzoD,iBAAiBwB,KAAKg6C,WAAW2J,mBAlClB,kJAqCfnlD,iBAAiBwB,KAAKg6C,WAAWkN,0BArClB,yPA6CpB1oD,iBAAiBwB,KAAKg6C,WAAWmN,sBA7Cb,uMAgDwE3oD,iBAAiBwB,KAAK83B,QAhD9F,+GAyD7Bh4B,GAAAA,CAAG,QAASe,OAAQmmD,K,yBAGrB,WAECnoD,KAAK28B,UAAY,CAChBvW,UAAcnlB,GAAAA,CAAG,sBACjBsnD,KAActnD,GAAAA,CAAG,2BACjBw1C,QAAcx1C,GAAAA,CAAG,kDACjBunD,aAAcvnD,GAAAA,CAAG,uC,8BAInB,WAAkB,WAEjBjB,KAAK28B,UAAU4rB,KAAK/mD,GAAI,UAAU,SAAEC,GAEnCA,EAAM8d,iBAGN,IAAM47B,EAAa,EAAKxe,UAAU4rB,KAAKjnD,KAAM,yCAA0Csb,OAGhFrX,EAAAA,EAAAA,IAAS41C,GAaf,EAAKsN,UAAW9oD,iBAAiBwB,KAAKg6C,WAAWuN,uBAX5C,CAAE,OAAQ,aAAcpyB,SAAU6kB,GAEtC,EAAKwN,eAAgBxN,GAIrB,EAAKsN,UAAW9oD,iBAAiBwB,KAAKg6C,WAAWyN,kC,4BAUrD,SAAgBzN,GAAY,WAKrBv5C,EAAO,CACZmK,QAAapM,iBAAiBC,OAAOmI,GACrC8gD,YAAa1N,GAIdn7C,KAAK28B,UAAU6rB,aAAa5gD,SAAU,uCAGtCC,EAAAA,EAAAA,IAZiB,0BAYGjG,GACnB,SAAEoG,GAED,GAAKA,EAAS6oC,QAAS,CAItB,EAAKlU,UAAUvW,UAAU1Q,SAGzB/V,iBAAiBC,OAAOgB,KAAOu6C,EAG/B,IAAI2N,EAAwB7nD,GAAAA,CAAG,+DAG3B8nD,EAAuBppD,iBAAiBwB,KAAKgJ,QAAQ6+C,aACpB,aAAhCrpD,iBAAiBC,OAAOgB,OAC5BmoD,EAAuBppD,iBAAiBwB,KAAKgJ,QAAQ8+C,iBAItDH,EAAsB1lD,KAAM2lD,GAG5B,EAAKd,YAAa9M,QAIlB,EAAKsN,UAAW9oD,iBAAiBwB,KAAKg6C,WAAW+N,4BAGnD,SAAElhD,GACDnH,QAAQC,IAAK,gDAGb,EAAK67B,UAAU6rB,aAAa/+C,YAAa,sCAGzC,EAAKg/C,UAAW9oD,iBAAiBwB,KAAKg6C,WAAW+N,8B,uBAKpD,SAAWC,GAEV,IAAMC,EAASnoD,GAAAA,CAAE,2DAAD,OAEXkoD,EAFW,yBAOVE,EAAqBrpD,KAAK28B,UAAUvW,UAAU9kB,KAAM,6BACrD+nD,EAAmBt/C,OAAS,GAChCs/C,EAAmB3zC,SAIpB0zC,EAAO7rB,YAAav9B,KAAK28B,UAAU8Z,SAGnCzhC,YAAW,WACVo0C,EAAOxhD,SAAU,qCACf,S,mBAjMCogD,I,iQCqDN,QA9CMrX,WACF,c,4FAAa,UAKKhwC,EAAAA,EAAAA,IAAgB,UAAW,CAAEC,KAAM,YACzC4M,QAGR,IAAI4nC,GAAW1nC,EAAAA,EAAAA,IAAa,MAAO,CAC/BC,OAAQ,CACJhL,SAAU,cAKX4C,EAAAA,EAAAA,IAAS6vC,IAcZ,IAAI9qC,EAAAA,EAAyB,WAG7B,IAAI6D,EAAAA,EAAe,aAfnB,IAAID,EAAAA,EAAc,UAAWknC,GAG7B,IAAIjnC,EAAAA,EAAe,WAGdnO,KAAKoO,qCAEN,IAAI9D,EAAAA,EAAyB,Y,sEAczC,WACI,OAA+D,IAAxDkE,EAAAA,EAAAA,IAAiB,KAAM,8BAAsG,YAAhEA,EAAAA,EAAAA,IAAiB,KAAM,0C,mBA1C7FmiC,I,ulBCsLN,QA5LM2Y,WACL,WAAa9zB,I,6FAAuE,SAEnFx1B,KAAKuhC,cAAe/L,GAGpBx1B,KAAKy4C,e,kDAaN,SAAejjB,GAEPtqB,EAAWsqB,EAAWoP,YACrBr/B,EAASiwB,EAAW3yB,OAI1B2yB,EAAWoP,UAAW,EAHtBpP,EAAWoP,UAAW,GAQjB15B,EAAWsqB,EAAW+P,kBACrBhgC,EAASiwB,EAAWnwB,aAI1BmwB,EAAW+P,gBAAiB,EAH5B/P,EAAW+P,gBAAiB,GAO9BvlC,KAAKw1B,WAAaA,I,0BAWnB,WAECx1B,KAAKmH,OAASnH,KAAKw1B,WAAWruB,OAAOxB,KAAI,SAAE4jD,GAE1C,OAAO,IAAI7mD,EAAAA,EAAO6mD,EAAU1kD,UAAW0kD,Q,+BAUzC,WAEC,IAGMrnD,EAAajB,GAAAA,CAAE,kCAGrB,GAAKjB,KAAKw1B,WAAWoP,SAAU,CAE9B,IAAM4kB,EAASvoD,GAAAA,CAAE,kCAAD,OAAqCjB,KAAKw1B,WAAW3yB,MAArD,WAGhBX,EAAWF,OAAQwnD,GAIpB,IAAMC,EAAaxoD,GAAAA,CAAE,0CAarB,GAXAjB,KAAKmH,OAAOhB,SAAQ,SAAEE,GAErB,IAAMqjD,EAAgBrjD,EAAM03B,oBAG5B0rB,EAAWznD,OAAQ0nD,MAGpBxnD,EAAWF,OAAQynD,GAGdzpD,KAAKw1B,WAAWoP,SAAU,CAE9B,IAAM+kB,EAAe1oD,GAAAA,CAAE,wCAAD,OAA2CjB,KAAKw1B,WAAWnwB,YAA3D,WAGtBnD,EAAWF,OAAQ2nD,GAQpB,OAJA3pD,KAAKohC,YAAcl/B,EACRA,I,sBAcZ,WAEC,IAAI0nD,EAAc,GASlB,OANA5pD,KAAKmH,OAAOhB,SAAQ,SAAEE,GAErBujD,EAAavjD,EAAMwjD,cAAiBxjD,EAAM5B,cAIpCmlD,I,4BAWR,WACC,OAAO5pD,KAAKohC,c,2BAWb,WACC,OAAOphC,KAAKw1B,a,sBAab,WAA8B,IAApBwQ,IAAoB,yDAEzB8jB,EAAmB,CACtB3pD,SAAS,EACTmiB,QAAS,IAaV,OATAtiB,KAAKmH,OAAOhB,SAAQ,SAAEE,GAErByjD,EAAkBzjD,EAAMwjD,cAAiBxjD,EAAMsB,SAAUq+B,GAGzD8jB,EAAiB3pD,QAAU2pD,EAAiB3pD,SAAW2pD,EAAkBzjD,EAAMwjD,cAAe1pD,WAIxF2pD,O,mBAxLHR,G,sKCAN,IAAMS,EAAW9b,EAAS,KA4rB1B,QA1rBM+b,WACL,WAAax0B,I,6FAAuE,SAEnFx1B,KAAKuhC,cAAe/L,GAGpBx1B,KAAKy4C,e,kDAaN,SAAejjB,GAEPtqB,EAAWsqB,EAAWoP,YACrBr/B,EAASiwB,EAAW3yB,OAI1B2yB,EAAWoP,UAAW,EAHtBpP,EAAWoP,UAAW,GAQjB15B,EAAWsqB,EAAW+P,kBACrBhgC,EAASiwB,EAAWnwB,aAI1BmwB,EAAW+P,gBAAiB,EAH5B/P,EAAW+P,gBAAiB,GAO9BvlC,KAAKw1B,WAAaA,I,0BAWnB,WAEC,IAAMy0B,EAAoBjqD,KAAKw1B,WAAWruB,OAGtC+iD,EAAa,GAGjB,GAAK70C,MAAM80C,QAASnqD,KAAKw1B,WAAWxyB,eAAkBhD,KAAKw1B,WAAWxyB,aAAa+G,OAAS,EAK3F/J,KAAKw1B,WAAWxyB,aAAamD,SAAQ,SAAE2yC,EAAKjzC,GAE3C,IAAIukD,EAAYt+B,KAAKC,MAAOD,KAAKE,UAAWi+B,IAI5CG,EAAYA,EAAUzkD,KAAI,SAAEU,EAAOR,GAYlC,OAVKqF,EAAW4tC,EAAKzyC,EAAMzD,aAE1ByD,EAAMrD,aAAe81C,EAAKzyC,EAAMzD,YAIhCyD,EAAMrD,aAAe,GAIfqD,KAIR6jD,EAAW1mD,KAAM4mD,WAMlB,GAAKpqD,KAAKw1B,WAAWvyB,WAAY,CAEhC,IAAIonD,EAAWv+B,KAAKC,MAAOD,KAAKE,UAAWi+B,IAG3CI,EAASrnD,aAAe,GAGxBknD,EAAW1mD,KAAM6mD,GAQnBH,EAAaA,EAAWvkD,KAAI,SAAEmzC,EAAKjzC,GAiBlC,OAfMizC,EAAInzC,KAAI,SAAES,EAAaP,GAW5B,OATAO,EAAYvD,MAAQ,GAGpBuD,EAAYf,YAAc,GAGd,IAAI3C,EAAAA,EAAO0D,EAAYvB,UAAWuB,SAWhDpG,KAAK64C,UAAYqR,I,+BASlB,WAEC,IAAIliD,EAGE9F,EAAajB,GAAAA,CAAE,qCAGrB,GAAKjB,KAAKw1B,WAAWoP,SAAU,CAE9B,IAAM4kB,EAASvoD,GAAAA,CAAE,2DAAD,OAEXjB,KAAKw1B,WAAW3yB,MAFL,uBAGX7C,KAAKw1B,WAAWvyB,WAAhB,yDAHW,6BAQhBf,EAAWF,OAAQwnD,GAIpB,IAAIc,EAAStqD,KAAKuqD,iBAOlB,GANAroD,EAAWF,OAAQsoD,GAGnBA,EAAOtoD,OAAQf,GAAAA,CAAE,4CAGZjB,KAAKw1B,WAAW+P,eAAgB,CAEpC,IAAMokB,EAAe1oD,GAAAA,CAAE,2CAAD,OAA8CjB,KAAKw1B,WAAWnwB,YAA9D,WAGtBnD,EAAWF,OAAQ2nD,GAgBpB,OAZA3pD,KAAKohC,YAAcl/B,EACnB8F,EAAW9F,EAGNlC,KAAK64C,UAAU9uC,OAAS,GAC5B/J,KAAKwqD,mBAINxqD,KAAKyqD,aAGEziD,I,wBAOR,WAAY,WAEXhI,KAAKohC,YAAY5/B,GAAI,SAAS,SAAEC,GAE/B,EAAKipD,qC,2CAUP,WAEC,IAAIvjD,EAAS,GAGbnH,KAAK64C,UAAU1yC,SAAQ,SAAEikD,GAExB,IAAItR,EAAM,GAGVsR,EAAUjkD,SAAQ,SAAEzD,GAEnBo2C,EAAIt1C,KAAMd,EAAM8yB,eAIjBruB,EAAO3D,KAAMs1C,MAId94C,KAAKw1B,WAAWruB,OAASA,I,8BAO1B,WAAkB,WAGjB4iD,EAAU/pD,KAAKohC,YAAY9/B,KAAM,qCAAuC,CACvEqpD,sBAAsB,EACtBC,OAAQ,iDACRn4B,YAAa,oBAAF,OAAyBzyB,KAAK64C,UAAU,GAAG9uC,OAAS,EAApD,sBACX8gD,eAAgB,SAAEC,EAAgBC,GACjC,MAAO,CACNr4C,SAAUo4C,EAAejlD,MACzB24B,KAAUssB,EAAetsB,SAM5Bx+B,KAAKohC,YAAY9/B,KAAM,qCAAsCE,GAAI,cAAc,SAAEC,GAEhF,IAAIupD,EAAW,GAGf/pD,IAAAA,KAAQQ,EAAMwpD,OAAOC,YAAYz+C,OAAO,SAAE5G,EAAOizC,GAChDkS,EAASxnD,KAAMvC,GAAAA,CAAG63C,GAAMl3C,KAAM,aAI/B,IAAIupD,EAAoB,GACxBH,EAAS7kD,SAAQ,SAAEilD,GAClBD,EAAkB3nD,KAAM,EAAKq1C,UAAWuS,OAEzC,EAAKvS,UAAYsS,EAGjB,EAAKE,gB,4BAUP,WAAgB,WAETf,EAASrpD,GAAAA,CAAE,+UAcbqqD,EAAU,GAGdtrD,KAAKw1B,WAAWruB,OAAOhB,SAAQ,SAAEojD,EAAW1jD,GAE3C,IAAMoD,EAAQiC,EAAWq+C,EAAU1mD,OAAU0mD,EAAU1mD,MAAQ,GAGzDI,IAAaiI,EAAWq+C,EAAUtmD,aAAesmD,EAAUtmD,WAG3DoC,EAAc6F,EAAWq+C,EAAUlkD,aAAgBkkD,EAAUlkD,YAAc,GAGjFimD,EAAQ9nD,KAAK,CACZyF,MAAaA,EACb5D,YAAaA,EACbpC,WAAaA,OAKf,IAAMsoD,EAAWtqD,GAAAA,CAAE,aAGnBsqD,EAASvpD,OAAQf,GAAAA,CAAE,iHAGnBqqD,EAAQnlD,SAAQ,SAAEqlD,EAAe3lD,GAEhC,IAAI4lD,EAAiBxqD,GAAAA,CAAE,8DAGhBsE,EAASimD,EAAcviD,QAC7BwiD,EAAezpD,OAAQf,GAAAA,CAAE,yFAAD,OAEnBuqD,EAAcviD,MAFK,yBAGnBuiD,EAAcvoD,WAAd,6EAHmB,kCASlBsC,EAASimD,EAAcnmD,cAC7BomD,EAAezpD,OAAQf,GAAAA,CAAE,+FAAD,OAEnBuqD,EAAcnmD,YAFK,kCAQzBkmD,EAASvpD,OAAQypD,MAIlBF,EAASvpD,OAAQf,GAAAA,CAAE,iHAGOqpD,EAAOhpD,KAAM,wCACrBU,OAAQupD,GAG1B,IAAMG,EAAQpB,EAAOhpD,KAAM,qCAGrBqqD,EAAe3rD,KAAK64C,UAAU9uC,OA8DpC,GA3DA/J,KAAK64C,UAAU1yC,SAAQ,SAAE2yC,EAAKjzC,GAE7B,IAAM+lD,EAAO3qD,GAAAA,CAAE,mBAAD,OAAsB4E,EAAtB,YAGd+lD,EAAK5pD,OAAQf,GAAAA,CAAE,mGAAD,OAAwG4E,EAAQ,EAAhH,WAGdizC,EAAI3yC,SAAQ,SAAEzD,EAAOmD,GAEpB,IAAMgmD,EAAa5qD,GAAAA,CAAE,2DAGfq8B,EAAS56B,EAAMoB,iBAErBpB,EAAM8+B,gBAGNqqB,EAAW7pD,OAAQs7B,GAGnBsuB,EAAK5pD,OAAQ6pD,MAId,IAAM9+C,EAAW9L,GAAAA,CAAE,0GACnB2qD,EAAK5pD,OAAQ+K,GAEb,IAAI++C,EAAY,EAAKjlD,gBAGrB,GAAc,GAAThB,GAAyB,GAATA,KAAkB,EAAK2vB,WAAWvyB,YAAc0oD,EAAe,GAAO,CAG1F,IAAII,EAAiB7gD,EAAW,EAAKsqB,WAAWw2B,sBAAyB,EAAKx2B,WAAWw2B,qBAAuBrsD,iBAAiBwB,KAAK8qD,UAGhIC,EAAmBjrD,GAAAA,CAAE,0EAAD,OAA6E8qD,EAA7E,0BAG1BG,EAAiB1qD,GAAI,SAAS,WAE7B,EAAK2qD,UAAWtmD,MAIXimD,EAAUM,aAEfr/C,EAAS/K,OAAOkqD,GAKlBR,EAAM1pD,OAAQ4pD,OAIC5rD,KAAK6G,gBAELulD,YAAc,CAC7B,IAAMC,EAAgBprD,GAAAA,CAAE,8EAAD,OAElBtB,iBAAiBwB,KAAKmrD,OAFJ,6BAOlBphD,EAAWlL,KAAKw1B,WAAW+2B,oBAC/BF,EAAcjpD,KAAMpD,KAAKw1B,WAAW+2B,mBAIrCF,EAAc7qD,GAAI,SAAS,WAE1B6qD,EAAczkD,SAAU,oBAGxB,EAAK0kD,YAIoBhC,EAAOhpD,KAAM,kCACrBU,OAAOqqD,GAE1B,OAAO/B,I,sBAWR,WAEC,IAAInnD,EAAQ,GAkBZ,OAfAnD,KAAK64C,UAAU1yC,SAAQ,SAAE2yC,EAAKjzC,GAE7B,IAAI+jD,EAAc,GAGlB9Q,EAAI3yC,SAAQ,SAAEzD,EAAOmD,GAEpB+jD,EAAalnD,EAAMmnD,cAAiBnnD,EAAM+B,cAI3CtB,EAAMK,KAAMomD,MAINzmD,I,oBASR,WAA0C,IAAlCqpD,EAAkC,uDAArB,GAAInB,IAAiB,yDAErChB,EAAWv+B,KAAKC,MAAOD,KAAKE,UAAWhsB,KAAKw1B,WAAWruB,SAG3DkjD,EAASrnD,aAAe,GAGxBqnD,EAAWA,EAAS1kD,KAAI,SAAES,EAAaP,GAiBtC,OAfAO,EAAYvD,MAAQ,GAGpBuD,EAAYf,YAAc,GAGrB6F,EAAWshD,EAAYpmD,EAAYxD,eAEvCwD,EAAYpD,aAAewpD,EAAYpmD,EAAYxD,aAIxC,IAAIF,EAAAA,EAAO0D,EAAYvB,UAAWuB,MAO/CpG,KAAK64C,UAAUr1C,KAAM6mD,GAGhBgB,GACJrrD,KAAKqrD,UAAU,K,sBAQjB,WAA4C,IAAlCoB,EAAkC,wDAE3CzsD,KAAKisC,oBAELjsC,KAAKstC,uBAGL,IAAMof,EAAsB1sD,KAAKohC,YAC3BurB,EAAkB3sD,KAAK+9B,mBAAmB,GAShD,GARA2uB,EAAoB9d,YAAa+d,GAGjC3sD,KAAK+D,oBAEL/D,KAAKgE,iBAGAyoD,EAA0B,CAE9B,IAAMG,EAAU5sD,KAAK64C,UAAW74C,KAAK64C,UAAU9uC,OAAS,GAExD,GAAKmB,EAAW0hD,GAAW,CAE1B,IAAMC,EAAaD,EAAQ,GAEtB1hD,EAAW2hD,IACfA,EAAWjpC,Y,uBAYf,SAAW/d,GAELqF,EAAWlL,KAAK64C,UAAWhzC,KAE/B7F,KAAK64C,UAAUvxB,OAAQzhB,EAAO,GAI/B7F,KAAKohC,YAAYwN,YAAa5uC,KAAK+9B,uB,4BAWpC,WAEC,OAAO/9B,KAAKohC,c,2BAWb,WACC,OAAOphC,KAAKw1B,a,wBAWb,WACC,OAAOx1B,KAAKw1B,WAAW5yB,a,sBAaxB,WAA8B,IAApBojC,IAAoB,yDAEzBxC,EAAa,CAChBrjC,SAAS,EACTmiB,QAAS,IAINwqC,EAAiB,GAqBrB,OAlBA9sD,KAAK64C,UAAU1yC,SAAQ,SAAE2yC,EAAKjzC,GAE7B,IAAIknD,EAAgB,GAGpBjU,EAAI3yC,SAAQ,SAAEzD,EAAOmD,GAEpBknD,EAAerqD,EAAMmnD,cAAiBnnD,EAAMiF,SAAUq+B,GAGtDxC,EAAWrjC,QAAUqjC,EAAWrjC,SAAW4sD,EAAerqD,EAAMmnD,cAAe1pD,WAIhF2sD,EAAetpD,KAAMupD,MAIfvpB,I,+BAGR,WACCxjC,KAAK64C,UAAU1yC,SAAQ,SAAEikD,GAExBA,EAAUjkD,SAAQ,SAAEzD,GAEnBA,EAAMqB,4B,kCAKT,WACC/D,KAAK64C,UAAU1yC,SAAQ,SAAEikD,GAExBA,EAAUjkD,SAAQ,SAAEzD,GAEnBA,EAAM4qC,+B,4BAKT,WACCttC,KAAK64C,UAAU1yC,SAAQ,SAAEikD,GAExBA,EAAUjkD,SAAQ,SAAEzD,GAEnBA,EAAMsB,yB,+BAKT,WACChE,KAAK64C,UAAU1yC,SAAQ,SAAEikD,GAExBA,EAAUjkD,SAAQ,SAAEzD,GAEnBA,EAAMupC,+B,mBAprBJ+d,G,wrCCWC,SAASgD,IAAiC,IAAf1K,EAAe,uDAAJ,GAC5C2K,EAAiB,kCAGjB3K,EAAa/8C,EAAS+8C,GAAwB,aAAXA,EAInC,IAAM4K,EAAkB,WAEvBC,IAEAC,IAGAhtD,EAAc,SAAU,CACvBitD,WAAY1tD,iBAAiB2tD,wBAKpB3tD,iBAAiBy1C,gBACjBz1C,iBAAiB8N,QAExBw/C,EAAiB,kCAGjB3K,KAIG/8C,EAAS5F,iBAAiBC,OAAOgB,MAMjC,IAAIonD,EAAAA,GAAmB,WAEnBkF,OANJA,IAsBD,SAAS9sD,IAA8C,IAAhCiK,EAAgC,uDAAvB,KAAMmrB,EAAiB,uDAAJ,GAElDxtB,GAAe,EAGfulD,EAAe,CAAE,SAAU,YAG/B,GAAKriD,EAAWb,IAAYo3B,EAASp3B,EAAQkjD,GACzC,OAASljD,GACL,IAAK,SAED,IAAImjD,EAAe,CAAE,cAGrB,GAAK/rB,EAAS+rB,EAAc/nD,OAAOC,KAAM8vB,IAAgB,CAErD,IAAI51B,EAGAytD,EAAa73B,EAAW63B,WAE5BpsD,IAAAA,KAAQosD,GAAY,SAAUxnD,EAAO4nD,GAC5BA,EAAUrhD,IAAMzM,iBAAiBC,OAAOmI,KACzCnI,EAAS6tD,MAKjBxsD,IAAAA,KAAQrB,EAAOw1C,UAAU,SAAEvvC,EAAOsE,GAAT,OAAsBA,EAAQxH,SAAW,aAClE1B,IAAAA,KAAQrB,EAAO6N,SAAU,SAAE5H,EAAOwE,GAAT,OAAsBA,EAAO1H,SAAY,YAClE1B,IAAAA,KAAQrB,EAAO6K,UAAU,SAAE5E,EAAO6E,GAAT,OAAsBA,EAAQ/H,SAAW,aAGlE,IAAI8J,EAAQ,GAAGud,OAAO/U,MAAO,GAAI,CAAErV,EAAOw1C,SAAUx1C,EAAO6N,QAAS7N,EAAO6K,WAG3EiD,EAAa,SAGb,IAAMggD,EAAoD,aAAhC/tD,iBAAiBC,OAAOgB,KAwblD,GArbAK,IAAAA,KAAQwL,GAAO,SAAU5G,EAAOmG,GAE5B,IAAI2hD,EAGA9W,EAAaV,EAAenqC,EAAKs8B,KAAKz8B,YAAaG,EAAKrJ,SAAUqJ,EAAKs8B,KAAKr9B,MAG5E2B,EAAWZ,EAAKs8B,KAAKr9B,KAGzB,GAAKC,EAAW2rC,GAAc,CAE1B,IAAI3zC,EAAU,GAGTgI,EAAW2rC,EAAW3zC,UACvBjC,IAAAA,KAAQ41C,EAAW3zC,SAAS,SAAU2C,EAAO2qB,GACzCttB,EAASstB,EAAO8f,aAAgB,CAAE9f,MAKrCtlB,EAAW2rC,EAAW+W,gBACvB3sD,IAAAA,QAAU,EAAMiC,EAAS2zC,EAAW+W,eAIxC,IAAIC,EAAkB,GAEtB5sD,IAAAA,KAAQiC,GAAS,SAAU4qD,EAAU3mD,GACjC,IAAI4mD,EAAuB,GAGvBC,EAAuB7mD,EAAO4C,OAAS,EAE3C9I,IAAAA,KAAQkG,GAAQ,SAAUtB,EAAOQ,GAS7B,IA8JID,EAAa6nD,EA9JXC,EAAoB,SAAE7nD,GAExB,IAAID,EAAc,CACd+nD,QAAoBH,EACpBnhD,OAAoBb,EAAKI,GACzBzJ,SAAoBqJ,EAAKrJ,SAEzBM,aAAoBiI,EAAW7E,EAAMqsB,WAAarsB,EAAMqsB,SACxDgF,aAAoBxsB,EAAW7E,EAAM+nD,YAAc/nD,EAAM+nD,UACzD3zB,kBAAoBvvB,EAAW7E,EAAMgoD,mBAAqBhoD,EAAMgoD,iBAChEzqB,0BAAyB14B,EAAW7E,EAAMioD,oBAAsBjoD,EAAMioD,kBAEtEvsB,SAAoB72B,EAAW7E,EAAMkoD,UAAYloD,EAAMkoD,QAEvDpsB,QAAoB2rB,EACpBlrD,WAAoByD,EAAMiqC,YAC1BzrC,UAAoBwB,EAAMmoD,WAE1B3rD,MAAoBwD,EAAMxD,MAC1BwC,YAAoBgB,EAAMhB,YAC1BotB,YAAoBpsB,EAAMosB,YAC1BzsB,WAAoBkF,EAAW7E,EAAMooD,YAAcpoD,EAAMooD,UACzD7vB,UAAoB1zB,EAAW7E,EAAMqoD,YAAeroD,EAAMqoD,WAAaroD,EAAMxD,MAE7EmE,aAAoBX,EAAMgqC,cAC1BrtC,aAAoBkI,EAAWc,EAAKs8B,KAAMjiC,EAAMiqC,cAAkBtkC,EAAKs8B,KAAMjiC,EAAMiqC,aAAgBjqC,EAAMgqC,cACzGse,oBAAsBzjD,EAAW7E,EAAMuoD,kBAAoBvoD,EAAMuoD,gBACjEA,kBAAoB1jD,EAAW7E,EAAMuoD,kBAAoBvoD,EAAMuoD,gBAE/DrqB,UAAoBr5B,EAAW7E,EAAMwoD,YAAexoD,EAAMwoD,WAAa,MA8H3E,MAxH8B,QAAzBzoD,EAAYvB,YACbuB,EAAYuJ,WAAgBzE,EAAW7E,EAAMyoD,aAAgBzoD,EAAMyoD,YAAc,QACjF1oD,EAAYw/B,cAAgB16B,EAAW7E,EAAM0oD,iBAAoB1oD,EAAM0oD,gBAAkBpvD,iBAAiBoc,OAAOvL,KAGjHpK,EAAYy/B,gBAAgB36B,EAAW7E,EAAM2oD,iBAAmB3oD,EAAM2oD,eAGjE9jD,EAAW7E,EAAM4oD,YAClB7oD,EAAYgX,QAAU/W,EAAM4oD,UAI3B/jD,EAAW7E,EAAM6oD,YAClB9oD,EAAYoX,QAAUnX,EAAM6oD,WAIN,QAAzB9oD,EAAYvB,YACbuB,EAAY0/B,WAAgB56B,EAAW7E,EAAM8oD,aAAgB9oD,EAAM8oD,YAAc,QACjF/oD,EAAY2/B,cAAgB76B,EAAW7E,EAAM+oD,iBAAoB/oD,EAAM+oD,gBAAkB,QAGpFlkD,EAAW7E,EAAMgpD,YAClBjpD,EAAY2a,QAAU1a,EAAMgpD,UAI3BnkD,EAAW7E,EAAM6oD,YAClB9oD,EAAY6a,QAAU5a,EAAMipD,WAgChC,CAAE,OAAQ,WAAY,MAAO,QAAS,QAAS,MAAO,SAAU,OAAQ,QAASh5B,SAAUlwB,EAAYvB,YACvG,CAAE,SAAU,WAAYyxB,SAAUlwB,EAAYzD,YAC5CyD,EAAYsxB,WAEdtxB,EAAYxC,gBAAiBsH,EAAW7E,EAAMkpD,kBAAoBlpD,EAAMkpD,gBAGxEnpD,EAAYxC,gBAAiB,EAIH,UAAzBwC,EAAYvB,YAObuB,EAAYi8B,oBAAsBn3B,EAAW7E,EAAMmpD,uBAA0BnpD,EAAMmpD,wBAA0B,CAAE,SAAU,WAAYl5B,SAAUlwB,EAAYzD,UAKtJyD,EAAYi8B,sBAEbj8B,EAAYk9B,YAAcp4B,EAAWc,EAAKs8B,KAAL,UAAeliC,EAAYxD,WAA3B,aAAsDoJ,EAAKs8B,KAAL,UAAeliC,EAAYxD,WAA3B,YAAoD,IAI9IsI,EAAW7E,EAAMopD,4BAClBrpD,EAAY09B,uBAAyBz9B,EAAMopD,0BAI1CvkD,EAAW7E,EAAMqpD,4BACjBtpD,EAAYk8B,uBAAyBj8B,EAAMqpD,2BAK/CtpD,EAAY27B,SACb37B,EAAY47B,YAAgB92B,EAAW7E,EAAMspD,gBAAmBtpD,EAAMspD,eAAiB,GACvFvpD,EAAYwgC,SAAgB17B,EAAW7E,EAAMugC,UAAavgC,EAAMugC,SAAW,GAC3ExgC,EAAYugC,cAAgBkQ,EAAWhrC,YAKlCtG,EAASa,EAAY47B,eACtB57B,EAAY47B,YAAc37B,EAAMiqC,cAKnC,CAAE,SAAU,SAAUha,SAAUlwB,EAAYvB,aAC7CuB,EAAYlD,QAAUgI,EAAW7E,EAAMnD,SAAYmD,EAAMnD,QAAU,IAIhEkD,GAMX,GAAyB,SAApBC,EAAMmoD,WAEPpoD,EAAc,CACV+7B,QAAkB2rB,EAClBlrD,WAAkByD,EAAMiqC,YACxBzrC,UAAkBwB,EAAMmoD,WAExBL,QAAkBH,EAClBnhD,OAAkBb,EAAKI,GACvBzJ,SAAkBqJ,EAAKrJ,SAEvBE,MAAkBwD,EAAMxD,MACxBwC,YAAkBgB,EAAMhB,YAExBu5B,UAAkB1zB,EAAW7E,EAAMqoD,YAAeroD,EAAMqoD,WAAaroD,EAAMxD,MAE3EI,aAAkBiI,EAAW7E,EAAMqsB,WAAarsB,EAAMqsB,SAEtDvrB,OAAQd,EAAMc,OAAOxB,KAAI,SAAE4jD,GACvB,OAAO2E,EAAmB3E,OAKlC0E,EAAgB,IAAI3E,EAAaljD,QAEhC,GAAyB,YAApBC,EAAMmoD,WAA0B,CAEtC,IACIxiD,EAAKs8B,KAAMjiC,EAAMiqC,aAAgBxkB,KAAKC,MAAO/f,EAAKs8B,KAAMjiC,EAAMiqC,cAChE,MAAQx6B,IAGV1P,EAAc,CACV+7B,QAAkB2rB,EAClBlrD,WAAkByD,EAAMiqC,YACxBzrC,UAAkBwB,EAAMmoD,WAExBL,QAAkBH,EAClBnhD,OAAkBb,EAAKI,GACvBzJ,SAAkBqJ,EAAKrJ,SAEvBE,MAAkBwD,EAAMxD,MACxBwC,YAAkBgB,EAAMhB,YAExBu5B,UAAkB1zB,EAAW7E,EAAMqoD,YAAeroD,EAAMqoD,WAAaroD,EAAMxD,MAE3EmE,aAAkBX,EAAMgqC,cACxBrtC,aAAkBkI,EAAWc,EAAKs8B,KAAMjiC,EAAMiqC,cAAkBtkC,EAAKs8B,KAAMjiC,EAAMiqC,aAAgBjqC,EAAMgqC,cAEvGptC,aAAkBiI,EAAW7E,EAAMqsB,WAAarsB,EAAMqsB,SAEtD05B,cAAmBlhD,EAAW7E,EAAMupD,eAAiBvpD,EAAMupD,aAE3DzoD,OAAQd,EAAMc,OAAOxB,KAAI,SAAE4jD,GACvB,OAAO2E,EAAmB3E,OAK7Br+C,EAAW7E,EAAMwpD,kBAClBzpD,EAAYmmD,kBAAoBlmD,EAAMwpD,gBAIrC3kD,EAAW7E,EAAMypD,qBAClB1pD,EAAY4lD,qBAAuB3lD,EAAMypD,mBAI7C7B,EAAgB,IAAIjE,EAAgB5jD,QAKpCA,EAAc8nD,EAAmB7nD,GAGjC4nD,EAAgB,IAAIvrD,EAAAA,EAAO0D,EAAYvB,UAAWuB,GAAa,GAInE2nD,EAAqBvqD,KAAMyqD,MAI/B,IAAIl1B,EAAU,GAGT7tB,EAAW2rC,EAAW9d,UAEvB93B,IAAAA,KAAQ41C,EAAW9d,SAAS,SAAElzB,EAAOozC,GAE5BA,EAAO8W,SAAWjC,GACnB/0B,EAAQv1B,KAAMy1C,MAM1B4U,EAAiBC,GAAa,CAC1B3mD,OAAS4mD,EACT5tD,SAAS,EACT44B,QAASA,MAKjB40B,EAAY,CACR5lD,GAAiBiE,EAAKI,GACtBzJ,SAAiBqJ,EAAKrJ,SACtBiK,SAAiBA,EACjBF,gBAAiBmqC,EAAWhrC,YAC5B0sB,OAAqC,WAApBvsB,EAAK2rC,YACtBz0C,QAAiB2qD,EACjBvlB,KAAiBt8B,EAAKs8B,KACtB2N,WAAiB,EACjB9f,OAAiBjrB,EAAWc,EAAKmqB,QAAWnqB,EAAKmqB,OAAS,GAC1D6qB,UAAiB91C,EAAW2rC,EAAWmZ,YAAenZ,EAAWmZ,WAAa,GAC9EC,aAAiB/kD,EAAW2rC,EAAWqZ,eAAkBrZ,EAAWqZ,cAAgB,IAInFhlD,EAAW2rC,EAAWvtC,WACvBqkD,EAAUrkD,QAAUutC,EAAWvtC,SAMnC,IAAInC,EAAS,GAGblG,IAAAA,KAAQ4sD,GAAiB,SAAUsC,EAAWjtD,GAC1CjC,IAAAA,KAAQiC,EAAQiE,QAAQ,SAAUtB,EAAOQ,GACrCc,EAAQd,EAAMQ,gBAAgBjE,YAAeyD,QAIrDpF,IAAAA,KAAQkG,GAAQ,SAAEtB,EAAOQ,GACrB,IAAIw7B,EAAkBx7B,EAAMQ,gBACnBqE,EAAWyiD,EAAUrlB,KAAMzG,EAAgBj/B,eAAkB2C,EAASooD,EAAUrlB,KAAMzG,EAAgBj/B,cAAsB2C,EAASs8B,EAAgB7+B,gBAC1J2qD,EAAUrlB,KAAMzG,EAAgBj/B,YAAei/B,EAAgB7+B,iBAMlE0qD,IACDC,EAAU7nD,iBAAkBoF,EAAW2rC,EAAWtG,sBAAwBsG,EAAWtG,0BAwDzFod,EAAY,CACR5lD,GAAiBiE,EAAKI,GACtBzJ,SAAiBqJ,EAAKrJ,SACtBiK,SAAiBZ,EAAKs8B,KAAKr9B,KAC3ByB,gBAAiBV,EAAKs8B,KAAKz8B,YAC3BosC,gBAAiBjsC,EAAKs8B,KAAK38B,iBAC3BG,SAAiBE,EAAKs8B,KAAKx8B,SAC3BysB,OAAqC,WAApBvsB,EAAK2rC,YACtBxhB,OAAiB,GACjBjzB,QAAiB,GACjBolC,KAAiBt8B,EAAKs8B,KACtB2N,WAAiB,GAKhByX,IACDC,EAAU7nD,iBAAkBoF,EAAWc,EAAKs8B,KAAKiI,sBAA2D,QAAjCvkC,EAAKs8B,KAAKiI,qBAK7F7iC,EAAa,MAAOigD,MAInBD,EAAmB,CAEpB/tD,iBAAiBC,OAAOkG,iBAAkB,EAG1C,IAAMsqD,EAAiB1iD,EAAa,MAAO,CACvCC,OAAQ,CACJhL,SAAU,aAKb8C,OAAOC,KAAM0qD,GAAmB,IAEjCzwD,iBAAiBC,OAAOkG,iBAAkB,EAG1C7E,IAAAA,KAAQmvD,GAAgB,SAAEvqD,EAAOsE,GAG7BxK,iBAAiBC,OAAOkG,gBAAkBnG,iBAAiBC,OAAOkG,iBAAmBqE,EAAQrE,sBAMjHoF,EAAWsqB,EAAW7tB,WAAgBuD,EAAWsqB,EAAW7tB,WAAc6tB,EAAW7tB,WAE5EvH,EAAc,gBAGd,CAED,IAAIiwD,EAAoBvkC,KAAKE,UAAWskC,EAAiB96B,EAAYg4B,IACrE3sD,QAAQsW,MAAO7O,EAAU,sCAAuC,CAAE,eAAgB+nD,KAGtF,MAEJ,IAAK,WAED,IAAIE,GAAgB,EAIpBtvD,IAAAA,KAAQtB,iBAAiBC,OAAO4wD,SAAS,SAAU7tD,EAAUmH,GAEzDnK,iBAAiBC,OAAO4wD,QAAS7tD,IAAa,KAIlD1B,IAAAA,KAAQtB,iBAAiBC,OAAO6M,OAAO,SAAUc,EAAQkjD,GAEhDA,EAASl4B,SACV54B,iBAAiBC,OAAO4wD,QAASC,EAAS9tD,WAAa,MAK/D1B,IAAAA,KAAQtB,iBAAiBC,OAAO6M,OAAO,SAAUc,EAAQkjD,GAGrD,IAAIC,GAAc,EAGlBzvD,IAAAA,KAAQwvD,EAASvtD,SAAS,SAAUytD,EAAgBC,GAGhD,IAAIC,GAAe,EAGnB5vD,IAAAA,KAAQ2vD,EAAiBzpD,QAAQ,SAAUtB,EAAOQ,GAExBA,EAAMsB,UAAU,GAGfxH,UACnB0wD,GAAe,MAKvBlxD,iBAAiBC,OAAO6M,MAAOc,GAASrK,QAASytD,GAAiBxwD,QAAU0wD,EAGrEA,IACHH,GAAc,MAItB/wD,iBAAiBC,OAAO6M,MAAOc,GAASpN,QAAUuwD,EAG7CD,EAASl4B,SAAYm4B,IACtBH,GAAgB,MAOjB5wD,iBAAiBC,OAAO4wD,QAAQrmD,QAUC,aAAhCxK,iBAAiBC,OAAOgB,MAErBjB,iBAAiBC,OAAOsB,mBAEtBvB,iBAAiBC,OAAOC,aAAaM,SAG1CowD,GAAgB,EAGhB5wD,iBAAiBC,OAAO0iB,QAAQnL,MAAQxX,iBAAiBwB,KAAKqiC,WAAW5jC,OAAOC,cAIzEF,iBAAiBC,OAAO4wD,QAAQnmD,QAAY1K,iBAAiBC,OAAO4wD,QAAQ9lD,QAQxE/K,iBAAiBC,OAAO4wD,QAAQrmD,SAAexK,iBAAiBC,OAAO4wD,QAAQnmD,QAAY1K,iBAAiBC,OAAO4wD,QAAQ9lD,UAE9H/K,iBAAiBC,OAAO0iB,QAAQnL,MAAQxX,iBAAiBwB,KAAKqiC,WAAW5jC,OAAOkxD,YATpFP,GAAgB,EAGhB5wD,iBAAiBC,OAAO0iB,QAAQnL,MAAQxX,iBAAiBwB,KAAKqiC,WAAW5jC,OAAOmxD,YA3BxFR,GAAgB,EAGhB5wD,iBAAiBC,OAAO0iB,QAAQnL,MAAQxX,iBAAiBwB,KAAKqiC,WAAW5jC,OAAOoxD,YAoCpFrxD,iBAAiBC,OAAOO,QAAUowD,EAG7BA,IAED5wD,iBAAiBC,OAAO0iB,QAAQnL,MAAQ,IAI5CnP,GAAW,OAOnBnH,QAAQsW,MAAO7O,EAAU,qCAAsC,CAAE,eAAgB+B,KAGrF,OAAOrC,EAmBJ,SAAS0F,IAA6C,IAAhCrD,EAAgC,uDAAvB,KAAMmrB,EAAiB,uDAAJ,GAEjDxtB,GAAe,EAGfulD,EAAe,CAAE,MAAO,SAAU,QAAS,QAAS,SAAU,OAGlE,GAAKriD,EAAWb,IAAYo3B,EAASp3B,EAAQkjD,GAEzC,OAASljD,GACL,IAAK,MAEDmrB,EAAav0B,IAAAA,OAAS,CAClBd,SAAS,EACTo4B,QAAQ,GACT/C,GAGH,IAAIg4B,EAAe,CAAE,KAAM,YAG3B,GAAK/rB,EAAS+rB,EAAc/nD,OAAOC,KAAM8vB,IAG9BtqB,EAAWvL,iBAAiBC,OAAO6M,MAAO+oB,EAAWztB,OAGxDpI,iBAAiBC,OAAO6M,MAAO+oB,EAAWztB,IAAOytB,EAGjD9nB,EAAa,QAAS,IAGtB1F,GAAW,OAGd,CAED,IAAIqoD,EAAoBvkC,KAAKE,UAAWskC,EAAiB96B,EAAYg4B,IACrE3sD,QAAQsW,MAAO7O,EAAU,sCAAuC,CAAE,cAAe+nD,KAGrF,MAEJ,IAAK,SAKM9qD,GAJPiwB,EAAav0B,IAAAA,OAAS,CAClBd,SAAS,GACVq1B,IAEwBztB,IAcvBlH,QAAQsW,MAAO7O,EAAU,sBAAuB,CAAE,iBAZ7C4C,EAAWvL,iBAAiBC,OAAO6M,MAAO+oB,EAAWztB,aAC/CpI,iBAAiBC,OAAO6M,MAAO+oB,EAAWztB,IAGjDC,GAAW,GAGXnH,QAAQsW,MAAO7O,EAAU,iDAAmD,CAAE,cAAektB,EAAWztB,MAQhH,MAEJ,IAAK,QAGD,IAAI0E,EAAQ,GAEZxL,IAAAA,KAAQtB,iBAAiBC,OAAO6M,OAAO,SAAU5G,EAAO1C,GAC/C+H,EAAW/H,KACZsJ,EAAO5G,GAAU1C,MAIzBxD,iBAAiBC,OAAO6M,MAAQA,EAGhCzE,GAAW,EAEX,MAEJ,IAAK,SAGMzC,EAASiwB,EAAWztB,IAiBvBlH,QAAQsW,MAAO7O,EAAU,sBAAuB,CAAE,iBAf7C4C,EAAWvL,iBAAiBC,OAAO6M,MAAO+oB,EAAWztB,MAGtDpI,iBAAiBC,OAAO6M,MAAO+oB,EAAWztB,IAAO9G,IAAAA,OAAU,GAAItB,iBAAiBC,OAAO6M,MAAO+oB,EAAWztB,IAAMytB,GAG/GxtB,GAAW,GAIXnH,QAAQsW,MAAO7O,EAAU,iDAAmD,CAAE,cAAektB,EAAWztB,MAQhH,MAEJ,IAAK,QAEDpI,iBAAiBC,OAAO6M,MAAQ,GAGhCzE,GAAW,EACX,MAEJ,IAAK,MAED,GAAOzC,EAASiwB,EAAW7nB,QAuBvB3F,EAAWrI,iBAAiBC,OAAO6M,UAvBF,CAEjC,IAAIA,EAAQ,GAEZxL,IAAAA,KAAQtB,iBAAiBC,OAAO6M,OAAO,SAAUI,EAAQb,GACrD,IAAIilD,GAAe,EAEnBhwD,IAAAA,KAAQu0B,EAAW7nB,QAAQ,SAAU/H,EAAKzC,GACjC6I,EAAMpG,IAASzC,IAChB8tD,GAAe,MAKlBA,IACDxkD,EAAOI,GAAWb,MAK1BhE,EAAWyE,QAWvB5L,QAAQsW,MAAO7O,EAAU,qCAAsC,CAAE,cAAe+B,KAGpF,OAAOrC,EAUJ,SAASolD,IAEZ3nD,OAAOwvC,QAASt1C,iBAAiBiM,cAAezF,SAAQ,YAAoC,aAAjC87B,EAAiC,KAGpFmT,GAHoF,KAGzE,CACP7F,UAAaiG,EAAkC71C,iBAAiBy1C,SAASznC,QAAQ,SAAA3B,GAAI,OAAIA,EAAKH,aAAeo2B,KAAiB,sBAAsB,SAAAn2B,GAAQ,OAAIokC,EAAoBpkC,MACpL0jC,YAAa,KAEjB/hC,EAAW,CACP8hC,UAAaiG,EAAkC71C,iBAAiB8N,QAAQE,QAAQ,SAAA3B,GAAI,OAAIA,EAAKH,aAAeo2B,KAAiB,sBAAsB,SAAAn2B,GAAQ,OAAIokC,EAAoBpkC,MACnL0jC,YAAa,IAGrB,KAAOtkC,EAAWvL,iBAAiBiO,MAAUjO,iBAAiBiO,KAGtD1C,EAAWvL,iBAAiBuxD,cAC5BhmD,EAAWvL,iBAAiBuxD,YAAajvB,IAC5C,CAEG,IAAIkZ,EAAax7C,iBAAiBC,OAAOgB,KAEzCu6C,EAA2B,QAAdA,EAAuB,YAAcA,EAIlD/F,EAAS5F,YAAcgG,EAEnB71C,iBAAiBuxD,YAAajvB,GAAgBmT,SAGzCznC,QACG,SAAAxD,GAAO,OAAIA,EAAQvJ,MAAQu6C,KAGnC,QAEA,SAAArvC,GAAQ,OAAIokC,EAAoBpkC,MAKpC2B,EAAQ+hC,YAAegG,EACnB71C,iBAAiBuxD,YAAajvB,GAAgBx0B,QAC9C,QACA,SAAA3B,GAAQ,OAAIokC,EAAoBpkC,MAQ5CspC,EAASE,eAAqBF,EAAS7F,UAAU4hB,OAAO,SAAAnlD,GAAI,QAAId,EAAWc,EAAK+jC,SAAW/jC,EAAK+jC,UAChGtiC,EAAQ6nC,eAAsB7nC,EAAQ8hC,UAAU4hB,OAAO,SAAAnlD,GAAI,QAAId,EAAWc,EAAK+jC,SAAW/jC,EAAK+jC,UAG/FqF,EAAS1F,kBAAqB0F,EAAS7F,UAAUxlC,OAAS,EAC1D0D,EAAQiiC,kBAAsBjiC,EAAQ8hC,UAAUxlC,OAAS,EAGzDqrC,EAAStE,oBAAsBsE,EAAS5F,YAAYzlC,OAAS,EAC7D0D,EAAQqjC,oBAAuBrjC,EAAQ+hC,YAAYzlC,OAAS,EAG5DqrC,EAASC,YAAcD,EAAS1F,mBAAqB0F,EAAS5F,YAAYzlC,OAAS,EACnF0D,EAAQ8nC,WAAe9nC,EAAQiiC,mBAAqBjiC,EAAQ+hC,YAAYzlC,OAAS,EAGjFpK,iBAAiBiM,aAAcq2B,GAAgBx1B,MAAQ,CACnD2oC,SAAUA,EACV3nC,QAAUA,MAaf,SAAS+nC,IAA8E,IAA5C/oC,EAA4C,uDAApC,GAAI2kD,EAAgC,uDAAZ,GAAIzjD,EAAQ,uCAmC1F,OAjCOzC,EAAWyC,KACdA,EAAS,SAAAxK,GAAK,OAAIA,IAIjBkS,MAAM80C,QAAS19C,KAAalH,EAASkH,KAEtCA,EAAQA,EAAMwiB,MAAK,SAAEC,EAAGC,GAEpB,IAAIkiC,EAAU,EAGd,GAAKnmD,EAAWgkB,EAAGkiC,KAAyBlmD,EAAWikB,EAAGiiC,IAAuB,CAE7E,IAAIE,EAAS3jD,EAAQuhB,EAAGkiC,IACpBG,EAAS5jD,EAAQwhB,EAAGiiC,IASxBC,GADAA,GALAA,EAAUC,EAAOE,cAAeD,IAKZ,EAAI,EAAIF,GACR,GAAK,EAAIA,EAIjC,OAAOA,MAKR5kD,EAWJ,SAASwiC,IAA2E,IAApDhN,EAAoD,uDAApC,GAAIt/B,EAAgC,uDAArB,WAAYO,EAAS,uCAEvFA,EAAUuC,OAAOuY,OAAO,CACpByzC,oBAAoB,GACrBvuD,GAGH,IAAIuJ,EAAQ,CACR8iC,UAAW,GACXC,YAAa,IA2BjB,MAlBK,CAAE,WAAY,WAAYlZ,SAH/B3zB,EAAuB,WAFvBA,EAAuB,WAAZA,EAAwB,WAAaA,GAEd,UAAYA,KAKnC4C,EAAS08B,IAEP/2B,EAAWvL,iBAAiBiM,aAAcq2B,MAE3Cx1B,EAAQxL,IAAAA,QAAU,EAAM,GAAItB,iBAAiBiM,aAAcq2B,GAAgBx1B,MAAO9J,IAG3EO,EAAQuuD,qBAEXhlD,EAAQ0oC,EAAuB1oC,MAOxCA,EA4DJ,SAAS0oC,EAAuB1oC,GAkBnC,OAhBAA,EAAM8iC,UAAY9iC,EAAM8iC,UAAU5hC,QAAQ,SAAA3B,GAAI,OAAMA,EAAK0lD,iBAGzDjlD,EAAMijC,kBAAoBjjC,EAAM8iC,UAAUxlC,OAAS,EAG9CmB,EAAWuB,EAAM4oC,aAClB5oC,EAAM4oC,YAAc5oC,EAAMijC,mBAAqBjjC,EAAM+iC,YAAYzlC,OAAS,EAEpEmB,EAAWuB,EAAM8oC,cACvB9oC,EAAM8oC,WAAc9oC,EAAMijC,mBAAqBjjC,EAAM+iC,YAAYzlC,OAAS,GAI9E0C,EAAM6oC,eAAiB7oC,EAAM8iC,UAAU4hB,OAAO,SAAAnlD,GAAI,QAAId,EAAWc,EAAK+jC,SAAW/jC,EAAK+jC,UAE/EtjC,EASJ,SAAS1M,IAAoD,IAAhCsK,EAAgC,uDAAvB,KAAMmrB,EAAiB,uDAAJ,GAExDxtB,GAAe,EAGfulD,EAAe,CAAE,WAAY,WAAY,aAAc,gBAAiB,gBAM5E,GAHqB5tD,iBAAiBC,OAAOC,aAGxCqL,EAAWb,IAAYo3B,EAASp3B,EAAQkjD,GAAgB,CAEzD,IAAIC,EAAe,GAEnB,OAASnjD,GAWL,IAAK,WAKD,GAAKo3B,EAHL+rB,EAAe,CAAE,QAGW/nD,OAAOC,KAAM8vB,IAErC71B,iBAAiBC,OAAOC,aAAaC,KAAO01B,EAAW11B,SAEtD,CAED,IAAIuwD,EAAoBvkC,KAAKE,UAAWskC,EAAiB96B,EAAYg4B,IACrE3sD,QAAQsW,MAAO7O,EAAU,sCAAuC,CAAE,qBAAsB+nD,KAG5F,MAEJ,IAAK,WAGD,IAAIvwD,EAAO,gBAGNoL,EAAWvL,iBAAiBC,OAAOC,aAAaC,MAEjDA,EAAOH,iBAAiBC,OAAOC,aAAaC,KAKrCyF,EAAS5F,iBAAiBC,OAAOC,aAAa+B,KAAMjC,iBAAiBC,OAAOC,aAAagC,WAE5F/B,EAAO,gBAIPH,iBAAiBC,OAAOC,aAAaM,SAAU,GAKvD6H,EAAWlI,EAEX,MAEJ,IAAK,aAKD,GAAK2hC,EAHL+rB,EAAe,CAAE,UAGW/nD,OAAOC,KAAM8vB,IAErC71B,iBAAiBC,OAAOC,aAAagC,OAAS2zB,EAAW3zB,WAExD,CAED,IAAIwuD,EAAoBvkC,KAAKE,UAAWskC,EAAiB96B,EAAYg4B,IACrE3sD,QAAQsW,MAAO7O,EAAU,sCAAuC,CAAE,qBAAsB+nD,KAG5F,MAEJ,IAAK,gBAKD,GAAK5uB,EAHL+rB,EAAe,CAAE,SAAU,QAGC/nD,OAAOC,KAAM8vB,IAEhC,CAAE,eAAgB,WAAYc,SAAUd,EAAW3zB,SAE/C0D,EAAS5F,iBAAiBC,OAAOC,aAAa+B,QAC/CjC,iBAAiBC,OAAOC,aAAa+B,KAAO,CACxCkB,aAAc,GACdiC,QAAS,KAKjBpF,iBAAiBC,OAAOC,aAAa+B,KAAM4zB,EAAW3zB,QAAWZ,IAAAA,OAAU,GAAItB,iBAAiBC,OAAOC,aAAa+B,KAAM4zB,EAAW3zB,QAAU2zB,EAAW5zB,OAI1Jf,QAAQsW,MAAO7O,EAAU,4DAA6D,CAAE,qBAAsB,CAAE,eAAgB,kBAGnI,CAED,IAAI+nD,EAAoBvkC,KAAKE,UAAWskC,EAAiB96B,EAAYg4B,IACrE3sD,QAAQsW,MAAO7O,EAAU,sCAAuC,CAAE,qBAAsB+nD,KAG5F,MAEJ,IAAK,eAED1wD,iBAAiBC,OAAOC,aAAa+B,KAAO,CACxCkB,aAAc,GACdiC,QAAS,UAOrBlE,QAAQsW,MAAO7O,EAAU,qCAAsC,CAAE,qBAAsB+B,KAG3F,OAAOrC,EAaJ,SAASmlD,IAEP,CAAE,OAAQ,aAAc72B,SAAU32B,iBAAiBC,OAAOgB,QAEtDjB,iBAAiBgyD,IAAIC,YAEtB3E,EAAiB,0BAA0B,EAAM,CAC7C4E,eAAe,IAInBhxD,QAAQC,IAAKwH,EAAU,0BAA2B,CAAE3I,iBAAiBC,OAAOgB,SAIhFjB,iBAAiBy1C,SAAWz1C,iBAAiBy1C,SAASznC,QAAO,SAAExD,GAgB3D,OAdKxK,iBAAiBgyD,IAAIC,YAEtB/wD,QAAQC,IAAKqJ,GAGRA,EAAQvJ,MAAQjB,iBAAiBC,OAAOgB,KACzCkxD,EAAkB,UAAW,QAG7BA,EAAkB,QAAS,WAK5B3nD,EAAQvJ,MAAQjB,iBAAiBC,OAAOgB,QAI9CjB,iBAAiBgyD,IAAIC,WAEtB/wD,QAAQkxD,YAmBb,SAASlqD,IAAuF,IAA7Eq6B,EAA6E,uDAAlE,KAAMtgC,EAA4D,uDAArD,KAAM6uC,EAA+C,uDAAnC,KAAMC,EAA6B,uDAApB,KAAMxtC,EAAc,uDAAJ,GAE3F8uD,EAAiB,CAAE,MAAO,SAAU,SAAU,qBAAsB,6BAA8B,iCAAkC,oBAAqB,0BAA2B,gBAAiB,mBAAoB,kBAAmB,kBAAmB,4BAGnQ9uD,EAAUjC,IAAAA,OAAS,GAAI,CACnB,uBAAyB,EACzB,UAAyB,GAC1BiC,GAGEu+B,EAASS,EAAU8vB,GAGpB/wD,IAAAA,KAAO,CACHgxD,OAAU,OACVne,IAAK,GAAF,OAAWn0C,iBAAiBuyD,QAA5B,YAAwChwB,EAAxC,KACHtgC,KAAUX,IAAAA,MAASW,GAAS,IAAMX,IAAAA,MAAQ,CAAEkxD,WAAY,IACxDC,SAAU,OAGVC,WAAY,SAAUC,GAClBA,EAAIC,iBAAkB,aAAc5yD,iBAAiB6yD,QAGzD3hB,QAAS,SAAU7oC,GAEVrI,iBAAiBgyD,IAAIC,YACtB3E,EAAiB,eAAe,EAAM,CAClC4E,eAAe,IAEnBhxD,QAAQC,IAAR,oBAA2BohC,IAC3BrhC,QAAQC,IAAK,SACbD,QAAQC,IAAKc,GACbf,QAAQC,IAAK,aACbD,QAAQC,IAAKkH,GACbnH,QAAQkxD,YAIP/pD,EAAS6oC,QAEL3lC,EAAWlD,EAASslD,kBAAsBpqD,EAAQuvD,sBAE9CvnD,EAAWulC,KAEPvtC,EAAQwvD,UACTtyD,EAAc,SAAU,CACpBitD,WAAYrlD,EAASslD,iBAK7B7c,EAAWzoC,KAKfnH,QAAQsW,MAAO,mEAGVjM,EAAWwlC,IAEZA,EAAQ1oC,KAMhBnH,QAAQsW,MAAO,mDAIVjM,EAAWwlC,IAEZA,EAAQ1oC,KAKpB2qD,WAAY,CACR,IAAK,SAAU3qD,GAENrI,iBAAiBgyD,IAAIC,YACtB3E,EAAiB,gBAAgB,EAAM,CACnC4E,eAAe,IAEnBhxD,QAAQC,IAAK,SACbD,QAAQC,IAAKc,GACbf,QAAQC,IAAK,YACbD,QAAQC,IAAK,uBAAwB,cACrCD,QAAQkxD,YAGP7mD,EAAWwlC,IACZA,EAAQ1oC,KAKpBmP,MAAO,SAAUy7C,EAAOC,EAAYC,GAM3BnzD,iBAAiBgyD,IAAIC,YACtB3E,EAAiB,gBAAgB,EAAM,CACnC4E,eAAe,IAEnBhxD,QAAQC,IAAK,SACbD,QAAQC,IAAKc,GACbf,QAAQC,IAAK,YACbD,QAAQC,IAAK,kBAAmB,cAChCD,QAAQkxD,YAGP7mD,EAAWwlC,IACZA,EAAO,CACHG,SAAS,KAKrBkiB,KAAM,SAAW/qD,GAERrI,iBAAiBgyD,IAAIC,YACtB3E,EAAiB,gBAAgB,EAAM,CACnC4E,eAAe,IAEnBhxD,QAAQC,IAAK,SACbD,QAAQC,IAAKc,GACbf,QAAQC,IAAK,YACbD,QAAQC,IAAK,kBAAmB,cAChCD,QAAQkxD,YAGP7mD,EAAWwlC,IACZA,EAAQ1oC,MAMpBnH,QAAQsW,MAAO7O,EAAU,8DAA+D,CAAE45B,EAAU8vB,EAAez2C,KAAM,SAgB1H,SAASwrB,IAA0E,IAA7D18B,EAA6D,uDAApD,KAAMzI,EAA8C,uDAAvC,KAAM6uC,EAAiC,uDAArB,KAAMC,EAAe,uDAAN,KAG3ExlC,EAAWb,IAEZzI,EAAOX,IAAAA,QAAU,EAAMW,EAAM,CACzByI,OAAQA,EACRmoD,MAAO7yD,iBAAiB6yD,QAI5BvxD,IAAAA,KAAO,CACHgxD,OAAU,OACVG,SAAU,OACVte,IAAUkf,QACVpxD,KAAUA,EAEVivC,QAAS,SAAU7oC,GAEVrI,iBAAiBgyD,IAAIC,YACtB3E,EAAiB,eAAe,EAAM,CAClC4E,eAAe,IAEnBhxD,QAAQC,IAAK,SACbD,QAAQC,IAAKc,GACbf,QAAQC,IAAK,YACbD,QAAQC,IAAKkH,GACbnH,QAAQkxD,YAIP7mD,EAAWlD,EAASmvC,SAA+B,eAAnBnvC,EAASmvC,OAC1CjG,SAAS6C,SAIJ7oC,EAAWulC,IAEZA,EAAWzoC,EAAUpG,IAKjC+wD,WAAY,CACR,IAAK,WAEIhzD,iBAAiBgyD,IAAIC,YACtB3E,EAAiB,gBAAgB,EAAM,CACnC4E,eAAe,IAEnBhxD,QAAQC,IAAK,SACbD,QAAQC,IAAKc,GACbf,QAAQC,IAAK,YACbmsD,EAAiB,sBAAsB,EAAO,CAAEgG,QAAS,YACzDpyD,QAAQkxD,YAGP7mD,EAAWwlC,IACZA,EAAQ1oC,UAIPkD,EAAWwlC,IAEZA,EAAQ1oC,YAKpB+qD,KAAM,SAAW/qD,GAERrI,iBAAiBgyD,IAAIC,YACtB3E,EAAiB,gBAAgB,EAAM,CACnC4E,eAAe,IAEnBhxD,QAAQC,IAAK,SACbD,QAAQC,IAAKc,GACbf,QAAQC,IAAK,YACbD,QAAQC,IAAK,kBAAmB,cAChCD,QAAQkxD,YAGP7mD,EAAWwlC,IACZA,EAAQ1oC,OASpBnH,QAAQsW,MAAO,4DAahB,SAASowB,EAAwB16B,GACpC,IAAIy6B,EAAS,GA+Bb,OA5BArmC,IAAAA,KAAQtB,iBAAiBC,OAAO6M,MAAOI,GAAS3J,SAAS,SAAE2C,EAAOsnC,GAE9DlsC,IAAAA,KAAQksC,EAAchmC,QAAQ,SAAEtB,EAAOQ,GAEnC,IAAImnC,EAAannC,EAAMwjD,aACnBpqB,EAAap5B,EAAM5B,WAGhByG,EAAWu0B,KACdA,EAAap5B,EAAMQ,gBAAgB7D,cAIC,UAAnCqD,EAAMQ,gBAAgBhC,WAAuC,0BAAd46B,IAChD6H,EAAO,GAAD,OAAMkG,EAAN,YAA4BnnC,EAAMmhC,wBAI5CF,EAAQkG,GAAY/N,EAGbl6B,EAASk6B,IAAmD,UAAnCp5B,EAAMQ,gBAAgBhC,YAElDyiC,EAAO,GAAD,OAAMkG,EAAN,cAA8BnnC,EAAMwzC,0BAK/CvS,EAcJ,SAAS1R,EAAU/oB,EAAQ2gC,GAC9B,IAAInnC,EAUJ,OARApF,IAAAA,KAAQtB,iBAAiBC,OAAO6M,MAAOI,GAAS3J,SAAS,SAAUgwD,EAAgBC,GAC/ElyD,IAAAA,KAAQkyD,EAAahsD,QAAQ,SAAUtB,EAAOooD,GACrCzgB,GAAWygB,EAAcpE,eAC1BxjD,EAAQ4nD,SAKb5nD,EAcJ,SAAS8vC,IAAiE,IAC5E7oC,EAD0B20B,EAAkD,uDAAlC,GAAIt/B,EAA8B,uDAAnB,GAAIiK,EAAe,uDAAJ,GAI5E,IAAOrH,EAAS08B,KAAqB18B,EAAS5C,KAAgB4C,EAASqH,GAAY,CAClF,IAAIwmD,EAAmB,GAGvB,GAAiB,WAAZzwD,GAAqC,UAAZA,GAE7B,GAAKuI,EAAWvL,iBAAiBiM,aAAcq2B,IAAmB,CAEjE,IAAIp2B,EAAclM,iBAAiBiM,aAAcq2B,GAG5C/2B,EAAWW,EAAYY,OAE3B2mD,EAA+B,WAAZzwD,EAAwBkJ,EAAYY,MAAM2oC,SAAS7F,UAAY1jC,EAAYY,MAAMgB,QAAQ8hC,UAG5G1uC,QAAQC,IAAK,oCAAqC,0EAI/B,WAAZ6B,IACTywD,EAAmBzzD,iBAAiB8K,UAIrCxJ,IAAAA,KAAQmyD,GAAkB,SAAUvtD,EAAOmG,GAC1C,GAAKA,EAAKf,MAAQ2B,EAKhB,OAHDU,EAAUtB,GAGF,KAMX,OAAOsB,EAYD,SAASosB,IAA4D,IAArC25B,EAAqC,wDAAnB5iB,EAAmB,uCAARC,EAAQ,uCACxE7oC,EAAU,2BAA4B,CAClC2D,aAAc7L,iBAAiBC,OAAOmI,GACtC+2B,aAAcu0B,IACf,SAAErrD,GAEIA,EAAS6oC,SAEL3lC,EAAWulC,KAEZ9wC,iBAAiBC,OAAOsB,iBAAmBmyD,EAGrB1yD,EAAgB,iBAExBiH,SAAU,uBAExB6oC,EAAWzoC,OAGpB,SAAEA,GACDnH,QAAQC,IAAK,4DAGRoK,EAAWwlC,IACZA,EAAQ1oC,MAiBb,SAASrH,EAAgBkd,GAA0B,IAAjB2X,EAAiB,uDAAJ,GAE9CxtB,EAAW,GAGXsrD,EAAgB,CAAE,UAAW,QAAS,OAAQ,cAAe,WAAY,iBAG7E,GAAKpoD,EAAW2S,IAAa4jB,EAAS5jB,EAASy1C,GAAiB,CAE5D,IAAI9F,EAAe,GAEnB,OAAS3vC,GACL,IAAK,UAQD,GANA2X,EAAav0B,IAAAA,OAAS,GAAIu0B,GAMrBiM,EAHL+rB,EAAe,CAAE,QAGW/nD,OAAOC,KAAM8vB,IAAgB,CACrDA,EAAW+9B,qBAGa,WAAnB/9B,EAAW50B,KACZ40B,EAAW+9B,qBAAuB,sBAET,UAAnB/9B,EAAW50B,OACjB40B,EAAW+9B,qBAAuB,sBAGtC,IAAI7yD,EAAWO,GAAAA,CAAGu0B,EAAW+9B,sBAE7BvrD,EAAWtH,MAEV,CAED,IAAI2vD,EAAoBvkC,KAAKE,UAAWskC,EAAiB96B,EAAYg4B,IACrE3sD,QAAQsW,MAAO7O,EAAU,sCAAuC,CAAE,cAAe+nD,KAGrF,MAEJ,IAAK,QAQD,GANA76B,EAAav0B,IAAAA,OAAS,GAAIu0B,GAMrBiM,EAHL+rB,EAAe,CAAE,QAGW/nD,OAAOC,KAAM8vB,IAAgB,CACrD,IAAIktB,EAAU/hD,EAAgB,UAAW,CACrCC,KAAM40B,EAAW50B,OAIjBowC,EAAS0R,EAAQphD,KAAM,yEAG3B0G,EAAWgpC,MAEV,CAED,IAAIqf,EAAoBvkC,KAAKE,UAAWskC,EAAiB96B,EAAYg4B,IACrE3sD,QAAQsW,MAAO7O,EAAU,sCAAuC,CAAE,cAAe+nD,KAGrF,MAEJ,IAAK,OAQD,GANA76B,EAAav0B,IAAAA,OAAS,GAAIu0B,GAMrBiM,EAHL+rB,EAAe,CAAE,MAGW/nD,OAAOC,KAAM8vB,IAAgB,CAErDA,EAAWg+B,YAAc,uBAAyBh+B,EAAWztB,GAAK,KAGlE,IAAIuE,EAAQrL,GAAAA,CAAGu0B,EAAWg+B,aACtBC,EAAoBnnD,EAAMhL,KAAM,kBAGpC0G,EAASgE,KAAOM,EAChBtE,EAASswC,iBAAmBmb,MAE3B,CAED,IAAIpD,EAAoBvkC,KAAKE,UAAWskC,EAAiB96B,EAAYg4B,IACrE3sD,QAAQsW,MAAO7O,EAAU,sCAAuC,CAAE,cAAe+nD,KAGrF,MAEJ,IAAK,cAQD,GANA76B,EAAav0B,IAAAA,OAAS,GAAIu0B,GAMrBiM,EAHL+rB,EAAe,CAAE,SAAU,WAGC/nD,OAAOC,KAAM8vB,IAAgB,CAErD,IAAIxpB,EAAOrL,EAAgB,OAAQ,CAAEoH,GAAIytB,EAAWjoB,SAAWvB,KAG/DwpB,EAAWk+B,6BAA+B,qCAAuCl+B,EAAWyhB,QAAU,KACtGzhB,EAAWm+B,6BAA+B,0CAA4Cn+B,EAAWyhB,QAAU,KAE3G,IAAI2c,EAAoB5nD,EAAK1K,KAAMk0B,EAAWk+B,8BAC1CG,EAAoB7nD,EAAK1K,KAAMk0B,EAAWm+B,8BAC1C5xD,EAAoBiK,EAAK1K,KAAM,iBAEnC0G,EAAS8rD,gBAAmBF,EAC5B5rD,EAAS0wC,gBAAmBmb,EAC5B7rD,EAAS+rD,iBAAmBhyD,MAE3B,CAED,IAAIsuD,EAAoBvkC,KAAKE,UAAWskC,EAAiB96B,EAAYg4B,IACrE3sD,QAAQsW,MAAO7O,EAAU,sCAAuC,CAAE,cAAe+nD,KAGrF,MAEJ,IAAK,WAQD,GANA76B,EAAav0B,IAAAA,OAAS,GAAIu0B,GAMrBiM,EAHL+rB,EAAe,CAAE,QAGW/nD,OAAOC,KAAM8vB,IAAgB,CAErD,IAAIktB,EAAU/hD,EAAgB,UAAW,CACrCC,KAAM40B,EAAW50B,OAIjBmxC,EAAW2Q,EAAQphD,KAAM,yEAA0E0yD,OAEvGhsD,EAAW+pC,MAEV,CAED,IAAIse,EAAoBvkC,KAAKE,UAAWskC,EAAiB96B,EAAYg4B,IACrE3sD,QAAQsW,MAAO7O,EAAU,sCAAuC,CAAE,cAAe+nD,KAGrF,MAEJ,IAAK,gBAEDroD,EAAW/G,GAAAA,CAAG,wBAOtBJ,QAAQsW,MAAO7O,EAAU,sCAAuC,CAAE,iBAAkBuV,KAGxF,OAAO7V,EAWJ,SAAS0rC,IAAwC,IAApBzR,EAAoB,uDAAJ,GAE5Cj6B,EAAW,CACX8rC,IAAM,GACN79B,KAAM,MAIJpK,EAAclM,iBAAiBiM,aAAcq2B,GA0CnD,OAvCK/2B,EAAWW,KAEZ7D,EAASiO,KAAOvM,SAASiM,cAAe,OAGnCzK,EAAWW,EAAYgpC,WAExB7sC,EAAS8rC,IAAMjoC,EAAYgpC,SAG3B7sC,EAASiO,KACJc,aAAc,MAAOlL,EAAYgpC,UAGtC7sC,EAASiO,KACJc,aAAc,MAAOlL,EAAY1H,OAGhC+G,EAAWW,EAAYipC,UAAa5pC,EAAWW,EAAYkpC,WAEjE/sC,EAAS8rC,IAAM,CACX,QAAWjoC,EAAYooD,QACvB,QAAWpoD,EAAYipC,QACvB,QAAWjpC,EAAYkpC,SAI3B/sC,EAASiO,KACJc,aAAc,MAAOlL,EAAYipC,SAEtC9sC,EAASiO,KACJc,aAAc,SAAUzO,EAAU,eAAgB,CAAEuD,EAAYipC,QAASjpC,EAAYkpC,WAG1F/sC,EAASiO,KACJc,aAAc,MAAOlL,EAAY1H,QAIvC6D,EAYJ,SAAS05B,IAIZ,MAFsB,CAAE,SAAU,WAAY,OAAQ,MAAO,QAAS,MAAO,QAAS,WAAY,QAAS,QAAS,OAAQ,OAAQ,YAwBjI,SAASoV,IAA8E,IAAvD9qC,EAAuD,uDAAhD,KAAMkoD,EAA0C,uDAAjC,GAAItyD,EAA6B,uDAAtB,GAChEoG,EAAW,KA0BX,GAfAA,EAAW,CACPmsD,MAAY,GACZpc,SAAY,GACZvZ,KAAYv9B,GAAAA,CAAG,UACfuJ,SAAY,CACR4pD,OAAQ,GACR73C,MAAO,IAEX83C,MAAO,KAOJ9uD,EAHP2uD,EAASA,EAAOj4C,QAGU,CAEtB,IA6EIS,EA7EA43C,EAAe,IAAIl8C,OAAQ,mBAC3Bm8C,EAAe,GACfp+B,EAAe,GACfq+B,EAAeN,EAGfO,EAAc,EAiDdC,GA9CJR,EAASA,EAAOn9B,QAASu9B,GAAa,SAAUK,EAAYp4C,GACxD,IAsBQq4C,EAtBJC,EAAat4C,EAAMnB,MAAO,KAGxB05C,EAAuBD,EAAY,GAGnCE,EAAeF,EAAY,GAI3B7d,EAAY9rC,EAAW2pD,EAAY,IAAQA,EAAY,GAAME,EAgCnE,OA9BAx4C,EAAQ,CACJ3b,KAAW,QACXmH,GAAWgtD,EACX3xD,KAAW0xD,EACX9d,UAAWA,EACXge,UAAW9pD,EAAWc,EAAK9I,QAAS8zC,KAInC9rC,EAAWtJ,EAAM2a,EAAMxU,OAGC,0BAApBnG,EAAM2a,EAAMxU,KAAoCmD,EAAWtJ,EAAM0G,EAAU,YAAa,CAAEiU,EAAMxU,OACjG6sD,EAAehzD,EAAM0G,EAAU,YAAa,CAAEiU,EAAMxU,MAE9CmD,EAAWtJ,EAAM0G,EAAU,cAAe,CAAEiU,EAAMxU,SACxD6sD,EAAkBhzD,EAAM0G,EAAU,cAAe,CAAEiU,EAAMxU,OAG7DwU,EAAM04C,aAAgB14C,EAAMnZ,KAC5BmZ,EAAMnZ,KAAgB8H,EAAW0pD,GAAiBA,EAAehzD,EAAM2a,EAAMxU,KAIjFouB,EAAO3yB,KAAM+Y,GAGbi4C,EAAeA,EAAaz9B,QAAS49B,EAAY,WAAaF,EAAc,MAC5EA,IAEO,YAGcr5C,MAAO,SAG5B85C,EAAe,EAqBnB,IApBAj0D,IAAAA,KAAQyzD,GAAa,SAAU9uD,EAAKuvD,GAChC,GAAwB,IAAnBA,EAAuB,CAExB,IAAIf,EAAS,CACTxzD,KAAM,SACNwC,KAAM+xD,GAIVZ,EAAQ/wD,KAAM4wD,GAGdI,EAAeA,EAAaz9B,QAASo+B,EAAiB,YAAcD,EAAe,MACnFA,QAOiD,QAA/Cx4C,EAAQ43C,EAAY33C,KAAM63C,KAA2B,CAE3D,IAAIY,EAAO14C,EAAO,GAAItB,MAAO,KAQX,WANlBg6C,EAAO,CACHx0D,KAAOw0D,EAAM,GACbvvD,MAAOuvD,EAAM,KAIPx0D,KACNoH,EAASqsD,MAAM7wD,KAAM+wD,EAASa,EAAKvvD,QAGnCmC,EAASqsD,MAAM7wD,KAAM2yB,EAAQi/B,EAAKvvD,QAK1C,IAAIwvD,EAAa,KAGjBp0D,IAAAA,KAAQ+G,EAASqsD,OAAO,SAAUxuD,EAAOuvD,GAKrC,GAHAptD,EAASmsD,OAASiB,EAAKhyD,KAGL,KAAbgyD,EAAKhyD,KAAa,CACnB,IAAIkyD,EACAlyD,EAAOgyD,EAAKhyD,KAEZmyD,GAAiB,EACjBC,EAAiB,KAcrB,GAXmC,KAAbpyD,EAAM,KAExBA,EAAOA,EAAKqR,MAAO,IAI0B,KAA3BrR,EAAMA,EAAK2G,OAAS,KAEtC3G,EAAOA,EAAKqR,MAAO,GAAI,IAGP,UAAb2gD,EAAKx0D,MAAqC,SAAbw0D,EAAKx0D,OAAqBw0D,EAAKJ,YAAehpD,EAAKiqC,UACnFqf,EAAoB,CAChB,MAAS,sBAIbttD,EAAS+vC,UAAYqd,EAAKhyD,SAEzB,CAmBD,GAhBAkyD,EAAoB,CAChB,MAHW,oBAIX,gBAAmBF,EAAKrtD,GACxB,kBAAmBqtD,EAAKpe,WAIvB9rC,EAAWc,EAAK9I,QAASkyD,EAAKpe,aAE1BhrC,EAAK9I,QAASkyD,EAAKpe,WAAY72C,UAEhCm1D,EAAiB,OAAe,8BAKnCpqD,EAAWkqD,EAAKH,cAAgB,CAOjC,GAAKX,EAAYj8C,KAAMjV,GAAQ,CAEpB8H,EAAWmqD,KACdA,EAAa,IAAI76B,EAAAA,EACbxuB,EAAKrJ,SACL,OACA,CACI8yD,kBAAkB,KAM9B,IAAIl5C,EAAQ84C,EAAW35B,qBAAsBt4B,GAExC8H,EAAWqR,KAGZg5C,GAAiB,EACjBC,EAAiBj5C,GAIzB,IAAOg5C,EAAe,CAElB,IAAIG,EAAkBC,EAAgBvyD,EAAM,IAGvCsyD,EAAgBE,gBAEjBN,EAAmB,eAAkBlyD,EAGrCA,EAAOsyD,EAAgBtyD,OAMnC4E,EAAS+vC,UAAT,YAA2B8d,EAAgBzyD,GAA3C,MAGJ,IAAIya,EAAU5c,GAAAA,CAAG,UAAWq0D,GAEvBC,EACD13C,EACK7b,OAAQwzD,GAGb33C,EACKza,KAAMyyD,EAAgBzyD,IAI/B4E,EAASwC,SAAU4qD,EAAKx0D,MAAO4C,KAAMqa,GAQrC7V,EAASw2B,KAAKx8B,OAAQ6b,QA0BtB7V,EAAS+vC,UAAYqd,EAAKhyD,QAKlC4E,EAASwC,SAAS4pD,OAASnzD,GAAAA,CAAG+G,EAASwC,SAAS4pD,QAASzuD,KAAK,WAAY,OAAO3F,KAAK2xB,SACtF3pB,EAASwC,SAAS+R,MAAStb,GAAAA,CAAG+G,EAASwC,SAAS+R,OAAQ5W,KAAK,WAAY,OAAO3F,KAAK2xB,SAAShkB,OAAQ,6BAM9G,OAHIhO,iBAAiBC,OAAO6M,MAAOT,EAAKjE,IAAK6uC,aAAe5uC,EAGrDA,EASJ,SAAS6rC,EAAT,GAA0D,IAA5BC,EAA4B,EAA5BA,IAAK7qC,EAAuB,EAAvBA,MAAOkR,EAAgB,EAAhBA,EAAGX,EAAa,EAAbA,EAAG1H,EAAU,EAAVA,QAE7CgkD,OAAwCljD,IAAvB1D,OAAO6mD,WAA4B7mD,OAAO6mD,WAAa7mD,OAAO8mD,QAC/EC,OAAwCrjD,IAAvB1D,OAAOgnD,UAA4BhnD,OAAOgnD,UAAahnD,OAAOinD,QAE/Ep3C,EAAQ7P,OAAOknD,WAAalnD,OAAOknD,WAAa1sD,SAAS2sD,gBAAgBC,YAAc5sD,SAAS2sD,gBAAgBC,YAAcC,OAAOx3C,MACrI+hB,EAAS5xB,OAAOge,YAAche,OAAOge,YAAcxjB,SAAS2sD,gBAAgBG,aAAe9sD,SAAS2sD,gBAAgBG,aAAeD,OAAOz1B,OAE1I21B,EAAa13C,EAAQ7P,OAAOqnD,OAAOG,WACnCnpC,GAASxO,EAAQ5E,GAAM,EAAIs8C,EAAaX,EACxCzoC,GAAQyT,EAAStnB,GAAM,EAAIi9C,EAAaR,EACxCU,EAAYznD,OAAOsa,KAAMsqB,EAAK7qC,EAAlB,mDAGNkR,EAAIs8C,EAHE,8BAILj9C,EAAIi9C,EAJC,2BAKRppC,EALQ,4BAMPE,EANO,eAgClB,OAtBKre,OAAO0U,OACR+yC,EAAU/yC,QAIT1Y,EAAW4G,IAEY,SAAlB8kD,IACGD,EAAUE,OACX/kD,IAIAkD,YAAW,WACP4hD,MACD,KAIXA,GAGGD,EAYJ,SAASzrD,EAAW4rD,GAEvB,OAAO,MAAOA,EAYX,SAASvxD,EAASuxD,GACrB,IAAI9uD,GAAW,EAgBf,OAbKkD,EAAW4rD,KAGR9uD,EADC/G,IAAAA,QAAW61D,GACkB,GAAnBA,EAAS/sD,OAEdgtD,EAAUD,GACL71D,IAAAA,cAAiB61D,GAGL,IAAZA,GAIZ9uD,EAgBJ,SAASg7B,EAAgBg0B,EAASC,GAA6C,IAApC5tB,EAAoC,uDAAzB,CAAE6tB,eAAe,GAY1E,OAPO7tB,EAAS6tB,cAIDF,EAAQ31C,YAAc41C,EAAQ51C,WAH9B21C,EAAQ31C,WAAWgJ,eAAiB4sC,EAAQ51C,WAAWgJ,cAqBnE,SAASoX,EAAS01B,EAAQC,GAY7B,OATK/hD,MAAM80C,QAASgN,GAEyC,GAA9C7G,EAAiB6G,EAAQC,GAAWrtD,QAID,IAAnC9I,IAAAA,QAAWk2D,EAAQC,GA4B/B,SAAS9G,EAAiB+G,EAAQC,GACrC,OAAOr2D,GAAAA,CAAGo2D,GAASE,IAAKD,GAAS3lC,MA6C9B,SAASrpB,EAAUyT,EAAQy7C,GAE9B,OAAOlvD,EADQ2lC,EAAAA,KAAAA,UACElyB,EAAQy7C,GAYtB,SAASC,EAAUvD,GACtB,MAAyB,iBAAXA,EAYX,SAAS6C,EAAUD,GACtB,OAAoB,OAAbA,GAAyC,WAApB,EAAOA,GA4BhC,SAAS5mB,IAAuD,IAAnCgkB,EAAmC,uDAA1B,GAAIwD,EAAsB,uDAAd,GAAIC,EAAU,uDAAJ,GAG/D,OAFAzD,EAASA,EAAOn9B,QAAS,MAAO2gC,IAChB3gC,QAAS,MAAO4gC,GAa7B,SAAS1K,IAA2D,IAA1C7pD,EAA0C,uDAAnC,GAAI+qD,EAA+B,wDAAdjrD,EAAc,uDAAJ,GAE/DgI,EAAWhI,EAAQ+vD,WACzB/vD,EAAQ+vD,QAAU,WAIhB,IAAI2E,EAAa,eAAH,OAAmB10D,EAAQ+vD,QAA3B,0KAGT9E,EACIjjD,EAAWhI,EAAQ2uD,gBAAmB3uD,EAAQ2uD,cAC/ChxD,QAAQg3D,eAAgB,gBAAiBD,EAAYx0D,GAGrDvC,QAAQs/B,MAAO,gBAAiBy3B,EAAYx0D,GAIhDvC,QAAQC,IAAK,gBAAiB82D,EAAYx0D,GAc3C,SAAS0uD,IAA+C,IAA7B3a,EAA6B,uDAApB,QAAS/zC,EAAW,uDAAJ,GAEnDw0D,EAAa,yKAGF,SAAVzgB,IACDygB,EAAa,wBAAH,OAA4BA,IAG3B,WAAVzgB,IACDygB,EAAa,wBAAH,OAA4BA,IAI1C/2D,QAAQC,IAAR,YAAmBsC,GAASw0D,GAWzB,SAAS9d,IAAuB,IAAXtb,EAAW,uDAAJ,GAC3Bs5B,EAAgB,CAChB,IAAK,QACL,IAAK,OACL,IAAK,QAGLC,EAAa,SAAUniD,GACvB,OAAOkiD,EAAeliD,IAASA,GAGnC,OAAO4oB,EAAKzH,QAAS,SAAUghC,GAY5B,SAASpC,IAAwC,IAAxBvyD,EAAwB,uDAAjB,GAAI2G,EAAa,uDAAJ,GAE5C/B,EAAW,CACX4tD,eAAe,EACfxyD,KAAMA,GAIV,GAAKA,EAAK2G,OAASA,EAAQ,CAEvB,IAAIiuD,EAAc/mD,KAAKgnD,MAAOluD,EAAS,GAGnCmuD,EAAY,CACZR,MAAOt0D,EAAKwX,UAAW,EAAGo9C,GAC1BL,IAAOv0D,EAAKqR,OAAQujD,IAIxBhwD,EAAS5E,KAAT,UAAoB80D,EAAUR,MAA9B,gBAA6CQ,EAAUP,KACvD3vD,EAAS4tD,eAAgB,EAI7B,OAAO5tD,EAOJ,SAAS29B,IAIZ,MAAO,IAAM10B,KAAKknD,SAAS92C,SAAU,IAAK+2C,OAAQ,EAAG,GAYlD,SAAS/uD,IAA6D,IAAzCyqC,EAAyC,uDAAnC,GAAIukB,EAA+B,uDAAlB,GAAIn1D,EAAc,uDAAJ,GAEhEqC,EAASuuC,KACVA,EAAM5kC,OAAOgiC,SAASC,MAI1B,IACI2C,EAAM,IAAIwkB,IAAKxkB,GACjB,MAAQh+B,GAEN,OAAOg+B,EAOX,IAHA,IAAIykB,EAAgBzkB,EAAItX,OAAO47B,OAAQ,GAAIh9C,MAAO,KAGlD,MAA4B3V,OAAOwvC,QAASojB,GAA5C,eAA0D,CAApD,gBAAMzyD,EAAN,KAAWzC,EAAX,KACFyC,EAAQg1C,UAAWh1C,GACnBzC,EAAQy3C,UAAWz3C,GAKnB,IAHA,IAAIsW,EAAI8+C,EAAcxuD,OAClBmgB,OAAC,EAEGzQ,KAGJ,IAFAyQ,EAAIquC,EAAe9+C,GAAI2B,MAAO,MAEtB,IAAOxV,EAAK,CAChBskB,EAAG,GAAM/mB,EACTo1D,EAAc9+C,GAAKyQ,EAAE3O,KAAM,KAC3B,MAIH9B,EAAI,IACL8+C,EAAeA,EAAcxuD,QAAW,CAAEnE,EAAKzC,GAAQoY,KAAM,MAsBrE,GAjBAg9C,EAAgBA,EAAc5qD,QAAO,SAAE6qD,GAEnC,IAAIC,EAAiBD,EAAUp9C,MAAO,KAEtC,QAAW7V,EAASizD,IAAejzD,EAASkzD,EAAe,QAI/D3kB,EAAItX,OAAS+7B,EAAch9C,KAAM,MAGjCrY,EAAUjC,IAAAA,OAAS,GAAI,CACnBswC,UAAU,EACVC,SAAU,GACXtuC,IAGUquC,SAET,GAAKruC,EAAQsuC,QAETtiC,OAAOgiC,SAASC,KAAO2C,EAAI3C,SAE1B,CAED,IAAIunB,EAAYhvD,SAAST,MAGzBiG,OAAOypD,QAAQC,UAAU,GAAIF,EAAW5kB,EAAI3C,MAKpD,OAAO2C,EAAI3C,KAGR,SAAS3iC,IAA2C,IAA1BslC,EAA0B,uDAApB,GAAI0kB,EAAgB,uDAAJ,GAUnD,OARKjzD,EAASuuC,KACVA,EAAM5kC,OAAOgiC,SAASC,OAI1B2C,EAAM,IAAIwkB,IAAKxkB,IAGJ+kB,aAAalnC,IAAK6mC,GAU1B,SAAS3C,IAAoC,IAApBiD,EAAoB,uDAAJ,GACtCC,EAAYrvD,SAASiM,cAAe,YAE1C,OADAojD,EAAU9yC,UAAY6yC,EACfC,EAAU51D,MAGd,SAAS08B,GAAUm5B,EAAMC,GAC5B,IAAIC,EAAW,EAEf,OAAO,WACH,IAAItnD,EAAMnB,KAAKmB,MACf,GAAKsnD,EAAWD,EAAWrnD,EAEvB,OADAsnD,EAAWtnD,EACJonD,EAAK/jD,MAAOjV,KAAMkV,YAK9B,SAASP,GAAUqkD,EAAMC,GAC5B,IAAIC,GAAY,EAEhB,OAAO,WACHnkD,aAAcmkD,GACd,IAAIC,EAAOjkD,UACP6I,EAAO/d,KACXk5D,EAAWlkD,YAAY,WACnBgkD,EAAK/jD,MAAO8I,EAAMo7C,KACnBF,IAIJ,SAASjhC,GAAiBk8B,GAE7B,IAAMkF,EAAgB1vD,SAASiM,cAAe,YAG9CyjD,EAAc56C,MAAMO,MAAS,MAC7Bq6C,EAAc56C,MAAMsiB,OAAS,MAG7Bs4B,EAAcj2D,MAAQ+wD,EAGtBxqD,SAASgb,KAAK1N,YAAaoiD,GAG3BA,EAAc9oC,SAGd5mB,SAASyxB,YAAa,QAGtBzxB,SAASgb,KAAKvO,YAAaijD,GAUxB,SAASC,KAAiC,IAAfhwB,EAAe,uDAAJ,GACzCA,EAAWpoC,IAAAA,QAAU,EAAM,CACvBgI,MAAStJ,iBAAiBwB,KAAKm4D,UAAUC,kBAAkBtwD,MAC3DwtC,QAAS,GACT5gC,QAASlW,iBAAiBwB,KAAKm4D,UAAUC,kBAAkB1jD,QAC3DhV,QAAS,KACTk4B,QAAS,CACLE,QAAS,CACLp2B,MAAOlD,iBAAiBwB,KAAKm4D,UAAUl/B,UACvCkY,QAAS,WAELpjC,OAAOsa,KAAM7pB,iBAAiBgyD,IAAI6H,aAAc,YAGxDhyD,OAAQ,CACJ3E,MAAOlD,iBAAiBwB,KAAKm4D,UAAUG,aACvCnnB,QAAS,WAELpjC,OAAOgiC,SAASna,QAASp3B,iBAAiBgyD,IAAI+H,gBAI3DrwB,GAGH,IAEIswB,EAFAC,EAAY,GAGhB,IAEI34D,IAAAA,KAAQtB,iBAAiB2tD,gBAAgB,SAAUznD,EAAO4nD,GACjDA,EAAUrhD,IAAMzM,iBAAiBC,OAAOmI,KACzC4xD,EAAalM,MAGvB,MAAQ33C,GACNjV,QAAQC,IAAKgV,GAIjB,IACI,IAAI+jD,EAAY,UAAH,OAAcl6D,iBAAiBwB,KAAKm4D,UAAUQ,YAA9C,cAGT3e,EAAuC,QAA1Bwe,EAAW9Q,YAAwBlpD,iBAAiBwB,KAAKm4D,UAAUS,eAA6C,aAA1BJ,EAAW9Q,YAA6BlpD,iBAAiBwB,KAAKm4D,UAAUU,oBAAsB,GACrMH,GAAa,GAAJ,OAAQl6D,iBAAiBwB,KAAKm4D,UAAUne,WAAxC,aAAyDA,GAGlE,IAAI8e,EAAyC,SAA1BN,EAAWhiB,YAAyBh4C,iBAAiBwB,KAAKm4D,UAAUY,kBAAgD,WAA1BP,EAAWhiB,YAA2Bh4C,iBAAiBwB,KAAKm4D,UAAUa,iBAAmB,GAGtMP,EAFAC,GAAa,KAAJ,OAAUl6D,iBAAiBwB,KAAKm4D,UAAUW,aAA1C,aAA6DA,GAI1E,MAAQnkD,GACJjV,QAAQC,IAAKgV,GAIjB,IACI,IAAIskD,EAAiB,OAAH,OAAWz6D,iBAAiBwB,KAAKm4D,UAAUe,iBAA3C,WAIZC,EAAgB,SAAEtuD,GAEpB,IAAMiuD,EAAmC,WAApBjuD,EAAK2rC,YAA2Bh4C,iBAAiBwB,KAAKm4D,UAAUiB,eAAiB56D,iBAAiBwB,KAAKm4D,UAAUkB,gBAEtI,kBAAaxuD,EAAKs8B,KAAKz8B,YAAvB,cAA0CG,EAAKs8B,KAAKr9B,KAApD,cAAgEgvD,EAAhE,gEAAsIjuD,EAAKs8B,KAAKx8B,SAASirB,QAAS,2BAA4B,IAA9L,qDAAiPjL,KAAKE,UAAWhgB,GAAO87B,WAAY,IAAK,QAASA,WAAY,IAAK,QAAnT,cAIEsN,EAAcukB,EAAWvkB,SAASzvC,IAAK20D,GACvCjlB,EAAcD,EAASrrC,OAAS,EAGhC0D,EAAcksD,EAAWlsD,QAAQ9H,IAAK20D,GACtC/kB,EAAc9nC,EAAQ1D,OAAS,EAG/BU,EAAckvD,EAAWlvD,SAAS9E,IAAK20D,GACvCG,EAAchwD,EAASV,OAAS,EAGjCsrC,GAAeE,GAAcklB,GAE9BL,GAAkB,GAAJ,OAAQz6D,iBAAiBwB,KAAKm4D,UAAUoB,cAAxC,QAIVN,GADC/kB,EACiBD,EAAS75B,KAAM,MAGf,KAAJ,OAAU5b,iBAAiBwB,KAAKm4D,UAAUqB,YAI5DP,GAAkB,KAAJ,OAAUz6D,iBAAiBwB,KAAKm4D,UAAUsB,aAA1C,QAIVR,GADC7kB,EACiB9nC,EAAQ8N,KAAM,MAGd,KAAJ,OAAU5b,iBAAiBwB,KAAKm4D,UAAUuB,WAI5DT,GAAkB,KAAJ,OAAUz6D,iBAAiBwB,KAAKm4D,UAAUwB,cAA1C,QAIVV,GADCK,EACiBhwD,EAAS8Q,KAAM,MAGf,KAAJ,OAAU5b,iBAAiBwB,KAAKm4D,UAAUyB,aAI5DX,GAAkB,GAAJ,OAAQz6D,iBAAiBwB,KAAKm4D,UAAU0B,oBAG1DpB,EAA4B,KAAdA,EAAF,UAA2BA,EAA3B,eAA6CQ,GAAoBR,EAEjF,MAAQ9jD,GACJjV,QAAQC,IAAKgV,GAIjB,IAEI,GAAK5K,EAAWm+B,EAASxoC,SAAW,CAChCA,QAAQC,IAAKuoC,EAASxoC,SAEtB,IAAIo6D,EAAY,UAAH,OAAct7D,iBAAiBwB,KAAKm4D,UAAU2B,UAA9C,cAGbA,GAAa,GAAJ,OAAQ5xB,EAASxoC,QAAQq6D,MAAMpzB,WAAYnoC,iBAAiBw7D,QAAS,eAE9EvB,EAA0B,KAAdA,EAAA,UAAuBA,EAAvB,eAAyCqB,GAAerB,GAG5E,MAAQ9jD,GACJjV,QAAQC,IAAKgV,GAGjB,IAAMslD,EAAS,IAAI5iC,EAAAA,EAAM,CACrBvvB,MAAO,iFAAF,OAAsFogC,EAASpgC,OACpGwtC,QAAS,GAAF,OAAMpN,EAASoN,SACtB5gC,QAAS,wCAAF,OAEMtQ,EAAS8jC,EAASxzB,SAA+B,GAAnBwzB,EAASxzB,QAF7C,4GAIgC+jD,EAJhC,gEAQP7gC,QAAS,CACLvxB,OAAS7H,iBAAiBwB,KAAKm4D,UAAUG,aACzCxgC,QAASt5B,iBAAiBwB,KAAKm4D,UAAUl/B,YAE9C,CACCjB,KAAM,cACNwoB,cAAc,IAGlByZ,EAAOhiC,UAAU,CACbC,UAAW,WACPgQ,EAAStQ,QAAQE,QAAQqZ,WAE7BxY,SAAU,WACNuP,EAAStQ,QAAQvxB,OAAO8qC,WAE5BhT,eAAgB,WAEZ,IAAM+7B,EAAoBp6D,GAAAA,CAAG,kBAG7Bo6D,EAAkB75D,GAAI,SAAS,WAEN65D,EAAkBj4D,OAAvC,IAYIisB,EAAQ3lB,SAAS4xD,cACrBjsC,EAAMksC,mBAAoBF,EAAkB,IAC5CnsD,OAAOssD,eAAeC,kBACtBvsD,OAAOssD,eAAeE,SAAUrsC,SAiBxC,SAASrhB,GAAiBvB,EAAO67B,EAAMnlC,GAE3C,IAAIw4D,EAAgB,GAQpB,OANA16D,IAAAA,KAAQwL,GAAO,SAAEI,EAAQb,GAChBA,EAAKs8B,KAAKA,IAASt8B,EAAKs8B,KAAKA,IAASnlC,IACvCw4D,EAAc9uD,GAAUb,MAIzB2vD,EAcH,SAAS7tD,GAAYrB,EAAO67B,GAAqB,IAAfszB,IAAe,yDAEjDC,EAAgB,GAQpB,OANA56D,IAAAA,KAAQwL,GAAO,SAAEI,EAAQb,GACds8B,KAAQt8B,EAAKs8B,OAAWszB,IAC3BC,EAAchvD,GAAUb,MAIzB6vD,EAGJ,SAASxhC,GAAc8W,GAC1B1rC,OAAOuY,OAAQtU,SAASiM,cAAe,KAAO,CAC1C9L,OAAQ,SACRsnC,KAAMA,IACP/gB,U,4ECt/DInvB,E,6CArjCJ,SAASy2C,EAAcnqC,GAAsB,IAAdjB,EAAc,uDAAN,KAEzCtE,EAAW,CACd7H,SAAS,GAIV,IAAK+K,EAAAA,EAAAA,IAAWqC,GAAU,CAEzB,IAAIvB,EAAOrM,iBAAiBC,OAAO6M,MAAOc,GAG1C,IAAOvB,EAAKiqC,aAAe1wC,EAAAA,EAAAA,IAASyG,KAEnChE,EAAS7H,QAAU6L,EAAK7L,SAGjB6L,EAAK7L,SAAS,CAGpB,IAAI27D,GAAcn7D,EAAAA,EAAAA,IAAgB,OAAQ,CACzCoH,GAAIwF,IACFvB,KAGH8vD,EAAYl0D,SAAU,eAGtB3G,IAAAA,KAAQ+K,EAAK9I,SAAS,SAAUytD,EAAgBC,GAG/C,IAAOA,EAAiBzwD,QAAS,CAGhC,IAAI47D,GAAuBp7D,EAAAA,EAAAA,IAAgB,cAAe,CACzD4M,OAASA,EACT0pC,QAAU0Z,IAIXoL,EAAqBjI,gBAAgBlsD,SAAU,2DAC/Cm0D,EAAqBrjB,gBAAgB9wC,SAAU,8BAC/Cm0D,EAAqBhI,iBAAiBnsD,SAAU,uBAGhDoN,YAAY,WACX+mD,EAAqBjI,gBAAgBrqD,YAAa,uCAChD,MAGEyB,EAAAA,EAAAA,IAAW6wD,EAAqBhI,mBAGpCta,EAAoBsiB,EAAqBhI,4BAS9C/rD,EAAS7H,SAAU,GAGZoF,EAAAA,EAAAA,IAAS+G,IAIfzL,QAAQsW,MAAO,0EAKjB,OAAOnP,EAcD,SAASyxC,EAAoB8O,GAAgC,IAA1ByT,EAA0B,wDAE/Dh0D,EAAW,CACd7H,SAAS,GAINgH,EAASohD,EAAKjnD,KAAL,+DACsC06D,EAAmB,OAAS,QADlE,yEAE4CA,EAAmB,OAAS,QAFxE,qEAGwCA,EAAmB,OAAS,QAHpE,oDASTC,GAAc,EAuFlB,OApFA90D,EAAO+0D,MAAK,WAGX,IAAI71D,EAAQpF,GAAAA,CAAGjB,MAMXupD,GAHYljD,EAAMzE,KAAM,QAGZ,IAGhB,GAAKyE,EAAMmD,SAAU,cAAgB,CAKpC,IAAI2yD,EAAiB91D,EAAM/E,KAAM,SAAU2K,QAGvCmwD,EAAiB/1D,EAAM/E,KAAM,iBAIjCioD,EAAY,CACX8S,WAAe,QACfl5D,MALoBi5D,EAAcryD,OAAS,EAAIqyD,EAAcx/C,MAAQ,GAMrE4Y,WAAY,CACX5xB,eAAiBu4D,EAAWv6D,KAAM,kBAClC8wB,SAAaypC,EAAWv6D,KAAM,mBAMhC2nD,EADSljD,EAAMmD,SAAU,wBACb,CACX6yD,WAAe,SACfl5D,MAAYkD,EAAMuW,MAClB4Y,WAAY,CACX5xB,eAAqByC,EAAMzE,KAAM,kBACjC8wB,SAAiBrsB,EAAMzE,KAAM,YAC7BygC,oBAAqBh8B,EAAMzE,KAAM,2BAMvB,CACXy6D,WAAeh2D,EAAMzE,KAAM,QAC3BuB,MAAYkD,EAAMuW,MAClB4Y,WAAY,CACX5xB,eAAiByC,EAAMzE,KAAM,kBAC7B8wB,SAAarsB,EAAMzE,KAAM,cAMC,YAAxB2nD,EAAU8S,aACd9S,EAAUpmD,MAAQkD,EAAMuD,GAAI,aAYPs8B,EAAe7/B,EAAOkjD,EAAU8S,WAAY9S,EAAUpmD,MAAOomD,EAAU/zB,YAGtEr1B,UACtB87D,GAAc,EAGd1T,EAAK3gD,SAAU,2BAIjBI,EAAS7H,QAAU87D,EAEZj0D,EAyBD,SAASk+B,EAAe7/B,EAAOxB,EAAW1B,GAA0F,IAAnFqyB,EAAmF,uDAAtE,CAAE5xB,gBAAgB,EAAO8uB,UAAU,GAAS4O,EAA0B,uCAEtIt5B,EAAW,CACd7H,SAAS,EACTmiB,QAAS,IAINg6C,GAAa56B,EAAAA,EAAAA,MAGb66B,EAAW,CACdjsC,OAAQ,CACP9iB,MAAS7N,iBAAiBwB,KAAKqiC,WAAWn9B,MAAMiqB,OAAO9iB,MACvDgvD,QAAS78D,iBAAiBwB,KAAKqiC,WAAWn9B,MAAMiqB,OAAOksC,SAExDp5D,KAAM,CACLoK,MAAS7N,iBAAiBwB,KAAKqiC,WAAWn9B,MAAMjD,KAAKoK,MACrDgvD,QAAS78D,iBAAiBwB,KAAKqiC,WAAWn9B,MAAMjD,KAAKo5D,SAEtDC,SAAU,CACTjvD,MAAS7N,iBAAiBwB,KAAKqiC,WAAWn9B,MAAMo2D,SAASjvD,MACzDgvD,QAAS78D,iBAAiBwB,KAAKqiC,WAAWn9B,MAAMo2D,SAASD,SAE1DE,IAAK,CACJlvD,MAAS7N,iBAAiBwB,KAAKqiC,WAAWn9B,MAAjC,IAA2CmH,MACpDgvD,QAAS78D,iBAAiBwB,KAAKqiC,WAAWn9B,MAAjC,IAA2Cm2D,QACpDG,eAAgBh9D,iBAAiBwB,KAAKqiC,WAAWn9B,MAAjC,IAA2Cs2D,gBAE5DC,MAAO,CACNpvD,MAAS7N,iBAAiBwB,KAAKqiC,WAAWn9B,MAAjC,MAA6CmH,MACtDgvD,QAAS78D,iBAAiBwB,KAAKqiC,WAAWn9B,MAAjC,MAA6Cm2D,QACtDG,eAAgBh9D,iBAAiBwB,KAAKqiC,WAAWn9B,MAAjC,MAA6Cs2D,gBAE9D13D,MAAO,CACNuI,MAAS7N,iBAAiBwB,KAAKqiC,WAAWn9B,MAAMpB,MAAMuI,MACtD4hB,OAAS,CACRotC,QAAS78D,iBAAiBwB,KAAKqiC,WAAWn9B,MAAMpB,MAAMmqB,OAAOotC,QAC7DG,eAAgBh9D,iBAAiBwB,KAAKqiC,WAAWn9B,MAAMpB,MAAMmqB,OAAOutC,gBAErEE,SAAU,CACTL,QAAS78D,iBAAiBwB,KAAKqiC,WAAWn9B,MAAMpB,MAAM43D,SAASL,QAC/DG,eAAgBh9D,iBAAiBwB,KAAKqiC,WAAWn9B,MAAMpB,MAAM43D,SAASF,iBAGxE7oB,IAAK,CACJtmC,MAAS7N,iBAAiBwB,KAAKqiC,WAAWn9B,MAAMytC,IAAItmC,MACpDgvD,QAAS78D,iBAAiBwB,KAAKqiC,WAAWn9B,MAAMytC,IAAI0oB,SAErDM,SAAU,CACTtvD,MAAS7N,iBAAiBwB,KAAKqiC,WAAWn9B,MAAMy2D,SAAStvD,MACzDgvD,QAAS78D,iBAAiBwB,KAAKqiC,WAAWn9B,MAAMy2D,SAASN,SAE1DO,MAAO,CACNvvD,MAAS7N,iBAAiBwB,KAAKqiC,WAAWn9B,MAAM02D,MAAMvvD,MACtDgvD,QAAS78D,iBAAiBwB,KAAKqiC,WAAWn9B,MAAM02D,MAAMP,SAEvDhsD,KAAM,CACLhD,MAAS7N,iBAAiBwB,KAAKqiC,WAAWn9B,MAAMmK,KAAKhD,MACrDgvD,QAAS78D,iBAAiBwB,KAAKqiC,WAAWn9B,MAAMmK,KAAKgsD,SAEtDQ,KAAM,CACLxvD,MAAS7N,iBAAiBwB,KAAKqiC,WAAWn9B,MAAM22D,KAAKxvD,MACrDgvD,QAAS78D,iBAAiBwB,KAAKqiC,WAAWn9B,MAAM22D,KAAKR,SAEtDS,YAAat9D,iBAAiBwB,KAAKqiC,WAAWn9B,MAAM42D,aAIrD,IACC,GAAkB,YAAbp4D,KAA6BU,EAAAA,EAAAA,IAASc,IAAWA,EAAMuD,GAAI,kBAAoB,CACnF,IAAIszD,EAAe72D,EAAMgiC,QAAS,iBAEzB60B,EAAa57D,KAAM,gBACd6I,QAAS,SAEdhH,EAAQkD,EAAMuW,MAEdsgD,EAAa57D,KAAM,gBACd6I,QAAS,UAGvB,MAAQ2L,GACTjV,QAAQC,IAAKgV,GAId,IAAK2rB,EAAAA,EAAAA,IAAS58B,EAAWy3D,IAYxB,GAVkB,YAAbz3D,IAA6BU,EAAAA,EAAAA,IAASpC,IAErC,CAAE,OAAQ,SAAUmzB,SAAUnzB,KAElCA,EAAiB,QAATA,GAMLqyB,EAAW9C,YAAcntB,EAAAA,EAAAA,IAASpC,IAAwB,YAAb0B,IAAqC,IAAV1B,GAC5E6E,EAASsa,QAAUi6C,EAAU13D,GAAY2I,WAIrC,IAAOgoB,EAAW9C,WAAYntB,EAAAA,EAAAA,IAASpC,GAC3C6E,EAAS7H,SAAU,OAGf,GAAc,IAATgD,EAAa,CAEtB,IAAIg6D,EAGJ,OAASt4D,GAER,IAAK,SAIJ,GAHAmD,EAAS7H,SAAU,EAGdq1B,EAAW6M,qBAAgC,0BAATl/B,EAAmC,CAEzE,IAAMi6D,EAAkB/2D,EAAMgiC,QAAS,iBAAkB/mC,KAAM,0BAGhC,GAA1B87D,EAAgBrzD,SAEpB/B,EAAS7H,QAAUs5C,EAAoB2jB,GAAiB,GAAOj9D,SAKjE,GAAK6H,EAAS7H,UAAW+K,EAAAA,EAAAA,IAAWo2B,GAA4B,CAE/D,IAAI+7B,EAAmB/7B,EAA0Bn+B,GAEjD6E,EAAS7H,QAAUk9D,EAAiBl9D,QAG7Bk9D,EAAiBl9D,UACvB6H,EAASsa,QAAU+6C,EAAiB/6C,SAItC,MAED,IAAK,OACL,IAAK,WAIJ,GAHAta,EAAS7H,SAAU,GAGd+K,EAAAA,EAAAA,IAAWo2B,GAA4B,CAE3C,IAAI+7B,EAAmB/7B,EAA0Bn+B,GAEjD6E,EAAS7H,QAAUk9D,EAAiBl9D,QAG7Bk9D,EAAiBl9D,UACvB6H,EAASsa,QAAU+6C,EAAiB/6C,SAItC,MAED,IAAK,MAGJ,IAMIu+B,EANAyc,EAAY,IAAIllD,OAAO,yBAiC3B,GA9BA+kD,EAAiBI,EAAqBp6D,GAMjCqyB,EAAW5xB,gBAAkBu5D,EAAeK,UAEX,GAAhCL,EAAehnC,OAAOpsB,OAE1B/B,EAAS7H,SAAU,EAInB6H,EAASsa,QAAUi6C,EAAQ,IAAKI,eAK5BW,EAAUjlD,KAAMlV,GACpB6E,EAAS7H,SAAU,EAInB6H,EAASsa,QAAUi6C,EAAQ,IAAKC,QAM7Bx0D,EAAS7H,UAAW+K,EAAAA,EAAAA,IAAWo2B,GAA4B,CAE/D,IAAI+7B,EAAmB/7B,EAA0Bn+B,EAAO09C,GAExD74C,EAAS7H,QAAUk9D,EAAiBl9D,QAG7Bk9D,EAAiBl9D,UACvB6H,EAASsa,QAAU+6C,EAAiB/6C,SAItC,MAED,IAAK,QAGJ,IAMIm7C,EANAC,EAAc,IAAItlD,OAAO,uCAiC7B,GA9BA+kD,EAAiBI,EAAqBp6D,GAMjCqyB,EAAW5xB,gBAAkBu5D,EAAeK,UAEX,GAAhCL,EAAehnC,OAAOpsB,OAE1B/B,EAAS7H,SAAU,EAInB6H,EAASsa,QAAUi6C,EAAQ,MAAOI,eAK9Be,EAAYrlD,KAAMlV,GACtB6E,EAAS7H,SAAU,EAInB6H,EAASsa,QAAUi6C,EAAQ,MAAOC,QAM/Bx0D,EAAS7H,UAAW+K,EAAAA,EAAAA,IAAWo2B,GAA4B,CAE/D,IAAI+7B,EAAmB/7B,EAA0Bn+B,EAAOs6D,GAExDz1D,EAAS7H,QAAUk9D,EAAiBl9D,QAG7Bk9D,EAAiBl9D,UACvB6H,EAASsa,QAAU+6C,EAAiB/6C,SAItC,MAED,IAAK,QAGJ,IA0BIq7C,EA1BAC,EAAc,IAAIxlD,OAAO,0JAMzBylD,EAAS,GAGR16D,EAAMmzB,SAAU,MACpBunC,EAAS16D,EAAMiY,MAAO,KAGtBna,IAAAA,KAAQ48D,GAAQ,SAAUh4D,EAAOZ,GAChC44D,EAAQh4D,GAAUZ,EAAMgX,WAKzB4hD,EAAOr6D,KAAML,EAAM8Y,QAIpBkhD,EAAiBI,EAAqBp6D,GAMtC,IAAI26D,GAAoB,EAGpBC,EAAoBF,EAAO9zD,OAAS,EAGxC,GAAKyrB,EAAW5xB,gBAAkBu5D,EAAeK,UAAW,CAE3D,IAAIQ,GAAuB,EAG3B/8D,IAAAA,KAAQ48D,GAAQ,SAAUh4D,EAAOZ,GAKhC,MAHAk4D,EAAiBI,EAAqBt4D,IAGlBkxB,OAAOpsB,QAAU,GASpC,OAHAi0D,GAAuB,GAGhB,KAKJF,IAAuBE,EAC3Bh2D,EAAS7H,SAAU,EAMjB6H,EAASsa,QAHN07C,EAECD,EACexB,EAASt3D,MAAM43D,SAASF,eAGxBJ,EAASt3D,MAAMmqB,OAAOutC,eAKrCoB,EACexB,EAASt3D,MAAM43D,SAASL,QAGxBD,EAASt3D,MAAMmqB,OAAOotC,aAO5Cv7D,IAAAA,KAAQ48D,GAAQ,SAAUh4D,EAAOZ,GAEzB24D,EAAYvlD,KAAMpT,KAExB64D,GAAoB,MAKjBA,EACJ91D,EAAS7H,SAAU,EAKlB6H,EAASsa,QADLy7C,EACexB,EAASt3D,MAAM43D,SAASL,QAGxBD,EAASt3D,MAAMmqB,OAAOotC,QAO5C,GAAKx0D,EAAS7H,UAAW+K,EAAAA,EAAAA,IAAWo2B,GAA4B,CAE/D,IAAI+7B,EAAmB/7B,EAA0Bn+B,EAAOw6D,GAExD31D,EAAS7H,QAAUk9D,EAAiBl9D,QAG7Bk9D,EAAiBl9D,UACvB6H,EAASsa,QAAU+6C,EAAiB/6C,SAItC,MAED,IAAK,MAEJ,IAAI27C,EAAcC,EAAU/6D,EAAOqyB,GAanC,GAVKyoC,EAAY99D,QAChB6H,EAAS7H,SAAU,EAInB6H,EAASsa,QAAUi6C,EAASU,YAKxBj1D,EAAS7H,UAAW+K,EAAAA,EAAAA,IAAWo2B,GAA4B,CAE/D,IAAI+7B,EAAmB/7B,EAA0Bn+B,EAAO86D,EAAYE,cAEpEn2D,EAAS7H,QAAUk9D,EAAiBl9D,QAG7Bk9D,EAAiBl9D,UACvB6H,EAASsa,QAAU+6C,EAAiB/6C,SAItC,MAED,IAAK,WAIJ,GAHAta,EAAS7H,SAAU,GAGd+K,EAAAA,EAAAA,IAAWo2B,GAA4B,CAE3C,IAAI+7B,EAAmB/7B,EAA0Bn+B,GAEjD6E,EAAS7H,QAAUk9D,EAAiBl9D,QAG7Bk9D,EAAiBl9D,UACvB6H,EAASsa,QAAU+6C,EAAiB/6C,SAItC,MAED,IAAK,QAIJ,GAHAta,EAAS7H,SAAU,GAGd+K,EAAAA,EAAAA,IAAWo2B,GAA4B,CAE3C,IAAI+7B,EAAmB/7B,EAA0Bn+B,GAEjD6E,EAAS7H,QAAUk9D,EAAiBl9D,QAG7Bk9D,EAAiBl9D,UACvB6H,EAASsa,QAAU+6C,EAAiB/6C,SAItC,MAGD,IAAK,OAIJ,GAHAta,EAAS7H,SAAU,GAGd+K,EAAAA,EAAAA,IAAWo2B,GAA4B,CAE3C,IAAI+7B,EAAmB/7B,EAA0Bn+B,GAEjD6E,EAAS7H,QAAUk9D,EAAiBl9D,QAG7Bk9D,EAAiBl9D,UACvB6H,EAASsa,QAAU+6C,EAAiB/6C,SAItC,MAGD,IAAK,OAIJ,GAHAta,EAAS7H,SAAU,GAGd+K,EAAAA,EAAAA,IAAWo2B,GAA4B,CAE3C,IAAI+7B,EAAmB/7B,EAA0Bn+B,GAEjD6E,EAAS7H,QAAUk9D,EAAiBl9D,QAG7Bk9D,EAAiBl9D,UACvB6H,EAASsa,QAAU+6C,EAAiB/6C,SAItC,MAED,QAECta,EAAS7H,SAAU,EACnB6H,EAASsa,QAAU,UAMtBta,EAASsa,QAAUi6C,EAAQ,YAM5B,KAAOh3D,EAAAA,EAAAA,IAASc,GAAS,CACxB,IAAInE,EAAamE,EAAMgiC,QAAS,iBAC5B+1B,EAAmBl8D,EAAWZ,KAAM,wBAAyBqM,QAAO,WACvE,OAAO1M,GAAAA,CAAGjB,MAAOqoC,QAAS,iBAAkBz+B,GAAI1H,MAG1C8F,EAAS7H,SAKf+B,EAAWuH,YAAa,uBACxBvH,EAAW0F,SAAU,2BALrB1F,EAAWuH,YAAa,yBACxBvH,EAAW0F,SAAU,wBAOG,IAApBI,EAASsa,SACb87C,EAAiBx2D,SAAU,6BAC3Bw2D,EAAiBh7D,KAAM4E,EAASsa,WAGhC87C,EAAiB30D,YAAa,6BAC9B20D,EAAiBh7D,KAAK,KAKxB,OAAO4E,EAiBD,SAASu1D,EAAqBrJ,GAEpC,IAAIlsD,EAAW,CACdw1D,WAAW,EACXrnC,OAAQ,IAKLkoC,EAAQ,IAAIjmD,OAAO,mBAGnBkmD,EAAY,IAAI9jC,EAAAA,EAAQ,KAAM,KAAM,CACvCi7B,kBAAkB,EAClB8I,kBAAkB,IAChBpoC,OAoDH,OAjDKjrB,EAAAA,EAAAA,IAAWgpD,IAER3uD,EAAAA,EAAAA,IAAS2uD,IAAU,YAElBuD,EAAAA,EAAAA,IAAUvD,KAChBA,EAASA,EAAO7yC,YAQjB,IAJA,IAGI3E,EAHAyZ,EAAS,GAPY,aAYxB,IAAIqoC,EAAe9hD,EAAO,GAIzB8hD,EAAalnC,WAAY,cACtBknC,EAAalnC,WAAY,aAG5BnB,EAAO3yB,KAAMg7D,GAIbv9D,IAAAA,KAAQq9D,GAAW,SAAEz4D,EAAO44D,GAC3Bx9D,IAAAA,KAAQw9D,EAAWtoC,QAAQ,SAAEtwB,EAAO0W,GAC9BiiD,GAAgBjiD,EAAMxU,IAC1BouB,EAAO3yB,KAAM+Y,UAhB2B,QAAnCG,EAAQ2hD,EAAM1hD,KAAMu3C,KAAqB,IAuBnDlsD,EAASmuB,OAASA,EAGbnuB,EAASmuB,OAAOpsB,OAAS,IAC7B/B,EAASw1D,WAAY,GAtCG,GA4C1B38D,QAAQsW,MAAO,8BAGTnP,EAgBD,SAAS02D,EAAuBxK,GAItC,IAAIyK,EAASzK,EAGTiJ,EAAiBI,EAAqBrJ,GA8B1C,OA3BKiJ,EAAeK,WAGnBv8D,IAAAA,KAAQk8D,EAAehnC,QAAQ,SAAUtwB,EAAO0W,GAM/C,IAAIqiD,EAAiBriD,EAAMxU,GAAGgvB,QAAS,2BAA4B,QAGnE6nC,GAAiBt2D,EAAAA,EAAAA,IAAU,SAAU,CAAEs2D,IAIvC,IAAIP,EAAQ,IAAIjmD,OAAQwmD,EAAgB,KAGxCD,EAASA,EAAO5nC,QAASsnC,GAAO,SAAU1J,EAAYx0B,GAGrD,OAqBG,SAAqCt7B,GAC3C,IAAI1B,EAAQ,GAEZ,OAAQ0B,GAEP,IAAK,SACJ1B,EAAQ,SACR,MAED,IAAK,OACJA,EAAQ,cACR,MAED,IAAK,WACJA,EAAQ,uMACR,MAED,IAAK,MACJA,EAAQ,EACR,MAED,IAAK,QACJA,EAAQ,IACR,MAED,IAAK,MACJA,EAAQ,sBACR,MAED,IAAK,QACJA,EAAQ,sBACR,MAED,IAAK,WACJA,GAAQ,EACR,MAED,IAAK,QACJA,EAAQ,SACR,MAED,IAAK,OACJA,EAAQ,aACR,MAED,IAAK,GACJA,EAAQ,WAIV,OAAOA,EAvEG07D,CAA4BtiD,EAAM3b,YAKrC+9D,EA6FD,SAAST,EAAUpqB,GAA6C,IAAxCte,EAAwC,uDAA3B,CAAE5xB,gBAAgB,GAEzDoE,EAAW,CACd82D,SAAS,EACT3+D,SAAS,EACT4+D,OAAQ,KACRZ,aAAc,MAIfrqB,EAAMA,EAAI/c,QAAS,KAAM,OAIzB,IAAIioC,EAAW,IAAI5mD,OAAQ,qXAGvB6mD,EAAgB1B,EAAqBzpB,GAIrCirB,EAASjrB,EAGb,GAAKte,EAAW5xB,gBAAkBq7D,EAAczB,UAAW,CAE1D,IAAI0B,EAAeR,EAAuB5qB,GAC1C9rC,EAASm2D,aAAee,EAGnBF,EAAS3mD,KAAM6mD,GACnBl3D,EAAS7H,SAAU,GAOlB4+D,EAFc,KAAVjrB,EAAI,GAECn0C,iBAAiBw7D,QAAUrnB,EAI3Bn0C,iBAAiBw7D,QAAU,IAAMrnB,EAItCkrB,EAAS3mD,KAAM0mD,KACnB/2D,EAAS7H,SAAU,SAMhB6+D,EAAS3mD,KAAMy7B,GACnB9rC,EAAS7H,SAAU,GAOlB4+D,EAFc,KAAVjrB,EAAI,GAECn0C,iBAAiBw7D,QAAUrnB,EAI3Bn0C,iBAAiBw7D,QAAU,IAAMrnB,EAItCkrB,EAAS3mD,KAAM0mD,KACnB/2D,EAAS7H,SAAU,IAatB,OARA6H,EAAS+2D,OAASA,EAIb/2D,EAAS+2D,QAAUjrB,IACvB9rC,EAAS82D,SAAU,GAGb92D,EAwFD,SAASmhC,EAAgBhiC,GAC/BA,EAAOg4D,YA5EGl+D,EA+DTo0B,QA9DCzgB,GAAGuqD,SAAW,SAAWj8D,GAC1B,OAAOlD,KAAKk8D,MAAM,WAKjB,IAAIkD,EAAQn+D,EAAEjB,MAGVqpC,EAAWpoC,EAAEitC,OAAO,CACvB,OAAU,eACRhrC,GAGCsH,EAAW,CACd4b,UAAYg5C,EACZ1/C,MAAS0/C,EAAM99D,KAAM,yBAIlB+9D,EAAmB,CACtB3sC,SAAaloB,EAASkV,MAAM9d,KAAM,YAClCgC,eAAiB4G,EAASkV,MAAM9d,KAAM,mBAInC09D,EAAmBr+D,EAAG,SAAU,CAAE,MAAS,0BAC3Cs+D,EAAyBt+D,EAAG,SAAU,CAAE,MAAS,kCACjDu+D,EAAsBv+D,EAAG,SAAU,CAAE,MAAS,+BAQlD,SAAS0G,EAAUxE,GAClB,IAAI2wC,EAAMoqB,EAAU/6D,EAAOk8D,GAGb,IAATl8D,GAAe2wC,EAAI3zC,SAAW2zC,EAAIgrB,SACtCQ,EAAiB13D,SAAU,+BAC3B43D,EAAoBp8D,KAAM0wC,EAAIirB,SAG9BO,EAAiB71D,YAAa,+BAchC,OA7BA81D,EAAuBn8D,KAAMimC,EAASo2B,QACtCF,EAAuB33C,SAAU03C,GACjCE,EAAoB53C,SAAU03C,GAC9BA,EAAiB13C,SAAUpd,EAAS4b,WAiBP,IAAxB5b,EAASkV,MAAM9C,OACnBjV,EAAU6C,EAASkV,MAAM9C,OAI1BpS,EAAS4b,UAAU5kB,GAAI,0BAA0B,WAChDmG,EAAU6C,EAASkV,MAAM9C,UAGnB5c,U,g7ECpqCWw6B,OAAAA,WACpB,gBAAa73B,GAA4C,IAAlCkC,EAAkC,uDAAtB,OAAQ3B,EAAc,uDAAJ,GAAI,6BAExDlD,KAAK0/D,SAAU/8D,EAAUkC,EAAW3B,GAGpClD,KAAKg8B,U,kDAGN,SAAUr5B,EAAUkC,EAAW3B,GAC9BlD,KAAK2C,SAAYA,EACjB3C,KAAK6E,UAAYA,EAEjB7E,KAAKkD,QAAUuC,OAAOuY,OAAQ,CAC7By3C,kBAAoB,EACpB8I,kBAAoB,EACpBoB,oBAAoB,GAClBz8D,GAEHlD,KAAK4/D,YAAc,IAAIxnD,OAAQ,mBAE/BpY,KAAKq3B,sBAAwB,K,qBAG9B,WAECr3B,KAAKm2B,OAASn2B,KAAK6/D,iB,0BAWpB,WACC,IAAIC,EAAa,GAGXC,EAAe//D,KAAKggE,kBAErBD,EAAa5pC,OAAOpsB,OAAS,GACjC+1D,EAAWt8D,KAAMu8D,GAIlB,IAAME,EAAiBjgE,KAAKkgE,oBAEvBD,EAAe9pC,OAAOpsB,OAAS,GACnC+1D,EAAWt8D,KAAMy8D,GAIlB,IAAME,EAAcngE,KAAKogE,iBAIzB,MAFa,GAAH,0BAAQN,GAAR,mBAAuBK,M,6BAgBlC,WAAiB,WAEVJ,EAAe,CACpBh4D,GAAQ,UAsIT,OAlIK/H,KAAKkD,QAAQuyD,mBACjBsK,EAAa57D,KAAOxE,iBAAiBwB,KAAKg1B,OAAOuJ,OAAO2gC,QAIpDrgE,KAAKkD,QAAQq7D,mBACjBwB,EAAarhC,KAAOz9B,6CAAAA,CAAE,0EAMlBjB,KAAKkD,QAAQy8D,qBACjBI,EAAa5pC,OAAS,CACrB,CACCpuB,GAAM,YACNnH,KAAM,OACNuD,KAAOxE,iBAAiBwB,KAAKg1B,OAAOuJ,OAAO4gC,SAC3CC,WAAW,KAQqB,aAAhC5gE,iBAAiBC,OAAOgB,MACF,WAAjBZ,KAAK2C,UAA0C,iBAAjB3C,KAAK2C,WAItCo9D,EAAa5pC,OAAO3yB,KAChB,CACIuE,GAAM,UACNnH,KAAM,MACNuD,KAAOxE,iBAAiBwB,KAAKg1B,OAAOuJ,OAAO8gC,OAC3CD,WAAW,EACXzhC,cAAc,GAElB,CACI/2B,GAAM,gBACNnH,KAAM,OACNuD,KAAOxE,iBAAiBwB,KAAKg1B,OAAOuJ,OAAO+gC,aAC3CF,WAAW,EACXzhC,cAAc,GAElB,CACI/2B,GAAM,iBACNnH,KAAM,OACNuD,KAAOxE,iBAAiBwB,KAAKg1B,OAAOuJ,OAAOghC,cAC3CH,WAAW,EACXzhC,cAAc,GAElB,CACI/2B,GAAM,gBACNnH,KAAM,OACNuD,KAAOxE,iBAAiBwB,KAAKg1B,OAAOuJ,OAAOihC,aAC3CJ,WAAW,EACXzhC,cAAc,GAElB,CACI/2B,GAAM,aACNnH,KAAM,QACNuD,KAAOxE,iBAAiBwB,KAAKg1B,OAAOuJ,OAAOkhC,UAC3CL,WAAW,EACXzhC,cAAc,GAElB,CACI/2B,GAAM,mBACNnH,KAAM,OACNuD,KAAOxE,iBAAiBwB,KAAKg1B,OAAOuJ,OAAOmhC,YAC3CN,WAAW,EACXzhC,cAAc,GAElB,CACI/2B,GAAM,kBACNnH,KAAM,MACNuD,KAAOxE,iBAAiBwB,KAAKg1B,OAAOuJ,OAAOohC,kBAC3CP,WAAW,EACXzhC,cAAc,IAM1BihC,EAAa5pC,OAAO3yB,KACnB,CACIuE,GAAM,cACNnH,KAAM,QACNuD,KAAOxE,iBAAiBwB,KAAKg1B,OAAOuJ,OAAOqhC,WAC3CR,WAAW,GAEf,CACIx4D,GAAM,WACNnH,KAAM,MACNuD,KAAOxE,iBAAiBwB,KAAKg1B,OAAOuJ,OAAOshC,QAC3CT,WAAW,GAEf,CACIx4D,GAAM,cACNnH,KAAM,OACNuD,KAAOxE,iBAAiBwB,KAAKg1B,OAAOuJ,OAAOuhC,WAC3CV,WAAW,GAEf,CACIx4D,GAAM,eACNnH,KAAM,OACNuD,KAAOxE,iBAAiBwB,KAAKg1B,OAAOuJ,OAAOwhC,YAC3CX,WAAW,GAEf,CACIx4D,GAAM,eACNnH,KAAM,OACNuD,KAAOxE,iBAAiBwB,KAAKg1B,OAAOuJ,OAAOyhC,YAC3CZ,WAAW,KASjBR,EAAa5pC,OAAOhwB,SAAQ,SAAEoW,GAExBA,EAAMuiB,cACV,EAAKzH,sBAAsB7zB,KAAM+Y,EAAMxU,OAIlCg4D,I,+BAcR,WAAmB,WAEZE,EAAiB,CACtBl4D,GAAQ,WACRouB,OAAQ,IA2DN,OAvDEn2B,KAAKkD,QAAQuyD,mBACjBwK,EAAe97D,KAAOxE,iBAAiBwB,KAAKg1B,OAAOuJ,OAAO0hC,UAItDphE,KAAKkD,QAAQq7D,mBACjB0B,EAAevhC,KAAOz9B,6CAAAA,CAAE,0EAMpBjB,KAAKkD,QAAQy8D,qBAKoB,aAAhChgE,iBAAiBC,OAAOgB,MACF,WAAjBZ,KAAK2C,UAA0C,iBAAjB3C,KAAK2C,YAG5Cs9D,EAAe9pC,OAAO3yB,KAAK,CAC1BuE,GAAM,eACNnH,KAAM,OACNuD,KAAOxE,iBAAiBwB,KAAKg1B,OAAOuJ,OAAON,YAC3CmhC,WAAW,EACLzhC,cAAc,KAIpB5zB,EAAAA,wCAAAA,IAAWvL,iBAAiBiO,KACzB,MAAQjO,iBAAiBiO,IAE5BqyD,EAAe9pC,OAAO3yB,KAAK,CAC1BuE,GAAM,gBACNnH,KAAM,OACNuD,KAAOxE,iBAAiBwB,KAAKg1B,OAAOuJ,OAAO2hC,cAC3Cd,WAAW,EACFzhC,cAAc,KAU3BmhC,EAAe9pC,OAAOhwB,SAAQ,SAAEoW,GAE1BA,EAAMuiB,cACV,EAAKzH,sBAAsB7zB,KAAM+Y,EAAMxU,OAI/Bk4D,I,4BAYX,WAAgB,WACXE,EAAc,GAId1zD,EAAQ9M,iBAAiBC,OAAO6M,MAoCpC,OAnCKvB,EAAAA,wCAAAA,IAAWlL,KAAK2C,YAEpB8J,EAAQ,GAEA,CAAE,SAAU,UAAW,iBAAkB6pB,SAAUt2B,KAAK2C,YACzD8J,EAAQxL,8CAAAA,OAAU,GAAIwL,GAAOiB,EAAAA,wCAAAA,IAAa,MAAO,CAC7CC,OAAQ,CACJhL,SAAU,eAKA,WAAjB3C,KAAK2C,WACN8J,EAAQxL,8CAAAA,OAAU,GAAIwL,GAAOiB,EAAAA,wCAAAA,IAAa,MAAO,CAC7CC,OAAQ,CACJhL,SAAU,eAO1B8C,OAAOwvC,QAASxoC,GAAQtG,SAAS,YAAwB,0BAAZ6F,GAAY,WAElDqpD,EAAa,EAAKiM,cAAet1D,IAItCqpD,EAAWl/B,OAAOpsB,OAAS,IACtB,EAAK7G,QAAQy8D,qBAElBQ,EAAY38D,KAAM6xD,MAIb8K,I,2BAoBR,SAAAmB,cAAet1D,MAEd,IAAIu1D,YAAc,CACRx5D,GAAgBiE,KAAKY,SACrB+5B,cAAgB36B,KAAKU,iBAI/B,GAAK1M,KAAKkD,QAAQuyD,iBAAkB,CAGnC,IAAI7e,aAAe5qC,KAAKF,SACjBE,KAAKiqC,YACRW,cAAeT,EAAAA,wCAAAA,IAAenqC,KAAKU,gBAAiBV,KAAKrJ,SAAUqJ,KAAKY,UAAWd,UAIvFy1D,YAAYp9D,MAAO2yC,EAAAA,wCAAAA,IACT9qC,KACA4qC,aACAj3C,iBAAiBC,OAAO6M,MAAOT,KAAKjE,IAAKugC,MACzC,GACC9J,KAIZ,GAAKx+B,KAAKkD,QAAQq7D,iBAAkB,CAE7B,IAAIv0D,MAEJ,IAAKkB,EAAAA,wCAAAA,IAAWvL,iBAAiBiM,aAAcI,KAAKU,kBAAqB,CAErE,IAAMb,YAAclM,iBAAiBiM,aAAcI,KAAKU,kBAGnDxB,EAAAA,wCAAAA,IAAWW,YAAYgpC,UACxB7qC,MAAQ/I,6CAAAA,CAAE,iEAAD,OAEO4K,YAAYgpC,SAFnB,8CAGOhpC,YAAY1H,KAHnB,oDAQH+G,EAAAA,wCAAAA,IAAWW,YAAYooD,WAAa/oD,EAAAA,wCAAAA,IAAWW,YAAYipC,WACjE9qC,MAAQ/I,6CAAAA,CAAE,iEAAD,OAEO4K,YAAYooD,QAFnB,kDAGU3rD,EAAAA,wCAAAA,IAAU,eAAgB,CAAEuD,YAAYooD,QAASpoD,YAAYipC,UAHvE,6CAIOjpC,YAAY1H,KAJnB,oDAWjBo9D,YAAY7iC,KAAO10B,MAI1B,GAAKhK,KAAKkD,QAAQy8D,mBAAoB,CACrC,IAAItK,WAAa,GA8FX,GAzFA5vD,OAAOwvC,QAASjpC,KAAK9I,SAAUiD,SAAS,YAAwC,oCAElEgB,OAAOhB,SAAS,SAAEzD,GAE9B,IAAMm/B,EAAkBn/B,EAAMmE,gBAKU,YAA7Bg7B,EAAgBh9B,UAEjBnC,EAAMm2C,UAAU1yC,SAAQ,SAAE2yC,EAAKjzC,GAE3B,IAAM27D,EAAW37D,EAGjBizC,EAAI3yC,SAAQ,SAAEzD,GAEV2yD,WAAW7xD,KAAK,CAGZuE,GAAI,GAAF,OAAWiE,KAAKjE,GAAhB,YAAwBiE,KAAKY,SAA7B,YAA2Ci1B,EAAgBj/B,WAA3D,YAA2E4+D,EAA3E,YAAyF9+D,EAAMmE,gBAAgBjE,YAGjHuB,KAAM,GAAF,OAAS09B,EAAgBjD,UAAzB,eAA0Ct2B,EAAAA,wCAAAA,IAAU3I,iBAAiBwB,KAAKsgE,UAAW,CAAID,EAAW,IAApG,cAAmH9+D,EAAMmE,gBAAgB+3B,WAC7Ih+B,KAA4C,UAAnC8B,EAAMmE,gBAAgBhC,WAA4D,YAAnCnC,EAAMmE,gBAAgBhC,UAA0B,OAASnC,EAAMmE,gBAAgBhC,UACvI1B,MAAST,EAAM+B,WACf+oC,QAAS9qC,EAAMmE,gBAAgBjE,WAC/B2K,OAASvB,KAAKjE,GACdw4D,WAAW,UAKY,SAA7B1+B,EAAgBh9B,aAOxBqG,EAAAA,wCAAAA,IAAW22B,EAAgB8sB,qBACxBoI,EAAAA,wCAAAA,IAAUl1B,EAAgB8sB,mBAG7BlpD,OAAOwvC,QAASpT,EAAgB8sB,mBAAoBxoD,SAAQ,YAA8B,0BAA1B0wB,EAA0B,KAAjB+H,EAAiB,KACzFy2B,WAAW7xD,KAAK,CACHuE,GAAI,GAAF,OAAYiE,KAAKjE,GAAjB,YAAyBiE,KAAKY,SAA9B,YAA4CiqB,GAC9C1yB,KAAWy6B,EACXh+B,KAAwC,UAA7BihC,EAAgBh9B,WAAsD,YAA7Bg9B,EAAgBh9B,UAA0B,OAASg9B,EAAgBh9B,UACvH1B,MAAWT,EAAM+B,WACjB+oC,QAAW3L,EAAgBj/B,WAC3B2K,OAAWvB,KAAKjE,GAChBw4D,WAAW,OAMzBlL,WAAW7xD,KAAK,CACNuE,GAAI,GAAF,OAAWiE,KAAKjE,GAAhB,YAAwBiE,KAAKY,SAA7B,YAA2Ci1B,EAAgBj/B,YAC7DuB,KAAS09B,EAAgBjD,UACzBh+B,KAAsC,UAA7BihC,EAAgBh9B,WAAsD,YAA7Bg9B,EAAgBh9B,UAA0B,OAASg9B,EAAgBh9B,UACrH1B,MAAST,EAAM+B,WACf+oC,QAAS3L,EAAgBj/B,WACzB2K,OAASvB,KAAKjE,GACdw4D,WAAW,WAS/Bv0D,KAAKmqB,OAAOhwB,SAAQ,SAAEoW,GACrB84C,WAAW7xD,KAAK,CACTuE,GAAI,GAAF,OAAQiE,KAAKjE,GAAb,YAAqBwU,EAAMmlD,gBAA3B,YAAgDnlD,EAAMsa,SACxD1yB,KAAMoY,EAAMqiB,UACZh+B,MAAMsK,EAAAA,wCAAAA,IAAWqR,EAAMohB,WAAcphB,EAAMohB,UAAY,OACvDpwB,OAAQvB,KAAKjE,GACbw4D,WAAW,OAKnBgB,YAAYprC,OAASk/B,aAGd9vD,EAAAA,wCAAAA,IAASyG,KAAKikD,cAEjB,IAEI,IAAMA,aAAe3W,KAAK,IAAD,OAAOttC,KAAKikD,aAAal5B,QAAS,WAAY,IAAKA,QAAS,aAAa,IAAK9a,OAA9E,MAGzBo5C,WAAapF,aAAcsR,YAAav1D,MAC1C,MAAQ8J,GACTjV,QAAQC,IAAKgV,GACbjV,QAAQC,IAAKkL,KAAKikD,eAexB,OAAOsR,c,gCAYd,SAAoBprC,GAAQ,WA4B3B,OAzBKjrB,EAAAA,wCAAAA,IAAWlL,KAAK6E,aAGb,CAAE,OAAQ,WAAY,OAAQyxB,SAAUt2B,KAAK6E,aAEnDsxB,EAASA,EAAOxoB,QAAO,SAAE4O,GAExB,IAAIohB,EAAYphB,EAAM3b,KAatB,MAPmB,SAAlB,EAAKiE,WACW,OAAb84B,IAEHA,EAAY,SAIN,EAAK94B,WAAa84B,OAKrBxH,I,gCAYR,SAAoB4F,GAEnB,IAAI/E,EAAa,KAGXza,EAAQvc,KAAK2hE,iBAAkB5lC,GAGrC,IAAK7wB,EAAAA,wCAAAA,IAAWqR,GAAS,CAExB,IAAKrR,EAAAA,wCAAAA,IAAWvL,iBAAiBiiE,MAAMzrC,OAAQ5Z,EAAMxU,KACpDivB,EAAar3B,iBAAiBiiE,MAAMzrC,OAAQ5Z,EAAMxU,QAE9C,EAGJivB,EAAattB,SAASiM,cAAe,SAC1BF,UAAUrL,IAAK,aAG1B4sB,EAAWhgB,YAAauF,EAAM4jB,MAAMzB,KAAK,GAAGmjC,aAG5C,IAAMC,EAAap4D,SAASiM,cAAe,QAC3CmsD,EAAWrsD,UAAUrL,IAAK,mBAC1B03D,EAAW77C,UAAY1J,EAAMpY,KAC7B6yB,EAAWhgB,YAAa8qD,GAGnBvlD,EAAMgkD,YAEV5gE,iBAAiBiiE,MAAMzrC,OAAQ5Z,EAAMxU,IAAOivB,GAK9CA,EAAaA,EAAW6qC,WAAW,OAE/B,EAGJ7qC,EAAattB,SAASiM,cAAe,SAC1BF,UAAUrL,IAAK,YAAa,sBAGvC,IAAM23D,EAAar4D,SAASiM,cAAe,KAC3CosD,EAAWtsD,UAAUrL,IAAK,UAAW,wBACrC4sB,EAAWhgB,YAAa+qD,GAGxB,IAAMD,EAAap4D,SAASiM,cAAe,QAC3CmsD,EAAWrsD,UAAUrL,IAAK,mBAC1B03D,EAAW77C,UAAY8V,EACvB/E,EAAWhgB,YAAa8qD,GAGzB,OAAO9qC,I,8BAYR,WAAgC,IAAd+E,EAAc,uDAAJ,GAGrBimC,EAAkBjmC,EAGpBxf,EAAQ,KAgCZ,GA7BKwf,EAAQzE,WAAY,eAExByE,EAAU,iBAIJx2B,EAAAA,wCAAAA,IAASw2B,IAEf/7B,KAAKm2B,OAAO9N,MAAK,SAAEk5C,GAOlB,GALAhlD,EAAQglD,EAAYprC,OAAO7J,QAAO,SAAE21C,EAAcC,GACjD,OAAOA,EAAan6D,IAAMg0B,EAAUmmC,EAAeD,IACjD,OAGE/2D,EAAAA,wCAAAA,IAAWqR,GAQf,OANAA,EAAM4jB,MAAQ,CACbp4B,GAAMw5D,EAAYx5D,GAClB5D,KAAMo9D,EAAYp9D,KAClBu6B,KAAM6iC,EAAY7iC,OAGZ,MAMLxzB,EAAAA,wCAAAA,IAAWqR,IAAWwf,EAAQzE,WAAY,aAAe,CAEpD/a,EAAQtb,8CAAAA,QAAU,EAAM,GAAIsb,GAGrC,IAAM3W,EAAOo8D,EAAgBjrC,QAAS,YAAa,IAG1Cxa,EAAMxU,GAAOwU,EAAMxU,GAAGgvB,QAAS,MAAOnxB,GAGtC2W,EAAMpY,MAAOmE,EAAAA,wCAAAA,IAAU3I,iBAAiBwB,KAAKg1B,OAAOuJ,OAAOC,oBAAqB,CAAE/5B,IAG5F,OAAO2W,I,kCAWR,SAAsB4lD,GAA6B,WAAbj/D,EAAa,uDAAH,GAE/CA,EAAUuC,OAAOuY,OAAO,CACvB2d,SAAU,IACRz4B,GAGH,IAAMk/D,IAAgB78D,EAAAA,wCAAAA,IAASrC,EAAQy4B,UAGjCz5B,EAAawH,SAASiM,cAAe,QA6B3C,OA1BAwsD,EAAiBA,EAAeprC,QAC/B/2B,KAAK4/D,aACL,SAAEyC,EAAW9lD,GAEZ,IAGI+lD,EAHW,EAAKrrC,mBAAoB1a,GAGjBuc,UAYvB,OATKspC,IAEJE,GAAYh6D,EAAAA,wCAAAA,IAAUpF,EAAQy4B,SAAU,CACvC2mC,EACA/lD,KAKK+lD,KAKTpgE,EAAW+jB,UAAYk8C,EAEhBjgE,M,OA1vBYs4B,I,sBCXQ,mBAAlB/0B,OAAOuY,SACdvY,OAAOuY,OAAS,SAAUnU,KAAWsvD,GACjC,IAAKtvD,EACD,MAAM04D,UAAU,8CAEpB,IAAK,MAAM1gE,KAAUs3D,EACbt3D,GACA4D,OAAOC,KAAK7D,GAAQsE,SAASP,GAASiE,EAAOjE,GAAO/D,EAAO+D,KAGnE,OAAOiE,K,qBCMf,SAAS24D,EAAQ3kD,EAASjY,EAAKzC,GAC3B,QAAcyP,IAAVzP,EACA,OAAO0a,GAAWA,EAAQ4kD,KAAO5kD,EAAQ4kD,IAAI7gE,MAAQic,EAAQ4kD,IAAI7gE,KAAKgE,GAGtEiY,EAAQ4kD,IAAM5kD,EAAQ4kD,KAAO,GAC7B5kD,EAAQ4kD,IAAI7gE,KAAOic,EAAQ4kD,IAAI7gE,MAAQ,GACvCic,EAAQ4kD,IAAI7gE,KAAKgE,GAAOzC,EAoBhC,IAAIwK,EAAS,SAAWgnB,EAAOK,GAC3B,KAAML,aAAiBI,UAAYJ,aAAiBG,gBAAkBH,aAAiBtf,OACnF,MAAM,IAAIyH,MAAM,gFAEpB,MAAwB,iBAAbkY,EACA3f,MAAM4T,KAAK0L,GAEftf,MAAM4T,KAAK0L,GAAOhnB,QAAO,SAAU3B,GAAQ,OAAyB,IAAlBA,EAAK4nB,UAAkB5nB,EAAKxD,QAAQwsB,OAK7F0tC,EAAS,IAAIC,IAMbC,EAAuB,WACvB,SAASA,IACL5iE,KAAK6iE,QAAU,IAAIF,IACnB3iE,KAAK8iE,kBAAelwD,EACpB5S,KAAK+iE,MAAQ,IAAIJ,IAyHrB,OAvHAl9D,OAAOisB,eAAekxC,EAAMv2C,UAAW,SAAU,CAM7CsF,IAAK,WAED,IAAI7W,EAAS,GAKb,OAJA9a,KAAK6iE,QAAQ18D,SAAQ,SAAUhD,EAAOyC,GAClCkV,EAAOlV,GAAOzC,KAGX2X,GAOXyV,IAAK,SAAUzV,GACX,GAAsB,iBAAXA,EACP,MAAM,IAAIgC,MAAM,uEAGpB,IAAIkmD,EAAev9D,OAAOuY,OAAO,GAAIlD,GAErC9a,KAAK6iE,QAAU,IAAIF,IAAIl9D,OAAOwvC,QAAQ+tB,KAE1CC,YAAY,EACZC,cAAc,IASlBN,EAAMv2C,UAAU82C,UAAY,SAAUv9D,EAAKzC,GACvC,IAAKnD,KAAK6iE,QAAQ/4D,IAAIlE,GAClB,MAAM,IAAIkX,MAAM,6CAA+ClX,GAGnE5F,KAAK6iE,QAAQtyC,IAAI3qB,EAAKzC,IAQ1By/D,EAAMv2C,UAAU+2C,UAAY,SAAUx9D,GAClC,IAAK5F,KAAK6iE,QAAQ/4D,IAAIlE,GAClB,MAAM,IAAIkX,MAAM,yCAA2ClX,GAE/D,OAAO5F,KAAK6iE,QAAQlxC,IAAI/rB,IAE5BH,OAAOisB,eAAekxC,EAAMv2C,UAAW,cAAe,CAMlDsF,IAAK,WACD,OAAO3xB,KAAK8iE,cAQhBvyC,IAAK,SAAUkC,GACX,KAAMA,aAAuBmC,cAAgC,OAAhBnC,EACzC,MAAM,IAAI3V,MAAM,kDAEpB9c,KAAK8iE,aAAerwC,GAExBwwC,YAAY,EACZC,cAAc,IASlBN,EAAMv2C,UAAUsJ,QAAU,SAAU/vB,EAAKzC,GACrC,GAAmB,iBAARyC,EACP,MAAM,IAAIkX,MAAM,6BAEpB9c,KAAK+iE,MAAMxyC,IAAI3qB,EAAKzC,IAQxBy/D,EAAMv2C,UAAU2P,QAAU,SAAUp2B,GAChC,GAAmB,iBAARA,EACP,MAAM,IAAIkX,MAAM,6BAEpB,OAAO9c,KAAK+iE,MAAMpxC,IAAI/rB,IAQ1Bg9D,EAAMv2C,UAAUg3C,WAAa,SAAUz9D,GACnC,GAAmB,iBAARA,EACP,MAAM,IAAIkX,MAAM,6BAEpB,OAAO9c,KAAK+iE,MAAMO,OAAO19D,IAEtBg9D,EA7He,GAmItBW,EAAQ,SAAWC,GAEnB,KAAMA,aAA2B5uC,aAC7B,MAAM,IAAI9X,MAAM,oDAOpB,OAJK4lD,EAAO54D,IAAI05D,IACZd,EAAOnyC,IAAIizC,EAAiB,IAAIZ,GAG7BF,EAAO/wC,IAAI6xC,IAQtB,SAAS9hD,EAAiB7D,EAAS4lD,EAAWnhB,GAC1C,GAAIzkC,aAAmBxI,MACnB,IAAK,IAAIoE,EAAI,EAAGA,EAAIoE,EAAQ9T,SAAU0P,EAClCiI,EAAiB7D,EAAQpE,GAAIgqD,EAAWnhB,QAIhDzkC,EAAQ6D,iBAAiB+hD,EAAWnhB,GACpCihB,EAAM1lD,GAAS8X,QAAQ,QAAU8tC,EAAWnhB,GAMhD,SAAS1gC,EAAoB/D,EAAS4lD,GAClC,GAAI5lD,aAAmBxI,MACnB,IAAK,IAAIoE,EAAI,EAAGA,EAAIoE,EAAQ9T,SAAU0P,EAClCmI,EAAoB/D,EAAQpE,GAAIgqD,QAIxC5lD,EAAQ+D,oBAAoB6hD,EAAWF,EAAM1lD,GAASme,QAAQ,QAAUynC,IACxEF,EAAM1lD,GAASwlD,WAAW,QAAUI,GAQxC,SAASC,EAAa7lD,EAAS8lD,EAAWxgE,GACtC,GAAI0a,aAAmBxI,MACnB,IAAK,IAAIoE,EAAI,EAAGA,EAAIoE,EAAQ9T,SAAU0P,EAClCiqD,EAAa7lD,EAAQpE,GAAIkqD,EAAWxgE,QAI5C0a,EAAQ9G,aAAa4sD,EAAWxgE,GAMpC,SAASqoB,EAAgB3N,EAAS8lD,GAC9B,GAAI9lD,aAAmBxI,MACnB,IAAK,IAAIoE,EAAI,EAAGA,EAAIoE,EAAQ9T,SAAU0P,EAClC+R,EAAgB3N,EAAQpE,GAAIkqD,QAIpC9lD,EAAQ2N,gBAAgBm4C,GAO5B,IA4aIC,EACAC,EACAC,EAMAC,EACAC,EACAC,EACAC,EAGAC,EAEAC,EA5bA9/C,EAAS,SAAWzG,GACpB,IAAKA,EAAQwmD,eAAqD,IAApCxmD,EAAQymD,iBAAiBv6D,OACnD,MAAM,IAAI+S,MAAM,0CAEpB,IAAIynD,EAAO1mD,EAAQymD,iBAAiB,GACpC,MAAO,CACH/2C,KAAMg3C,EAAKh3C,KAAOre,OAAOse,YACzBG,MAAO42C,EAAK52C,MAAQze,OAAOse,YAC3BH,IAAKk3C,EAAKl3C,IAAMne,OAAOoe,YACvBH,OAAQo3C,EAAKp3C,OAASje,OAAOoe,cA+BjCk3C,EAAW,SAAW3mD,EAAS4mD,GAC/B,KAAM5mD,aAAmB+W,cAAkB6vC,aAAuB1vC,UAAY0vC,aAAuB3vC,gBAAkB2vC,aAAuBpvD,QAC1I,MAAM,IAAIyH,MAAM,uDAEpB,OAAOzH,MAAM4T,KAAKw7C,GAAap1D,QAAQwO,IASvC6mD,EAAU,SAAW7mD,GACrB,KAAMA,aAAmB+W,aACrB,MAAM,IAAI9X,MAAM,kCAEpB,OAA8B,OAAvBe,EAAQvH,YAUfquD,EAAa,SAAUC,EAAeC,EAAYnyD,GAClD,KAAMkyD,aAAyBhwC,aAAkBgwC,EAAcP,yBAAyBzvC,aACpF,MAAM,IAAI9X,MAAM,qCAEpB8nD,EAAcP,cAAcp0C,aAAa40C,EAA0B,WAAbnyD,EAAwBkyD,EAAgBA,EAAcE,qBAoG5GC,EAAmB,SAAWlnD,GAC9B,KAAMA,aAAmB+W,aACrB,MAAM,IAAI9X,MAAM,wCAGpB,IAAI0B,EAAQtP,OAAO81D,iBAAiBnnD,GAEpC,MAA6C,eAAzCW,EAAMymD,iBAAiB,cAChBhsD,SAASuF,EAAMymD,iBAAiB,UAAW,IAG/C,CAAC,SAAU,cAAe,kBAC5Bt/D,KAAI,SAAUC,GACf,IAAI82D,EAAMzjD,SAASuF,EAAMymD,iBAAiBr/D,GAAM,IAChD,OAAOiX,MAAM6/C,GAAO,EAAIA,KAEvBpwC,QAAO,SAAU44C,EAAK/hE,GAAS,OAAO+hE,EAAM/hE,MAQjDgiE,EAAkB,SAAWtnD,GAC7B,KAAMA,aAAmB+W,aACrB,MAAM,IAAI9X,MAAM,wCAGpB,IAAI0B,EAAQtP,OAAO81D,iBAAiBnnD,GAEpC,MAAO,CAAC,QAAS,eAAgB,iBAC5BlY,KAAI,SAAUC,GACf,IAAI82D,EAAMzjD,SAASuF,EAAMymD,iBAAiBr/D,GAAM,IAChD,OAAOiX,MAAM6/C,GAAO,EAAIA,KAEvBpwC,QAAO,SAAU44C,EAAK/hE,GAAS,OAAO+hE,EAAM/hE,MASjDiiE,EAAa,SAAW34D,EAAOuoB,GAC/B,KAAMvoB,aAAiB4I,OACnB,MAAM,IAAIyH,MAAM,4DAEpB,MAAwB,iBAAbkY,EACAvoB,EAEJA,EAEFkB,QAAO,SAAU3B,GAClB,OAAOA,EAAK0f,cAAcsJ,aAAqBJ,aAC1C5oB,EAAKq5D,YAAcr5D,EAAKq5D,WAAW35C,cAAcsJ,aAAqBJ,eAG1EjvB,KAAI,SAAUqG,GACf,OAAOA,EAAK0f,cAAcsJ,IAAchpB,EAAKq5D,YAAcr5D,EAAKq5D,WAAW35C,cAAcsJ,OAQ7F/d,EAAiB,SAAWxV,GAC5B,OAAQA,EAAMyV,cAAgBzV,EAAMyV,eAAe,IAAOzV,EAAMoI,QAWhEy7D,EAAmB,SAAUC,EAAgBC,EAAe/jE,GAC5D,MAAO,CACHoc,QAAS0nD,EACTE,KAAMhkE,EAAMikE,MAAQF,EAAcj4C,KAClCo4C,KAAMlkE,EAAMmkE,MAAQJ,EAAcn4C,MA+CtCw4C,EAAiB,SAAW3a,EAAa4a,GAEzC,IAA+B,IAA3B5a,EAAY6a,WAAqB,CACjC,IAAIC,EAAazC,EAAMrY,GAAakY,UAAU,cAE9C,GAAmB,OAAf4C,IAAsC,IAAfA,GAA8C,iBAAfA,EACtD,MAAM,IAAIlpD,MAAM,oGAEpB,GAAmB,OAAfkpD,EACA,OAAsB,IAAfA,GAAwBA,EAAW5qD,MAAM,KAAKzN,QAAO,SAAUs4D,GAClE,OAAOA,EAAIl8D,OAAS,GAAK+7D,EAAOt9D,QAAQy9D,MACzCl8D,OAAS,EAGhB,GAAImhD,IAAgB4a,EAChB,OAAO,EAGX,QAAoDlzD,IAAhD2wD,EAAMrY,GAAakY,UAAU,gBAAgF,OAAhDG,EAAMrY,GAAakY,UAAU,eAC1F,OAAOG,EAAMrY,GAAakY,UAAU,iBAAmBG,EAAMuC,GAAQ1C,UAAU,eAGvF,OAAO,GAMP8C,EAAuB,CACvBz5D,MAAO,KAEP05D,YAAa,KAEbC,aAAc,KACdJ,WAAY,KACZK,MAAM,EACN5zC,YAAa,KACb6zC,iBAAkB,uBAClBC,cAAe,oBACfC,YAAY,EACZC,0BAA0B,EAC1B9xD,SAAU,EACV+xD,aAAc,IACdC,SAAU,EACV9b,oBAAgBj4C,EAChBg0D,yBAAqBh0D,EACrBi0D,gBAAiB,KACjBC,YAAa,YAwCbC,EAAmB,SAAWhc,EAAmBjiC,GACjD,GAAgE,iBAArDy6C,EAAMxY,GAAmBqY,UAAU,cAA4B,CACtE,IAAI4D,EAAiBzD,EAAMxY,GAAmBqY,UAAU,cAAchoD,MAAM,MAE7D,IAAX0N,GACApH,EAAiBqpC,EAAmB,YApChD,SAAmBn2C,EAAIqyD,GACnB,IAAIC,EAAQlnE,KAOZ,QANkB,IAAdinE,IAAwBA,EAAY,KAMf,iBAAdA,EACP,MAAM,IAAInqD,MAAM,kEAEpB,IAAIqqD,EAAqB,KACzB,OAAO,WAEH,IADA,IAAIhO,EAAO,GACFiO,EAAK,EAAGA,EAAKlyD,UAAUnL,OAAQq9D,IACpCjO,EAAKiO,GAAMlyD,UAAUkyD,GAEzB,IAAIx1D,EAAMnB,KAAKmB,OACY,OAAvBu1D,GAA+Bv1D,EAAMu1D,GAAsBF,KAC3DE,EAAqBv1D,EACrBgD,EAAGK,MAAMiyD,EAAO/N,KAgBiCt5B,EAAS,SAAUp+B,GAE1C,IAAlBA,EAAMs3B,SACNprB,EAAOo9C,EAAkB9mC,SAAUs/C,EAAMxY,GAAmBqY,UAAU,UAAUj9D,SAAQ,SAAU6F,GAC9F,IAAI4c,EAAIy+C,EACJr7D,IAASvK,EAAMoI,QAAUmC,EAAK0W,SAASjhB,EAAMoI,SAC5C+e,EAAK5c,EAAKyJ,WAAWrL,IAAI6K,MAAM2T,EAAIo+C,IAGnCK,EAAKr7D,EAAKyJ,WAAWC,OAAOT,MAAMoyD,EAAIL,QAIpDzD,EAAMxY,GAAmBqY,UAAU,kBAEtC1hD,EAAiBqpC,EAAmB,cAAc,WAC9Cp9C,EAAOo9C,EAAkB9mC,SAAUs/C,EAAMxY,GAAmBqY,UAAU,UAAUj9D,SAAQ,SAAU6F,GAC9F,IAAI4c,GACHA,EAAK5c,EAAKyJ,WAAWC,OAAOT,MAAM2T,EAAIo+C,WAM/CplD,EAAoBmpC,EAAmB,aACvCnpC,EAAoBmpC,EAAmB,iBA8B/Cuc,EAAmB,SAAU76D,GAC7BmV,EAAoBnV,EAAO,aAC3BmV,EAAoBnV,EAAO,WAC3BmV,EAAoBnV,EAAO,YAC3BmV,EAAoBnV,EAAO,aAC3BmV,EAAoBnV,EAAO,QAC3BmV,EAAoBnV,EAAO,cAC3BmV,EAAoBnV,EAAO,eAG3B86D,EAAwB,SAAUxD,EAAiBI,GAC/CJ,GACAniD,EAAoBmiD,EAAiB,aAErCI,GAAsBA,IAAsBJ,GAC5CniD,EAAoBuiD,EAAmB,cAyB3CqD,EAAqB,SAAUzd,GAttBnC,IAAoBlsC,GAAAA,EAutBLksC,GAttBC0Y,YACD5kD,EAAQ4kD,IAAI7gE,KAstBvB4pB,EAAgBu+B,EAAU,oBAM1B0d,EAAiB,SAAUh7D,GAC3B+e,EAAgB/e,EAAO,gBACvB+e,EAAgB/e,EAAO,eACvB+e,EAAgB/e,EAAO,aACvB+e,EAAgB/e,EAAO,SAQ3B,SAASi7D,EAAa7pD,EAASpc,GAC3B,GAAIA,EAAMyV,aACN,OAAOzV,EAAMyV,eAAe5V,MAAK,SAAUmgB,GAAM,OAAOA,EAAGskD,cAE/D,MAA8B,IAAvBloD,EAAQkoD,YACXloD,EAAUA,EAAQwmD,cAEtB,OAAOxmD,EAQX,SAAS8pD,EAAgBnE,EAAiB3lD,GACtC,IAAI3a,EAAUs/D,EAAQgB,EAAiB,QAEnCoE,EADQj6D,EAAO61D,EAAgBv/C,SAAU/gB,EAAQuJ,OAChCkB,QAAO,SAAUk6D,GAClC,OAAOA,EAAInlD,SAAS7E,IAAagqD,EAAIxC,YAAcwC,EAAIxC,WAAW3iD,SAAS7E,MAE/E,OAAO+pD,EAAS79D,OAAS,EAAI69D,EAAS,GAAK/pD,EAM/C,IA0BIiqD,EAAiB,SAAUtE,GAC3B,IAAI/sD,EAAO+rD,EAAQgB,EAAiB,QAChC/2D,EAAQkB,EAAO61D,EAAgBv/C,SAAUxN,EAAKhK,OAC9Cs7D,EAAU3C,EAAW34D,EAAOgK,EAAKm0C,QACrC8Y,EAAaF,EAAiB,kBAAmB,QACjDhB,EAAQgB,EAAiB,YAAa,SACtCE,EAAaqE,EAAS,YAAa,QAEnChB,EAAiBvD,GAAiB,IAKR,IAAtB/sD,EAAK2vD,cAE0B,mBADjB18D,UAAYwF,OAAOxF,UAAUiM,cAAc,QACvC22B,UACd5qB,EAAiBqmD,EAAS,aAAa,WACnC,IAA6B,IAAzBt7D,EAAM4C,QAAQrP,MACdA,KAAKssC,eAEJ,CAED,IADA,IAAI07B,EAAShoE,KAAKqkE,eACgB,IAA3B53D,EAAM4C,QAAQ24D,IACjBA,EAASA,EAAO3D,cAEpB2D,EAAO17B,gBA4C3B,SAASyd,EAASke,EAAkB/kE,GAEhC,IAAI+uD,EAASt3C,OAAOzX,GAWpB,OAVAA,EAAUA,GAAW,GAEW,iBAArB+kE,IACPA,EAAmBv+D,SAASqqB,iBAAiBk0C,IAG7CA,aAA4BrzC,cAC5BqzC,EAAmB,CAACA,IAExBA,EAAmB5yD,MAAMgX,UAAU5X,MAAM8X,KAAK07C,GAC1C,YAAY5vD,KAAK45C,GACVgW,EAAiBtiE,KAAI,SAAUolD,GAClC,IAAIt0C,EAAO+rD,EAAQzX,EAAmB,QACtC,OA1iBI,SAAWA,EAAmBmd,EAAsBC,GAIhE,QAH6B,IAAzBD,IAAmCA,EAAuB,SAAUpd,EAAgBC,GAAqB,OAAOD,SAClF,IAA9Bqd,IAAwCA,EAA4B,SAAUC,GAAuB,OAAOA,MAE1Grd,aAA6Bn2B,cAAkD,IAAjCm2B,EAAkBgb,WAClE,MAAM,IAAIjpD,MAAM,6DAGpB,GAAoC,mBAAzBorD,GAA4E,mBAA9BC,EACrD,MAAM,IAAIrrD,MAAM,uEAGpB,IACI9Q,EADUw2D,EAAQzX,EAAmB,QACtBt+C,MAEfA,EAAQkB,EAAOo9C,EAAkB9mC,SAAUjY,GAC3Cq8D,EAAkB57D,EAAM9G,KAAI,SAAUqG,GACtC,MAAO,CACHg8D,OAAQjd,EACR90C,KAAMjK,EACNwyB,KAAMxyB,EAAK8sB,UACXjzB,MAAO2+D,EAASx4D,EAAMS,OAQ9B,MAAO,CACH2Z,UAAW+hD,EALC,CACZlyD,KAAM80C,EACNud,UAAWD,EAAgBt+D,SAI3B0C,MAAO47D,EAAgB1iE,KAAI,SAAUqG,GAAQ,OAAOk8D,EAAqBl8D,EAAM++C,OA2gBpEwd,CAAUxd,EAAmBt0C,EAAKo0C,eAAgBp0C,EAAKmwD,yBAGtEqB,EAAiB9hE,SAAQ,SAAUq9D,GAC/B,GAAI,yBAAyBnrD,KAAK45C,GAC9B,OAAOlI,EAASkI,GAAQuR,GAG5B,CAAC,cAAe,gBAAgBr9D,SAAQ,SAAUqiE,GAC1C/iE,OAAO4mB,UAAUo8C,eAAel8C,KAAKrpB,EAASslE,IAAqC,OAAvBtlE,EAAQslE,IACpE3nE,QAAQwP,KAAK,8DAAiEm4D,EAAY,6GAIlGtlE,EAAUuC,OAAOuY,OAAO,GAAIkoD,EAAsB3C,EAAMC,GAAiB1oD,OAAQ5X,GAEjFqgE,EAAMC,GAAiB1oD,OAAS5X,EAEhCs/D,EAAQgB,EAAiB,OAAQtgE,GAEjCsgE,EAAgBuC,YAAa,EAvDhB,SAAUvC,GAC3B,IAAI/sD,EAAO+rD,EAAQgB,EAAiB,QAChC/2D,EAAQkB,EAAO61D,EAAgBv/C,SAAUxN,EAAKhK,OAC9Cs7D,EAAU3C,EAAW34D,EAAOgK,EAAKm0C,QACrC4X,EAAQgB,EAAiB,YAAa,SAEtC8D,EAAiB76D,GACjB86D,EAAsBxD,EAAiBI,GACvCviD,EAAoBmmD,EAAS,aAE7BnmD,EAAoB4hD,EAAiB,YACrC5hD,EAAoB4hD,EAAiB,aACrC5hD,EAAoB4hD,EAAiB,QA6CjCkF,CAAelF,GAEf,IAEImF,EAFAC,EAAYj7D,EAAO61D,EAAgBv/C,SAAU/gB,EAAQuJ,OAGzD,GAA4B,OAAxBvJ,EAAQuvB,kBAAgD7f,IAAxB1P,EAAQuvB,YAA2B,CACnE,IAAIo2C,EAAgBn/D,SAASiM,cAAc6tD,EAAgBsF,SACvD5lE,EAAQuvB,uBAAuBmC,YAC/Bi0C,EAAc7xD,YAAY9T,EAAQuvB,aAGlCo2C,EAAc5iD,UAAY/iB,EAAQuvB,YAEtCk2C,EAAoBE,EAAc5kD,SAAS,GAG/Cs/C,EAAMC,GAAiB/wC,YAtiBT,SAAW+wC,EAAiB/wC,EAAa6zC,GAC3D,IAAI19C,EAEJ,QADyB,IAArB09C,IAA+BA,EAAmB,0BAChD9C,aAA2B5uC,aAC7B,MAAM,IAAI9X,MAAM,mDAGpB,KAAM2V,aAAuBmC,mBAAgChiB,IAAhB6f,EACzC,MAAM,IAAI3V,MAAM,6EAoBpB,YAjBoBlK,IAAhB6f,IACI,CAAC,KAAM,MAAM6D,SAASktC,EAAgBsF,SACtCr2C,EAAc/oB,SAASiM,cAAc,MAEhC,CAAC,QAAS,SAAS2gB,SAASktC,EAAgBsF,UACjDr2C,EAAc/oB,SAASiM,cAAc,OAEzBsQ,UAAY,0BAGxBwM,EAAc/oB,SAASiM,cAAc,QAIb,iBAArB2wD,IACN19C,EAAK6J,EAAYhd,WAAWrL,IAAI6K,MAAM2T,EAAI09C,EAAiBlrD,MAAM,MAE/DqX,EA0gBkCs2C,CAAgBvF,EAAiBmF,EAAmBzlE,EAAQojE,kBACjG9D,EAAQgB,EAAiB,QAAStgE,EAAQuJ,OACtCvJ,EAAQ8iE,WACRxD,EAAQgB,EAAiB,aAActgE,EAAQ8iE,YAE1C9iE,EAAQijE,aACb3D,EAAQgB,EAAiB,cAAetgE,EAAQijE,aAEpD2B,EAAetE,GACfE,EAAakF,EAAW,OAAQ,UAChClF,EAAakF,EAAW,eAAgB,SAMxClnD,EAAiB8hD,EAAiB,aAAa,SAAU1tD,GAErD,IAAIjM,EAASoN,EAAenB,GAC5B,IAA0B,IAAtBjM,EAAOk8D,aAGXjwD,EAAEkzD,6BACG9lE,EAAQ0nD,QAAW/gD,EAAOrB,QAAQtF,EAAQ0nD,UAAiD,UAArC/gD,EAAO8V,aAAa,cAA/E,CAGA,IAAIorC,EAAoB2c,EAAa79D,EAAQiM,GACzCmzD,EAAWtB,EAAgB5c,EAAmBlhD,GAElDq6D,EAA0Bv2D,EAAOo9C,EAAkB9mC,SAAU/gB,EAAQuJ,OACrEu3D,EAAcE,EAAwB70D,QAAQ45D,GAC9ChF,EAAqBO,EAASyE,EAAUle,EAAkB9mC,UAC1D8/C,EAAkBhZ,EApcX,SAAWtpD,EAAO8jE,EAAgBsB,GAEjD,KAAMplE,aAAiBynE,OACnB,MAAM,IAAIpsD,MAAM,4DAGpB,KAAMyoD,aAA0B3wC,aAC5B,MAAM,IAAI9X,MAAM,qEAOpB,GAJK+pD,IACDA,EAAkBvB,GAGlB7jE,EAAM0nE,cAAgB1nE,EAAM0nE,aAAaC,aAAc,CAEvD,IAEIC,EAAYxC,EAAgBtB,EAFZjhD,EAAOihD,GAEoC9jE,GAE/D,KAAM4nE,EAAUxrD,mBAAmB+W,cAA0C,iBAAnBy0C,EAAU5D,MAA+C,iBAAnB4D,EAAU1D,KACtG,MAAM,IAAI7oD,MAAM,uIAGpBrb,EAAM0nE,aAAaG,cAAgB,WAEnC7nE,EAAM0nE,aAAaxzC,QAAQ,aAAc1e,EAAexV,GAAOsG,IAE/DtG,EAAM0nE,aAAaC,aAAaC,EAAUxrD,QAASwrD,EAAU5D,KAAM4D,EAAU1D,OA0azEyD,CAAatzD,EAAGmzD,EAAU/lE,EAAQ2jE,iBAElChD,EAAiBkB,EAAiBkE,GAClCnF,EAAgBqB,EAAgB8D,GAChCA,EAASxzD,UAAUrL,IAAIlH,EAAQqjE,eAC/B3C,EA1PM,SAAU2F,EAAaxf,GACrC,IAAIyf,EAAQD,EAQZ,OAP0C,IAAtChG,EAAMxZ,GAAUqZ,UAAU,UAE1BM,EADA8F,EAAQD,EAAY1H,WAAU,GACV,cAAe,QACnC0H,EAAYlF,cAAcrtD,YAAYwyD,GACtCA,EAAMhrD,MAAME,QAAU,OACtB8qD,EAAMC,WAAaF,EAAY/qD,MAAME,SAElC8qD,EAiPYE,CAAYT,EAAUle,GACjC2Y,EAAaE,EAAU,eAAgB,QAEvC7Y,EAAkBloC,cAAc,IAAI8mD,YAAY,YAAa,CACzD1e,OAAQ,CACJ6a,OAAQ,CACJ8D,aAAc3F,EACdp+D,MAAOm+D,EACP59C,UAAW29C,GAEf/3D,KAAM43D,EACNiG,eAAgBhgE,UAO5B6X,EAAiB8hD,EAAiB,aAAa,SAAU1tD,GACrD,IAAIjM,EAASoN,EAAenB,GACxBi1C,EAAoB2c,EAAa79D,EAAQiM,GACzCi1C,GAAqBA,IAAsBoZ,IAC3CC,EAA+Bz2D,EAAOo9C,EAAkB9mC,SAAUu+C,EAAQzX,EAAmB,UACxFp9C,QAAO,SAAU3B,GAAQ,OAAOA,IAASu3D,EAAMC,GAAiB/wC,eACjEvvB,EAAQujE,0BACR1b,EAAkBt1C,UAAUrL,IAAIlH,EAAQujE,0BAE5C1b,EAAkBloC,cAAc,IAAI8mD,YAAY,YAAa,CACzD1e,OAAQ,CACJ6a,OAAQ,CACJ8D,aAAc3F,EACdp+D,MAAOm+D,EACP59C,UAAW29C,GAEf7Y,YAAa,CACT9kC,UAAW2kC,EACX+e,kBAAmB1F,GAEvBp4D,KAAM43D,EACNiG,eAAgBhgE,MAGxB6X,EAAiBqpC,EAAmB,aAAa,SAAUj1C,GAGvD,IAAIi0D,EAAYj0D,EAAEqS,eAAiBrS,EAAEk0D,YAChCl0D,EAAEnU,cAAc+gB,SAASqnD,KACtB7mE,EAAQujE,0BACR1b,EAAkBt1C,UAAUC,OAAOxS,EAAQujE,0BAE/C1b,EAAkBloC,cAAc,IAAI8mD,YAAY,YAAa,CACzD1e,OAAQ,CACJ6a,OAAQ,CACJ8D,aAAc3F,EACdp+D,MAAOm+D,EACP59C,UAAW2kC,GAEf/+C,KAAM43D,EACNiG,eAAgBhgE,WAMpCs6D,EAAoBpZ,KAOxBrpC,EAAiB8hD,EAAiB,WAAW,SAAU1tD,GACnD,GAAK8tD,EAAL,CAGAA,EAASnuD,UAAUC,OAAOxS,EAAQqjE,eAClC7C,EAAaE,EAAU,eAAgB,SACM,SAAzCA,EAASjkD,aAAa,gBAA8D,SAAjC6iD,EAAQoB,EAAU,YACrEA,EAASluD,cAEe9C,IAAxBgxD,EAAS6F,aACT7F,EAASplD,MAAME,QAAUklD,EAAS6F,kBAC3B7F,EAAS6F,YAEpB,IAAIQ,EAAqB50D,MAAM4T,KAAKy5C,EAAOp7B,UAAU3hC,KAAI,SAAU/D,GAAQ,OAAOA,EAAK6wB,eAClF9kB,QAAO,SAAU8kB,GAAe,OAAOA,aAAuBmC,eAC9DjnB,OAAO+2D,GAAS,GACjBuF,GACAA,EAAmBv0D,SAGvB8tD,EAAgB3gD,cAAc,IAAI8mD,YAAY,WAAY,CACtD1e,OAAQ,CACJ6a,OAAQ,CACJ8D,aAAc3F,EACdp+D,MAAOm+D,EACP59C,UAAW29C,GAEf/3D,KAAM43D,MAGdO,EAAoB,KACpBP,EAAW,KACXC,EAAiB,KACjBC,EAAgB,SAMpBpiD,EAAiB8hD,EAAiB,QAAQ,SAAU1tD,GAChD,GAAK+vD,EAAerC,EAAiBI,EAASS,eAA9C,CAGAvuD,EAAEyJ,iBACFzJ,EAAE+T,kBACF24C,EAAQoB,EAAU,UAAW,QAE7B,IAAIqG,EAAqB50D,MAAM4T,KAAKy5C,EAAOp7B,UAAU3hC,KAAI,SAAU/D,GAC/D,OAAOA,EAAK6wB,eAGX9kB,QAAO,SAAU8kB,GAAe,OAAOA,aAAuBmC,eAE9DjnB,OAAO+2D,GAAS,GACrB,GAAIuF,EAAJ,CACIA,EAAmBr7B,YAAYg1B,QAEHhxD,IAAxBgxD,EAAS6F,aACT7F,EAASplD,MAAME,QAAUklD,EAAS6F,kBAC3B7F,EAAS6F,YAWxBjG,EAAgB3gD,cAAc,IAAI8mD,YAAY,WAAY,CACtD1e,OAAQ,CACJ6a,OAAQ,CACJ8D,aAAc3F,EACdp+D,MAAOm+D,EACP59C,UAAW29C,GAEf/3D,KAAM43D,MAGd,IAAInxC,EAAc8wC,EAAMC,GAAiB/wC,YACrCy3C,EAAcv8D,EAAOo2D,EAAgB9/C,SAAU/gB,EAAQuJ,OACtDkB,QAAO,SAAU3B,GAAQ,OAAOA,IAASymB,KAC1C03C,GAA2C,IAApBnqE,KAAK+lE,WAAsB/lE,KAAOA,KAAKqkE,cAC9D+F,EAAmBz8D,EAAOw8D,EAAqBlmD,SAAUu+C,EAAQ2H,EAAsB,UACtFx8D,QAAO,SAAU3B,GAAQ,OAAOA,IAASymB,KAC1C43C,EAA0B7F,EAASZ,EAAUvuD,MAAM4T,KAAK26C,EAASS,cAAcpgD,UAC9EtW,QAAO,SAAU3B,GAAQ,OAAOA,IAASymB,MAC1C63C,EAAmB9F,EAASZ,EAAUwG,GACtClnE,EAAQujE,0BACR0D,EAAqB10D,UAAUC,OAAOxS,EAAQujE,0BAM9CxC,IAAuBoG,GAA2BtG,IAAoBoG,GACtE3G,EAAgB3gD,cAAc,IAAI8mD,YAAY,aAAc,CACxD1e,OAAQ,CACJ6a,OAAQ,CACJ8D,aAAc3F,EACdp+D,MAAOm+D,EACP59C,UAAW29C,EACX+F,kBAAmB5F,EACnBz3D,MAAOy9D,GAEXhf,YAAa,CACTrlD,MAAOykE,EACPV,aAAcS,EACdjkD,UAAW+jD,EACXL,kBAAmB1F,EACnB33D,MAAO29D,GAEXp+D,KAAM43D,WAjDdpB,EAAQoB,EAAU,UAAW,aAsDrC,IA93BkB5K,EAAMnkD,EAExB01D,EA43BIC,GA93BcxR,EA83BoB,SAAUwK,EAAiB3lD,EAAS6nD,EAAOE,GAC7E,GAAKhC,EAUL,GANI1gE,EAAQynD,uBACR4Y,EAAMC,GAAiB/wC,YAAYjU,MAAMsiB,OAAS+iC,EAAiB,KACnEN,EAAMC,GAAiB/wC,YAAYjU,MAAMO,MAAQ+kD,EAAgB,MAIjEzuD,MAAM4T,KAAKu6C,EAAgBv/C,UAAU5U,QAAQwO,IAAY,EAAG,CAC5D,IAAI4sD,EAAa1F,EAAiBlnD,GAC9B6sD,EAAYvF,EAAgBtnD,GAC5B8sD,EAAmBnG,EAASjB,EAAMC,GAAiB/wC,YAAa5U,EAAQwmD,cAAcpgD,UACtF2mD,EAAYpG,EAAS3mD,EAASA,EAAQwmD,cAAcpgD,UAExD,GAAIwmD,EAAa5G,GAAkB6G,EAAY5G,EAAe,CAE1D,IAAI+G,EAAmBJ,EAAa5G,EAChCiH,EAAqBJ,EAAY5G,EACjCiH,EAAYzmD,EAAOzG,GAASwP,IAC5B29C,EAAa1mD,EAAOzG,GAAS0P,KACjC,GAAIo9C,EAAmBC,IACO,aAAxB1nE,EAAQ4jE,aAA8BlB,EAAQmF,GACnB,eAAxB7nE,EAAQ4jE,aAAgCpB,EAAQsF,GACrD,OAEJ,GAAIL,EAAmBC,IACO,aAAxB1nE,EAAQ4jE,aAA8BlB,EAAQmF,EAAYN,EAAaI,GAC5C,eAAxB3nE,EAAQ4jE,aAAgCpB,EAAQsF,EAAaN,EAAYI,GAC9E,YAGoBl4D,IAAxBgxD,EAAS6F,aACT7F,EAAS6F,WAAa7F,EAASplD,MAAME,SAEV,SAA3BklD,EAASplD,MAAME,UACfklD,EAASplD,MAAME,QAAU,QAK7B,IAAIusD,GAAa,EACjB,IACI,IAAIC,EAAwB5mD,EAAOzG,GAASwP,IAAMxP,EAAQ6O,aAAe,EACrEy+C,EAA0B7mD,EAAOzG,GAAS0P,KAAO1P,EAAQiB,YAAc,EAC3EmsD,EAAsC,aAAxB/nE,EAAQ4jE,aAA+BlB,GAASsF,GACjC,eAAxBhoE,EAAQ4jE,aAAiCpB,GAASyF,EAE3D,MAAOr1D,GACHm1D,EAAaN,EAAmBC,EAEhCK,EAl3BF,SAAUphE,EAAQgU,GAAkB8mD,EAAW96D,EAAQgU,EAAS,SAm3B9D0f,CAAY1f,EAAS0lD,EAAMC,GAAiB/wC,aAz3B7C,SAAU5oB,EAAQgU,GAAkB8mD,EAAW96D,EAAQgU,EAAS,UA43B/DoS,CAAapS,EAAS0lD,EAAMC,GAAiB/wC,aAGjDpd,MAAM4T,KAAKy5C,EAAOp7B,UAEb35B,QAAO,SAAU/L,GAAQ,YAA4BgR,IAArBhR,EAAK6wB,eAErCtsB,SAAQ,SAAUvE,GACfA,EAAK6wB,cAAgB8wC,EAAMC,GAAiB/wC,aAC5C7wB,EAAK6wB,YAAY/c,gBAIxB,CAED,IAAI01D,EAAe/1D,MAAM4T,KAAKy5C,EAAOp7B,UAChC35B,QAAO,SAAU/L,GAAQ,YAA4BgR,IAArBhR,EAAK6wB,eACrC9sB,KAAI,SAAU/D,GACf,OAAOA,EAAK6wB,gBAGuB,IAAnC24C,EAAa/7D,QAAQwO,IAAmB2lD,IAAoB3lD,GAAYlQ,EAAOkQ,EAAQoG,SAAU/gB,EAAQuJ,OAAO1C,SAChHqhE,EAAajlE,SAAQ,SAAU0X,GAAW,OAAOA,EAAQnI,YACzDmI,EAAQ7G,YAAYusD,EAAMC,GAAiB/wC,qBA78B9C,KADe5d,EAi9BrB3R,EAAQyR,YAh9BQE,EAAO,GAEvB,WAEH,IADA,IAAIskD,EAAO,GACFiO,EAAK,EAAGA,EAAKlyD,UAAUnL,OAAQq9D,IACpCjO,EAAKiO,GAAMlyD,UAAUkyD,GAEzBryD,aAAaw1D,GACbA,EAAUv1D,YAAW,WACjBgkD,EAAK/jD,WAAM,EAAQkkD,KACpBtkD,KAw8BCw2D,EAAkB,SAAUv1D,GAC5B,IAAI+H,EAAU/H,EAAEjM,OACZ25D,GAAyC,IAAvB3lD,EAAQkoD,WAAsBloD,EAAU6pD,EAAa7pD,EAAS/H,GAEpF,GADA+H,EAAU8pD,EAAgBnE,EAAiB3lD,GACtC+lD,GAAaiC,EAAerC,EAAiBI,EAASS,gBAA4D,SAA1C7B,EAAQgB,EAAiB,aAAtG,CAGA,IAAItgE,EAAUs/D,EAAQgB,EAAiB,QACnCvqD,SAAS/V,EAAQyjE,WAAah5D,EAAO61D,EAAgBv/C,SAAUu+C,EAAQgB,EAAiB,UAAUz5D,OAASkP,SAAS/V,EAAQyjE,WAAa/C,EAASS,gBAAkBb,IAGxK1tD,EAAEyJ,iBACFzJ,EAAE+T,kBACF/T,EAAEqzD,aAAamC,YAA0D,IAA7C/H,EAAMC,GAAiBJ,UAAU,QAAmB,OAAS,OACzFoH,EAAuBhH,EAAiB3lD,EAAS/H,EAAE4vD,MAAO5vD,EAAE8vD,UAEhElkD,EAAiBknD,EAAU5+C,OAAOw5C,GAAkB,WAAY6H,GAChE3pD,EAAiBknD,EAAU5+C,OAAOw5C,GAAkB,YAAa6H,MAE9DpD,GAEXle,EAASh6B,QAAU,SAAUyzC,IAneP,SAAUA,GAC5B,IAAI/sD,EAAO+rD,EAAQgB,EAAiB,SAAW,GAC3C/2D,EAAQkB,EAAO61D,EAAgBv/C,SAAUxN,EAAKhK,OAC9Cs7D,EAAU3C,EAAW34D,EAAOgK,EAAKm0C,QAErCmc,EAAiBvD,GAAiB,GAElC5hD,EAAoB4hD,EAAiB,YACrC5hD,EAAoB4hD,EAAiB,aACrC5hD,EAAoB4hD,EAAiB,aACrC5hD,EAAoB4hD,EAAiB,WACrC5hD,EAAoB4hD,EAAiB,QAErCgE,EAAmBhE,GAEnB5hD,EAAoBmmD,EAAS,aAC7BT,EAAiB76D,GACjBg7D,EAAeh7D,GACf86D,EAAsBxD,EAAiBI,GAEvCX,EAAgBuC,YAAa,EAgd7BwF,CAAgB/H,IAEpBzZ,EAASjhC,OAAS,SAAU06C,GACxBsE,EAAetE,IAEnBzZ,EAASh6C,QAAU,SAAUyzD,IA5aP,SAAUA,GAC5B,IAAI/sD,EAAO+rD,EAAQgB,EAAiB,QAChC/2D,EAAQkB,EAAO61D,EAAgBv/C,SAAUxN,EAAKhK,OAC9Cs7D,EAAU3C,EAAW34D,EAAOgK,EAAKm0C,QACrC8Y,EAAaF,EAAiB,kBAAmB,QACjDhB,EAAQgB,EAAiB,YAAa,QACtCE,EAAaqE,EAAS,YAAa,SACnCnmD,EAAoBmmD,EAAS,aAC7BhB,EAAiBvD,GAAiB,GAqalCgI,CAAgBhI,IAGpBzZ,EAAS0hB,UAAY,CAEjB7pE,KAAM4gE,EACN8E,iBAAkBA,EAClBG,eAAgBA,EAChBD,mBAAoBA,EACpBD,sBAAuBA,GAG3BmE,EAAOC,QAAU5hB,G,cC1xCjB,OAEC,WACG,aAEA,IAAI6hB,EAAK,CACLC,WAAY,OACZC,SAAU,OACVC,SAAU,OACVC,cAAe,OACfx3D,OAAQ,UACRy3D,YAAa,eACbC,KAAM,MACNC,SAAU,OACV/oE,KAAM,YACNgpE,OAAQ,WACR35C,YAAa,2FACb7sB,IAAK,sBACLymE,WAAY,wBACZC,aAAc,aACdC,KAAM,SAGV,SAASC,EAAQ5mE,GAEb,OAAO6mE,EAAeC,EAAc9mE,GAAMsP,WAG9C,SAAS5M,EAASqkE,EAAKC,GACnB,OAAOJ,EAAQv3D,MAAM,KAAM,CAAC03D,GAAK3iD,OAAO4iD,GAAQ,KAGpD,SAASH,EAAeI,EAAYD,GAChC,IAAiDE,EAAkBrzD,EAAG0W,EAAG48C,EAAIx4D,EAAKy4D,EAAeC,EAAYC,EAAaX,EAAtHY,EAAS,EAAGC,EAAcP,EAAW9iE,OAAa40D,EAAS,GAC/D,IAAKllD,EAAI,EAAGA,EAAI2zD,EAAa3zD,IACzB,GAA6B,iBAAlBozD,EAAWpzD,GAClBklD,GAAUkO,EAAWpzD,QAEpB,GAA6B,iBAAlBozD,EAAWpzD,GAAiB,CAExC,IADAszD,EAAKF,EAAWpzD,IACT/T,KAEH,IADAonE,EAAMF,EAAKO,GACNh9C,EAAI,EAAGA,EAAI48C,EAAGrnE,KAAKqE,OAAQomB,IAAK,CACjC,GAAWvd,MAAPk6D,EACA,MAAM,IAAIhwD,MAAM0vD,EAAQ,gEAAiEO,EAAGrnE,KAAKyqB,GAAI48C,EAAGrnE,KAAKyqB,EAAE,KAEnH28C,EAAMA,EAAIC,EAAGrnE,KAAKyqB,SAItB28C,EADKC,EAAGM,SACFT,EAAKG,EAAGM,UAGRT,EAAKO,KAOf,GAJIvB,EAAGG,SAAS1zD,KAAK00D,EAAGnsE,OAASgrE,EAAGI,cAAc3zD,KAAK00D,EAAGnsE,OAASksE,aAAeQ,WAC9ER,EAAMA,KAGNlB,EAAGK,YAAY5zD,KAAK00D,EAAGnsE,OAAyB,iBAARksE,GAAoBjwD,MAAMiwD,GAClE,MAAM,IAAIvK,UAAUiK,EAAQ,0CAA2CM,IAO3E,OAJIlB,EAAGp3D,OAAO6D,KAAK00D,EAAGnsE,QAClBssE,EAAcJ,GAAO,GAGjBC,EAAGnsE,MACP,IAAK,IACDksE,EAAM7zD,SAAS6zD,EAAK,IAAIzrD,SAAS,GACjC,MACJ,IAAK,IACDyrD,EAAMnyD,OAAO4yD,aAAat0D,SAAS6zD,EAAK,KACxC,MACJ,IAAK,IACL,IAAK,IACDA,EAAM7zD,SAAS6zD,EAAK,IACpB,MACJ,IAAK,IACDA,EAAMhhD,KAAKE,UAAU8gD,EAAK,KAAMC,EAAGhuD,MAAQ9F,SAAS8zD,EAAGhuD,OAAS,GAChE,MACJ,IAAK,IACD+tD,EAAMC,EAAGS,UAAY11D,WAAWg1D,GAAKW,cAAcV,EAAGS,WAAa11D,WAAWg1D,GAAKW,gBACnF,MACJ,IAAK,IACDX,EAAMC,EAAGS,UAAY11D,WAAWg1D,GAAKhxD,QAAQixD,EAAGS,WAAa11D,WAAWg1D,GACxE,MACJ,IAAK,IACDA,EAAMC,EAAGS,UAAY7yD,OAAO+uB,OAAOojC,EAAIY,YAAYX,EAAGS,aAAe11D,WAAWg1D,GAChF,MACJ,IAAK,IACDA,GAAO7zD,SAAS6zD,EAAK,MAAQ,GAAGzrD,SAAS,GACzC,MACJ,IAAK,IACDyrD,EAAMnyD,OAAOmyD,GACbA,EAAOC,EAAGS,UAAYV,EAAIlyD,UAAU,EAAGmyD,EAAGS,WAAaV,EACvD,MACJ,IAAK,IACDA,EAAMnyD,SAASmyD,GACfA,EAAOC,EAAGS,UAAYV,EAAIlyD,UAAU,EAAGmyD,EAAGS,WAAaV,EACvD,MACJ,IAAK,IACDA,EAAMrnE,OAAO4mB,UAAUhL,SAASkL,KAAKugD,GAAKr4D,MAAM,GAAI,GAAG4V,cACvDyiD,EAAOC,EAAGS,UAAYV,EAAIlyD,UAAU,EAAGmyD,EAAGS,WAAaV,EACvD,MACJ,IAAK,IACDA,EAAM7zD,SAAS6zD,EAAK,MAAQ,EAC5B,MACJ,IAAK,IACDA,EAAMA,EAAIa,UACVb,EAAOC,EAAGS,UAAYV,EAAIlyD,UAAU,EAAGmyD,EAAGS,WAAaV,EACvD,MACJ,IAAK,IACDA,GAAO7zD,SAAS6zD,EAAK,MAAQ,GAAGzrD,SAAS,IACzC,MACJ,IAAK,IACDyrD,GAAO7zD,SAAS6zD,EAAK,MAAQ,GAAGzrD,SAAS,IAAIusD,cAGjDhC,EAAGM,KAAK7zD,KAAK00D,EAAGnsE,MAChB+9D,GAAUmO,IAGNlB,EAAGp3D,OAAO6D,KAAK00D,EAAGnsE,OAAWssE,IAAeH,EAAGR,KAK/CA,EAAO,IAJPA,EAAOW,EAAc,IAAM,IAC3BJ,EAAMA,EAAIzrD,WAAW0V,QAAQ60C,EAAGW,KAAM,KAK1CS,EAAgBD,EAAGc,SAA2B,MAAhBd,EAAGc,SAAmB,IAAMd,EAAGc,SAASzjD,OAAO,GAAK,IAClF6iD,EAAaF,EAAGhuD,OAASwtD,EAAOO,GAAK/iE,OACrCwK,EAAMw4D,EAAGhuD,OAASkuD,EAAa,EAAID,EAAcc,OAAOb,GAAoB,GAC5EtO,GAAUoO,EAAG9nC,MAAQsnC,EAAOO,EAAMv4D,EAAyB,MAAlBy4D,EAAwBT,EAAOh4D,EAAMu4D,EAAMv4D,EAAMg4D,EAAOO,GAI7G,OAAOnO,EAGX,IAAIoP,EAAgBtoE,OAAO2yC,OAAO,MAElC,SAASs0B,EAAcC,GACnB,GAAIoB,EAAcpB,GACd,OAAOoB,EAAcpB,GAIzB,IADA,IAAgBjwD,EAAZsxD,EAAOrB,EAAYE,EAAa,GAAIoB,EAAY,EAC7CD,GAAM,CACT,GAAqC,QAAhCtxD,EAAQkvD,EAAGxoE,KAAKuZ,KAAKqxD,IACtBnB,EAAWrpE,KAAKkZ,EAAM,SAErB,GAAuC,QAAlCA,EAAQkvD,EAAGQ,OAAOzvD,KAAKqxD,IAC7BnB,EAAWrpE,KAAK,SAEf,IAA4C,QAAvCkZ,EAAQkvD,EAAGn5C,YAAY9V,KAAKqxD,IA6ClC,MAAM,IAAIE,YAAY,oCA5CtB,GAAIxxD,EAAM,GAAI,CACVuxD,GAAa,EACb,IAAIE,EAAa,GAAIC,EAAoB1xD,EAAM,GAAI2xD,EAAc,GACjE,GAAuD,QAAlDA,EAAczC,EAAGhmE,IAAI+W,KAAKyxD,IAe3B,MAAM,IAAIF,YAAY,gDAbtB,IADAC,EAAW3qE,KAAK6qE,EAAY,IACwD,MAA5ED,EAAoBA,EAAkBxzD,UAAUyzD,EAAY,GAAGtkE,UACnE,GAA8D,QAAzDskE,EAAczC,EAAGS,WAAW1vD,KAAKyxD,IAClCD,EAAW3qE,KAAK6qE,EAAY,QAE3B,IAAgE,QAA3DA,EAAczC,EAAGU,aAAa3vD,KAAKyxD,IAIzC,MAAM,IAAIF,YAAY,gDAHtBC,EAAW3qE,KAAK6qE,EAAY,IAUxC3xD,EAAM,GAAKyxD,OAGXF,GAAa,EAEjB,GAAkB,IAAdA,EACA,MAAM,IAAInxD,MAAM,6EAGpB+vD,EAAWrpE,KACP,CACIivB,YAAa/V,EAAM,GACnB2wD,SAAa3wD,EAAM,GACnBhX,KAAagX,EAAM,GACnB6vD,KAAa7vD,EAAM,GACnBmxD,SAAanxD,EAAM,GACnBuoB,MAAavoB,EAAM,GACnBqC,MAAarC,EAAM,GACnB8wD,UAAa9wD,EAAM,GACnB9b,KAAa8b,EAAM,KAO/BsxD,EAAOA,EAAKpzD,UAAU8B,EAAM,GAAG3S,QAEnC,OAAOgkE,EAAcpB,GAAOE,EAQ5BlB,EAAA,QAAqBa,EACrBb,EAAA,SAAsBrjE,EAEJ,oBAAX4G,SACPA,OAAgB,QAAIs9D,EACpBt9D,OAAiB,SAAI5G,OAQhB,KALD,aACI,MAAO,CACH,QAAWkkE,EACX,SAAYlkE,IAEnB,+BAhOZ,I,qBCFDojE,EAAOC,QAAUt2C,SCCbi5C,yBAA2B,GAG/B,SAASC,oBAAoBC,GAE5B,IAAIC,EAAeH,yBAAyBE,GAC5C,QAAqB57D,IAAjB67D,EACH,OAAOA,EAAa9C,QAGrB,IAAID,EAAS4C,yBAAyBE,GAAY,CAGjD7C,QAAS,IAOV,OAHA+C,oBAAoBF,GAAU9C,EAAQA,EAAOC,QAAS4C,qBAG/C7C,EAAOC,QCpBf4C,oBAAoBv0D,EAAK0xD,IACxB,IAAIiD,EAASjD,GAAUA,EAAOkD,WAC7B,IAAOlD,EAAiB,QACxB,IAAM,EAEP,OADA6C,oBAAoBh1D,EAAEo1D,EAAQ,CAAEz/C,EAAGy/C,IAC5BA,GCLRJ,oBAAoBh1D,EAAI,CAACoyD,EAASkD,KACjC,IAAI,IAAIjpE,KAAOipE,EACXN,oBAAoBO,EAAED,EAAYjpE,KAAS2oE,oBAAoBO,EAAEnD,EAAS/lE,IAC5EH,OAAOisB,eAAei6C,EAAS/lE,EAAK,CAAEq9D,YAAY,EAAMtxC,IAAKk9C,EAAWjpE,MCJ3E2oE,oBAAoBO,EAAI,CAAC15D,EAAKqkB,IAAUh0B,OAAO4mB,UAAUo8C,eAAel8C,KAAKnX,EAAKqkB,G,0XC2HlF,QApHMs1C,WAEL,c,4FAAa,SACZ/uE,KAAK6zB,Q,0CAGN,WACC,IA4CIm7C,EACHC,EA7CGC,EAAwBjuE,GAAAA,CAAG,SAAU,CAAE,MAAS,oBA+C7CiK,EAAAA,EAAAA,IAAWvL,iBAAiBiO,KAAUjO,iBAAiBiO,IAK7DohE,GAAY1mE,EAAAA,EAAAA,IAAU,0BAA2B,CAAE,MAAO3I,iBAAiBqvE,UAC3EC,GAAY3mE,EAAAA,EAAAA,IAAU,uBAAwB,CAAE,UALhD0mE,GAAY1mE,EAAAA,EAAAA,IAAU,uBAAwB,CAAE3I,iBAAiBqvE,UACjEC,EAAY,qBAOb,IAAIE,EAAqBluE,GAAAA,CAAG,OAAQ,CACnC,MAAS,sBACT,cAAetB,iBAAiBwB,KAAKiuE,aAAanmE,MAClD,WAAY,OACZ,MAAQX,EAAAA,EAAAA,IAAU,8FAA+F,CAAE0mE,EAASC,EAAW,gBAAiB,cACxJ,OAAU,WAGPI,EAAyBpuE,GAAAA,CAAG,UAAW,CAAE,MAAS,yBACtDkuE,EAAmBntE,OAAQqtE,GAC3BF,EAAmBvnD,SAAUsnD,GAI7BjuE,GAAAA,CAAE,QAAQe,OAAQktE,K,kBAGnB,SAAMI,EAAWC,EAA0BC,EAASC,GAEnDH,EAAU9tE,GAAI,SAAS,WAEjB+tE,EAAyB3lE,GAAG,cAChC8lE,aAAaC,uBAAyB,QAIvCH,EAAQhtB,QAAQ,KAChBitB,EAAchmE,YAAa,6B,uBAK7B,WAiBC,OAVa,O,mBAtGTslE,G,+LCyHN,QA1HMa,WACF,c,4FAAa,SACT5vE,KAAKwK,SAAW,CACZ4b,UAAWnlB,GAAAA,CAAG,aACdye,MAAWze,GAAAA,CAAG,oBACdk2C,OAAW,IAGfn3C,KAAK6vE,eAAiB7vE,KAAKwK,SAASkV,MAAM9C,MAG1C5c,KAAK8vE,eAGL9vE,KAAK+vE,cAGL/vE,KAAKgwE,gB,iDAGT,WACI,IAAI5pD,EAAenlB,GAAAA,CAAG,SAAU,CAAE,MAAS,qBACvCgvE,EAAehvE,GAAAA,CAAG,SAAU,CAAE,MAAS,QAGvCivE,EAAejvE,GAAAA,CAAG,SAAU,CAAE,MAAS,gCACvCkvE,EAAelvE,GAAAA,CAAG,UAAW,CAAE,MAAS,4DACxCmvE,EAAenvE,GAAAA,CAAG,UAAW,CAAE,MAAS,oBAAqBmC,KAAMzD,iBAAiBwB,KAAK8H,MAAMinE,QAEnGA,EAAOluE,OAAQmuE,GACfD,EAAOluE,OAAQouE,GAEfpwE,KAAKwK,SAAS2sC,OAAO+4B,OAASA,EAG9B,IAAIG,EAAepvE,GAAAA,CAAG,SAAU,CAAE,MAAS,+BACvCqvE,EAAervE,GAAAA,CAAG,UAAW,CAAE,MAAS,0CACxCsvE,EAAetvE,GAAAA,CAAG,UAAW,CAAE,MAAS,oBAAqBmC,KAAMzD,iBAAiBwB,KAAK8H,MAAMonE,OAEnGA,EAAMruE,OAAQsuE,GACdD,EAAMruE,OAAQuuE,GAEdvwE,KAAKwK,SAAS2sC,OAAOk5B,MAAQA,EAE7BJ,EAAajuE,OAAQkuE,GACrBD,EAAajuE,OAAQquE,GACrBjqD,EAAUpkB,OAAQiuE,GAGlBjwE,KAAKwK,SAAS4b,UAAUpkB,OAAQokB,K,6BAGpC,WACIpmB,KAAKwK,SAAS2sC,OAAO+4B,OAAOM,OAAOjuB,OAAQ,O,4BAG/C,WAAgB,WACZviD,KAAKwK,SAAS2sC,OAAO+4B,OAAOM,OAAOhuB,QAAS,KAE5CxiD,KAAKwK,SAAS2sC,OAAOk5B,MAAMG,OAAOjuB,OAAQ,KAAK,WAC3CvtC,YAAY,WACR,EAAKxK,SAAS2sC,OAAOk5B,MAAM7tB,QAAS,OACrC,U,2BAIX,WAEIxiD,KAAKwK,SAASkV,MAAM9C,IAAK5c,KAAK6vE,gBAG9B7vE,KAAKwK,SAAS2sC,OAAO+4B,OAAOM,OAAOhuB,QAAS,O,yBAGhD,WAAa,IACLiuB,EADK,OAITzwE,KAAKwK,SAASkV,MAAMle,GAAI,SAAS,WAG7BuT,aAAc07D,GAGdA,EAAgBz7D,YAAY,WAExB,EAAK07D,kBAGL,EAAKC,gBACN,W,sBAIX,WACI,OAAO3wE,KAAKwK,SAASkV,MAAM9C,Q,yBAG/B,WAAa,YACT/U,EAAAA,EAAAA,IAAU,oBAAqB,CAC3BkE,QAAYpM,iBAAiBC,OAAOmI,GACpC6oE,WAAY5wE,KAAK6wE,aAClB,WACC,EAAKC,iBAGL,EAAKjB,eAAiB,EAAKgB,cAC5B,WACChwE,QAAQC,IAAK,0CAGb,EAAKiwE,qB,2BAIb,WACI9vE,GAAAA,CAAEyI,UAAU+8B,OAAO,WACfxlC,GAAAA,CAAGiO,QAASvF,IAAK,kC,mBArHvBimE,G,iUCUAoB,EAAAA,WACL,aAAa,UAEZhxE,KAAKu5B,cAIuC,GAAvCv5B,KAAK28B,UAAUs0C,cAAclnE,QAEjC/J,KAAKkxE,mB,qCAIP,WACClxE,KAAK28B,UAAY,CAChBvW,UAAenlB,GAAAA,CAAG,uBAClBgwE,cAAehwE,GAAAA,CAAG,gC,8BAIpB,WAAkB,WAEjBjB,KAAK28B,UAAUvW,UAAU5kB,GAAI,SAAU,yGAAyG,SAAEC,GAEjJ,IAAM4J,EAAYpK,GAAAA,CAAGQ,EAAME,eAG3B,EAAKwvE,aAAc9lE,MAMpB,IAAI+lE,kBAAiB,SAAEC,GAEtBA,EAAUlrE,SAAS,SAAEmrE,GAEpBA,EAASC,WAAWprE,SAAQ,SAAEqrE,GAE7B,IAAMnmE,EAAYpK,GAAAA,CAAGuwE,GAAYlwE,KAAM,+DAGvC,EAAK6vE,aAAc9lE,YAGnBomE,QAASzxE,KAAK28B,UAAUs0C,cAAc,GAAI,CAC5CS,WAAW,M,6BAIb,SAAiBrmE,GAChB,MAAO,CACNtD,GAAWsD,EAAUuR,MACrBtR,UAAWD,EAAUzB,GAAI,e,0BAI3B,SAAcyB,GAAW,WAEpBsmE,EAAe3xE,KAAK4xE,gBAAiBvmE,GAGzCrL,KAAK6xE,UAAW,WAAW,EAAMxmE,IAGjCxD,EAAAA,EAAAA,IAAU,mBAAoB,CAC7BiqE,QAAc,kBACd9qC,UAAcrnC,iBAAiBC,OAAOmI,GACtCgqE,YAAcJ,EAAa5pE,GAC3BiqE,aAAcL,EAAarmE,YACzB,SAAEtD,GAGCA,EAAS6oC,SAGb,EAAKghC,UAAW,WAAW,EAAMxmE,GAGjC2J,YAAW,WAEV,EAAK68D,UAAW,WAAW,EAAOxmE,KAChC,OAGHxK,QAAQC,IAAK,oEAIb,EAAKmxE,oBAAqB5mE,GAG1B,EAAKwmE,UAAW,SAAS,EAAMxmE,GAE/B2J,YAAW,WAEV,EAAK68D,UAAW,SAAS,EAAOxmE,OAKlC,EAAKwmE,UAAW,WAAW,EAAOxmE,MAChC,SAAErD,GAIJ,EAAKiqE,oBAAqB5mE,GAG1B,EAAKwmE,UAAW,WAAW,EAAOxmE,GAGlC,EAAKwmE,UAAW,SAAS,EAAMxmE,GAE/B2J,YAAW,WAEV,EAAK68D,UAAW,SAAS,EAAOxmE,QAE/B,CACFonD,uBAAuB,EACvBC,UAAuB,M,iCAIzB,SAAqBrnD,GAEpBA,EAAUouB,KAAM,WAAapuB,EAAUzB,GAAI,e,uBAG5C,WAAkD,IAAvCutC,EAAuC,uDAA9B,GAAIruB,IAA0B,yDAAXzd,EAAW,uCAE3Cm+C,EAASn+C,EAAUg9B,QAAS,aAGnB,WAAV8O,EAECruB,GAEJ0gC,EAAO5hD,SAAU,wBAGjByD,EAAUouB,KAAM,YAAY,KAI5B+vB,EAAO//C,YAAa,wBAGpB4B,EAAUouB,KAAM,YAAY,IAGV,WAAV0d,EAEJruB,EAEJ0gC,EAAO5hD,SAAU,wBAIjB4hD,EAAO//C,YAAa,wBAGF,SAAV0tC,IAEJruB,EAEJ0gC,EAAO5hD,SAAU,sBAIjB4hD,EAAO//C,YAAa,2B,EA1KlBunE,GAgLAkB,EAAAA,WACL,aAAa,UAEZlyE,KAAKu5B,cAIsC,GAAtCv5B,KAAK28B,UAAUw1C,aAAapoE,QAEhC/J,KAAKoyE,4B,qCAIP,WACCpyE,KAAK28B,UAAY,CAChBvW,UAAcnlB,GAAAA,CAAG,uBACjBkxE,aAAclxE,GAAAA,CAAG,iCACjBoxE,SAAcpxE,GAAAA,CAAG,wC,uCAInB,WAA2B,WAG1B,IAAImwE,kBAAiB,SAAEC,GAEtB,EAAKiB,cACHb,QAASzxE,KAAK28B,UAAU01C,SAAS,GAAI,CACvCX,WAAW,M,sBAIb,WAAU,WAEHa,EAAOvyE,KAAKwyE,UAGlBxyE,KAAK6xE,UAAW,WAAW,IAG3BhqE,EAAAA,EAAAA,IAAU,mBAAoB,CAC7BiqE,QAAc,aACd9qC,UAAcrnC,iBAAiBC,OAAOmI,GACtCwqE,KAAcA,IACZ,SAAEvqE,GAGCA,EAAS6oC,UAGb,EAAKghC,UAAW,WAAW,GAG3B78D,YAAW,WAEV,EAAK68D,UAAW,WAAW,KACzB,MAQJ,EAAKA,UAAW,WAAW,MACzB,SAAE7pE,GAIJkpC,SAAS6C,WACP,CACF0e,uBAAuB,EACvBC,UAAuB,M,uBAIzB,WAAuC,IAA5Bvb,EAA4B,uDAAnB,GAAIruB,IAAe,yDAEvB,WAAVquB,EAECruB,EAEJ9oB,KAAK28B,UAAUvW,UAAUxe,SAAU,oBAInC5H,KAAK28B,UAAUvW,UAAU3c,YAAa,oBAGpB,WAAV0tC,EAEJruB,EAEJ9oB,KAAK28B,UAAUvW,UAAUxe,SAAU,oBAInC5H,KAAK28B,UAAUvW,UAAU3c,YAAa,oBAGpB,SAAV0tC,IAEJruB,EAEJ9oB,KAAK28B,UAAUvW,UAAUxe,SAAU,kBAInC5H,KAAK28B,UAAUvW,UAAU3c,YAAa,qB,qBAKzC,WAEC,IAAMgpE,EAAqBzyE,KAAK28B,UAAUw1C,aAAav1D,MAMvD,MAAO,CACN81D,QAJiBD,EAAmBr3D,MAAO,KAK3Cu3D,eAAgBF,O,EA3HbP,GAgIN,QAzTC,aAAa,UAEZ,IAAIlB,EAGJ,IAAIkB,GCNNvyE,iBAAiBiiE,MAAQ,CACxBzrC,OAAQ,IAmBT,KACC62B,EAAAA,EAAAA,KAAiB,YAChBC,EAAAA,EAAAA,IAAiB,iBAAiB,EAAO,CAAEgG,QAAS,YAGpD,IAAItiB,EAAAA,EACJ,IAAI7uC,EAAAA,EACJ,IAAI2gD,EAAAA,EACJ,IAAIssB,EACJ,IAAIa,EACJ,IAAIgD,KAEJ,MAAQz7D,IAETkiD,EAAAA,EAAAA,IAAiB,CAChBpwD,MAAStJ,iBAAiBwB,KAAKm4D,UAAUuZ,WAAW5pE,MACpDwtC,QAAS92C,iBAAiBwB,KAAKm4D,UAAUuZ,WAAWp8B,QACpD5gC,QAASlW,iBAAiBwB,KAAKm4D,UAAUuZ,WAAWh9D,QACpDhV,QAASsW,M","sources":["webpack://automator-recipe-ui/./src/components/UserSelector.js","webpack://automator-recipe-ui/./src/components/ItemCreatorAdd.js","webpack://automator-recipe-ui/./src/components/Closures.js","webpack://automator-recipe-ui/./src/components/Actions.js","webpack://automator-recipe-ui/./node_modules/flatpickr/dist/esm/types/options.js","webpack://automator-recipe-ui/./node_modules/flatpickr/dist/esm/l10n/default.js","webpack://automator-recipe-ui/./node_modules/flatpickr/dist/esm/utils/index.js","webpack://automator-recipe-ui/./node_modules/flatpickr/dist/esm/utils/dom.js","webpack://automator-recipe-ui/./node_modules/flatpickr/dist/esm/utils/formatting.js","webpack://automator-recipe-ui/./node_modules/flatpickr/dist/esm/utils/dates.js","webpack://automator-recipe-ui/./node_modules/flatpickr/dist/esm/index.js","webpack://automator-recipe-ui/./src/components/tokens/token-selector.js","webpack://automator-recipe-ui/./src/components/Field.js","webpack://automator-recipe-ui/./src/components/ItemCreatorTaskSelector.js","webpack://automator-recipe-ui/./src/components/ItemCreatorIntegrations.js","webpack://automator-recipe-ui/./src/components/ItemHeaderIcon.js","webpack://automator-recipe-ui/./src/components/ItemHeaderMenu.js","webpack://automator-recipe-ui/./src/components/ItemHeaderSentence.js","webpack://automator-recipe-ui/./src/components/ItemHeaderTag.js","webpack://automator-recipe-ui/./src/components/ItemOptions.js","webpack://automator-recipe-ui/./src/components/Markdown.js","webpack://automator-recipe-ui/./src/components/MetaboxFooter.js","webpack://automator-recipe-ui/./src/components/ItemHeaderAsync.js","webpack://automator-recipe-ui/./src/components/MetaboxItems.js","webpack://automator-recipe-ui/./src/components/Modal.js","webpack://automator-recipe-ui/./src/components/Publish.js","webpack://automator-recipe-ui/./src/components/RecipeNotices.js","webpack://automator-recipe-ui/./src/components/RecipeTypeSelector.js","webpack://automator-recipe-ui/./src/components/Triggers.js","webpack://automator-recipe-ui/./src/components/FieldsGroup.js","webpack://automator-recipe-ui/./src/components/FieldsRepeater.js","webpack://automator-recipe-ui/./src/components/Utilities.js","webpack://automator-recipe-ui/./src/components/Validation.js","webpack://automator-recipe-ui/./src/components/tokens/tokens.js","webpack://automator-recipe-ui/./node_modules/flatpickr/dist/esm/utils/polyfills.js","webpack://automator-recipe-ui/./node_modules/html5sortable/dist/html5sortable.cjs.js","webpack://automator-recipe-ui/./node_modules/sprintf-js/src/sprintf.js","webpack://automator-recipe-ui/external \"jQuery\"","webpack://automator-recipe-ui/webpack/bootstrap","webpack://automator-recipe-ui/webpack/runtime/compat get default export","webpack://automator-recipe-ui/webpack/runtime/define property getters","webpack://automator-recipe-ui/webpack/runtime/hasOwnProperty shorthand","webpack://automator-recipe-ui/./src/components/SendFeedback.js","webpack://automator-recipe-ui/./src/components/RecipeTitle.js","webpack://automator-recipe-ui/./src/components/Taxonomies.js","webpack://automator-recipe-ui/./src/index.js"],"sourcesContent":["import $ from 'jquery';\n\nimport {\n\tuserSelectorObject,\n\trecipeObject,\n\trestCall,\n\tgetDOMElements,\n\taddParametersToURL,\n\tisDefined,\n\tisEmpty,\n\tvsprintf\n} from './Utilities';\n\nimport Field from './Field.js';\n\nimport Actions from './Actions';\n\nimport RecipeNotices from './RecipeNotices';\n\nclass UserSelector {\n\tconstructor(){\n\t\t// On page load, get current step\n\t\tUncannyAutomator.recipe.userSelector.step = userSelectorObject( 'get-step' );\n\n\t\t// Render\n\t\tthis.render();\n\t}\n\n\trender(){\n\t\t// Create variable to save the content to be added\n\t\tlet $content = ``;\n\n\t\t// Get content depending of the step\n\t\tswitch ( UncannyAutomator.recipe.userSelector.step ){\n\t\t\tcase 'select-source':\n\t\t\t\t// Set validation to false\n\t\t\t\t// We're setting it to false here in case the user already\n\t\t\t\t// has valid values, but wanted to go to the first step\n\t\t\t\t// to change the source\n\t\t\t\tUncannyAutomator.recipe.userSelector.isValid = false;\n\n\t\t\t\t// Validate recipe\n\t\t\t\trecipeObject( 'validate' );\n\n\t\t\t\t// Where the recipe creator select the source of the user.\n\t\t\t\t// The options are \"Existing user\" and \"New user\".\n\t\t\t\t$content = this.getSelectSourceNodes();\n\t\t\t\tbreak;\n\n\t\t\tcase 'set-options':\n\t\t\t\t// Where the recipe creator defines values of the fields\n\t\t\t\t$content = this.getOptionsNodes();\n\t\t\t\tbreak;\n\n\t\t\tcase 'show-sentence':\n\t\t\t\t// Validate recipe\n\t\t\t\trecipeObject( 'validate' );\n\n\t\t\t\t// Set error mode\n\t\t\t\tUncannyAutomator.recipe.errorMode = false;\n\n\t\t\t\t// Show error\n\t\t\t\tnew RecipeNotices();\n\n\t\t\t\t// When the data is complete and valid.\n\t\t\t\t$content = this.getSentenceNodes();\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Get container\n\t\tlet $metabox = getDOMElements( 'metabox', {\n            type: 'action'\n        });\n\n        console.log( '%cRender User Selector', 'background: red; color: #fff; padding: 2px 10px;');\n\n        // Append content\n        $metabox.prepend( $content );\n\t}\n\n\tgetSelectSourceNodes(){\n\t\t// Create elements\n\t\tlet $userSelector = $( `\n\t\t\t<div class=\"user-selector ${ UncannyAutomator.recipe.requiresUserData ? 'user-selector--show' : '' }\">\n\t\t\t\t<div class=\"item item--user-selector\">\n\t\t\t\t\t<div class=\"item__content\">\n\t\t\t\t\t\t<div class=\"item-integrations\">\n\t\t\t\t\t\t\t<div class=\"item-integration user-selector-option user-selector-option--existing-user\" data-source=\"existingUser\">\n\t\t\t\t\t\t\t\t<div class=\"item-integration__logo\"></div>\n\t\t\t\t\t\t\t\t<div class=\"item-integration__name\">\n\t\t\t\t\t\t\t\t\t${ UncannyAutomator.i18n.userSelector.userType.existing }\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"item-integration user-selector-option user-selector-option--new-user\" data-source=\"newUser\">\n\t\t\t\t\t\t\t\t<div class=\"item-integration__logo\"></div>\n\t\t\t\t\t\t\t\t<div class=\"item-integration__name\">\n\t\t\t\t\t\t\t\t\t${ UncannyAutomator.i18n.userSelector.userType.new }\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t\t` );\n\n\t\t// Add header\n\t\t$userSelector.find( '.item' ).prepend( this.getHeaderNodes() );\n\n\t\t// Get user type boxes\n\t\tlet $userTypeButtons = $userSelector.find( '.user-selector-option' );\n\n\t\t// Bind click on the user type buttons\n\t\t$userTypeButtons.on( 'click', ( event ) => {\n\t\t\t// Get clicked button\n\t\t\tlet $option = $( event.currentTarget );\n\n\t\t\t// Get user type\n\t\t\tlet userSource = $option.data( 'source' );\n\t\t\t\n\t\t\t// Save selected source in main object\n\t\t\tuserSelectorObject( 'set-source', {\n\t\t\t\tsource: userSource\n\t\t\t});\n\n\t\t\t// Define next step\n\t\t\tUncannyAutomator.recipe.userSelector.step = 'set-options';\n\n\t\t\t// Render the actions metabox again\n\t\t\tnew Actions();\n\t\t});\n\n\t\t// Return element\n\t\treturn $userSelector;\n\t}\n\n\tgetOptionsNodes(){\n\t\t// Create elements\n\t\tlet $optionsContainer = $( `\n\t\t\t<div class=\"user-selector ${ UncannyAutomator.recipe.requiresUserData ? 'user-selector--show' : '' }\">\n\t\t\t\t<div class=\"item item--user-selector\">\n\t\t\t\t\t<div class=\"item__content\">\n\t\t\t\t\t\t<div class=\"item-options\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t` );\n\n\t\t// Add header\n\t\t$optionsContainer.find( '.item' ).prepend( this.getHeaderNodes() );\n\n\t\t// Get options container, we will add the fields there\n\t\tlet $fieldsContainer = $optionsContainer.find( '.item-options' );\n\n\t\t// Add fields\n\t\t$fieldsContainer.append( this.getOptionsFields() );\n\n\t\t// Return node\n\t\treturn $optionsContainer;\n\t}\n\n\tgetOptionsFields(){\n\t\t// Create container\n\t\tconst $container = $( `<div></div>` );\n\n\t\t// Create the fields container\n\t\tlet $fields = $( `<div class=\"item-options__group\"></div>` );\n\n\t\t// Create array to save all the fields\n\t\tlet optionsFields = [];\n\n\t\t// Update fields data object so it's an object and not an array\n\t\tuserSelectorObject( 'update-fields', {\n\t\t\tsource: 'existingUser',\n\t\t\tdata: {}\n\t\t});\n\n\t\tuserSelectorObject( 'update-fields', {\n\t\t\tsource: 'newUser',\n\t\t\tdata: {}\n\t\t});\n\n\t\t// Get WordPress roles, but remove the \"administrator\" one\n\t\tlet roles = UncannyAutomator.recipe.userSelector.resources.roles;\n\t\tdelete roles.administrator;\n\n\t\t// Check what's the source\n\t\tswitch ( UncannyAutomator.recipe.userSelector.source ){\n\t\t\tcase 'existingUser':\n\t\t\t\t// Create group\n\t\t\t\tlet $groupOfFields = $( `<div class=\"user-selector__field-group user-selector__field-group--two-columns\"></div>` );\n\n\t\t\t\t// Create \"Unique field\" field\n\t\t\t\tlet uniqueField = new Field( 'select', {\n\t\t\t\t\titemType: 'user-selector',\n\t\t\t\t\toptionCode: 'uniqueField',\n\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.existingUser.uniqueFieldLabel,\n\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.data.existingUser.uniqueField,\n\t\t\t\t\tisRequired: true,\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: 'email',\n\t\t\t\t\t\t\ttext:  UncannyAutomator.i18n.userSelector.existingUser.uniqueFieldOptionEmail\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: 'id',\n\t\t\t\t\t\t\ttext:  UncannyAutomator.i18n.userSelector.existingUser.uniqueFieldOptionId\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: 'username',\n\t\t\t\t\t\t\ttext:  UncannyAutomator.i18n.userSelector.existingUser.uniqueFieldOptionUsername\n\t\t\t\t\t\t},\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t\toptionsFields.push( uniqueField );\n\n\t\t\t\t// Create value field\n\t\t\t\tlet valueField = new Field( 'text', {\n\t\t\t\t\titemType: 'user-selector',\n\t\t\t\t\toptionCode: 'uniqueFieldValue',\n\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.data.existingUser.uniqueFieldValue,\n\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.existingUser.valueFieldLabel,\n\t\t\t\t\t// placeholder: UncannyAutomator.i18n.userSelector.existingUser.valueFieldPlaceholder,\n\t\t\t\t\tisRequired: true,\n\t\t\t\t\tsupportsTokens: true\n\t\t\t\t});\n\t\t\t\toptionsFields.push( valueField );\n\n\t\t\t\t// Create and add form element\n\t\t\t\tlet $uniqueFieldFormElement = uniqueField.getFormElement();\n\n\t\t\t\t// Init Codemirror\n        \t\t// AFTER we added the elements to the DOM let's call init \n\t\t\t\t// TokenSelector and CodeMirror. We're going to call this in\n\t\t\t\t// ItemOptions.js because the TokenSelector and \n\t\t\t\t// CodeMirror need the item in the DOM before changing it\n\t\t\t\tvalueField.initTokenSelector();\n\t\t\t\tvalueField.initCodeMirror();\n\n\t\t\t\t$groupOfFields.append( $uniqueFieldFormElement );\n\n\t\t\t\tlet $valueFieldFormElement = valueField.getFormElement();\n\t\t\t\t$groupOfFields.append( $valueFieldFormElement );\n\n\t\t\t\t// Add elements to the main container\n\t\t\t\t$fields.append( $groupOfFields );\n\n\t\t\t\t// Create field to decide what to do if the user doesn't exist\n\t\t\t\tlet fallbackField = new Field( 'radio', {\n\t\t\t\t\titemType: 'user-selector',\n\t\t\t\t\toptionCode: 'fallback',\n\t\t\t\t\tname: 'user-selector-existing-user-fallback',\n\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.existingUser.createNewUserFieldLabel,\n\t\t\t\t\tisRequired: true,\n\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.data.existingUser.fallback,\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: 'create-new-user',\n\t\t\t\t\t\t\ttext: UncannyAutomator.i18n.userSelector.existingUser.createNewUserFieldOptionCreateUser\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: 'do-nothing',\n\t\t\t\t\t\t\ttext: UncannyAutomator.i18n.userSelector.existingUser.createNewUserFieldOptionDoNothing\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t\toptionsFields.push( fallbackField );\n\n\t\t\t\t// Create and add form element\n\t\t\t\tlet $fallbackFieldFormElement = fallbackField.getFormElement();\n\t\t\t\t$fields.append( $fallbackFieldFormElement );\n\n\t\t\t\t// Listen changes\n\t\t\t\t$uniqueFieldFormElement.on( 'automator:field:change', () => {\n\t\t\t\t\t// Get and save value\n\t\t\t\t\tuserSelectorObject( 'update-fields', {\n\t\t\t\t\t\tsource: 'existingUser',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tuniqueField: uniqueField.getValue()\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t$valueFieldFormElement.on( 'automator:field:change', () => {\n\t\t\t\t\t// Get and save value\n\t\t\t\t\tuserSelectorObject( 'update-fields', {\n\t\t\t\t\t\tsource: 'existingUser',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tuniqueFieldValue: valueField.getValue()\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t// Listen changes\n\t\t\t\t$fallbackFieldFormElement.on( 'automator:field:change', () => {\n\t\t\t\t\t// Get and save value\n\t\t\t\t\tuserSelectorObject( 'update-fields', {\n\t\t\t\t\t\tsource: 'existingUser',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfallback: fallbackField.getValue()\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// Render the actions metabox again\n\t\t\t\t\tnew Actions();\n\t\t\t\t});\n\n\t\t\t\t// Check if we have to add more fields or the do-nothing notice\n\t\t\t\tif ( UncannyAutomator.recipe.userSelector.data.existingUser.fallback == 'do-nothing' ){\n\t\t\t\t\t// Create \"Do nothing\" notice\n\t\t\t\t\tconst $doNothingNotice = $( `\n\t\t\t\t\t\t<div class=\"user-selector__warning\">\n\t\t\t\t\t\t\t${ UncannyAutomator.i18n.userSelector.existingUser.doNothingMessage }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t` );\n\n\t\t\t\t\t$fields.append( $doNothingNotice );\n\t\t\t\t}\n\t\t\t\telse if ( UncannyAutomator.recipe.userSelector.data.existingUser.fallback == 'create-new-user' ){\n\t\t\t\t\t// Create container\n\t\t\t\t\tlet $subOptionsContainer = $( '<div/>', {\n\t\t\t\t\t\t'class': 'item-options'\n\t\t\t\t\t});\n\n\t\t\t\t\t// Create new users fields\n\t\t\t\t\tlet newUserFields = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\t\toptionCode: 'firstName',\n\t\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.data.existingUser.firstName,\n\t\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.firstName,\n\t\t\t\t\t\t\tisRequired: false,\n\t\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\t\toptionCode: 'lastName',\n\t\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.data.existingUser.lastName,\n\t\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.lastName,\n\t\t\t\t\t\t\tisRequired: false,\n\t\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\t\toptionCode: 'email',\n\t\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.data.existingUser.email,\n\t\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.email,\n\t\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\t\toptionCode: 'username',\n\t\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.data.existingUser.username,\n\t\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.username,\n\t\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\t\toptionCode: 'displayName',\n\t\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.data.existingUser.displayName,\n\t\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.displayName,\n\t\t\t\t\t\t\tisRequired: false,\n\t\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\t\toptionCode: 'password',\n\t\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.data.existingUser.password,\n\t\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.password,\n\t\t\t\t\t\t\tdescription: UncannyAutomator.i18n.userSelector.newUser.passwordDescription,\n\t\t\t\t\t\t\tisRequired: false,\n\t\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\t\tfieldType:  'select',\n\t\t\t\t\t\t\toptionCode: 'role',\n\t\t\t\t\t\t\tcurrentValue: ! isEmpty( UncannyAutomator.recipe.userSelector.data.existingUser.role ) ? UncannyAutomator.recipe.userSelector.data.existingUser.role : 'subscriber',\n\t\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.role,\n\t\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\t\tsupportsTokens: false,\n\t\t\t\t\t\t\toptions: Object.keys( roles ).map( ( key, index ) => {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tvalue: key,\n\t\t\t\t\t\t\t\t\ttext:  roles[ key ]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\titemType: 'user-selector',\n\t\t\t\t\t\t\tfieldType: 'radio',\n\t\t\t\t\t\t\toptionCode: 'logUserIn',\n\t\t\t\t\t\t\tname: 'logUserIn',\n\t\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.canLogNewUserIn ? ( ! isEmpty( UncannyAutomator.recipe.userSelector.data.existingUser.logUserIn ) ? UncannyAutomator.recipe.userSelector.data.existingUser.logUserIn : 'no' ) : 'no',\n\t\t\t\t\t\t\tisHidden: ! UncannyAutomator.recipe.canLogNewUserIn,\n\t\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.logUserIn,\n\t\t\t\t\t\t\tsupportsTokens: false,\n\t\t\t\t\t\t\toptions: [{\n\t\t\t\t\t\t\t\t\tvalue: 'yes',\n\t\t\t\t\t\t\t\t\ttext:  UncannyAutomator.i18n.yes\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalue: 'no',\n\t\t\t\t\t\t\t\t\ttext:  UncannyAutomator.i18n.no\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\n\t\t\t\t\t// Create fields\n\t\t\t\t\tnewUserFields.forEach(( fieldObject ) => {\n\t\t\t\t\t\t// Create field\n\t\t\t\t\t\tconst field = new Field( fieldObject.fieldType, fieldObject );\n\n\t\t\t\t\t\t// Get container\n\t\t\t\t\t\tlet $fieldFormElement = field.getFormElement();\n\n\t\t\t\t\t\t$subOptionsContainer.append( $fieldFormElement );\n\n        \t\t\t\t// AFTER we added the elements to the DOM let's call init \n\t\t\t\t\t\t// TokenSelector and CodeMirror. We're going to call this in\n\t\t\t\t\t\t// ItemOptions.js because the TokenSelector and \n\t\t\t\t\t\t// CodeMirror need the item in the DOM before changing it\n\t\t\t\t\t\tfield.initTokenSelector();\n\t\t\t\t\t\tfield.initCodeMirror();\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * We don't need this for now, but we could need it in the future\n\t\t\t\t\t\t * \n\n\t\t\t\t\t\t// Listen changes\n\t\t\t\t\t\t$fieldFormElement.on( 'automator:field:change', () => {\n\t\t\t\t\t\t\t// Get ID\n\t\t\t\t\t\t\tconst fieldId = fieldObject.optionCode;\n\n\t\t\t\t\t\t\t// Get value\n\t\t\t\t\t\t\tconst value = field.getValue();\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t*/\n\n\t\t\t\t\t\t// Save field\n\t\t\t\t\t\toptionsFields.push( field );\n\t\t\t\t\t});\n\n\t\t\t\t\t// Append container\n\t\t\t\t\t$fields.append( $subOptionsContainer );\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'newUser':\n\t\t\t\t// Create new users fields\n\t\t\t\tlet newUserFields = [\n\t\t\t\t\t{\n\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\toptionCode: 'firstName',\n\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.data.newUser.firstName,\n\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.firstName,\n\t\t\t\t\t\tisRequired: false,\n\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\toptionCode: 'lastName',\n\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.data.newUser.lastName,\n\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.lastName,\n\t\t\t\t\t\tisRequired: false,\n\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\toptionCode: 'email',\n\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.data.newUser.email,\n\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.email,\n\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\toptionCode: 'username',\n\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.data.newUser.username,\n\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.username,\n\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\toptionCode: 'displayName',\n\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.data.newUser.displayName,\n\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.displayName,\n\t\t\t\t\t\tisRequired: false,\n\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\tfieldType:  'text',\n\t\t\t\t\t\toptionCode: 'password',\n\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.data.newUser.password,\n\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.password,\n\t\t\t\t\t\tdescription: UncannyAutomator.i18n.userSelector.newUser.passwordDescription,\n\t\t\t\t\t\tisRequired: false,\n\t\t\t\t\t\tsupportsTokens: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\t\tfieldType:  'select',\n\t\t\t\t\t\toptionCode: 'role',\n\t\t\t\t\t\tcurrentValue: ! isEmpty( UncannyAutomator.recipe.userSelector.data.newUser.role ) ? UncannyAutomator.recipe.userSelector.data.newUser.role : 'subscriber',\n\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.role,\n\t\t\t\t\t\tisRequired: true,\n\t\t\t\t\t\tsupportsTokens: false,\n\t\t\t\t\t\toptions: Object.keys( roles ).map( ( key, index ) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tvalue: key,\n\t\t\t\t\t\t\t\ttext:  roles[ key ]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\titemType: 'user-selector',\n\t\t\t\t\t\tfieldType: 'radio',\n\t\t\t\t\t\toptionCode: 'logUserIn',\n\t\t\t\t\t\tname: 'logUserIn',\n\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.canLogNewUserIn ? ( ! isEmpty( UncannyAutomator.recipe.userSelector.data.newUser.logUserIn ) ? UncannyAutomator.recipe.userSelector.data.newUser.logUserIn : 'no' ) : 'no',\n\t\t\t\t\t\tisHidden: ! UncannyAutomator.recipe.canLogNewUserIn,\n\t\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.logUserIn,\n\t\t\t\t\t\tsupportsTokens: false,\n\t\t\t\t\t\toptions: [{\n\t\t\t\t\t\t\t\tvalue: 'yes',\n\t\t\t\t\t\t\t\ttext:  UncannyAutomator.i18n.yes\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: 'no',\n\t\t\t\t\t\t\t\ttext:  UncannyAutomator.i18n.no\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t\t// Create fields\n\t\t\t\tnewUserFields.forEach(( fieldObject ) => {\n\t\t\t\t\t// Create field\n\t\t\t\t\tconst field = new Field( fieldObject.fieldType, fieldObject );\n\n\t\t\t\t\t// Get container\n\t\t\t\t\tlet $fieldFormElement = field.getFormElement();\n\n\t\t\t\t\t$fields.append( $fieldFormElement );\n\n\t\t\t\t\t// AFTER we added the elements to the DOM let's call init \n\t\t\t\t\t// TokenSelector and CodeMirror. We're going to call this in\n\t\t\t\t\t// ItemOptions.js because the TokenSelector and \n\t\t\t\t\t// CodeMirror need the item in the DOM before changing it\n\t\t\t\t\tfield.initTokenSelector();\n\t\t\t\t\tfield.initCodeMirror();\n\n\t\t\t\t\t// Save field\n\t\t\t\t\toptionsFields.push( field );\n\t\t\t\t});\n\n\t\t\t\t// Create fallback field\n\t\t\t\tlet newUserFallbackField = new Field( 'radio', {\n\t\t\t\t\titemType:   'user-selector',\n\t\t\t\t\toptionCode: 'fallback',\n\t\t\t\t\tname: 'user-selector-new-user-fallback',\n\t\t\t\t\tlabel: UncannyAutomator.i18n.userSelector.newUser.existingUserFieldLabel,\n\t\t\t\t\tisRequired: true,\n\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.data.newUser.fallback,\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: 'select-existing-user',\n\t\t\t\t\t\t\ttext: UncannyAutomator.i18n.userSelector.newUser.existingUserFieldOptionExisting\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue: 'do-nothing',\n\t\t\t\t\t\t\ttext: UncannyAutomator.i18n.userSelector.newUser.existingUserFieldOptionDoNothing\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t\toptionsFields.push( newUserFallbackField );\n\n\t\t\t\t// Add fallback field to the container\n\t\t\t\tlet $newUserfallbackFieldFormElement = newUserFallbackField.getFormElement();\n\t\t\t\t$fields.append( $newUserfallbackFieldFormElement );\n\n\t\t\t\t// Listen changes\n\t\t\t\t$newUserfallbackFieldFormElement.on( 'automator:field:change', () => {\n\t\t\t\t\t// Update the value of all the fields (don't validate them yet)\n\t\t\t\t\tlet fieldsValues = {};\n\n\t\t\t\t\t// Iterate fields\n\t\t\t\t\toptionsFields.forEach(( Field ) => {\n\t\t\t\t\t\t// Save the field using the optionCode as ID and field value as value\n\t\t\t\t\t\tfieldsValues[ Field.getAttributes().optionCode ] = Field.getValue();\n\t\t\t\t\t});\n\n\t\t\t\t\t// Get and save value\n\t\t\t\t\tuserSelectorObject( 'update-fields', {\n\t\t\t\t\t\tsource: 'newUser',\n\t\t\t\t\t\tdata: fieldsValues\n\t\t\t\t\t});\n\n\t\t\t\t\t// Render the actions metabox again\n\t\t\t\t\tnew Actions();\n\t\t\t\t});\n\n\t\t\t\t// Check if we have to add more fields or the do-nothing notice\n\t\t\t\tif ( UncannyAutomator.recipe.userSelector.data.newUser.fallback == 'do-nothing' ){\n\t\t\t\t\t// Create \"Do nothing\" notice\n\t\t\t\t\tconst $doNothingNotice = $( `\n\t\t\t\t\t\t<div class=\"user-selector__warning\">\n\t\t\t\t\t\t\t${ UncannyAutomator.i18n.userSelector.newUser.doNothingMessage }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t` );\n\n\t\t\t\t\t$fields.append( $doNothingNotice );\n\t\t\t\t}\n\t\t\t\telse if ( UncannyAutomator.recipe.userSelector.data.newUser.fallback == 'select-existing-user' ){\n\t\t\t\t\t// Create container\n\t\t\t\t\tlet $subOptionsContainer = $( '<div/>', {\n\t\t\t\t\t\t'class': 'item-options'\n\t\t\t\t\t});\n\n\t\t\t\t\t// Create \"Prioritized Field\" field\n\t\t\t\t\tlet prioritizedField = new Field( 'select', {\n\t\t\t\t\t\titemType:     'user-selector',\n\t\t\t\t\t\toptionCode:   'prioritizedField',\n\t\t\t\t\t\tlabel:        UncannyAutomator.i18n.userSelector.newUser.prioritizedFieldLabel,\n\t\t\t\t\t\tcurrentValue: UncannyAutomator.recipe.userSelector.data.newUser.prioritizedField,\n\t\t\t\t\t\tdefaultValue: 'email',\n\t\t\t\t\t\tdescription:  UncannyAutomator.i18n.userSelector.newUser.prioritizedFieldDescription,\n\t\t\t\t\t\tisRequired:   true,\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: 'email',\n\t\t\t\t\t\t\t\ttext:  UncannyAutomator.i18n.userSelector.newUser.email\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvalue: 'username',\n\t\t\t\t\t\t\t\ttext:  UncannyAutomator.i18n.userSelector.newUser.username\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t});\n\t\t\t\t\toptionsFields.push( prioritizedField );\n\n\t\t\t\t\t// Get field container\n\t\t\t\t\tlet $prioritizedField = prioritizedField.getFormElement();\n\t\t\t\t\t$subOptionsContainer.append( $prioritizedField );\n\n\t\t\t\t\t// Append container\n\t\t\t\t\t$fields.append( $subOptionsContainer );\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Save fields\n\t\tUncannyAutomator.recipe.userSelector.fields = optionsFields;\n\n\t\t// Add fields\n\t\t$container.append( $fields );\n\n\t\t// Create and add save and cancel buttons\n\t\tconst $buttonsContainer = $( `<div class=\"item-options__buttons\"></div>` );\n\n\t\t// Save button\n\t\tconst $saveButton = $( `<div class=\"uap-btn uap-btn--primary\">${ UncannyAutomator.i18n.save }</div>` );\n\t\tconst $cancelButton = $( `<div class=\"uap-btn uap-btn--secondary\">${ UncannyAutomator.i18n.cancel }</div>` );\n\n\t\t// Add listeners\n\t\t// On save\n\t\t$saveButton.on( 'click', () => {\n\t\t\t// Validate fields\n\t\t\t// Create default response\n\t\t\tlet areAllFieldsValid = true;\n\n\t\t\t// Create object to get all the fields values\n\t\t\tlet fieldsValues = {}\n\n\t\t\t// Iterate fields and validate them\n\t\t\toptionsFields.forEach(( Field ) => {\n\t\t\t\t// Get field validation\n\t\t\t\tconst isFieldValid = Field.validate().isValid;\n\n\t\t\t\t// Update global validation\n\t\t\t\tareAllFieldsValid = areAllFieldsValid && isFieldValid;\n\n\t\t\t\t// Check if the field is valid\n\t\t\t\tif ( isFieldValid ){\n\t\t\t\t\t// Save value\n\t\t\t\t\tfieldsValues[ Field.getAttributes().optionCode ] = Field.getValue();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Save values\n\t\t\tuserSelectorObject( 'update-fields', {\n\t\t\t\tsource: UncannyAutomator.recipe.userSelector.source,\n\t\t\t\tdata: fieldsValues\n\t\t\t});\n\n\t\t\t// Check if all fields are valid, otherwise\n\t\t\t// do nothing. The .validate() method will\n\t\t\t// render the errors\n\t\t\tif ( areAllFieldsValid ){\n\t\t\t\t// Add loading class to button\n\t\t\t\t$saveButton.addClass( 'uap-btn--primary uap-btn--loading uap-btn--disabled' );\n\n\t\t\t\t// Make request\n\t\t\t\trestCall( 'user-selector', {\n\t\t\t\t\trecipeId: UncannyAutomator.recipe.id,\n\t\t\t\t\tsource: UncannyAutomator.recipe.userSelector.source,\n\t\t\t\t\tdata: UncannyAutomator.recipe.userSelector.data[ UncannyAutomator.recipe.userSelector.source ]\n\t\t\t\t}, ( response ) => {\n\t\t\t\t\t// On success\n\t\t\t\t\t// Set user selector as valid\n\t\t\t\t\tUncannyAutomator.recipe.userSelector.isValid = true;\n\n\t\t\t\t\t// Set step\n\t\t\t\t\tuserSelectorObject( 'set-step', {\n\t\t\t\t\t\tstep: 'show-sentence'\n\t\t\t\t\t});\n\n\t\t\t\t\t// Render actions again\n\t\t\t\t\tnew Actions();\n\t\t\t\t}, ( response ) => {\n\t\t\t\t\t// On error\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// On cancel\n\t\t$cancelButton.on( 'click', () => {\n\t\t\t// Delete fields information\n\t\t\t// userSelectorObject( 'reset-fields' );\n\n\t\t\t// Set step\n\t\t\tuserSelectorObject( 'set-step', {\n\t\t\t\tstep: 'select-source'\n\t\t\t});\n\n\t\t\t// Render actions again\n\t\t\tnew Actions();\n\t\t})\n\n\t\t// Add buttons\n\t\t$buttonsContainer.append( $saveButton );\n\t\t$buttonsContainer.append( $cancelButton );\n\t\t$container.append( $buttonsContainer );\n\n\t\treturn $container;\n\t}\n\n\tgetSentenceNodes(){\n\t\t// Create elements\n\t\tlet $optionsContainer = $( `\n\t\t\t<div class=\"user-selector user-selector--summary ${ UncannyAutomator.recipe.requiresUserData ? 'user-selector--show' : '' }\">\n\t\t\t\t<div class=\"item item--user-selector\">\n\t\t\t\t\t<div class=\"item__content\">\n\t\t\t\t\t\t<div class=\"item-options\">\n\t\t\t\t\t\t\t<div class=\"user-selector-summary\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t` );\n\n\t\t$optionsContainer.find( '.item' ).prepend( this.getHeaderNodes() );\n\n\t\t// Get container\n\t\tlet $summaryContainer = $optionsContainer.find( '.user-selector-summary' );\n\n\t\t// Create first row\n\t\tlet $sourceRow = $( `\n\t\t\t<div class=\"user-selector-summary-row\">\n\t\t\t\t<div class=\"user-selector-summary-row__icon\">\n\t\t\t\t\t<span class=\"uo-icon uo-icon--atom\"></span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"user-selector-summary-row__content\"></div>\n\t\t\t</div>\n\t\t` );\n\n\t\t// Create token\n\t\tlet $sourceRowToken = $( `\n\t\t\t<div class=\"user-selector-summary-row__token\"></div>\n\t\t` );\n\t\t$sourceRow.find( '.user-selector-summary-row__content' ).append( $sourceRowToken );\n\n\t\t// If the source is \"existingUser\"\n\t\tif ( UncannyAutomator.recipe.userSelector.source == 'existingUser' ){\n\t\t\t// Then add the \"Existing user\" string\n\t\t\t$sourceRowToken.text( UncannyAutomator.i18n.userSelector.userType.existing );\n\t\t}\n\t\t// If it's \"newUser\"\n\t\telse if ( UncannyAutomator.recipe.userSelector.source == 'newUser' ){\n\t\t\t// Then add the \"New user\" string\n\t\t\t$sourceRowToken.text( UncannyAutomator.i18n.userSelector.userType.new );\n\t\t}\n\n\t\t// Listen clicks\n\t\t$sourceRowToken.on( 'click', () => {\n\t\t\t// Go to the first step.\n\t\t\t\n\t\t\t// Delete fields information\n\t\t\t// userSelectorObject( 'reset-fields' );\n\n\t\t\t// Set step\n\t\t\tuserSelectorObject( 'set-step', {\n\t\t\t\tstep: 'select-source'\n\t\t\t});\n\n\t\t\t// Render actions again\n\t\t\tnew Actions();\n\t\t});\n\n\t\t// Add to container\n\t\t$summaryContainer.append( $sourceRow );\n\n\t\t// Create first row\n\t\tlet $dataRow = $( `\n\t\t\t<div class=\"user-selector-summary-row\">\n\t\t\t\t<div class=\"user-selector-summary-row__icon\">\n\t\t\t\t\t<span class=\"uo-icon uo-icon--fingerprint\"></span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"user-selector-summary-row__content\"></div>\n\t\t\t</div>\n\t\t` );\n\n\t\t// Create token\n\t\tlet $dataRowSentence;\n\n\t\tif ( UncannyAutomator.recipe.userSelector.source == 'existingUser' ){\n\t\t\t$dataRowSentence = $( `\n\t\t\t\t<div>\n\t\t\t\t${\n\t\t\t\t\tvsprintf(\n\t\t\t\t\t\tUncannyAutomator.i18n.userSelector.summary.matches,\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t`<div class=\"user-selector-summary-row__token\">${ UncannyAutomator.i18n.userSelector.summary[ UncannyAutomator.recipe.userSelector.data.existingUser.uniqueField ] }</div>`,\n\t\t\t\t\t\t\t`<div class=\"user-selector-summary-row__token\">${ UncannyAutomator.recipe.userSelector.data.existingUser.uniqueFieldValue }</div>`\n\t\t\t\t\t\t]\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t</div>`\n\t\t\t);\n\t\t}\n\t\telse if ( UncannyAutomator.recipe.userSelector.source == 'newUser' ){\n\t\t\t$dataRowSentence = $( `\n\t\t\t\t<div>\n\t\t\t\t${\n\t\t\t\t\tvsprintf(\n\t\t\t\t\t\tUncannyAutomator.i18n.userSelector.summary.withEmail,\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t`<div class=\"user-selector-summary-row__token\">${ UncannyAutomator.recipe.userSelector.data.newUser.email }</div>`\n\t\t\t\t\t\t]\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t`\n\t\t\t);\n\t\t}\n\n\t\t$dataRow.find( '.user-selector-summary-row__content' ).append( $dataRowSentence );\n\n\t\t// Listen clicks\n\t\t$dataRowSentence.find( '.user-selector-summary-row__token' ).on( 'click', () => {\n\t\t\t// Go to the second step.\n\t\t\t\n\t\t\t// Set step\n\t\t\tuserSelectorObject( 'set-step', {\n\t\t\t\tstep: 'set-options'\n\t\t\t});\n\n\t\t\t// Render actions again\n\t\t\tnew Actions();\n\t\t});\n\n\t\t// Add data row\n\t\t$summaryContainer.append( $dataRow );\n\n\t\t// Add fallback row\n\t\tlet $fallbackRow = $( `\n\t\t\t<div class=\"user-selector-summary-row\">\n\t\t\t\t<div class=\"user-selector-summary-row__icon\">\n\t\t\t\t\t<span class=\"uo-icon uo-icon--directions\"></span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"user-selector-summary-row__content\"></div>\n\t\t\t</div>\n\t\t` );\n\n\t\tlet otherwiseText = '';\n\n\t\tif ( UncannyAutomator.recipe.userSelector.source == 'existingUser' ){\n\t\t\tif ( UncannyAutomator.recipe.userSelector.data.existingUser.fallback == 'create-new-user' ){\n\t\t\t\totherwiseText = UncannyAutomator.i18n.userSelector.summary.createNewUser;\n\t\t\t}\n\t\t\telse if ( UncannyAutomator.recipe.userSelector.data.existingUser.fallback == 'do-nothing' ){\n\t\t\t\totherwiseText = UncannyAutomator.i18n.userSelector.summary.doNothing;\n\t\t\t}\n\t\t}\n\t\telse if ( UncannyAutomator.recipe.userSelector.source == 'newUser' ){\n\t\t\tif ( UncannyAutomator.recipe.userSelector.data.newUser.fallback == 'select-existing-user' ){\n\t\t\t\totherwiseText = UncannyAutomator.i18n.userSelector.summary.selectExistingUser;\n\t\t\t}\n\t\t\telse if ( UncannyAutomator.recipe.userSelector.data.newUser.fallback == 'do-nothing' ){\n\t\t\t\totherwiseText = UncannyAutomator.i18n.userSelector.summary.doNothing;\n\t\t\t}\n\t\t}\n\n\t\tlet $fallbackRowSentence = $( `\n\t\t\t<div>\n\t\t\t${\n\t\t\t\tvsprintf(\n\t\t\t\t\tUncannyAutomator.i18n.userSelector.summary.otherwise,\n\t\t\t\t\t[\n\t\t\t\t\t\t`<div class=\"user-selector-summary-row__token\">${ otherwiseText }</div>`\n\t\t\t\t\t]\n\t\t\t\t)\n\t\t\t}\n\t\t\t</div>`\n\t\t);\n\t\t$fallbackRow.find( '.user-selector-summary-row__content' ).append( $fallbackRowSentence );\n\n\t\t// Listen clicks\n\t\t$fallbackRow.find( '.user-selector-summary-row__token' ).on( 'click', () => {\n\t\t\t// Go to the second step.\n\n\t\t\t// Set step\n\t\t\tuserSelectorObject( 'set-step', {\n\t\t\t\tstep: 'set-options'\n\t\t\t});\n\n\t\t\t// Render actions again\n\t\t\tnew Actions();\n\t\t});\n\n\t\t// Add data row\n\t\t$summaryContainer.append( $fallbackRow );\n\n\t\t// Return nodes\n\t\treturn $optionsContainer;\n\t}\n\n\tgetHeaderNodes(){\n\t\t// Define title variable\n\t\tlet title;\n\n\t\t// Get title variable\n\t\tswitch ( UncannyAutomator.recipe.userSelector.step ){\n\t\t\tcase 'select-source':\n\t\t\tcase 'show-sentence':\n\t\t\t\t// Define title\n\t\t\t\ttitle = UncannyAutomator.i18n.userSelector.sentenceTitle;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'set-options':\n\t\t\t\t// Define title\n\t\t\t\ttitle = UncannyAutomator.i18n.userSelector.setOptions;\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Create output\n\t\tlet $output = $( `\n\t\t\t<div>\n\t\t\t\t<div class=\"item-actions\">\n\t\t\t\t\t<div class=\"item-actions__btn\">\n\t\t\t\t\t\t<i class=\"uo-icon uo-icon--ellipsis-h-alt\"></i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"item-actions__dropdown\">\n\t\t\t\t\t\t<ul class=\"item-actions-dropdown__ul\">\n\t\t\t\t\t\t\t<a href=\"${ addParametersToURL( 'https://automatorplugin.com/knowledge-base/anonymous-recipes/#Introducing_the_User_Selector', {\n\t\t                        'utm_source':  'uncanny_automator_pro',\n\t\t                        'utm_medium':  'user_selector',\n\t\t                        'utm_content': 'support_menu_link'\n\t\t                    }) }\" target=\"_blank\" class=\"item-actions-dropdown__action\">\n\t\t\t\t\t\t\t\t<span>${ UncannyAutomator.i18n.support }</span>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"item-icon\"></div>\n\t\t\t\t<div class=\"item-title uap-clear\">\n\t\t\t\t\t<div class=\"item-title__describe\">\n\t\t\t\t\t\t<div class=\"item-title__non-editable\">\n\t\t\t\t\t\t\t${ title }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t` );\n\n\t\t// Get item actions\n\t\tconst $itemActions = $output.find( '.item-actions' );\n\n\t\t// Add functionality to open and close the actions dropdown\n\t\t// Listen click on the three dots icon\n        $output.find( '.item-actions__btn' ).on( 'click', () => {\n        \t// Evaluate if it's open\n            const isOpen = $itemActions.hasClass( 'item-actions--open' );\n\n            // Check if it's not open\n            if ( ! isOpen ){\n                // Open the dropdown\n                $itemActions.addClass( 'item-actions--open' );\n\n                // Listen clicks outside the dropdown\n                $( document ).on( 'mouseup.uap-actions-click-outside', ( event ) => {\n                    if ( ! $itemActions.is( event.target ) && $itemActions.has( event.target ).length === 0 ){\n                        // Close dropdown\n                        $itemActions.removeClass( 'item-actions--open' );\n\n                        // Remove event listener to listen clicks outside the dropdown\n                        $( document ).off( 'mouseup.uap-actions-click-outside' );\n                    }\n                });           \n            }\n            else {\n                // Close dropdown\n                $itemActions.removeClass( 'item-actions--open' );\n\n                // Remove event listener to listen clicks outside the dropdown\n                $( document ).off( 'mouseup.uap-actions-click-outside' );\n            }\n        } );\n\n\t\t// Return output\n\t\treturn $output;\n\t}\n}\n\nexport default UserSelector;","import $ from 'jquery';\n\nimport {\n    getDOMElements\n}                              from './Utilities.js';\nimport ItemCreatorIntegrations from './ItemCreatorIntegrations.js';\n\nclass ItemCreatorAdd {\n    constructor( itemType ){\n        let $container    = $( '<div/>', { 'class': 'item item--start' }),\n            $icon         = $( '<div/>', { 'class': 'item-icon' }),\n            $containerBox = $( '<div/>', { 'class': 'item-title uap-clear' }),\n            $button       = $( '<div/>', { 'class': 'uap-btn uap-btn--secondary uap-btn--small' });\n\n        $containerBox.append( $button );\n        $container.append( $icon );\n        $container.append( $containerBox );\n\n        // Add to the metabox\n        let $metabox = getDOMElements( 'metabox', {\n            type: itemType\n        });\n\n        $metabox.append( $container );\n\n        // Add text depending of the itemType\n        if ( itemType == 'trigger' ){\n            $button.text( UncannyAutomator.i18n.trigger.add );\n        }\n\n        if ( itemType == 'action' ){\n            $button.text( UncannyAutomator.i18n.action.add );\n        }\n\n        $button.on( 'click', () => new ItemCreatorIntegrations( itemType ) );\n    }\n}\n\nexport default ItemCreatorAdd;","import $ from 'jquery';\n\nimport {\n    isDefined,\n    getDOMElements,\n    restCall,\n    vsprintf\n}                         from './Utilities.js';\nimport ItemHeaderMenu     from './ItemHeaderMenu.js';\nimport ItemHeaderIcon     from './ItemHeaderIcon.js';\nimport ItemHeaderTag      from './ItemHeaderTag.js';\nimport ItemHeaderSentence from './ItemHeaderSentence.js';\nimport Actions            from './Actions.js';\nimport Field              from './Field.js';\n\nclass Closures {\n\n    constructor( label ){\n        // Create console group\n        // console.group( 'Closures' );\n\n        // Get metabox\n        this.elements = {\n            $metabox: getDOMElements( 'metabox', { type: 'action' })\n        }\n\n        // Create closures. It's important to understand that we're going to create all the available closures, not only those already added to the item\n        // That's why we create a separate file instead of using Item.js\n        $.each( UncannyAutomator.closures, ( key, closure ) => this.createClosure( closure, label ) );\n\n        // Close console group\n        // console.groupEnd();\n    }\n\n    createClosure( closure, label ){\n        // Variable to check later if this closure already was added to the recipe\n        let wasAdded = false;\n\n        // Container\n        let $container = $( '<div/>', { 'class': 'metabox__footer metabox__closures' });\n\n        // Checkbox attributes. We're going to use this to create our checkbox later.\n        let checkboxAttributes = {\n            label:              label,\n            formElementClass:   'form-element--nomargin'\n        }\n\n        // Check if this closure already was added to the recipe\n        let closureInRecipe = this.getClosureByCodeFromItemsObject( closure.code );\n\n        if ( isDefined( closureInRecipe ) ){\n            wasAdded = true;\n\n            checkboxAttributes.currentValue = true;\n            checkboxAttributes.itemid       = closureInRecipe.id;\n\n            // Debug\n            // console.groupCollapsed( vsprintf( 'ID: %s', [ closureInRecipe.id ] ) );\n            // console.log( closureInRecipe );\n            // console.groupEnd();\n        }\n\n        // Create checkbox\n        let checkboxField = new Field( 'checkbox', checkboxAttributes ),\n            $checkbox      = checkboxField.getFormElement();\n\n        // Bind changes\n        $checkbox.on( 'change', function(){\n            let isChecked = checkboxField.getValue();\n            checkboxField.startLoadingAnimation();\n\n            // Check if it's checked\n            if ( isChecked ){\n                // Add item to the recipe\n                restCall( 'add', {\n                    recipePostID: UncannyAutomator.recipe.id,\n                    action:       'add-new-closure',\n                    item_code:    closure.code,\n                    default_meta: {\n                        integration_name: UncannyAutomator.integrations[ closure.integration ].name,\n                        sentence:         closure.sentence\n                    }\n                }, ( response ) => {\n                    new Actions();\n\n                    // Check if the ID of the new item is defined\n                    if ( isDefined( response.post_ID ) ){\n                        // Get item form element\n                        const $newItem = getDOMElements( 'item', {\n                            id: response.post_ID\n                        });\n\n                        // Get first token and trigger a click\n                        $newItem.item.find( '.item-title__token:not(.item-title__token--filled)' ).first().trigger( 'click' );\n                    }\n                }, ( response ) => {\n                    console.log( '‼️ ERROR-TODO. Couldn\\'t add the closure' );\n\n                    // Stop the loading animation\n                    checkboxField.stopLoadingAnimation();\n\n                    // Change back the value of the checkbox\n                    checkboxField.setValue( false, false );\n                });\n            }\n            else {\n                restCall( 'delete', {\n                    ID: closureInRecipe.id\n                }, () => {\n                    new Actions();\n                }, () => {\n                    console.log( '‼️ ERROR-TODO. Couldn\\'t delete the closure' );\n\n                    new Actions();\n                });\n            }\n        });\n\n        // Append checkbox to the container\n        $container.append( $checkbox );\n\n        // Create toggle section\n        let $toggleContent = $( '<div/>', { 'class': 'uo-toggle uo-toggle--show' });\n\n        // Check if it was already added. In that case show it\n        if ( wasAdded ){\n            $toggleContent.addClass( 'uo-toggle--show' );\n\n            let $item = $( '<div/>', {\n                'class':   'item item--closure item--margintop',\n                'data-id': closureInRecipe.id\n            });\n\n            let $itemHeader = this.createHeader(\n                UncannyAutomator.recipe.items[ closureInRecipe.id ].integrationCode,\n                'closure',\n                closure.code,\n                closureInRecipe.id,\n            );\n\n            $item.append( $itemHeader );\n\n            let $itemContent = $( '<div/>', { 'class': 'item__content' });\n            $item.append( $itemContent );\n\n            $toggleContent.append( $item );\n        }\n    \n        $container.append( $toggleContent );\n\n        // Append everything to the metabox\n        this.elements.$metabox.append( $container );\n    }\n\n    /**\n     * Creates item header\n     * \n     * @since 0.5\n     *\n     * @param {string}    integrationCode - The integration code\n     * @param {string}    itemType - The item type: 'trigger', 'action' or 'closure'\n     * @param {string}    itemCode - The code of the item\n     * @param {int}       itemId - The ID of the item\n     */\n\n    createHeader( integrationCode, itemType, itemCode, itemId ){\n        let $container = $( '<div/>' ),\n            $title     = $( '<div/>', { 'class': 'item-title uap-clear' });\n\n        let $actions = new ItemHeaderMenu( itemType, integrationCode, itemCode, itemId );\n        $container.append( $actions );\n\n        let $icon    = new ItemHeaderIcon( integrationCode );\n        $container.append( $icon );\n        \n        let $itemTag = new ItemHeaderTag( integrationCode );\n        $title.append( $itemTag );\n\n        let $titleSentence = new ItemHeaderSentence( itemType, integrationCode, itemCode, itemId );\n        $title.append( $titleSentence );\n\n        $container.append( $title );\n\n        return $container;\n    }\n\n    getClosureByCodeFromItemsObject( code ){\n        let theItem;\n\n        $.each( UncannyAutomator.recipe.items, function( itemID, item ){\n            if ( item.itemCode == code ){\n                theItem = item;\n            }\n        })\n\n        return theItem;\n    }\n}\n\nexport default Closures;","import $ from 'jquery';\n\nimport {\n    itemsObject,\n    getDOMElements,\n    isEmpty,\n    isDefined,\n    filterMeta,\n    getURLParameter,\n    filterMetaValue\n}                     from './Utilities.js';\nimport UserSelector   from './UserSelector.js';\nimport MetaboxItems   from './MetaboxItems.js';\nimport MetaboxFooter  from './MetaboxFooter.js';\nimport ItemCreatorAdd from './ItemCreatorAdd.js';\nimport Closures       from './Closures.js';\nimport ItemCreatorIntegrations  from './ItemCreatorIntegrations';\n\nclass Actions {\n\n    /**\n     * Renders all the actions in the UI\n     */\n\n    constructor(){\n       \n        // Debugging: Create console group\n        // console.group( 'Actions' );\n\n        // Get and clear metabox\n        let $metabox = getDOMElements( 'metabox', { type: 'action' });\n        $metabox.empty();\n\n        // Check if we have to create the User Selector\n        if ( UncannyAutomator.recipe.type == 'anonymous' ){\n            // Create User Selector\n            new UserSelector();\n        }\n\n        // Get recipe actions\n        let actions = itemsObject( 'get', {\n            filter: {\n                itemType: 'action',\n            }\n        });\n\n        // Check if it has actions\n        if ( ! isEmpty( actions ) && isDefined( UncannyAutomator.wp ) && UncannyAutomator.wp ){\n\n            let instantActions = filterMeta( actions, 'async_mode', false );\n            let delayedActions = filterMetaValue( actions, 'async_mode', 'delay' );\n            let scheduledActions = filterMetaValue( actions, 'async_mode', 'schedule' );\n\n            if ( ! isEmpty( delayedActions ) || ! isEmpty( scheduledActions ) ) {\n                if ( ! isEmpty( instantActions ) ) {\n                    // Render non async actions\n                    new MetaboxItems( 'action', instantActions );\n                }\n                   \n                // Add Closures\n                // Add action button\n                new MetaboxFooter( 'action' );\n\n                // Check if we have to show the integrations on load\n                if ( this.isContinuingIntegrationConnection() ){\n                    // Render the integrations list\n                    new ItemCreatorIntegrations( 'action' );\n                }\n                \n                new Closures( UncannyAutomator.i18n.action.asyncActions.closuresLabelAsyncOnly );\n                \n                 // Render async actions\n                new MetaboxItems( 'action', delayedActions );\n                new MetaboxItems( 'action', scheduledActions );\n            }\n            else {\n                // Render non-async actions\n                new MetaboxItems( 'action', instantActions );\n\n                // Add action button\n                new MetaboxFooter( 'action' );\n\n                // Check if we have to show the integrations on load\n                if ( this.isContinuingIntegrationConnection() ){\n                    // Render the integrations list\n                    new ItemCreatorIntegrations( 'action' );\n                }\n\n                // Add closures\n                new Closures( UncannyAutomator.i18n.action.asyncActions.closuresLabelAsyncOnly );\n            }\n        } \n        else if ( ! isEmpty( actions ) ) {\n            new MetaboxItems( 'action', actions );\n\n            // Add action button\n            new MetaboxFooter( 'action' );\n\n            // Check if we have to show the integrations on load\n            if ( this.isContinuingIntegrationConnection() ){\n                // Render the integrations list\n                new ItemCreatorIntegrations( 'action' );\n            }\n\n            // Add closures\n            new Closures( UncannyAutomator.i18n.action.asyncActions.closuresLabelAsyncOnly );\n        }\n        else {\n            // Render the first step of the item creator\n            new ItemCreatorAdd( 'action' );\n\n            // Check if we have to show the integrations on load\n            if ( this.isContinuingIntegrationConnection() ){\n                // Render the integrations list\n                new ItemCreatorIntegrations( 'action' );\n            }\n            \n            // Add closures\n            new Closures( UncannyAutomator.i18n.action.asyncActions.closuresLabelAsyncOnly );\n        }\n\n        // Debugging: Close console group\n        // console.groupEnd();\n    }\n\n    isContinuingIntegrationConnection(){\n        return getURLParameter( null, 'ua_connecting_integration' ) == 1 && getURLParameter( null, 'ua_connecting_integration_context' ) == 'action';\n    }\n}\n\nexport default Actions;","export const HOOKS = [\n    \"onChange\",\n    \"onClose\",\n    \"onDayCreate\",\n    \"onDestroy\",\n    \"onKeyDown\",\n    \"onMonthChange\",\n    \"onOpen\",\n    \"onParseConfig\",\n    \"onReady\",\n    \"onValueUpdate\",\n    \"onYearChange\",\n    \"onPreCalendarPosition\",\n];\nexport const defaults = {\n    _disable: [],\n    allowInput: false,\n    allowInvalidPreload: false,\n    altFormat: \"F j, Y\",\n    altInput: false,\n    altInputClass: \"form-control input\",\n    animate: typeof window === \"object\" &&\n        window.navigator.userAgent.indexOf(\"MSIE\") === -1,\n    ariaDateFormat: \"F j, Y\",\n    autoFillDefaultTime: true,\n    clickOpens: true,\n    closeOnSelect: true,\n    conjunction: \", \",\n    dateFormat: \"Y-m-d\",\n    defaultHour: 12,\n    defaultMinute: 0,\n    defaultSeconds: 0,\n    disable: [],\n    disableMobile: false,\n    enableSeconds: false,\n    enableTime: false,\n    errorHandler: (err) => typeof console !== \"undefined\" && console.warn(err),\n    getWeek: (givenDate) => {\n        const date = new Date(givenDate.getTime());\n        date.setHours(0, 0, 0, 0);\n        date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));\n        var week1 = new Date(date.getFullYear(), 0, 4);\n        return (1 +\n            Math.round(((date.getTime() - week1.getTime()) / 86400000 -\n                3 +\n                ((week1.getDay() + 6) % 7)) /\n                7));\n    },\n    hourIncrement: 1,\n    ignoredFocusElements: [],\n    inline: false,\n    locale: \"default\",\n    minuteIncrement: 5,\n    mode: \"single\",\n    monthSelectorType: \"dropdown\",\n    nextArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",\n    noCalendar: false,\n    now: new Date(),\n    onChange: [],\n    onClose: [],\n    onDayCreate: [],\n    onDestroy: [],\n    onKeyDown: [],\n    onMonthChange: [],\n    onOpen: [],\n    onParseConfig: [],\n    onReady: [],\n    onValueUpdate: [],\n    onYearChange: [],\n    onPreCalendarPosition: [],\n    plugins: [],\n    position: \"auto\",\n    positionElement: undefined,\n    prevArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",\n    shorthandCurrentMonth: false,\n    showMonths: 1,\n    static: false,\n    time_24hr: false,\n    weekNumbers: false,\n    wrap: false,\n};\n","export const english = {\n    weekdays: {\n        shorthand: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n        longhand: [\n            \"Sunday\",\n            \"Monday\",\n            \"Tuesday\",\n            \"Wednesday\",\n            \"Thursday\",\n            \"Friday\",\n            \"Saturday\",\n        ],\n    },\n    months: {\n        shorthand: [\n            \"Jan\",\n            \"Feb\",\n            \"Mar\",\n            \"Apr\",\n            \"May\",\n            \"Jun\",\n            \"Jul\",\n            \"Aug\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\",\n        ],\n        longhand: [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\",\n        ],\n    },\n    daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n    firstDayOfWeek: 0,\n    ordinal: (nth) => {\n        const s = nth % 100;\n        if (s > 3 && s < 21)\n            return \"th\";\n        switch (s % 10) {\n            case 1:\n                return \"st\";\n            case 2:\n                return \"nd\";\n            case 3:\n                return \"rd\";\n            default:\n                return \"th\";\n        }\n    },\n    rangeSeparator: \" to \",\n    weekAbbreviation: \"Wk\",\n    scrollTitle: \"Scroll to increment\",\n    toggleTitle: \"Click to toggle\",\n    amPM: [\"AM\", \"PM\"],\n    yearAriaLabel: \"Year\",\n    monthAriaLabel: \"Month\",\n    hourAriaLabel: \"Hour\",\n    minuteAriaLabel: \"Minute\",\n    time_24hr: false,\n};\nexport default english;\n","export const pad = (number, length = 2) => `000${number}`.slice(length * -1);\nexport const int = (bool) => (bool === true ? 1 : 0);\nexport function debounce(fn, wait) {\n    let t;\n    return function () {\n        clearTimeout(t);\n        t = setTimeout(() => fn.apply(this, arguments), wait);\n    };\n}\nexport const arrayify = (obj) => obj instanceof Array ? obj : [obj];\n","export function toggleClass(elem, className, bool) {\n    if (bool === true)\n        return elem.classList.add(className);\n    elem.classList.remove(className);\n}\nexport function createElement(tag, className, content) {\n    const e = window.document.createElement(tag);\n    className = className || \"\";\n    content = content || \"\";\n    e.className = className;\n    if (content !== undefined)\n        e.textContent = content;\n    return e;\n}\nexport function clearNode(node) {\n    while (node.firstChild)\n        node.removeChild(node.firstChild);\n}\nexport function findParent(node, condition) {\n    if (condition(node))\n        return node;\n    else if (node.parentNode)\n        return findParent(node.parentNode, condition);\n    return undefined;\n}\nexport function createNumberInput(inputClassName, opts) {\n    const wrapper = createElement(\"div\", \"numInputWrapper\"), numInput = createElement(\"input\", \"numInput \" + inputClassName), arrowUp = createElement(\"span\", \"arrowUp\"), arrowDown = createElement(\"span\", \"arrowDown\");\n    if (navigator.userAgent.indexOf(\"MSIE 9.0\") === -1) {\n        numInput.type = \"number\";\n    }\n    else {\n        numInput.type = \"text\";\n        numInput.pattern = \"\\\\d*\";\n    }\n    if (opts !== undefined)\n        for (const key in opts)\n            numInput.setAttribute(key, opts[key]);\n    wrapper.appendChild(numInput);\n    wrapper.appendChild(arrowUp);\n    wrapper.appendChild(arrowDown);\n    return wrapper;\n}\nexport function getEventTarget(event) {\n    try {\n        if (typeof event.composedPath === \"function\") {\n            const path = event.composedPath();\n            return path[0];\n        }\n        return event.target;\n    }\n    catch (error) {\n        return event.target;\n    }\n}\n","import { int, pad } from \"../utils\";\nconst doNothing = () => undefined;\nexport const monthToStr = (monthNumber, shorthand, locale) => locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber];\nexport const revFormat = {\n    D: doNothing,\n    F: function (dateObj, monthName, locale) {\n        dateObj.setMonth(locale.months.longhand.indexOf(monthName));\n    },\n    G: (dateObj, hour) => {\n        dateObj.setHours(parseFloat(hour));\n    },\n    H: (dateObj, hour) => {\n        dateObj.setHours(parseFloat(hour));\n    },\n    J: (dateObj, day) => {\n        dateObj.setDate(parseFloat(day));\n    },\n    K: (dateObj, amPM, locale) => {\n        dateObj.setHours((dateObj.getHours() % 12) +\n            12 * int(new RegExp(locale.amPM[1], \"i\").test(amPM)));\n    },\n    M: function (dateObj, shortMonth, locale) {\n        dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\n    },\n    S: (dateObj, seconds) => {\n        dateObj.setSeconds(parseFloat(seconds));\n    },\n    U: (_, unixSeconds) => new Date(parseFloat(unixSeconds) * 1000),\n    W: function (dateObj, weekNum, locale) {\n        const weekNumber = parseInt(weekNum);\n        const date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\n        date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);\n        return date;\n    },\n    Y: (dateObj, year) => {\n        dateObj.setFullYear(parseFloat(year));\n    },\n    Z: (_, ISODate) => new Date(ISODate),\n    d: (dateObj, day) => {\n        dateObj.setDate(parseFloat(day));\n    },\n    h: (dateObj, hour) => {\n        dateObj.setHours(parseFloat(hour));\n    },\n    i: (dateObj, minutes) => {\n        dateObj.setMinutes(parseFloat(minutes));\n    },\n    j: (dateObj, day) => {\n        dateObj.setDate(parseFloat(day));\n    },\n    l: doNothing,\n    m: (dateObj, month) => {\n        dateObj.setMonth(parseFloat(month) - 1);\n    },\n    n: (dateObj, month) => {\n        dateObj.setMonth(parseFloat(month) - 1);\n    },\n    s: (dateObj, seconds) => {\n        dateObj.setSeconds(parseFloat(seconds));\n    },\n    u: (_, unixMillSeconds) => new Date(parseFloat(unixMillSeconds)),\n    w: doNothing,\n    y: (dateObj, year) => {\n        dateObj.setFullYear(2000 + parseFloat(year));\n    },\n};\nexport const tokenRegex = {\n    D: \"(\\\\w+)\",\n    F: \"(\\\\w+)\",\n    G: \"(\\\\d\\\\d|\\\\d)\",\n    H: \"(\\\\d\\\\d|\\\\d)\",\n    J: \"(\\\\d\\\\d|\\\\d)\\\\w+\",\n    K: \"\",\n    M: \"(\\\\w+)\",\n    S: \"(\\\\d\\\\d|\\\\d)\",\n    U: \"(.+)\",\n    W: \"(\\\\d\\\\d|\\\\d)\",\n    Y: \"(\\\\d{4})\",\n    Z: \"(.+)\",\n    d: \"(\\\\d\\\\d|\\\\d)\",\n    h: \"(\\\\d\\\\d|\\\\d)\",\n    i: \"(\\\\d\\\\d|\\\\d)\",\n    j: \"(\\\\d\\\\d|\\\\d)\",\n    l: \"(\\\\w+)\",\n    m: \"(\\\\d\\\\d|\\\\d)\",\n    n: \"(\\\\d\\\\d|\\\\d)\",\n    s: \"(\\\\d\\\\d|\\\\d)\",\n    u: \"(.+)\",\n    w: \"(\\\\d\\\\d|\\\\d)\",\n    y: \"(\\\\d{2})\",\n};\nexport const formats = {\n    Z: (date) => date.toISOString(),\n    D: function (date, locale, options) {\n        return locale.weekdays.shorthand[formats.w(date, locale, options)];\n    },\n    F: function (date, locale, options) {\n        return monthToStr(formats.n(date, locale, options) - 1, false, locale);\n    },\n    G: function (date, locale, options) {\n        return pad(formats.h(date, locale, options));\n    },\n    H: (date) => pad(date.getHours()),\n    J: function (date, locale) {\n        return locale.ordinal !== undefined\n            ? date.getDate() + locale.ordinal(date.getDate())\n            : date.getDate();\n    },\n    K: (date, locale) => locale.amPM[int(date.getHours() > 11)],\n    M: function (date, locale) {\n        return monthToStr(date.getMonth(), true, locale);\n    },\n    S: (date) => pad(date.getSeconds()),\n    U: (date) => date.getTime() / 1000,\n    W: function (date, _, options) {\n        return options.getWeek(date);\n    },\n    Y: (date) => pad(date.getFullYear(), 4),\n    d: (date) => pad(date.getDate()),\n    h: (date) => (date.getHours() % 12 ? date.getHours() % 12 : 12),\n    i: (date) => pad(date.getMinutes()),\n    j: (date) => date.getDate(),\n    l: function (date, locale) {\n        return locale.weekdays.longhand[date.getDay()];\n    },\n    m: (date) => pad(date.getMonth() + 1),\n    n: (date) => date.getMonth() + 1,\n    s: (date) => date.getSeconds(),\n    u: (date) => date.getTime(),\n    w: (date) => date.getDay(),\n    y: (date) => String(date.getFullYear()).substring(2),\n};\n","import { tokenRegex, revFormat, formats, } from \"./formatting\";\nimport { defaults } from \"../types/options\";\nimport { english } from \"../l10n/default\";\nexport const createDateFormatter = ({ config = defaults, l10n = english, isMobile = false, }) => (dateObj, frmt, overrideLocale) => {\n    const locale = overrideLocale || l10n;\n    if (config.formatDate !== undefined && !isMobile) {\n        return config.formatDate(dateObj, frmt, locale);\n    }\n    return frmt\n        .split(\"\")\n        .map((c, i, arr) => formats[c] && arr[i - 1] !== \"\\\\\"\n        ? formats[c](dateObj, locale, config)\n        : c !== \"\\\\\"\n            ? c\n            : \"\")\n        .join(\"\");\n};\nexport const createDateParser = ({ config = defaults, l10n = english }) => (date, givenFormat, timeless, customLocale) => {\n    if (date !== 0 && !date)\n        return undefined;\n    const locale = customLocale || l10n;\n    let parsedDate;\n    const dateOrig = date;\n    if (date instanceof Date)\n        parsedDate = new Date(date.getTime());\n    else if (typeof date !== \"string\" &&\n        date.toFixed !== undefined)\n        parsedDate = new Date(date);\n    else if (typeof date === \"string\") {\n        const format = givenFormat || (config || defaults).dateFormat;\n        const datestr = String(date).trim();\n        if (datestr === \"today\") {\n            parsedDate = new Date();\n            timeless = true;\n        }\n        else if (/Z$/.test(datestr) ||\n            /GMT$/.test(datestr))\n            parsedDate = new Date(date);\n        else if (config && config.parseDate)\n            parsedDate = config.parseDate(date, format);\n        else {\n            parsedDate =\n                !config || !config.noCalendar\n                    ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0)\n                    : new Date(new Date().setHours(0, 0, 0, 0));\n            let matched, ops = [];\n            for (let i = 0, matchIndex = 0, regexStr = \"\"; i < format.length; i++) {\n                const token = format[i];\n                const isBackSlash = token === \"\\\\\";\n                const escaped = format[i - 1] === \"\\\\\" || isBackSlash;\n                if (tokenRegex[token] && !escaped) {\n                    regexStr += tokenRegex[token];\n                    const match = new RegExp(regexStr).exec(date);\n                    if (match && (matched = true)) {\n                        ops[token !== \"Y\" ? \"push\" : \"unshift\"]({\n                            fn: revFormat[token],\n                            val: match[++matchIndex],\n                        });\n                    }\n                }\n                else if (!isBackSlash)\n                    regexStr += \".\";\n                ops.forEach(({ fn, val }) => (parsedDate = fn(parsedDate, val, locale) || parsedDate));\n            }\n            parsedDate = matched ? parsedDate : undefined;\n        }\n    }\n    if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {\n        config.errorHandler(new Error(`Invalid date provided: ${dateOrig}`));\n        return undefined;\n    }\n    if (timeless === true)\n        parsedDate.setHours(0, 0, 0, 0);\n    return parsedDate;\n};\nexport function compareDates(date1, date2, timeless = true) {\n    if (timeless !== false) {\n        return (new Date(date1.getTime()).setHours(0, 0, 0, 0) -\n            new Date(date2.getTime()).setHours(0, 0, 0, 0));\n    }\n    return date1.getTime() - date2.getTime();\n}\nexport function compareTimes(date1, date2) {\n    return (3600 * (date1.getHours() - date2.getHours()) +\n        60 * (date1.getMinutes() - date2.getMinutes()) +\n        date1.getSeconds() -\n        date2.getSeconds());\n}\nexport const isBetween = (ts, ts1, ts2) => {\n    return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);\n};\nexport const duration = {\n    DAY: 86400000,\n};\nexport function getDefaultHours(config) {\n    let hours = config.defaultHour;\n    let minutes = config.defaultMinute;\n    let seconds = config.defaultSeconds;\n    if (config.minDate !== undefined) {\n        const minHour = config.minDate.getHours();\n        const minMinutes = config.minDate.getMinutes();\n        const minSeconds = config.minDate.getSeconds();\n        if (hours < minHour) {\n            hours = minHour;\n        }\n        if (hours === minHour && minutes < minMinutes) {\n            minutes = minMinutes;\n        }\n        if (hours === minHour && minutes === minMinutes && seconds < minSeconds)\n            seconds = config.minDate.getSeconds();\n    }\n    if (config.maxDate !== undefined) {\n        const maxHr = config.maxDate.getHours();\n        const maxMinutes = config.maxDate.getMinutes();\n        hours = Math.min(hours, maxHr);\n        if (hours === maxHr)\n            minutes = Math.min(maxMinutes, minutes);\n        if (hours === maxHr && minutes === maxMinutes)\n            seconds = config.maxDate.getSeconds();\n    }\n    return { hours, minutes, seconds };\n}\n","import { defaults as defaultOptions, HOOKS, } from \"./types/options\";\nimport English from \"./l10n/default\";\nimport { arrayify, debounce, int, pad } from \"./utils\";\nimport { clearNode, createElement, createNumberInput, findParent, toggleClass, getEventTarget, } from \"./utils/dom\";\nimport { compareDates, createDateParser, createDateFormatter, duration, isBetween, getDefaultHours, } from \"./utils/dates\";\nimport { tokenRegex, monthToStr } from \"./utils/formatting\";\nimport \"./utils/polyfills\";\nconst DEBOUNCED_CHANGE_MS = 300;\nfunction FlatpickrInstance(element, instanceConfig) {\n    const self = {\n        config: Object.assign(Object.assign({}, defaultOptions), flatpickr.defaultConfig),\n        l10n: English,\n    };\n    self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\n    self._handlers = [];\n    self.pluginElements = [];\n    self.loadedPlugins = [];\n    self._bind = bind;\n    self._setHoursFromDate = setHoursFromDate;\n    self._positionCalendar = positionCalendar;\n    self.changeMonth = changeMonth;\n    self.changeYear = changeYear;\n    self.clear = clear;\n    self.close = close;\n    self._createElement = createElement;\n    self.destroy = destroy;\n    self.isEnabled = isEnabled;\n    self.jumpToDate = jumpToDate;\n    self.open = open;\n    self.redraw = redraw;\n    self.set = set;\n    self.setDate = setDate;\n    self.toggle = toggle;\n    function setupHelperFunctions() {\n        self.utils = {\n            getDaysInMonth(month = self.currentMonth, yr = self.currentYear) {\n                if (month === 1 && ((yr % 4 === 0 && yr % 100 !== 0) || yr % 400 === 0))\n                    return 29;\n                return self.l10n.daysInMonth[month];\n            },\n        };\n    }\n    function init() {\n        self.element = self.input = element;\n        self.isOpen = false;\n        parseConfig();\n        setupLocale();\n        setupInputs();\n        setupDates();\n        setupHelperFunctions();\n        if (!self.isMobile)\n            build();\n        bindEvents();\n        if (self.selectedDates.length || self.config.noCalendar) {\n            if (self.config.enableTime) {\n                setHoursFromDate(self.config.noCalendar ? self.latestSelectedDateObj : undefined);\n            }\n            updateValue(false);\n        }\n        setCalendarWidth();\n        const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n        if (!self.isMobile && isSafari) {\n            positionCalendar();\n        }\n        triggerEvent(\"onReady\");\n    }\n    function bindToInstance(fn) {\n        return fn.bind(self);\n    }\n    function setCalendarWidth() {\n        const config = self.config;\n        if (config.weekNumbers === false && config.showMonths === 1) {\n            return;\n        }\n        else if (config.noCalendar !== true) {\n            window.requestAnimationFrame(function () {\n                if (self.calendarContainer !== undefined) {\n                    self.calendarContainer.style.visibility = \"hidden\";\n                    self.calendarContainer.style.display = \"block\";\n                }\n                if (self.daysContainer !== undefined) {\n                    const daysWidth = (self.days.offsetWidth + 1) * config.showMonths;\n                    self.daysContainer.style.width = daysWidth + \"px\";\n                    self.calendarContainer.style.width =\n                        daysWidth +\n                            (self.weekWrapper !== undefined\n                                ? self.weekWrapper.offsetWidth\n                                : 0) +\n                            \"px\";\n                    self.calendarContainer.style.removeProperty(\"visibility\");\n                    self.calendarContainer.style.removeProperty(\"display\");\n                }\n            });\n        }\n    }\n    function updateTime(e) {\n        if (self.selectedDates.length === 0) {\n            const defaultDate = self.config.minDate === undefined ||\n                compareDates(new Date(), self.config.minDate) >= 0\n                ? new Date()\n                : new Date(self.config.minDate.getTime());\n            const defaults = getDefaultHours(self.config);\n            defaultDate.setHours(defaults.hours, defaults.minutes, defaults.seconds, defaultDate.getMilliseconds());\n            self.selectedDates = [defaultDate];\n            self.latestSelectedDateObj = defaultDate;\n        }\n        if (e !== undefined && e.type !== \"blur\") {\n            timeWrapper(e);\n        }\n        const prevValue = self._input.value;\n        setHoursFromInputs();\n        updateValue();\n        if (self._input.value !== prevValue) {\n            self._debouncedChange();\n        }\n    }\n    function ampm2military(hour, amPM) {\n        return (hour % 12) + 12 * int(amPM === self.l10n.amPM[1]);\n    }\n    function military2ampm(hour) {\n        switch (hour % 24) {\n            case 0:\n            case 12:\n                return 12;\n            default:\n                return hour % 12;\n        }\n    }\n    function setHoursFromInputs() {\n        if (self.hourElement === undefined || self.minuteElement === undefined)\n            return;\n        let hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24, minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60, seconds = self.secondElement !== undefined\n            ? (parseInt(self.secondElement.value, 10) || 0) % 60\n            : 0;\n        if (self.amPM !== undefined) {\n            hours = ampm2military(hours, self.amPM.textContent);\n        }\n        const limitMinHours = self.config.minTime !== undefined ||\n            (self.config.minDate &&\n                self.minDateHasTime &&\n                self.latestSelectedDateObj &&\n                compareDates(self.latestSelectedDateObj, self.config.minDate, true) ===\n                    0);\n        const limitMaxHours = self.config.maxTime !== undefined ||\n            (self.config.maxDate &&\n                self.maxDateHasTime &&\n                self.latestSelectedDateObj &&\n                compareDates(self.latestSelectedDateObj, self.config.maxDate, true) ===\n                    0);\n        if (limitMaxHours) {\n            const maxTime = self.config.maxTime !== undefined\n                ? self.config.maxTime\n                : self.config.maxDate;\n            hours = Math.min(hours, maxTime.getHours());\n            if (hours === maxTime.getHours())\n                minutes = Math.min(minutes, maxTime.getMinutes());\n            if (minutes === maxTime.getMinutes())\n                seconds = Math.min(seconds, maxTime.getSeconds());\n        }\n        if (limitMinHours) {\n            const minTime = self.config.minTime !== undefined\n                ? self.config.minTime\n                : self.config.minDate;\n            hours = Math.max(hours, minTime.getHours());\n            if (hours === minTime.getHours() && minutes < minTime.getMinutes())\n                minutes = minTime.getMinutes();\n            if (minutes === minTime.getMinutes())\n                seconds = Math.max(seconds, minTime.getSeconds());\n        }\n        setHours(hours, minutes, seconds);\n    }\n    function setHoursFromDate(dateObj) {\n        const date = dateObj || self.latestSelectedDateObj;\n        if (date) {\n            setHours(date.getHours(), date.getMinutes(), date.getSeconds());\n        }\n    }\n    function setHours(hours, minutes, seconds) {\n        if (self.latestSelectedDateObj !== undefined) {\n            self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);\n        }\n        if (!self.hourElement || !self.minuteElement || self.isMobile)\n            return;\n        self.hourElement.value = pad(!self.config.time_24hr\n            ? ((12 + hours) % 12) + 12 * int(hours % 12 === 0)\n            : hours);\n        self.minuteElement.value = pad(minutes);\n        if (self.amPM !== undefined)\n            self.amPM.textContent = self.l10n.amPM[int(hours >= 12)];\n        if (self.secondElement !== undefined)\n            self.secondElement.value = pad(seconds);\n    }\n    function onYearInput(event) {\n        const eventTarget = getEventTarget(event);\n        const year = parseInt(eventTarget.value) + (event.delta || 0);\n        if (year / 1000 > 1 ||\n            (event.key === \"Enter\" && !/[^\\d]/.test(year.toString()))) {\n            changeYear(year);\n        }\n    }\n    function bind(element, event, handler, options) {\n        if (event instanceof Array)\n            return event.forEach((ev) => bind(element, ev, handler, options));\n        if (element instanceof Array)\n            return element.forEach((el) => bind(el, event, handler, options));\n        element.addEventListener(event, handler, options);\n        self._handlers.push({\n            remove: () => element.removeEventListener(event, handler),\n        });\n    }\n    function triggerChange() {\n        triggerEvent(\"onChange\");\n    }\n    function bindEvents() {\n        if (self.config.wrap) {\n            [\"open\", \"close\", \"toggle\", \"clear\"].forEach((evt) => {\n                Array.prototype.forEach.call(self.element.querySelectorAll(`[data-${evt}]`), (el) => bind(el, \"click\", self[evt]));\n            });\n        }\n        if (self.isMobile) {\n            setupMobile();\n            return;\n        }\n        const debouncedResize = debounce(onResize, 50);\n        self._debouncedChange = debounce(triggerChange, DEBOUNCED_CHANGE_MS);\n        if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent))\n            bind(self.daysContainer, \"mouseover\", (e) => {\n                if (self.config.mode === \"range\")\n                    onMouseOver(getEventTarget(e));\n            });\n        bind(window.document.body, \"keydown\", onKeyDown);\n        if (!self.config.inline && !self.config.static)\n            bind(window, \"resize\", debouncedResize);\n        if (window.ontouchstart !== undefined)\n            bind(window.document, \"touchstart\", documentClick);\n        else\n            bind(window.document, \"mousedown\", documentClick);\n        bind(window.document, \"focus\", documentClick, { capture: true });\n        if (self.config.clickOpens === true) {\n            bind(self._input, \"focus\", self.open);\n            bind(self._input, \"click\", self.open);\n        }\n        if (self.daysContainer !== undefined) {\n            bind(self.monthNav, \"click\", onMonthNavClick);\n            bind(self.monthNav, [\"keyup\", \"increment\"], onYearInput);\n            bind(self.daysContainer, \"click\", selectDate);\n        }\n        if (self.timeContainer !== undefined &&\n            self.minuteElement !== undefined &&\n            self.hourElement !== undefined) {\n            const selText = (e) => getEventTarget(e).select();\n            bind(self.timeContainer, [\"increment\"], updateTime);\n            bind(self.timeContainer, \"blur\", updateTime, { capture: true });\n            bind(self.timeContainer, \"click\", timeIncrement);\n            bind([self.hourElement, self.minuteElement], [\"focus\", \"click\"], selText);\n            if (self.secondElement !== undefined)\n                bind(self.secondElement, \"focus\", () => self.secondElement && self.secondElement.select());\n            if (self.amPM !== undefined) {\n                bind(self.amPM, \"click\", (e) => {\n                    updateTime(e);\n                    triggerChange();\n                });\n            }\n        }\n        if (self.config.allowInput) {\n            bind(self._input, \"blur\", onBlur);\n        }\n    }\n    function jumpToDate(jumpDate, triggerChange) {\n        const jumpTo = jumpDate !== undefined\n            ? self.parseDate(jumpDate)\n            : self.latestSelectedDateObj ||\n                (self.config.minDate && self.config.minDate > self.now\n                    ? self.config.minDate\n                    : self.config.maxDate && self.config.maxDate < self.now\n                        ? self.config.maxDate\n                        : self.now);\n        const oldYear = self.currentYear;\n        const oldMonth = self.currentMonth;\n        try {\n            if (jumpTo !== undefined) {\n                self.currentYear = jumpTo.getFullYear();\n                self.currentMonth = jumpTo.getMonth();\n            }\n        }\n        catch (e) {\n            e.message = \"Invalid date supplied: \" + jumpTo;\n            self.config.errorHandler(e);\n        }\n        if (triggerChange && self.currentYear !== oldYear) {\n            triggerEvent(\"onYearChange\");\n            buildMonthSwitch();\n        }\n        if (triggerChange &&\n            (self.currentYear !== oldYear || self.currentMonth !== oldMonth)) {\n            triggerEvent(\"onMonthChange\");\n        }\n        self.redraw();\n    }\n    function timeIncrement(e) {\n        const eventTarget = getEventTarget(e);\n        if (~eventTarget.className.indexOf(\"arrow\"))\n            incrementNumInput(e, eventTarget.classList.contains(\"arrowUp\") ? 1 : -1);\n    }\n    function incrementNumInput(e, delta, inputElem) {\n        const target = e && getEventTarget(e);\n        const input = inputElem ||\n            (target && target.parentNode && target.parentNode.firstChild);\n        const event = createEvent(\"increment\");\n        event.delta = delta;\n        input && input.dispatchEvent(event);\n    }\n    function build() {\n        const fragment = window.document.createDocumentFragment();\n        self.calendarContainer = createElement(\"div\", \"flatpickr-calendar\");\n        self.calendarContainer.tabIndex = -1;\n        if (!self.config.noCalendar) {\n            fragment.appendChild(buildMonthNav());\n            self.innerContainer = createElement(\"div\", \"flatpickr-innerContainer\");\n            if (self.config.weekNumbers) {\n                const { weekWrapper, weekNumbers } = buildWeeks();\n                self.innerContainer.appendChild(weekWrapper);\n                self.weekNumbers = weekNumbers;\n                self.weekWrapper = weekWrapper;\n            }\n            self.rContainer = createElement(\"div\", \"flatpickr-rContainer\");\n            self.rContainer.appendChild(buildWeekdays());\n            if (!self.daysContainer) {\n                self.daysContainer = createElement(\"div\", \"flatpickr-days\");\n                self.daysContainer.tabIndex = -1;\n            }\n            buildDays();\n            self.rContainer.appendChild(self.daysContainer);\n            self.innerContainer.appendChild(self.rContainer);\n            fragment.appendChild(self.innerContainer);\n        }\n        if (self.config.enableTime) {\n            fragment.appendChild(buildTime());\n        }\n        toggleClass(self.calendarContainer, \"rangeMode\", self.config.mode === \"range\");\n        toggleClass(self.calendarContainer, \"animate\", self.config.animate === true);\n        toggleClass(self.calendarContainer, \"multiMonth\", self.config.showMonths > 1);\n        self.calendarContainer.appendChild(fragment);\n        const customAppend = self.config.appendTo !== undefined &&\n            self.config.appendTo.nodeType !== undefined;\n        if (self.config.inline || self.config.static) {\n            self.calendarContainer.classList.add(self.config.inline ? \"inline\" : \"static\");\n            if (self.config.inline) {\n                if (!customAppend && self.element.parentNode)\n                    self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);\n                else if (self.config.appendTo !== undefined)\n                    self.config.appendTo.appendChild(self.calendarContainer);\n            }\n            if (self.config.static) {\n                const wrapper = createElement(\"div\", \"flatpickr-wrapper\");\n                if (self.element.parentNode)\n                    self.element.parentNode.insertBefore(wrapper, self.element);\n                wrapper.appendChild(self.element);\n                if (self.altInput)\n                    wrapper.appendChild(self.altInput);\n                wrapper.appendChild(self.calendarContainer);\n            }\n        }\n        if (!self.config.static && !self.config.inline)\n            (self.config.appendTo !== undefined\n                ? self.config.appendTo\n                : window.document.body).appendChild(self.calendarContainer);\n    }\n    function createDay(className, date, dayNumber, i) {\n        const dateIsEnabled = isEnabled(date, true), dayElement = createElement(\"span\", \"flatpickr-day \" + className, date.getDate().toString());\n        dayElement.dateObj = date;\n        dayElement.$i = i;\n        dayElement.setAttribute(\"aria-label\", self.formatDate(date, self.config.ariaDateFormat));\n        if (className.indexOf(\"hidden\") === -1 &&\n            compareDates(date, self.now) === 0) {\n            self.todayDateElem = dayElement;\n            dayElement.classList.add(\"today\");\n            dayElement.setAttribute(\"aria-current\", \"date\");\n        }\n        if (dateIsEnabled) {\n            dayElement.tabIndex = -1;\n            if (isDateSelected(date)) {\n                dayElement.classList.add(\"selected\");\n                self.selectedDateElem = dayElement;\n                if (self.config.mode === \"range\") {\n                    toggleClass(dayElement, \"startRange\", self.selectedDates[0] &&\n                        compareDates(date, self.selectedDates[0], true) === 0);\n                    toggleClass(dayElement, \"endRange\", self.selectedDates[1] &&\n                        compareDates(date, self.selectedDates[1], true) === 0);\n                    if (className === \"nextMonthDay\")\n                        dayElement.classList.add(\"inRange\");\n                }\n            }\n        }\n        else {\n            dayElement.classList.add(\"flatpickr-disabled\");\n        }\n        if (self.config.mode === \"range\") {\n            if (isDateInRange(date) && !isDateSelected(date))\n                dayElement.classList.add(\"inRange\");\n        }\n        if (self.weekNumbers &&\n            self.config.showMonths === 1 &&\n            className !== \"prevMonthDay\" &&\n            dayNumber % 7 === 1) {\n            self.weekNumbers.insertAdjacentHTML(\"beforeend\", \"<span class='flatpickr-day'>\" + self.config.getWeek(date) + \"</span>\");\n        }\n        triggerEvent(\"onDayCreate\", dayElement);\n        return dayElement;\n    }\n    function focusOnDayElem(targetNode) {\n        targetNode.focus();\n        if (self.config.mode === \"range\")\n            onMouseOver(targetNode);\n    }\n    function getFirstAvailableDay(delta) {\n        const startMonth = delta > 0 ? 0 : self.config.showMonths - 1;\n        const endMonth = delta > 0 ? self.config.showMonths : -1;\n        for (let m = startMonth; m != endMonth; m += delta) {\n            const month = self.daysContainer.children[m];\n            const startIndex = delta > 0 ? 0 : month.children.length - 1;\n            const endIndex = delta > 0 ? month.children.length : -1;\n            for (let i = startIndex; i != endIndex; i += delta) {\n                const c = month.children[i];\n                if (c.className.indexOf(\"hidden\") === -1 && isEnabled(c.dateObj))\n                    return c;\n            }\n        }\n        return undefined;\n    }\n    function getNextAvailableDay(current, delta) {\n        const givenMonth = current.className.indexOf(\"Month\") === -1\n            ? current.dateObj.getMonth()\n            : self.currentMonth;\n        const endMonth = delta > 0 ? self.config.showMonths : -1;\n        const loopDelta = delta > 0 ? 1 : -1;\n        for (let m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta) {\n            const month = self.daysContainer.children[m];\n            const startIndex = givenMonth - self.currentMonth === m\n                ? current.$i + delta\n                : delta < 0\n                    ? month.children.length - 1\n                    : 0;\n            const numMonthDays = month.children.length;\n            for (let i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {\n                const c = month.children[i];\n                if (c.className.indexOf(\"hidden\") === -1 &&\n                    isEnabled(c.dateObj) &&\n                    Math.abs(current.$i - i) >= Math.abs(delta))\n                    return focusOnDayElem(c);\n            }\n        }\n        self.changeMonth(loopDelta);\n        focusOnDay(getFirstAvailableDay(loopDelta), 0);\n        return undefined;\n    }\n    function focusOnDay(current, offset) {\n        const dayFocused = isInView(document.activeElement || document.body);\n        const startElem = current !== undefined\n            ? current\n            : dayFocused\n                ? document.activeElement\n                : self.selectedDateElem !== undefined && isInView(self.selectedDateElem)\n                    ? self.selectedDateElem\n                    : self.todayDateElem !== undefined && isInView(self.todayDateElem)\n                        ? self.todayDateElem\n                        : getFirstAvailableDay(offset > 0 ? 1 : -1);\n        if (startElem === undefined) {\n            self._input.focus();\n        }\n        else if (!dayFocused) {\n            focusOnDayElem(startElem);\n        }\n        else {\n            getNextAvailableDay(startElem, offset);\n        }\n    }\n    function buildMonthDays(year, month) {\n        const firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;\n        const prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12, year);\n        const daysInMonth = self.utils.getDaysInMonth(month, year), days = window.document.createDocumentFragment(), isMultiMonth = self.config.showMonths > 1, prevMonthDayClass = isMultiMonth ? \"prevMonthDay hidden\" : \"prevMonthDay\", nextMonthDayClass = isMultiMonth ? \"nextMonthDay hidden\" : \"nextMonthDay\";\n        let dayNumber = prevMonthDays + 1 - firstOfMonth, dayIndex = 0;\n        for (; dayNumber <= prevMonthDays; dayNumber++, dayIndex++) {\n            days.appendChild(createDay(prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));\n        }\n        for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++) {\n            days.appendChild(createDay(\"\", new Date(year, month, dayNumber), dayNumber, dayIndex));\n        }\n        for (let dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth &&\n            (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++, dayIndex++) {\n            days.appendChild(createDay(nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));\n        }\n        const dayContainer = createElement(\"div\", \"dayContainer\");\n        dayContainer.appendChild(days);\n        return dayContainer;\n    }\n    function buildDays() {\n        if (self.daysContainer === undefined) {\n            return;\n        }\n        clearNode(self.daysContainer);\n        if (self.weekNumbers)\n            clearNode(self.weekNumbers);\n        const frag = document.createDocumentFragment();\n        for (let i = 0; i < self.config.showMonths; i++) {\n            const d = new Date(self.currentYear, self.currentMonth, 1);\n            d.setMonth(self.currentMonth + i);\n            frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));\n        }\n        self.daysContainer.appendChild(frag);\n        self.days = self.daysContainer.firstChild;\n        if (self.config.mode === \"range\" && self.selectedDates.length === 1) {\n            onMouseOver();\n        }\n    }\n    function buildMonthSwitch() {\n        if (self.config.showMonths > 1 ||\n            self.config.monthSelectorType !== \"dropdown\")\n            return;\n        const shouldBuildMonth = function (month) {\n            if (self.config.minDate !== undefined &&\n                self.currentYear === self.config.minDate.getFullYear() &&\n                month < self.config.minDate.getMonth()) {\n                return false;\n            }\n            return !(self.config.maxDate !== undefined &&\n                self.currentYear === self.config.maxDate.getFullYear() &&\n                month > self.config.maxDate.getMonth());\n        };\n        self.monthsDropdownContainer.tabIndex = -1;\n        self.monthsDropdownContainer.innerHTML = \"\";\n        for (let i = 0; i < 12; i++) {\n            if (!shouldBuildMonth(i))\n                continue;\n            const month = createElement(\"option\", \"flatpickr-monthDropdown-month\");\n            month.value = new Date(self.currentYear, i).getMonth().toString();\n            month.textContent = monthToStr(i, self.config.shorthandCurrentMonth, self.l10n);\n            month.tabIndex = -1;\n            if (self.currentMonth === i) {\n                month.selected = true;\n            }\n            self.monthsDropdownContainer.appendChild(month);\n        }\n    }\n    function buildMonth() {\n        const container = createElement(\"div\", \"flatpickr-month\");\n        const monthNavFragment = window.document.createDocumentFragment();\n        let monthElement;\n        if (self.config.showMonths > 1 ||\n            self.config.monthSelectorType === \"static\") {\n            monthElement = createElement(\"span\", \"cur-month\");\n        }\n        else {\n            self.monthsDropdownContainer = createElement(\"select\", \"flatpickr-monthDropdown-months\");\n            self.monthsDropdownContainer.setAttribute(\"aria-label\", self.l10n.monthAriaLabel);\n            bind(self.monthsDropdownContainer, \"change\", (e) => {\n                const target = getEventTarget(e);\n                const selectedMonth = parseInt(target.value, 10);\n                self.changeMonth(selectedMonth - self.currentMonth);\n                triggerEvent(\"onMonthChange\");\n            });\n            buildMonthSwitch();\n            monthElement = self.monthsDropdownContainer;\n        }\n        const yearInput = createNumberInput(\"cur-year\", { tabindex: \"-1\" });\n        const yearElement = yearInput.getElementsByTagName(\"input\")[0];\n        yearElement.setAttribute(\"aria-label\", self.l10n.yearAriaLabel);\n        if (self.config.minDate) {\n            yearElement.setAttribute(\"min\", self.config.minDate.getFullYear().toString());\n        }\n        if (self.config.maxDate) {\n            yearElement.setAttribute(\"max\", self.config.maxDate.getFullYear().toString());\n            yearElement.disabled =\n                !!self.config.minDate &&\n                    self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();\n        }\n        const currentMonth = createElement(\"div\", \"flatpickr-current-month\");\n        currentMonth.appendChild(monthElement);\n        currentMonth.appendChild(yearInput);\n        monthNavFragment.appendChild(currentMonth);\n        container.appendChild(monthNavFragment);\n        return {\n            container,\n            yearElement,\n            monthElement,\n        };\n    }\n    function buildMonths() {\n        clearNode(self.monthNav);\n        self.monthNav.appendChild(self.prevMonthNav);\n        if (self.config.showMonths) {\n            self.yearElements = [];\n            self.monthElements = [];\n        }\n        for (let m = self.config.showMonths; m--;) {\n            const month = buildMonth();\n            self.yearElements.push(month.yearElement);\n            self.monthElements.push(month.monthElement);\n            self.monthNav.appendChild(month.container);\n        }\n        self.monthNav.appendChild(self.nextMonthNav);\n    }\n    function buildMonthNav() {\n        self.monthNav = createElement(\"div\", \"flatpickr-months\");\n        self.yearElements = [];\n        self.monthElements = [];\n        self.prevMonthNav = createElement(\"span\", \"flatpickr-prev-month\");\n        self.prevMonthNav.innerHTML = self.config.prevArrow;\n        self.nextMonthNav = createElement(\"span\", \"flatpickr-next-month\");\n        self.nextMonthNav.innerHTML = self.config.nextArrow;\n        buildMonths();\n        Object.defineProperty(self, \"_hidePrevMonthArrow\", {\n            get: () => self.__hidePrevMonthArrow,\n            set(bool) {\n                if (self.__hidePrevMonthArrow !== bool) {\n                    toggleClass(self.prevMonthNav, \"flatpickr-disabled\", bool);\n                    self.__hidePrevMonthArrow = bool;\n                }\n            },\n        });\n        Object.defineProperty(self, \"_hideNextMonthArrow\", {\n            get: () => self.__hideNextMonthArrow,\n            set(bool) {\n                if (self.__hideNextMonthArrow !== bool) {\n                    toggleClass(self.nextMonthNav, \"flatpickr-disabled\", bool);\n                    self.__hideNextMonthArrow = bool;\n                }\n            },\n        });\n        self.currentYearElement = self.yearElements[0];\n        updateNavigationCurrentMonth();\n        return self.monthNav;\n    }\n    function buildTime() {\n        self.calendarContainer.classList.add(\"hasTime\");\n        if (self.config.noCalendar)\n            self.calendarContainer.classList.add(\"noCalendar\");\n        const defaults = getDefaultHours(self.config);\n        self.timeContainer = createElement(\"div\", \"flatpickr-time\");\n        self.timeContainer.tabIndex = -1;\n        const separator = createElement(\"span\", \"flatpickr-time-separator\", \":\");\n        const hourInput = createNumberInput(\"flatpickr-hour\", {\n            \"aria-label\": self.l10n.hourAriaLabel,\n        });\n        self.hourElement = hourInput.getElementsByTagName(\"input\")[0];\n        const minuteInput = createNumberInput(\"flatpickr-minute\", {\n            \"aria-label\": self.l10n.minuteAriaLabel,\n        });\n        self.minuteElement = minuteInput.getElementsByTagName(\"input\")[0];\n        self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;\n        self.hourElement.value = pad(self.latestSelectedDateObj\n            ? self.latestSelectedDateObj.getHours()\n            : self.config.time_24hr\n                ? defaults.hours\n                : military2ampm(defaults.hours));\n        self.minuteElement.value = pad(self.latestSelectedDateObj\n            ? self.latestSelectedDateObj.getMinutes()\n            : defaults.minutes);\n        self.hourElement.setAttribute(\"step\", self.config.hourIncrement.toString());\n        self.minuteElement.setAttribute(\"step\", self.config.minuteIncrement.toString());\n        self.hourElement.setAttribute(\"min\", self.config.time_24hr ? \"0\" : \"1\");\n        self.hourElement.setAttribute(\"max\", self.config.time_24hr ? \"23\" : \"12\");\n        self.hourElement.setAttribute(\"maxlength\", \"2\");\n        self.minuteElement.setAttribute(\"min\", \"0\");\n        self.minuteElement.setAttribute(\"max\", \"59\");\n        self.minuteElement.setAttribute(\"maxlength\", \"2\");\n        self.timeContainer.appendChild(hourInput);\n        self.timeContainer.appendChild(separator);\n        self.timeContainer.appendChild(minuteInput);\n        if (self.config.time_24hr)\n            self.timeContainer.classList.add(\"time24hr\");\n        if (self.config.enableSeconds) {\n            self.timeContainer.classList.add(\"hasSeconds\");\n            const secondInput = createNumberInput(\"flatpickr-second\");\n            self.secondElement = secondInput.getElementsByTagName(\"input\")[0];\n            self.secondElement.value = pad(self.latestSelectedDateObj\n                ? self.latestSelectedDateObj.getSeconds()\n                : defaults.seconds);\n            self.secondElement.setAttribute(\"step\", self.minuteElement.getAttribute(\"step\"));\n            self.secondElement.setAttribute(\"min\", \"0\");\n            self.secondElement.setAttribute(\"max\", \"59\");\n            self.secondElement.setAttribute(\"maxlength\", \"2\");\n            self.timeContainer.appendChild(createElement(\"span\", \"flatpickr-time-separator\", \":\"));\n            self.timeContainer.appendChild(secondInput);\n        }\n        if (!self.config.time_24hr) {\n            self.amPM = createElement(\"span\", \"flatpickr-am-pm\", self.l10n.amPM[int((self.latestSelectedDateObj\n                ? self.hourElement.value\n                : self.config.defaultHour) > 11)]);\n            self.amPM.title = self.l10n.toggleTitle;\n            self.amPM.tabIndex = -1;\n            self.timeContainer.appendChild(self.amPM);\n        }\n        return self.timeContainer;\n    }\n    function buildWeekdays() {\n        if (!self.weekdayContainer)\n            self.weekdayContainer = createElement(\"div\", \"flatpickr-weekdays\");\n        else\n            clearNode(self.weekdayContainer);\n        for (let i = self.config.showMonths; i--;) {\n            const container = createElement(\"div\", \"flatpickr-weekdaycontainer\");\n            self.weekdayContainer.appendChild(container);\n        }\n        updateWeekdays();\n        return self.weekdayContainer;\n    }\n    function updateWeekdays() {\n        if (!self.weekdayContainer) {\n            return;\n        }\n        const firstDayOfWeek = self.l10n.firstDayOfWeek;\n        let weekdays = [...self.l10n.weekdays.shorthand];\n        if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {\n            weekdays = [\n                ...weekdays.splice(firstDayOfWeek, weekdays.length),\n                ...weekdays.splice(0, firstDayOfWeek),\n            ];\n        }\n        for (let i = self.config.showMonths; i--;) {\n            self.weekdayContainer.children[i].innerHTML = `\n      <span class='flatpickr-weekday'>\n        ${weekdays.join(\"</span><span class='flatpickr-weekday'>\")}\n      </span>\n      `;\n        }\n    }\n    function buildWeeks() {\n        self.calendarContainer.classList.add(\"hasWeeks\");\n        const weekWrapper = createElement(\"div\", \"flatpickr-weekwrapper\");\n        weekWrapper.appendChild(createElement(\"span\", \"flatpickr-weekday\", self.l10n.weekAbbreviation));\n        const weekNumbers = createElement(\"div\", \"flatpickr-weeks\");\n        weekWrapper.appendChild(weekNumbers);\n        return {\n            weekWrapper,\n            weekNumbers,\n        };\n    }\n    function changeMonth(value, isOffset = true) {\n        const delta = isOffset ? value : value - self.currentMonth;\n        if ((delta < 0 && self._hidePrevMonthArrow === true) ||\n            (delta > 0 && self._hideNextMonthArrow === true))\n            return;\n        self.currentMonth += delta;\n        if (self.currentMonth < 0 || self.currentMonth > 11) {\n            self.currentYear += self.currentMonth > 11 ? 1 : -1;\n            self.currentMonth = (self.currentMonth + 12) % 12;\n            triggerEvent(\"onYearChange\");\n            buildMonthSwitch();\n        }\n        buildDays();\n        triggerEvent(\"onMonthChange\");\n        updateNavigationCurrentMonth();\n    }\n    function clear(triggerChangeEvent = true, toInitial = true) {\n        self.input.value = \"\";\n        if (self.altInput !== undefined)\n            self.altInput.value = \"\";\n        if (self.mobileInput !== undefined)\n            self.mobileInput.value = \"\";\n        self.selectedDates = [];\n        self.latestSelectedDateObj = undefined;\n        if (toInitial === true) {\n            self.currentYear = self._initialDate.getFullYear();\n            self.currentMonth = self._initialDate.getMonth();\n        }\n        if (self.config.enableTime === true) {\n            const { hours, minutes, seconds } = getDefaultHours(self.config);\n            setHours(hours, minutes, seconds);\n        }\n        self.redraw();\n        if (triggerChangeEvent)\n            triggerEvent(\"onChange\");\n    }\n    function close() {\n        self.isOpen = false;\n        if (!self.isMobile) {\n            if (self.calendarContainer !== undefined) {\n                self.calendarContainer.classList.remove(\"open\");\n            }\n            if (self._input !== undefined) {\n                self._input.classList.remove(\"active\");\n            }\n        }\n        triggerEvent(\"onClose\");\n    }\n    function destroy() {\n        if (self.config !== undefined)\n            triggerEvent(\"onDestroy\");\n        for (let i = self._handlers.length; i--;) {\n            self._handlers[i].remove();\n        }\n        self._handlers = [];\n        if (self.mobileInput) {\n            if (self.mobileInput.parentNode)\n                self.mobileInput.parentNode.removeChild(self.mobileInput);\n            self.mobileInput = undefined;\n        }\n        else if (self.calendarContainer && self.calendarContainer.parentNode) {\n            if (self.config.static && self.calendarContainer.parentNode) {\n                const wrapper = self.calendarContainer.parentNode;\n                wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);\n                if (wrapper.parentNode) {\n                    while (wrapper.firstChild)\n                        wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);\n                    wrapper.parentNode.removeChild(wrapper);\n                }\n            }\n            else\n                self.calendarContainer.parentNode.removeChild(self.calendarContainer);\n        }\n        if (self.altInput) {\n            self.input.type = \"text\";\n            if (self.altInput.parentNode)\n                self.altInput.parentNode.removeChild(self.altInput);\n            delete self.altInput;\n        }\n        if (self.input) {\n            self.input.type = self.input._type;\n            self.input.classList.remove(\"flatpickr-input\");\n            self.input.removeAttribute(\"readonly\");\n        }\n        [\n            \"_showTimeInput\",\n            \"latestSelectedDateObj\",\n            \"_hideNextMonthArrow\",\n            \"_hidePrevMonthArrow\",\n            \"__hideNextMonthArrow\",\n            \"__hidePrevMonthArrow\",\n            \"isMobile\",\n            \"isOpen\",\n            \"selectedDateElem\",\n            \"minDateHasTime\",\n            \"maxDateHasTime\",\n            \"days\",\n            \"daysContainer\",\n            \"_input\",\n            \"_positionElement\",\n            \"innerContainer\",\n            \"rContainer\",\n            \"monthNav\",\n            \"todayDateElem\",\n            \"calendarContainer\",\n            \"weekdayContainer\",\n            \"prevMonthNav\",\n            \"nextMonthNav\",\n            \"monthsDropdownContainer\",\n            \"currentMonthElement\",\n            \"currentYearElement\",\n            \"navigationCurrentMonth\",\n            \"selectedDateElem\",\n            \"config\",\n        ].forEach((k) => {\n            try {\n                delete self[k];\n            }\n            catch (_) { }\n        });\n    }\n    function isCalendarElem(elem) {\n        if (self.config.appendTo && self.config.appendTo.contains(elem))\n            return true;\n        return self.calendarContainer.contains(elem);\n    }\n    function documentClick(e) {\n        if (self.isOpen && !self.config.inline) {\n            const eventTarget = getEventTarget(e);\n            const isCalendarElement = isCalendarElem(eventTarget);\n            const isInput = eventTarget === self.input ||\n                eventTarget === self.altInput ||\n                self.element.contains(eventTarget) ||\n                (e.path &&\n                    e.path.indexOf &&\n                    (~e.path.indexOf(self.input) ||\n                        ~e.path.indexOf(self.altInput)));\n            const lostFocus = e.type === \"blur\"\n                ? isInput &&\n                    e.relatedTarget &&\n                    !isCalendarElem(e.relatedTarget)\n                : !isInput &&\n                    !isCalendarElement &&\n                    !isCalendarElem(e.relatedTarget);\n            const isIgnored = !self.config.ignoredFocusElements.some((elem) => elem.contains(eventTarget));\n            if (lostFocus && isIgnored) {\n                if (self.timeContainer !== undefined &&\n                    self.minuteElement !== undefined &&\n                    self.hourElement !== undefined &&\n                    self.input.value !== \"\" &&\n                    self.input.value !== undefined) {\n                    updateTime();\n                }\n                self.close();\n                if (self.config &&\n                    self.config.mode === \"range\" &&\n                    self.selectedDates.length === 1) {\n                    self.clear(false);\n                    self.redraw();\n                }\n            }\n        }\n    }\n    function changeYear(newYear) {\n        if (!newYear ||\n            (self.config.minDate && newYear < self.config.minDate.getFullYear()) ||\n            (self.config.maxDate && newYear > self.config.maxDate.getFullYear()))\n            return;\n        const newYearNum = newYear, isNewYear = self.currentYear !== newYearNum;\n        self.currentYear = newYearNum || self.currentYear;\n        if (self.config.maxDate &&\n            self.currentYear === self.config.maxDate.getFullYear()) {\n            self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);\n        }\n        else if (self.config.minDate &&\n            self.currentYear === self.config.minDate.getFullYear()) {\n            self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);\n        }\n        if (isNewYear) {\n            self.redraw();\n            triggerEvent(\"onYearChange\");\n            buildMonthSwitch();\n        }\n    }\n    function isEnabled(date, timeless = true) {\n        var _a;\n        const dateToCheck = self.parseDate(date, undefined, timeless);\n        if ((self.config.minDate &&\n            dateToCheck &&\n            compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0) ||\n            (self.config.maxDate &&\n                dateToCheck &&\n                compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0))\n            return false;\n        if (!self.config.enable && self.config.disable.length === 0)\n            return true;\n        if (dateToCheck === undefined)\n            return false;\n        const bool = !!self.config.enable, array = (_a = self.config.enable) !== null && _a !== void 0 ? _a : self.config.disable;\n        for (let i = 0, d; i < array.length; i++) {\n            d = array[i];\n            if (typeof d === \"function\" &&\n                d(dateToCheck))\n                return bool;\n            else if (d instanceof Date &&\n                dateToCheck !== undefined &&\n                d.getTime() === dateToCheck.getTime())\n                return bool;\n            else if (typeof d === \"string\") {\n                const parsed = self.parseDate(d, undefined, true);\n                return parsed && parsed.getTime() === dateToCheck.getTime()\n                    ? bool\n                    : !bool;\n            }\n            else if (typeof d === \"object\" &&\n                dateToCheck !== undefined &&\n                d.from &&\n                d.to &&\n                dateToCheck.getTime() >= d.from.getTime() &&\n                dateToCheck.getTime() <= d.to.getTime())\n                return bool;\n        }\n        return !bool;\n    }\n    function isInView(elem) {\n        if (self.daysContainer !== undefined)\n            return (elem.className.indexOf(\"hidden\") === -1 &&\n                elem.className.indexOf(\"flatpickr-disabled\") === -1 &&\n                self.daysContainer.contains(elem));\n        return false;\n    }\n    function onBlur(e) {\n        const isInput = e.target === self._input;\n        if (isInput &&\n            (self.selectedDates.length > 0 || self._input.value.length > 0) &&\n            !(e.relatedTarget && isCalendarElem(e.relatedTarget))) {\n            self.setDate(self._input.value, true, e.target === self.altInput\n                ? self.config.altFormat\n                : self.config.dateFormat);\n        }\n    }\n    function onKeyDown(e) {\n        const eventTarget = getEventTarget(e);\n        const isInput = self.config.wrap\n            ? element.contains(eventTarget)\n            : eventTarget === self._input;\n        const allowInput = self.config.allowInput;\n        const allowKeydown = self.isOpen && (!allowInput || !isInput);\n        const allowInlineKeydown = self.config.inline && isInput && !allowInput;\n        if (e.keyCode === 13 && isInput) {\n            if (allowInput) {\n                self.setDate(self._input.value, true, eventTarget === self.altInput\n                    ? self.config.altFormat\n                    : self.config.dateFormat);\n                return eventTarget.blur();\n            }\n            else {\n                self.open();\n            }\n        }\n        else if (isCalendarElem(eventTarget) ||\n            allowKeydown ||\n            allowInlineKeydown) {\n            const isTimeObj = !!self.timeContainer &&\n                self.timeContainer.contains(eventTarget);\n            switch (e.keyCode) {\n                case 13:\n                    if (isTimeObj) {\n                        e.preventDefault();\n                        updateTime();\n                        focusAndClose();\n                    }\n                    else\n                        selectDate(e);\n                    break;\n                case 27:\n                    e.preventDefault();\n                    focusAndClose();\n                    break;\n                case 8:\n                case 46:\n                    if (isInput && !self.config.allowInput) {\n                        e.preventDefault();\n                        self.clear();\n                    }\n                    break;\n                case 37:\n                case 39:\n                    if (!isTimeObj && !isInput) {\n                        e.preventDefault();\n                        if (self.daysContainer !== undefined &&\n                            (allowInput === false ||\n                                (document.activeElement && isInView(document.activeElement)))) {\n                            const delta = e.keyCode === 39 ? 1 : -1;\n                            if (!e.ctrlKey)\n                                focusOnDay(undefined, delta);\n                            else {\n                                e.stopPropagation();\n                                changeMonth(delta);\n                                focusOnDay(getFirstAvailableDay(1), 0);\n                            }\n                        }\n                    }\n                    else if (self.hourElement)\n                        self.hourElement.focus();\n                    break;\n                case 38:\n                case 40:\n                    e.preventDefault();\n                    const delta = e.keyCode === 40 ? 1 : -1;\n                    if ((self.daysContainer &&\n                        eventTarget.$i !== undefined) ||\n                        eventTarget === self.input ||\n                        eventTarget === self.altInput) {\n                        if (e.ctrlKey) {\n                            e.stopPropagation();\n                            changeYear(self.currentYear - delta);\n                            focusOnDay(getFirstAvailableDay(1), 0);\n                        }\n                        else if (!isTimeObj)\n                            focusOnDay(undefined, delta * 7);\n                    }\n                    else if (eventTarget === self.currentYearElement) {\n                        changeYear(self.currentYear - delta);\n                    }\n                    else if (self.config.enableTime) {\n                        if (!isTimeObj && self.hourElement)\n                            self.hourElement.focus();\n                        updateTime(e);\n                        self._debouncedChange();\n                    }\n                    break;\n                case 9:\n                    if (isTimeObj) {\n                        const elems = [\n                            self.hourElement,\n                            self.minuteElement,\n                            self.secondElement,\n                            self.amPM,\n                        ]\n                            .concat(self.pluginElements)\n                            .filter((x) => x);\n                        const i = elems.indexOf(eventTarget);\n                        if (i !== -1) {\n                            const target = elems[i + (e.shiftKey ? -1 : 1)];\n                            e.preventDefault();\n                            (target || self._input).focus();\n                        }\n                    }\n                    else if (!self.config.noCalendar &&\n                        self.daysContainer &&\n                        self.daysContainer.contains(eventTarget) &&\n                        e.shiftKey) {\n                        e.preventDefault();\n                        self._input.focus();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        if (self.amPM !== undefined && eventTarget === self.amPM) {\n            switch (e.key) {\n                case self.l10n.amPM[0].charAt(0):\n                case self.l10n.amPM[0].charAt(0).toLowerCase():\n                    self.amPM.textContent = self.l10n.amPM[0];\n                    setHoursFromInputs();\n                    updateValue();\n                    break;\n                case self.l10n.amPM[1].charAt(0):\n                case self.l10n.amPM[1].charAt(0).toLowerCase():\n                    self.amPM.textContent = self.l10n.amPM[1];\n                    setHoursFromInputs();\n                    updateValue();\n                    break;\n            }\n        }\n        if (isInput || isCalendarElem(eventTarget)) {\n            triggerEvent(\"onKeyDown\", e);\n        }\n    }\n    function onMouseOver(elem) {\n        if (self.selectedDates.length !== 1 ||\n            (elem &&\n                (!elem.classList.contains(\"flatpickr-day\") ||\n                    elem.classList.contains(\"flatpickr-disabled\"))))\n            return;\n        const hoverDate = elem\n            ? elem.dateObj.getTime()\n            : self.days.firstElementChild.dateObj.getTime(), initialDate = self.parseDate(self.selectedDates[0], undefined, true).getTime(), rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()), rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime());\n        let containsDisabled = false;\n        let minRange = 0, maxRange = 0;\n        for (let t = rangeStartDate; t < rangeEndDate; t += duration.DAY) {\n            if (!isEnabled(new Date(t), true)) {\n                containsDisabled =\n                    containsDisabled || (t > rangeStartDate && t < rangeEndDate);\n                if (t < initialDate && (!minRange || t > minRange))\n                    minRange = t;\n                else if (t > initialDate && (!maxRange || t < maxRange))\n                    maxRange = t;\n            }\n        }\n        for (let m = 0; m < self.config.showMonths; m++) {\n            const month = self.daysContainer.children[m];\n            for (let i = 0, l = month.children.length; i < l; i++) {\n                const dayElem = month.children[i], date = dayElem.dateObj;\n                const timestamp = date.getTime();\n                const outOfRange = (minRange > 0 && timestamp < minRange) ||\n                    (maxRange > 0 && timestamp > maxRange);\n                if (outOfRange) {\n                    dayElem.classList.add(\"notAllowed\");\n                    [\"inRange\", \"startRange\", \"endRange\"].forEach((c) => {\n                        dayElem.classList.remove(c);\n                    });\n                    continue;\n                }\n                else if (containsDisabled && !outOfRange)\n                    continue;\n                [\"startRange\", \"inRange\", \"endRange\", \"notAllowed\"].forEach((c) => {\n                    dayElem.classList.remove(c);\n                });\n                if (elem !== undefined) {\n                    elem.classList.add(hoverDate <= self.selectedDates[0].getTime()\n                        ? \"startRange\"\n                        : \"endRange\");\n                    if (initialDate < hoverDate && timestamp === initialDate)\n                        dayElem.classList.add(\"startRange\");\n                    else if (initialDate > hoverDate && timestamp === initialDate)\n                        dayElem.classList.add(\"endRange\");\n                    if (timestamp >= minRange &&\n                        (maxRange === 0 || timestamp <= maxRange) &&\n                        isBetween(timestamp, initialDate, hoverDate))\n                        dayElem.classList.add(\"inRange\");\n                }\n            }\n        }\n    }\n    function onResize() {\n        if (self.isOpen && !self.config.static && !self.config.inline)\n            positionCalendar();\n    }\n    function open(e, positionElement = self._positionElement) {\n        if (self.isMobile === true) {\n            if (e) {\n                e.preventDefault();\n                const eventTarget = getEventTarget(e);\n                if (eventTarget) {\n                    eventTarget.blur();\n                }\n            }\n            if (self.mobileInput !== undefined) {\n                self.mobileInput.focus();\n                self.mobileInput.click();\n            }\n            triggerEvent(\"onOpen\");\n            return;\n        }\n        else if (self._input.disabled || self.config.inline) {\n            return;\n        }\n        const wasOpen = self.isOpen;\n        self.isOpen = true;\n        if (!wasOpen) {\n            self.calendarContainer.classList.add(\"open\");\n            self._input.classList.add(\"active\");\n            triggerEvent(\"onOpen\");\n            positionCalendar(positionElement);\n        }\n        if (self.config.enableTime === true && self.config.noCalendar === true) {\n            if (self.config.allowInput === false &&\n                (e === undefined ||\n                    !self.timeContainer.contains(e.relatedTarget))) {\n                setTimeout(() => self.hourElement.select(), 50);\n            }\n        }\n    }\n    function minMaxDateSetter(type) {\n        return (date) => {\n            const dateObj = (self.config[`_${type}Date`] = self.parseDate(date, self.config.dateFormat));\n            const inverseDateObj = self.config[`_${type === \"min\" ? \"max\" : \"min\"}Date`];\n            if (dateObj !== undefined) {\n                self[type === \"min\" ? \"minDateHasTime\" : \"maxDateHasTime\"] =\n                    dateObj.getHours() > 0 ||\n                        dateObj.getMinutes() > 0 ||\n                        dateObj.getSeconds() > 0;\n            }\n            if (self.selectedDates) {\n                self.selectedDates = self.selectedDates.filter((d) => isEnabled(d));\n                if (!self.selectedDates.length && type === \"min\")\n                    setHoursFromDate(dateObj);\n                updateValue();\n            }\n            if (self.daysContainer) {\n                redraw();\n                if (dateObj !== undefined)\n                    self.currentYearElement[type] = dateObj.getFullYear().toString();\n                else\n                    self.currentYearElement.removeAttribute(type);\n                self.currentYearElement.disabled =\n                    !!inverseDateObj &&\n                        dateObj !== undefined &&\n                        inverseDateObj.getFullYear() === dateObj.getFullYear();\n            }\n        };\n    }\n    function parseConfig() {\n        const boolOpts = [\n            \"wrap\",\n            \"weekNumbers\",\n            \"allowInput\",\n            \"allowInvalidPreload\",\n            \"clickOpens\",\n            \"time_24hr\",\n            \"enableTime\",\n            \"noCalendar\",\n            \"altInput\",\n            \"shorthandCurrentMonth\",\n            \"inline\",\n            \"static\",\n            \"enableSeconds\",\n            \"disableMobile\",\n        ];\n        const userConfig = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(element.dataset || {}))), instanceConfig);\n        const formats = {};\n        self.config.parseDate = userConfig.parseDate;\n        self.config.formatDate = userConfig.formatDate;\n        Object.defineProperty(self.config, \"enable\", {\n            get: () => self.config._enable,\n            set: (dates) => {\n                self.config._enable = parseDateRules(dates);\n            },\n        });\n        Object.defineProperty(self.config, \"disable\", {\n            get: () => self.config._disable,\n            set: (dates) => {\n                self.config._disable = parseDateRules(dates);\n            },\n        });\n        const timeMode = userConfig.mode === \"time\";\n        if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {\n            const defaultDateFormat = flatpickr.defaultConfig.dateFormat || defaultOptions.dateFormat;\n            formats.dateFormat =\n                userConfig.noCalendar || timeMode\n                    ? \"H:i\" + (userConfig.enableSeconds ? \":S\" : \"\")\n                    : defaultDateFormat + \" H:i\" + (userConfig.enableSeconds ? \":S\" : \"\");\n        }\n        if (userConfig.altInput &&\n            (userConfig.enableTime || timeMode) &&\n            !userConfig.altFormat) {\n            const defaultAltFormat = flatpickr.defaultConfig.altFormat || defaultOptions.altFormat;\n            formats.altFormat =\n                userConfig.noCalendar || timeMode\n                    ? \"h:i\" + (userConfig.enableSeconds ? \":S K\" : \" K\")\n                    : defaultAltFormat + ` h:i${userConfig.enableSeconds ? \":S\" : \"\"} K`;\n        }\n        Object.defineProperty(self.config, \"minDate\", {\n            get: () => self.config._minDate,\n            set: minMaxDateSetter(\"min\"),\n        });\n        Object.defineProperty(self.config, \"maxDate\", {\n            get: () => self.config._maxDate,\n            set: minMaxDateSetter(\"max\"),\n        });\n        const minMaxTimeSetter = (type) => (val) => {\n            self.config[type === \"min\" ? \"_minTime\" : \"_maxTime\"] = self.parseDate(val, \"H:i:S\");\n        };\n        Object.defineProperty(self.config, \"minTime\", {\n            get: () => self.config._minTime,\n            set: minMaxTimeSetter(\"min\"),\n        });\n        Object.defineProperty(self.config, \"maxTime\", {\n            get: () => self.config._maxTime,\n            set: minMaxTimeSetter(\"max\"),\n        });\n        if (userConfig.mode === \"time\") {\n            self.config.noCalendar = true;\n            self.config.enableTime = true;\n        }\n        Object.assign(self.config, formats, userConfig);\n        for (let i = 0; i < boolOpts.length; i++)\n            self.config[boolOpts[i]] =\n                self.config[boolOpts[i]] === true ||\n                    self.config[boolOpts[i]] === \"true\";\n        HOOKS.filter((hook) => self.config[hook] !== undefined).forEach((hook) => {\n            self.config[hook] = arrayify(self.config[hook] || []).map(bindToInstance);\n        });\n        self.isMobile =\n            !self.config.disableMobile &&\n                !self.config.inline &&\n                self.config.mode === \"single\" &&\n                !self.config.disable.length &&\n                !self.config.enable &&\n                !self.config.weekNumbers &&\n                /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n        for (let i = 0; i < self.config.plugins.length; i++) {\n            const pluginConf = self.config.plugins[i](self) || {};\n            for (const key in pluginConf) {\n                if (HOOKS.indexOf(key) > -1) {\n                    self.config[key] = arrayify(pluginConf[key])\n                        .map(bindToInstance)\n                        .concat(self.config[key]);\n                }\n                else if (typeof userConfig[key] === \"undefined\")\n                    self.config[key] = pluginConf[key];\n            }\n        }\n        if (!userConfig.altInputClass) {\n            self.config.altInputClass =\n                getInputElem().className + \" \" + self.config.altInputClass;\n        }\n        triggerEvent(\"onParseConfig\");\n    }\n    function getInputElem() {\n        return self.config.wrap\n            ? element.querySelector(\"[data-input]\")\n            : element;\n    }\n    function setupLocale() {\n        if (typeof self.config.locale !== \"object\" &&\n            typeof flatpickr.l10ns[self.config.locale] === \"undefined\")\n            self.config.errorHandler(new Error(`flatpickr: invalid locale ${self.config.locale}`));\n        self.l10n = Object.assign(Object.assign({}, flatpickr.l10ns.default), (typeof self.config.locale === \"object\"\n            ? self.config.locale\n            : self.config.locale !== \"default\"\n                ? flatpickr.l10ns[self.config.locale]\n                : undefined));\n        tokenRegex.K = `(${self.l10n.amPM[0]}|${self.l10n.amPM[1]}|${self.l10n.amPM[0].toLowerCase()}|${self.l10n.amPM[1].toLowerCase()})`;\n        const userConfig = Object.assign(Object.assign({}, instanceConfig), JSON.parse(JSON.stringify(element.dataset || {})));\n        if (userConfig.time_24hr === undefined &&\n            flatpickr.defaultConfig.time_24hr === undefined) {\n            self.config.time_24hr = self.l10n.time_24hr;\n        }\n        self.formatDate = createDateFormatter(self);\n        self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\n    }\n    function positionCalendar(customPositionElement) {\n        if (typeof self.config.position === \"function\") {\n            return void self.config.position(self, customPositionElement);\n        }\n        if (self.calendarContainer === undefined)\n            return;\n        triggerEvent(\"onPreCalendarPosition\");\n        const positionElement = customPositionElement || self._positionElement;\n        const calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, ((acc, child) => acc + child.offsetHeight), 0), calendarWidth = self.calendarContainer.offsetWidth, configPos = self.config.position.split(\" \"), configPosVertical = configPos[0], configPosHorizontal = configPos.length > 1 ? configPos[1] : null, inputBounds = positionElement.getBoundingClientRect(), distanceFromBottom = window.innerHeight - inputBounds.bottom, showOnTop = configPosVertical === \"above\" ||\n            (configPosVertical !== \"below\" &&\n                distanceFromBottom < calendarHeight &&\n                inputBounds.top > calendarHeight);\n        const top = window.pageYOffset +\n            inputBounds.top +\n            (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);\n        toggleClass(self.calendarContainer, \"arrowTop\", !showOnTop);\n        toggleClass(self.calendarContainer, \"arrowBottom\", showOnTop);\n        if (self.config.inline)\n            return;\n        let left = window.pageXOffset + inputBounds.left;\n        let isCenter = false;\n        let isRight = false;\n        if (configPosHorizontal === \"center\") {\n            left -= (calendarWidth - inputBounds.width) / 2;\n            isCenter = true;\n        }\n        else if (configPosHorizontal === \"right\") {\n            left -= calendarWidth - inputBounds.width;\n            isRight = true;\n        }\n        toggleClass(self.calendarContainer, \"arrowLeft\", !isCenter && !isRight);\n        toggleClass(self.calendarContainer, \"arrowCenter\", isCenter);\n        toggleClass(self.calendarContainer, \"arrowRight\", isRight);\n        const right = window.document.body.offsetWidth -\n            (window.pageXOffset + inputBounds.right);\n        const rightMost = left + calendarWidth > window.document.body.offsetWidth;\n        const centerMost = right + calendarWidth > window.document.body.offsetWidth;\n        toggleClass(self.calendarContainer, \"rightMost\", rightMost);\n        if (self.config.static)\n            return;\n        self.calendarContainer.style.top = `${top}px`;\n        if (!rightMost) {\n            self.calendarContainer.style.left = `${left}px`;\n            self.calendarContainer.style.right = \"auto\";\n        }\n        else if (!centerMost) {\n            self.calendarContainer.style.left = \"auto\";\n            self.calendarContainer.style.right = `${right}px`;\n        }\n        else {\n            const doc = getDocumentStyleSheet();\n            if (doc === undefined)\n                return;\n            const bodyWidth = window.document.body.offsetWidth;\n            const centerLeft = Math.max(0, bodyWidth / 2 - calendarWidth / 2);\n            const centerBefore = \".flatpickr-calendar.centerMost:before\";\n            const centerAfter = \".flatpickr-calendar.centerMost:after\";\n            const centerIndex = doc.cssRules.length;\n            const centerStyle = `{left:${inputBounds.left}px;right:auto;}`;\n            toggleClass(self.calendarContainer, \"rightMost\", false);\n            toggleClass(self.calendarContainer, \"centerMost\", true);\n            doc.insertRule(`${centerBefore},${centerAfter}${centerStyle}`, centerIndex);\n            self.calendarContainer.style.left = `${centerLeft}px`;\n            self.calendarContainer.style.right = \"auto\";\n        }\n    }\n    function getDocumentStyleSheet() {\n        let editableSheet = null;\n        for (let i = 0; i < document.styleSheets.length; i++) {\n            const sheet = document.styleSheets[i];\n            try {\n                sheet.cssRules;\n            }\n            catch (err) {\n                continue;\n            }\n            editableSheet = sheet;\n            break;\n        }\n        return editableSheet != null ? editableSheet : createStyleSheet();\n    }\n    function createStyleSheet() {\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        return style.sheet;\n    }\n    function redraw() {\n        if (self.config.noCalendar || self.isMobile)\n            return;\n        buildMonthSwitch();\n        updateNavigationCurrentMonth();\n        buildDays();\n    }\n    function focusAndClose() {\n        self._input.focus();\n        if (window.navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.msMaxTouchPoints !== undefined) {\n            setTimeout(self.close, 0);\n        }\n        else {\n            self.close();\n        }\n    }\n    function selectDate(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const isSelectable = (day) => day.classList &&\n            day.classList.contains(\"flatpickr-day\") &&\n            !day.classList.contains(\"flatpickr-disabled\") &&\n            !day.classList.contains(\"notAllowed\");\n        const t = findParent(getEventTarget(e), isSelectable);\n        if (t === undefined)\n            return;\n        const target = t;\n        const selectedDate = (self.latestSelectedDateObj = new Date(target.dateObj.getTime()));\n        const shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth ||\n            selectedDate.getMonth() >\n                self.currentMonth + self.config.showMonths - 1) &&\n            self.config.mode !== \"range\";\n        self.selectedDateElem = target;\n        if (self.config.mode === \"single\")\n            self.selectedDates = [selectedDate];\n        else if (self.config.mode === \"multiple\") {\n            const selectedIndex = isDateSelected(selectedDate);\n            if (selectedIndex)\n                self.selectedDates.splice(parseInt(selectedIndex), 1);\n            else\n                self.selectedDates.push(selectedDate);\n        }\n        else if (self.config.mode === \"range\") {\n            if (self.selectedDates.length === 2) {\n                self.clear(false, false);\n            }\n            self.latestSelectedDateObj = selectedDate;\n            self.selectedDates.push(selectedDate);\n            if (compareDates(selectedDate, self.selectedDates[0], true) !== 0)\n                self.selectedDates.sort((a, b) => a.getTime() - b.getTime());\n        }\n        setHoursFromInputs();\n        if (shouldChangeMonth) {\n            const isNewYear = self.currentYear !== selectedDate.getFullYear();\n            self.currentYear = selectedDate.getFullYear();\n            self.currentMonth = selectedDate.getMonth();\n            if (isNewYear) {\n                triggerEvent(\"onYearChange\");\n                buildMonthSwitch();\n            }\n            triggerEvent(\"onMonthChange\");\n        }\n        updateNavigationCurrentMonth();\n        buildDays();\n        updateValue();\n        if (!shouldChangeMonth &&\n            self.config.mode !== \"range\" &&\n            self.config.showMonths === 1)\n            focusOnDayElem(target);\n        else if (self.selectedDateElem !== undefined &&\n            self.hourElement === undefined) {\n            self.selectedDateElem && self.selectedDateElem.focus();\n        }\n        if (self.hourElement !== undefined)\n            self.hourElement !== undefined && self.hourElement.focus();\n        if (self.config.closeOnSelect) {\n            const single = self.config.mode === \"single\" && !self.config.enableTime;\n            const range = self.config.mode === \"range\" &&\n                self.selectedDates.length === 2 &&\n                !self.config.enableTime;\n            if (single || range) {\n                focusAndClose();\n            }\n        }\n        triggerChange();\n    }\n    const CALLBACKS = {\n        locale: [setupLocale, updateWeekdays],\n        showMonths: [buildMonths, setCalendarWidth, buildWeekdays],\n        minDate: [jumpToDate],\n        maxDate: [jumpToDate],\n        clickOpens: [\n            () => {\n                if (self.config.clickOpens === true) {\n                    bind(self._input, \"focus\", self.open);\n                    bind(self._input, \"click\", self.open);\n                }\n                else {\n                    self._input.removeEventListener(\"focus\", self.open);\n                    self._input.removeEventListener(\"click\", self.open);\n                }\n            },\n        ],\n    };\n    function set(option, value) {\n        if (option !== null && typeof option === \"object\") {\n            Object.assign(self.config, option);\n            for (const key in option) {\n                if (CALLBACKS[key] !== undefined)\n                    CALLBACKS[key].forEach((x) => x());\n            }\n        }\n        else {\n            self.config[option] = value;\n            if (CALLBACKS[option] !== undefined)\n                CALLBACKS[option].forEach((x) => x());\n            else if (HOOKS.indexOf(option) > -1)\n                self.config[option] = arrayify(value);\n        }\n        self.redraw();\n        updateValue(true);\n    }\n    function setSelectedDate(inputDate, format) {\n        let dates = [];\n        if (inputDate instanceof Array)\n            dates = inputDate.map((d) => self.parseDate(d, format));\n        else if (inputDate instanceof Date || typeof inputDate === \"number\")\n            dates = [self.parseDate(inputDate, format)];\n        else if (typeof inputDate === \"string\") {\n            switch (self.config.mode) {\n                case \"single\":\n                case \"time\":\n                    dates = [self.parseDate(inputDate, format)];\n                    break;\n                case \"multiple\":\n                    dates = inputDate\n                        .split(self.config.conjunction)\n                        .map((date) => self.parseDate(date, format));\n                    break;\n                case \"range\":\n                    dates = inputDate\n                        .split(self.l10n.rangeSeparator)\n                        .map((date) => self.parseDate(date, format));\n                    break;\n                default:\n                    break;\n            }\n        }\n        else\n            self.config.errorHandler(new Error(`Invalid date supplied: ${JSON.stringify(inputDate)}`));\n        self.selectedDates = (self.config.allowInvalidPreload\n            ? dates\n            : dates.filter((d) => d instanceof Date && isEnabled(d, false)));\n        if (self.config.mode === \"range\")\n            self.selectedDates.sort((a, b) => a.getTime() - b.getTime());\n    }\n    function setDate(date, triggerChange = false, format = self.config.dateFormat) {\n        if ((date !== 0 && !date) || (date instanceof Array && date.length === 0))\n            return self.clear(triggerChange);\n        setSelectedDate(date, format);\n        self.latestSelectedDateObj =\n            self.selectedDates[self.selectedDates.length - 1];\n        self.redraw();\n        jumpToDate(undefined, triggerChange);\n        setHoursFromDate();\n        if (self.selectedDates.length === 0) {\n            self.clear(false);\n        }\n        updateValue(triggerChange);\n        if (triggerChange)\n            triggerEvent(\"onChange\");\n    }\n    function parseDateRules(arr) {\n        return arr\n            .slice()\n            .map((rule) => {\n            if (typeof rule === \"string\" ||\n                typeof rule === \"number\" ||\n                rule instanceof Date) {\n                return self.parseDate(rule, undefined, true);\n            }\n            else if (rule &&\n                typeof rule === \"object\" &&\n                rule.from &&\n                rule.to)\n                return {\n                    from: self.parseDate(rule.from, undefined),\n                    to: self.parseDate(rule.to, undefined),\n                };\n            return rule;\n        })\n            .filter((x) => x);\n    }\n    function setupDates() {\n        self.selectedDates = [];\n        self.now = self.parseDate(self.config.now) || new Date();\n        const preloadedDate = self.config.defaultDate ||\n            ((self.input.nodeName === \"INPUT\" ||\n                self.input.nodeName === \"TEXTAREA\") &&\n                self.input.placeholder &&\n                self.input.value === self.input.placeholder\n                ? null\n                : self.input.value);\n        if (preloadedDate)\n            setSelectedDate(preloadedDate, self.config.dateFormat);\n        self._initialDate =\n            self.selectedDates.length > 0\n                ? self.selectedDates[0]\n                : self.config.minDate &&\n                    self.config.minDate.getTime() > self.now.getTime()\n                    ? self.config.minDate\n                    : self.config.maxDate &&\n                        self.config.maxDate.getTime() < self.now.getTime()\n                        ? self.config.maxDate\n                        : self.now;\n        self.currentYear = self._initialDate.getFullYear();\n        self.currentMonth = self._initialDate.getMonth();\n        if (self.selectedDates.length > 0)\n            self.latestSelectedDateObj = self.selectedDates[0];\n        if (self.config.minTime !== undefined)\n            self.config.minTime = self.parseDate(self.config.minTime, \"H:i\");\n        if (self.config.maxTime !== undefined)\n            self.config.maxTime = self.parseDate(self.config.maxTime, \"H:i\");\n        self.minDateHasTime =\n            !!self.config.minDate &&\n                (self.config.minDate.getHours() > 0 ||\n                    self.config.minDate.getMinutes() > 0 ||\n                    self.config.minDate.getSeconds() > 0);\n        self.maxDateHasTime =\n            !!self.config.maxDate &&\n                (self.config.maxDate.getHours() > 0 ||\n                    self.config.maxDate.getMinutes() > 0 ||\n                    self.config.maxDate.getSeconds() > 0);\n    }\n    function setupInputs() {\n        self.input = getInputElem();\n        if (!self.input) {\n            self.config.errorHandler(new Error(\"Invalid input element specified\"));\n            return;\n        }\n        self.input._type = self.input.type;\n        self.input.type = \"text\";\n        self.input.classList.add(\"flatpickr-input\");\n        self._input = self.input;\n        if (self.config.altInput) {\n            self.altInput = createElement(self.input.nodeName, self.config.altInputClass);\n            self._input = self.altInput;\n            self.altInput.placeholder = self.input.placeholder;\n            self.altInput.disabled = self.input.disabled;\n            self.altInput.required = self.input.required;\n            self.altInput.tabIndex = self.input.tabIndex;\n            self.altInput.type = \"text\";\n            self.input.setAttribute(\"type\", \"hidden\");\n            if (!self.config.static && self.input.parentNode)\n                self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);\n        }\n        if (!self.config.allowInput)\n            self._input.setAttribute(\"readonly\", \"readonly\");\n        self._positionElement = self.config.positionElement || self._input;\n    }\n    function setupMobile() {\n        const inputType = self.config.enableTime\n            ? self.config.noCalendar\n                ? \"time\"\n                : \"datetime-local\"\n            : \"date\";\n        self.mobileInput = createElement(\"input\", self.input.className + \" flatpickr-mobile\");\n        self.mobileInput.tabIndex = 1;\n        self.mobileInput.type = inputType;\n        self.mobileInput.disabled = self.input.disabled;\n        self.mobileInput.required = self.input.required;\n        self.mobileInput.placeholder = self.input.placeholder;\n        self.mobileFormatStr =\n            inputType === \"datetime-local\"\n                ? \"Y-m-d\\\\TH:i:S\"\n                : inputType === \"date\"\n                    ? \"Y-m-d\"\n                    : \"H:i:S\";\n        if (self.selectedDates.length > 0) {\n            self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);\n        }\n        if (self.config.minDate)\n            self.mobileInput.min = self.formatDate(self.config.minDate, \"Y-m-d\");\n        if (self.config.maxDate)\n            self.mobileInput.max = self.formatDate(self.config.maxDate, \"Y-m-d\");\n        if (self.input.getAttribute(\"step\"))\n            self.mobileInput.step = String(self.input.getAttribute(\"step\"));\n        self.input.type = \"hidden\";\n        if (self.altInput !== undefined)\n            self.altInput.type = \"hidden\";\n        try {\n            if (self.input.parentNode)\n                self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);\n        }\n        catch (_a) { }\n        bind(self.mobileInput, \"change\", (e) => {\n            self.setDate(getEventTarget(e).value, false, self.mobileFormatStr);\n            triggerEvent(\"onChange\");\n            triggerEvent(\"onClose\");\n        });\n    }\n    function toggle(e) {\n        if (self.isOpen === true)\n            return self.close();\n        self.open(e);\n    }\n    function triggerEvent(event, data) {\n        if (self.config === undefined)\n            return;\n        const hooks = self.config[event];\n        if (hooks !== undefined && hooks.length > 0) {\n            for (let i = 0; hooks[i] && i < hooks.length; i++)\n                hooks[i](self.selectedDates, self.input.value, self, data);\n        }\n        if (event === \"onChange\") {\n            self.input.dispatchEvent(createEvent(\"change\"));\n            self.input.dispatchEvent(createEvent(\"input\"));\n        }\n    }\n    function createEvent(name) {\n        const e = document.createEvent(\"Event\");\n        e.initEvent(name, true, true);\n        return e;\n    }\n    function isDateSelected(date) {\n        for (let i = 0; i < self.selectedDates.length; i++) {\n            if (compareDates(self.selectedDates[i], date) === 0)\n                return \"\" + i;\n        }\n        return false;\n    }\n    function isDateInRange(date) {\n        if (self.config.mode !== \"range\" || self.selectedDates.length < 2)\n            return false;\n        return (compareDates(date, self.selectedDates[0]) >= 0 &&\n            compareDates(date, self.selectedDates[1]) <= 0);\n    }\n    function updateNavigationCurrentMonth() {\n        if (self.config.noCalendar || self.isMobile || !self.monthNav)\n            return;\n        self.yearElements.forEach((yearElement, i) => {\n            const d = new Date(self.currentYear, self.currentMonth, 1);\n            d.setMonth(self.currentMonth + i);\n            if (self.config.showMonths > 1 ||\n                self.config.monthSelectorType === \"static\") {\n                self.monthElements[i].textContent =\n                    monthToStr(d.getMonth(), self.config.shorthandCurrentMonth, self.l10n) + \" \";\n            }\n            else {\n                self.monthsDropdownContainer.value = d.getMonth().toString();\n            }\n            yearElement.value = d.getFullYear().toString();\n        });\n        self._hidePrevMonthArrow =\n            self.config.minDate !== undefined &&\n                (self.currentYear === self.config.minDate.getFullYear()\n                    ? self.currentMonth <= self.config.minDate.getMonth()\n                    : self.currentYear < self.config.minDate.getFullYear());\n        self._hideNextMonthArrow =\n            self.config.maxDate !== undefined &&\n                (self.currentYear === self.config.maxDate.getFullYear()\n                    ? self.currentMonth + 1 > self.config.maxDate.getMonth()\n                    : self.currentYear > self.config.maxDate.getFullYear());\n    }\n    function getDateStr(format) {\n        return self.selectedDates\n            .map((dObj) => self.formatDate(dObj, format))\n            .filter((d, i, arr) => self.config.mode !== \"range\" ||\n            self.config.enableTime ||\n            arr.indexOf(d) === i)\n            .join(self.config.mode !== \"range\"\n            ? self.config.conjunction\n            : self.l10n.rangeSeparator);\n    }\n    function updateValue(triggerChange = true) {\n        if (self.mobileInput !== undefined && self.mobileFormatStr) {\n            self.mobileInput.value =\n                self.latestSelectedDateObj !== undefined\n                    ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr)\n                    : \"\";\n        }\n        self.input.value = getDateStr(self.config.dateFormat);\n        if (self.altInput !== undefined) {\n            self.altInput.value = getDateStr(self.config.altFormat);\n        }\n        if (triggerChange !== false)\n            triggerEvent(\"onValueUpdate\");\n    }\n    function onMonthNavClick(e) {\n        const eventTarget = getEventTarget(e);\n        const isPrevMonth = self.prevMonthNav.contains(eventTarget);\n        const isNextMonth = self.nextMonthNav.contains(eventTarget);\n        if (isPrevMonth || isNextMonth) {\n            changeMonth(isPrevMonth ? -1 : 1);\n        }\n        else if (self.yearElements.indexOf(eventTarget) >= 0) {\n            eventTarget.select();\n        }\n        else if (eventTarget.classList.contains(\"arrowUp\")) {\n            self.changeYear(self.currentYear + 1);\n        }\n        else if (eventTarget.classList.contains(\"arrowDown\")) {\n            self.changeYear(self.currentYear - 1);\n        }\n    }\n    function timeWrapper(e) {\n        e.preventDefault();\n        const isKeyDown = e.type === \"keydown\", eventTarget = getEventTarget(e), input = eventTarget;\n        if (self.amPM !== undefined && eventTarget === self.amPM) {\n            self.amPM.textContent =\n                self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n        }\n        const min = parseFloat(input.getAttribute(\"min\")), max = parseFloat(input.getAttribute(\"max\")), step = parseFloat(input.getAttribute(\"step\")), curValue = parseInt(input.value, 10), delta = e.delta ||\n            (isKeyDown ? (e.which === 38 ? 1 : -1) : 0);\n        let newValue = curValue + step * delta;\n        if (typeof input.value !== \"undefined\" && input.value.length === 2) {\n            const isHourElem = input === self.hourElement, isMinuteElem = input === self.minuteElement;\n            if (newValue < min) {\n                newValue =\n                    max +\n                        newValue +\n                        int(!isHourElem) +\n                        (int(isHourElem) && int(!self.amPM));\n                if (isMinuteElem)\n                    incrementNumInput(undefined, -1, self.hourElement);\n            }\n            else if (newValue > max) {\n                newValue =\n                    input === self.hourElement ? newValue - max - int(!self.amPM) : min;\n                if (isMinuteElem)\n                    incrementNumInput(undefined, 1, self.hourElement);\n            }\n            if (self.amPM &&\n                isHourElem &&\n                (step === 1\n                    ? newValue + curValue === 23\n                    : Math.abs(newValue - curValue) > step)) {\n                self.amPM.textContent =\n                    self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n            }\n            input.value = pad(newValue);\n        }\n    }\n    init();\n    return self;\n}\nfunction _flatpickr(nodeList, config) {\n    const nodes = Array.prototype.slice\n        .call(nodeList)\n        .filter((x) => x instanceof HTMLElement);\n    const instances = [];\n    for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        try {\n            if (node.getAttribute(\"data-fp-omit\") !== null)\n                continue;\n            if (node._flatpickr !== undefined) {\n                node._flatpickr.destroy();\n                node._flatpickr = undefined;\n            }\n            node._flatpickr = FlatpickrInstance(node, config || {});\n            instances.push(node._flatpickr);\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n    return instances.length === 1 ? instances[0] : instances;\n}\nif (typeof HTMLElement !== \"undefined\" &&\n    typeof HTMLCollection !== \"undefined\" &&\n    typeof NodeList !== \"undefined\") {\n    HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function (config) {\n        return _flatpickr(this, config);\n    };\n    HTMLElement.prototype.flatpickr = function (config) {\n        return _flatpickr([this], config);\n    };\n}\nvar flatpickr = function (selector, config) {\n    if (typeof selector === \"string\") {\n        return _flatpickr(window.document.querySelectorAll(selector), config);\n    }\n    else if (selector instanceof Node) {\n        return _flatpickr([selector], config);\n    }\n    else {\n        return _flatpickr(selector, config);\n    }\n};\nflatpickr.defaultConfig = {};\nflatpickr.l10ns = {\n    en: Object.assign({}, English),\n    default: Object.assign({}, English),\n};\nflatpickr.localize = (l10n) => {\n    flatpickr.l10ns.default = Object.assign(Object.assign({}, flatpickr.l10ns.default), l10n);\n};\nflatpickr.setDefaults = (config) => {\n    flatpickr.defaultConfig = Object.assign(Object.assign({}, flatpickr.defaultConfig), config);\n};\nflatpickr.parseDate = createDateParser({});\nflatpickr.formatDate = createDateFormatter({});\nflatpickr.compareDates = compareDates;\nif (typeof jQuery !== \"undefined\" && typeof jQuery.fn !== \"undefined\") {\n    jQuery.fn.flatpickr = function (config) {\n        return _flatpickr(this, config);\n    };\n}\nDate.prototype.fp_incr = function (days) {\n    return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === \"string\" ? parseInt(days, 10) : days));\n};\nif (typeof window !== \"undefined\") {\n    window.flatpickr = flatpickr;\n}\nexport default flatpickr;\n","import $ from 'jquery';\n\nimport Tokens from './tokens';\n\nimport {\n    isEmpty,\n    isDefined,\n    debounce,\n    throttle,\n    copyToClipboard,\n    vsprintf,\n    openInNewTab,\n    recipeSetRequiresUser,\n    addParametersToURL\n} from '../Utilities';\n\nimport Field from '../Field';\n\nimport Modal from '../Modal';\n\nexport default class TokenSelector {\n    constructor( Field ){\n        // Check if the field supports tokens\n        if ( Field.attributes.supportsTokens ){\n            // Create different Tokens Selectors depending on the field type\n            if ( Field.type == 'textarea' ){\n                return new TokenSelectorTextarea( Field );\n            }\n            else {\n                return new TokenSelectorInput( Field );\n            }\n        }\n    }\n}\n\nclass TokenSelectorInput extends Tokens {\n    constructor( Field ){\n        super(\n            Field.attributes.itemType,\n            Field.type\n        );\n\n        // Save field\n        this.Field = Field;\n\n        // Save the Token Selector instance in the field\n        this.Field.TokenSelector = this;\n\n        // Render the token selector\n        this.render();\n\n        // Set data\n        this.setData();\n\n        // CodeMirror methods\n        this.Field.getField().on( 'ua-codemirror-ready', () => {\n            // Get the CodeMirror editor\n            this.getCodeMirrorEditor();\n\n            // Render tokens right away, without the delay\n            this.editor.setValue( this.editor.getValue() );\n            this.renderTokens();\n\n            // Handle requests to add tokens to the field\n            this.handleAddTokens();\n\n            // Render tokens in real time\n            this.renderTokensInRealTime();\n        }); \n    }\n\n    render(){\n        this.RenderTokenSelector = new RenderTokenSelector( this.Field, this.tokens );\n    }\n\n    setData(){\n        this.data = {\n            tokenRenderingDebounce: 200,\n            // cachedCMWidgets: []\n        }\n    }\n\n    getCodeMirrorEditor(){\n        this.editor = this.Field.fieldCM;\n    }\n\n    handleAddTokens(){\n        // Listen events that are trying to add a token\n        this.Field.field\n            .off( 'ua-add-token' )\n            .on( 'ua-add-token', ( event, token ) => {\n                // Check if it's a date or time field\n                if ( [ 'date', 'time' ].includes( this.Field.attributes.fieldType ) ){\n                    // Remove the value of the field\n                    this.editor.setValue( '' );\n                }\n\n                // Add it to the editor\n                this.insertTextAtCursor( `{{${ token.id }}}` );\n\n                // Render tokens right away, without the delay\n                this.renderTokens({\n                    ignoreRequiresUserModal: true\n                });\n\n                // Check if it's NOT a date or time field\n                if ( ! [ 'date', 'time' ].includes( this.Field.attributes.fieldType ) ){\n                    // Focus the field again\n                    this.editor.focus();\n                }\n\n                 // Check if it's a date or time field\n                if ( [ 'date', 'time' ].includes( this.Field.attributes.fieldType ) ){\n                    // Set value in the real field\n                    this.Field.setValue( `{{${ token.id }}}` );\n                }\n            });\n    }\n\n    destroy(){\n        // Destroy wrapper\n        this.RenderTokenSelector.destroy();\n    }\n\n    /**\n     * Insert content in the CM field at the current position\n     *\n     * @since 3.0\n     * \n     * @param  String   text The content to be added\n     */\n    insertTextAtCursor( text ){\n        this.editor.doc.replaceRange( text, this.editor.doc.getCursor() );\n    }\n\n    renderTokensInRealTime(){\n        this.editor.on( 'changes', debounce( ( event ) => {\n            // Render tokens\n            this.renderTokens();\n        }, this.data.tokenRenderingDebounce ) );\n    }\n\n    renderTokens( options ){\n        // Clear all the current widgets\n        // this.data.cachedCMWidgets.forEach( marker => marker.clear() );\n        // this.data.cachedCMWidgets = [];\n\n        // Get the options\n        options = Object.assign({\n            ignoreRequiresUserModal: false,\n        }, options );\n\n        // Search tokens\n        const querySearchTokens = this.editor.getSearchCursor( /\\{\\{(.*?)\\}\\}/ );\n\n        // Iterate them\n        while ( querySearchTokens.findNext() ){\n            // Get position\n            const position = {\n                from: querySearchTokens.from(),\n                to:   querySearchTokens.to()\n            }\n\n            // Get the content\n            const content = this.editor.getRange(\n                position.from,\n                position.to\n            );\n\n            // Remove the opening and closing brackets\n            const tokenId = content.replace( '{{', '' ).replace( '}}', '' );\n            \n            // Get the token HMTL\n            const $tokenNode = this.createTokenDOMNode( tokenId );\n\n            // Create CodeMirror widget\n            const widget = this.editor.markText( \n                position.from,\n                position.to,\n                {\n                    replacedWith: $tokenNode\n                }\n            );\n\n            if (\n                // Check if the recipe is anonymous\n                UncannyAutomator.recipe.type == 'anonymous'\n                // Check if the recipe currently doesn't require user data\n                && ! UncannyAutomator.recipe.requiresUserData\n                && (\n                    // Check if the current tokens requires user data\n                    this.tokensThatRequireUser.includes( tokenId )\n                    // Check if it's the user meta token\n                    || tokenId.startsWith( 'USERMETA:' )\n                )\n                // Check if we have to ignore the requires user modal\n                && ! options.ignoreRequiresUserModal\n            ){\n                this.tokenNeedsUserModal( $tokenNode, {\n                    // Create function to remove the current token\n                    removeToken: () => {\n                        // Get the widget position\n                        const widgetPosition = widget.find();\n\n                        // Remove the widget\n                        widget.clear();\n\n                        // Remove the token content\n                        this.editor.replaceRange(\n                            '',\n                            widgetPosition.from,\n                            widgetPosition.to\n                        );\n                    }\n                });\n\n                // Stop the loop\n                break;\n            }\n\n            // Add events to the tokens, but only if the field is not read only\n            if ( ! this.Field.attributes.isReadOnly ){\n                // Select on click\n                $tokenNode.addEventListener( 'click', () => {\n                    // Check if it's focus\n                    if ( ! $tokenNode.classList.contains( 'uap-token--cm-focused' ) ){\n                        // Add focus class\n                        $tokenNode.classList.add( 'uap-token--cm-focused' );\n\n                        const onFocusOut = () => {\n                            // Remove focus class\n                            $tokenNode.classList.remove( 'uap-token--cm-focused' );\n\n                            // Remove the event listener that listen clicks\n                            // outside the token\n                            document.removeEventListener( 'mouseup', onClickOutside );\n\n                            // Remove the event listener to copy to the\n                            // token to the clipboard\n                            document.removeEventListener( 'copy', onCopy );\n\n                            // Remove the event listener to remove the token\n                            document.removeEventListener( 'keydown', onDelete );\n\n                            // Remove the event listener to move the cursor\n                            // to the left or right using the direction keys\n                            document.removeEventListener( 'keydown', onNavigation );\n                        }\n\n                        // Listen clicks outside\n                        const onClickOutside = ( event ) => {\n                            if (\n                                // Check if the clicked element is not the token\n                                ! ( $tokenNode === event.target )\n                                // And check if the clicked element is NOT a child\n                                // of the token\n                                && ! ( $tokenNode.contains( event.target ) )\n                            ){\n                                onFocusOut();\n                            }\n                        };\n                        document.addEventListener( 'mouseup', onClickOutside );\n\n                        // Listen copy event\n                        const onCopy = ( event ) => {\n                            onFocusOut();\n\n                            // Copy the token ID\n                            copyToClipboard( `{{${ tokenId }}}` );\n                        };\n                        document.addEventListener( 'copy', onCopy );\n\n                        // Listen delete event\n                        const onDelete = ( event ) => {\n                            // Get the pressed key\n                            const key = event.keyCode || event.charCode;\n\n                            // Check if it's the \"backspace\" or \"del\" key\n                            if ( key == 8 || key == 46 ){\n                                // Get the widget position\n                                const widgetPosition = widget.find();\n\n                                // Remove the widget\n                                widget.clear();\n\n                                // Remove the token content\n                                this.editor.replaceRange(\n                                    '',\n                                    widgetPosition.from,\n                                    widgetPosition.to\n                                );\n\n                                onFocusOut();\n                            }\n                        }\n                        document.addEventListener( 'keydown', onDelete );\n\n                        // Listen navigation events\n                        const onNavigation = ( event ) => {\n                            // Get the pressed key\n                            const key = event.keyCode || event.charCode;\n\n                            // Check if it's one of the <- or -> keys\n                            if ( key == 37 || key == 39 ){\n                                onFocusOut();\n\n                                // Get the widget position\n                                const widgetPosition = widget.find();\n\n                                // Get the new position\n                                let position;\n\n                                // Check if it's the \"<-\" (left) key\n                                if ( key == 37 ){\n                                    // Get the left position\n                                    position = widgetPosition.from;\n                                }\n\n                                // Check if it's the \"->\" (right) key\n                                if ( key == 39 ){\n                                    // Get the right position\n                                    position = widgetPosition.to;\n                                }\n\n                                // Set focus\n                                this.editor.focus();\n\n                                // Set the cursor\n                                this.editor.setCursor( position )\n                            }\n                        }\n                        document.addEventListener( 'keydown', onNavigation );\n                    }\n                });\n            }  \n        }\n    }\n\n    /**\n     * Shows modal to tell the user that the token added needs user data\n     * \n     * @param  {Object} token     The token added\n     * @param  {Object} callbacks Object with callbacks\n     */\n    tokenNeedsUserModal( $tokenNode, callbacks = {} ){\n        /**\n         * Create modal to ley the user know that\n         * they will need user data\n         */\n        let modal;\n\n        // Check if WP is ready\n        if ( ! isDefined( UncannyAutomator.wp ) || ! UncannyAutomator.wp ){\n            modal = new Modal({\n                title:   `${ UncannyAutomator.i18n.userSelector.userDataModal.action.forbidden.title } <span class=\"needs-user-data-modal-pro-badge\">${ UncannyAutomator.i18n.proOnly.pro }</span>`,\n                content: `\n                    <div class=\"needs-user-data-modal\">\n                        <div class=\"needs-user-data-modal__title\">${ vsprintf( UncannyAutomator.i18n.userSelector.userDataModal.token.forbidden.content.mustRunOnUser, [ $tokenNode.outerHTML ] ) }</div>\n                        <div class=\"needs-user-data-modal__disclaimer\">\n                            <p>\n                                <div class=\"description\">${ vsprintf( UncannyAutomator.i18n.userSelector.userDataModal.token.forbidden.content.description, [ UncannyAutomator.i18n.uncannyAutomatorPro ] ) } <a href=\"${ addParametersToURL( 'https://automatorplugin.com/pricing/', { 'utm_source':   'uncanny_automator', 'utm_medium': 'select_an_item', 'utm_campaign': 'update_to_pro', 'utm_content': 'requires_user_data',\n                            }) }\" target=\"_blank\">${ UncannyAutomator.i18n.upgradeNow } <span class=\"uo-icon uo-icon--external-link-alt\"></span></a></div>\n                            </p>\n                            <p>\n                                <div class=\"description\">${ UncannyAutomator.i18n.userSelector.userDataModal.token.forbidden.content.upgradeLater } <a href=\"${ addParametersToURL( 'https://automatorplugin.com/knowledge-base/creating-a-recipe/#Recipe_types', { 'utm_source': 'uncanny_automator', 'utm_medium': 'select_an_item', 'utm_content': 'requires_user_data-learn-more',\n                            }) }\" target=\"_blank\">${ UncannyAutomator.i18n.learnMore } <span class=\"uo-icon uo-icon--external-link-alt\"></span></a></div>\n                            </p>\n                        </div>\n                    </div>\n                `,\n                buttons: {\n                    cancel:  UncannyAutomator.i18n.userSelector.userDataModal.token.forbidden.cancelButton,\n                    confirm: UncannyAutomator.i18n.userSelector.userDataModal.token.forbidden.confirmButton,\n                }\n            }, {\n                size: 'large'\n            });\n\n            modal.setEvents({\n                onConfirm: () => {\n                    // Close and destroy modal\n                    modal.destroy();\n\n                    // Open link in new tab\n                    openInNewTab( addParametersToURL( 'https://automatorplugin.com/pricing/', { 'utm_source':   'uncanny_automator', 'utm_medium': 'add_token', 'utm_campaign': 'update_to_pro', 'utm_content': 'requires_user_data',\n                            }) );\n\n                    // Remove token\n                    if ( isDefined( callbacks.removeToken ) ){\n                        callbacks.removeToken();\n                    }\n\n                    // Can't add, confirm\n                    if ( isDefined( callbacks.forbiddenConfirm ) ){\n                        callbacks.forbiddenConfirm();\n                    }\n                },\n                onCancel: () => {\n                    // Close and destroy modal\n                    modal.destroy();\n\n                    // Remove token\n                    if ( isDefined( callbacks.removeToken ) ){\n                        callbacks.removeToken();\n                    }\n\n                    // Can't add, cancel\n                    if ( isDefined( callbacks.forbiddenCancel ) ){\n                        callbacks.forbiddenCancel();\n                    }\n                },\n            });\n        }\n        else {\n            // Check if we should set the recipe to draft when the user adds the action\n            // We're doing this because the user will need to fill the User Selector\n            const actionWillSetRecipeToDraft = UncannyAutomator.recipe.isLive;\n\n            modal = new Modal({\n                title:   `${ UncannyAutomator.i18n.userSelector.userDataModal.action.allowed.title } <span class=\"needs-user-data-modal-pro-badge needs-user-data-modal-pro-badge--gray\">${ UncannyAutomator.i18n.proOnly.pro }</span>`,\n                content: `\n                    <div class=\"needs-user-data-modal\">\n                        <div class=\"needs-user-data-modal__title\">${ vsprintf( UncannyAutomator.i18n.userSelector.userDataModal.token.allowed.content.mustRunOnUser, [ $tokenNode.outerHTML ] ) }</div>\n                        <div class=\"needs-user-data-modal__disclaimer\">\n                            <div class=\"description\">${ UncannyAutomator.i18n.userSelector.userDataModal.token.allowed.content.description }</div>\n                        </div>\n                    </div>\n                `,\n                buttons: {\n                    cancel:  UncannyAutomator.i18n.userSelector.userDataModal.token.allowed.cancelButton,\n                    confirm: UncannyAutomator.i18n.userSelector.userDataModal.token.allowed.confirmButton,\n                },\n            }, {\n                size: 'large',\n            });\n\n            modal.setEvents({\n                onConfirm: () => {\n                    let modalElements = modal.getElements();\n\n                    // Add loading class to button\n                    modalElements.modal.box.buttons.confirm.addClass( 'uap-btn--loading' ).prop( 'disabled', true );\n\n                    // Do an AJAX call to set the global recipe requires user\n                    recipeSetRequiresUser(\n                        // Set to true (requires user)\n                        true,\n                        // On success\n                        ( response ) => {\n                            // On success, close and destroy the modal\n                            modal.destroy();\n\n                            // Render the tokens again, some might be missing\n                            this.renderTokens();\n                        },\n                        // On fail\n                        ( response ) => {\n                            // Remove loading class to button\n                            modalElements.modal.box.buttons.confirm.removeClass( 'uap-btn--loading' ).prop( 'disabled', false );\n                        }\n                    );\n\n                    // Do a call to set the recipe to draft\n                    if ( actionWillSetRecipeToDraft ){\n                        UncannyAutomator.recipe.publish.statusToggle.setValue( false );\n                    }\n\n                    // Can add, confirm\n                    if ( isDefined( callbacks.allowedConfirm ) ){\n                        callbacks.allowedConfirm();\n                    }\n                },\n                onCancel: () => {\n                    // Close and destroy modal\n                    modal.destroy();\n\n                    // Remove token\n                    if ( isDefined( callbacks.removeToken ) ){\n                        callbacks.removeToken();\n                    }\n\n                     // Can add, confirm\n                    if ( isDefined( callbacks.allowedCancel ) ){\n                        callbacks.allowedCancel();\n                    }\n                },\n            });\n        }\n    }\n}\n\nclass TokenSelectorTextarea extends TokenSelectorInput {\n    constructor( Field ){\n        super( Field );\n\n        // Check if it supports TinyMCE\n        if ( this.Field.attributes.supportsTinyMCE ){\n            // TinyMCE methods\n            this.Field.getField().on( 'ua-tinymce-ready', () => {\n                // Get the CodeMirror editor\n                this.getTinyMCEEditor();\n\n                // Add styles to the editor\n                this.addStylesToEditor();\n\n                // Parse tokens in the TinyMCE editor\n                setTimeout(() => {\n                    this.parsePlainTokensInTinyMCE();\n                }, this.data.tokenRenderingDebounce );\n\n                // Parse tokens in the text editor\n                setTimeout(() => {\n                    this.parseHTMLTokensInPlainTextarea();\n                }, this.data.tokenRenderingDebounce );\n                \n                // Handle requests to add tokens to the field\n                this.handleAddTokens();\n\n                // Handle tokens added to the textarea (HTML)\n                this.handleHTMLTokensInPlainTextarea();\n\n                // Handle tokens added to TinyMCE (plain)\n                this.handlePlainTokensInTinyMCE();\n            });\n        }\n    }\n\n    setData(){\n        this.data = {\n            tokenRenderingDebounce: 200,\n            tokenCSSClass: 'uap-token-tinymce' \n        }\n    }\n\n    render(){\n        this.RenderTokenSelector = new RenderTokenSelector( this.Field, this.tokens );\n    }\n\n    insertTextAtCursor( token = '' ){\n        // Check if \"Text\" view is selected\n        // Insert using CodeMirror methods\n        if (\n            // Doesn't have TinyMCE\n            ! isDefined( this.tinyMCEeditor )\n            // It has TinyMCE, but it's hidden\n            || isDefined( this.tinyMCEeditor ) && this.tinyMCEeditor.hidden\n        ){\n            // Insert content in the CM field at the current position\n            this.editor.doc.replaceRange( token, this.editor.doc.getCursor() );\n        }\n        // Insert using TinyMCE methods\n        else {\n            // Token without brackets\n            token = token.replace( '{{', '' ).replace( '}}', '' );\n\n            // Get the token HMTL\n            const $tokenNode = this.createTokenDOMNode( token );\n\n            // Check if the token needs user data\n            // Because of how TinyMCE works, we have to do this here\n            if (\n                // Check if the recipe is anonymous\n                UncannyAutomator.recipe.type == 'anonymous'\n                // Check if the recipe currently doesn't require user data\n                && ! UncannyAutomator.recipe.requiresUserData\n                // Check if the current tokens requires user data\n                && (\n                    // Check if the current tokens requires user data\n                    this.tokensThatRequireUser.includes( token )\n                    // Check if it's the user meta token\n                    || token.startsWith( 'USERMETA:' )\n                )\n            ){\n                this.tokenNeedsUserModal( $tokenNode, {\n                    allowedConfirm: () => {\n                        // Insert token\n                        this.tinyMCEeditor.execCommand( 'mceInsertContent', false, `<span class=\"${ this.data.tokenCSSClass }\" contenteditable=\"false\" data-token-id=\"${ token }\">${ $tokenNode.outerHTML }</span>` );\n\n                        // Trigger a change event in the field\n                        this.Field.getField()\n                            .trigger( 'change input' );\n                            }\n                });\n            }\n            else {\n                // Insert token\n                this.tinyMCEeditor.execCommand( 'mceInsertContent', false, `<span class=\"${ this.data.tokenCSSClass }\" contenteditable=\"false\" data-token-id=\"${ token }\">${ $tokenNode.outerHTML }</span>` );\n\n                // Trigger a change event in the field\n                this.Field.getField()\n                    .trigger( 'change input' );\n            } \n        }\n    }\n\n    getTinyMCEEditor(){\n        this.tinyMCEeditor = this.Field.fieldTinyMCE;\n    }\n\n    addStylesToEditor(){\n        this.tinyMCEeditor.dom.addStyle( `\n            html body {\n                font-family: -apple-system, system-ui, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n                font-size: 15px;\n                margin-left: 12px;\n                margin-right: 12px;\n            }\n\n            .uap-token {\n                display: inline-flex;\n                align-items: center;\n                background: #eee;\n                line-height: 1;\n                padding: 3px 8px;\n                border-radius: 150px;\n\n                font-size: 15px;\n                font-family: -apple-system, system-ui, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n                -webkit-font-smoothing:antialiased;\n                -moz-osx-font-smoothing:grayscale;\n            }\n\n                .uap-token-tinymce {\n                    display: inline-block;\n                    line-height: 1;\n                    border-radius: 150px;\n                    box-shadow: 0 0 0 2px transparent;\n                    transition: box-shadow 150ms ease-in-out;\n                    cursor: pointer;\n                }\n\n                .uap-token-tinymce[data-mce-selected=\"1\"] {\n                    outline: 0 !important;\n                    box-shadow: 0 0 0 2px #0790e8;\n                }\n\n                .uap-token img {\n                    width: 12px;\n                    height: 11px;\n                    margin-right: 5px;\n                    object-fit: contain;\n                    object-position: center;\n                    display: block;\n                }\n\n                .uap-token .uo-icon {\n                    width: 14px;\n                    height: 14px;\n                    border: 1px solid #444;\n                    border-radius: 50%;\n                    font-size: 9px;\n                    color: #444;\n                    text-align: center;\n                    line-height: 15px;\n                    background: #fff;\n                    opacity: .8;\n                    margin-right: 5px;\n                    position: relative;\n                }\n\n                    .uap-token .uo-icon.uo-icon--bolt:before {\n                        content: '';\n\n                        width: 9px;\n                        height: 9px;\n\n                        background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 384 512'%3E%3Cpath fill='%23444' d='M377.8 167.9c-8.2-14.3-23.1-22.9-39.6-22.9h-94.4l28.7-87.5c3.7-13.8.8-28.3-7.9-39.7C255.8 6.5 242.5 0 228.2 0H97.7C74.9 0 55.4 17.1 52.9 37.1L.5 249.3c-1.9 13.8 2.2 27.7 11.3 38.2C20.9 298 34.1 304 48 304h98.1l-34.9 151.7c-3.2 13.7-.1 27.9 8.6 38.9 8.7 11.1 21.8 17.4 35.9 17.4 16.3 0 31.5-8.8 38.8-21.6l183.2-276.7c8.4-14.3 8.4-31.5.1-45.8zM160.1 457.4L206.4 256H47.5L97.7 48l127.6-.9L177.5 193H334L160.1 457.4z'%3E%3C/path%3E%3C/svg%3E\");\n\n                        background-size: contain;\n                        background-position: center;\n                        background-repeat: no-repeat;\n\n                        position: absolute;\n                        top: 50%;\n                        left: 50%;\n                        transform: translate(-50%,-50%);\n                    }\n\n                .uap-token__name {\n                    color: #444444;\n                    font-size: 14px;\n                    font-weight: 600;\n                }\n\n                    .uap-token--invalid {\n                        background: #f9e2e2;\n                    }\n\n                    .uap-token--invalid .uo-icon {\n                        color: #c00;\n                        border-color: #c00;\n                    }\n\n        ` );\n    }\n\n    handleHTMLTokensInPlainTextarea(){\n        // Listen changes to the field\n        this.Field.getField()\n            .on( 'change input',\n                debounce(() => {\n                    // Parse tokens\n                    this.parseHTMLTokensInPlainTextarea();\n                }, this.data.tokenRenderingDebounce )\n            );\n\n        // Trigger a change event in the text field \n        // when the user changes to the \"Text\" tab\n        this.Field.getField()\n            .on( 'ua-tinymce-activate-text-view', () => {\n                // Parse tokens\n                setTimeout(() => {\n                    this.parseHTMLTokensInPlainTextarea();\n                }, this.data.tokenRenderingDebounce );\n            });\n    }\n\n    handlePlainTokensInTinyMCE(){\n        // Trigger a change event in the text field \n        // when the user changes to the \"Text\" tab\n        this.Field.getField()\n            .on( 'ua-tinymce-activate-visual-view', () => {\n                // Parse tokens in the editor\n                setTimeout(() => {\n                    this.parsePlainTokensInTinyMCE();\n                }, this.data.tokenRenderingDebounce );\n            });\n    }\n\n    parsePlainTokensInTinyMCE(){\n        // Get the content of the TinyMCE field\n        const editorContent = this.tinyMCEeditor.getContent({\n            format: 'raw'\n        });\n\n        // Render the tokens\n        const editorContentWithTokens = this.renderTextWithTokens(\n            editorContent,\n            {\n                // 1. Token HTML, 2. Token ID\n                template: `<span class=\"${ this.data.tokenCSSClass }\" contenteditable=\"false\" data-token-id=\"%2$s\">%1$s</span>`\n            }\n        );\n\n        // Check if the content is different\n        if ( editorContent != editorContentWithTokens ){\n            // Set the content again\n            this.tinyMCEeditor.setContent( editorContentWithTokens.innerHTML );\n        }   \n    }\n\n    parseHTMLTokensInPlainTextarea(){\n        // Get the content of the field\n        let content = this.Field.getField().val();\n\n        // Remove the HTML and leave the tokens as plain text\n        let $temporalContainer = document.createElement( 'div' );\n        $temporalContainer.innerHTML = content;\n\n        // Get the HTML tokens\n        const $tokens = $temporalContainer.querySelectorAll( `.${ this.data.tokenCSSClass }` );\n\n        // Check if it has tokens\n        // Otherwise, do nothing\n        if ( $tokens.length > 0 ){\n            // Iterate the tokens\n            $tokens.forEach(( $tokenNode ) => {\n                // Get the token ID\n                const tokenID = $tokenNode.dataset.tokenId;\n\n                // Replace the tokenNode with the tokenID\n                $tokenNode.outerHTML = `{{${ tokenID }}}`;\n            });\n\n            // Update the content\n            content = $temporalContainer.innerHTML;\n\n            // Set the value of the normal field\n            // But don't trigger the change event\n            try {\n                this.editor.setValue( content );\n            } catch ( e ){\n                this.Field.getField().val( content );\n            }\n        }    \n    }\n\n    destroy(){\n        this.RenderTokenSelector.destroy();\n    }\n}\n\nclass RenderTokenSelector {\n    constructor( Field, tokens ){\n        this.Field  = Field;\n        this.tokens = tokens;\n\n        // Get data\n        this.getData();\n\n        // Get elements\n        this.getElements();\n\n        // Create wrapper\n        this.createWrapper();\n\n        // Create filter\n        this.createFilter();\n\n        // Create groups of tokens\n        this.createGroupsOfTokens();\n\n        // Open tokens on click\n        this.listenToggleButton();\n\n        // Resize dropdown on window resize\n        this.resizeDropdownOnWindowResize();\n\n        // Resize on scroll\n        this.resizeDropdownOnWindowScroll();\n\n        // Refresh when the field value changes\n        this.refreshOnFieldChange();\n\n        // Search\n        this.search();\n\n        // Set default filter\n        if ( this.shouldSupportFilters() ){\n            this.setFilter( true );\n        }\n    }\n\n    getData(){\n        this.data = {\n            isOpen:   false,\n            position: 'below'\n        }\n    }\n\n    getElements(){\n        this.$elements = {\n            wrapper: null,\n            toggleButton: null,\n            searchField: null,\n            dropdown: null,\n            allGroups: null,\n            dropdownGroupsContainer: null,\n            dropdownTokens: null,\n            noResultsOption: null\n        };\n    }\n\n    createWrapper(){\n        const $wrapper = $( `\n            <div class=\"form-variable\">\n                <div class=\"form-variable__element\">\n                    <div class=\"form-variable__render-container\"></div>\n                    <div class=\"form-variable__toggle\">\n                        <span class=\"uo-icon uo-icon--asterisk\"></span>\n                    </div>\n                </div>\n                <div class=\"form-variable__dropdown\">\n                    <div class=\"form-variable__dropdown-container\">\n                        <div class=\"form-variable__search\">\n                            <input \n                                class=\"form-variable__search-input\" \n                                placeholder=\"${ UncannyAutomator.i18n.tokens.search }\"\n                            >\n                        </div>\n                        <div class=\"form-variable__groups\"></div>\n                    </div>\n                </div>\n            </div>\n        ` );\n\n        // Get the fields that we have to move\n        const $fieldsToMove = [];\n\n        // Check if it's a textarea\n        if ( this.Field.type == 'textarea' ){\n            $fieldsToMove.push( this.Field.getField() );\n        }\n\n        // Check if the CodeMirror field is defined\n        if ( isDefined( this.Field.getFieldCM() ) ){\n            $fieldsToMove.push( this.Field.getFieldCM() );\n        }\n\n        // Move the fields\n        $fieldsToMove.forEach(( $field ) => {\n            // Move the field\n            $wrapper\n                .insertAfter( $field );\n\n            $wrapper\n                .find( '.form-variable__render-container' )\n                .append( $field );\n        });\n\n        // Save the element\n        this.$elements.wrapper = $wrapper;\n\n        // Save the element that has the field inside\n        this.$elements.renderContainer = $wrapper\n            .find( '.form-variable__render-container' );\n\n        // Save the search field container\n        this.$elements.searchFieldContainer = $wrapper.find( '.form-variable__search' );\n\n        // Save the search field\n        this.$elements.searchField = $wrapper.find( '.form-variable__search-input' );\n\n        // Save the toggle button\n        this.$elements.toggleButton = $wrapper.find( '.form-variable__toggle' );\n\n        // Save the dropdown\n        this.$elements.dropdown = $wrapper.find( '.form-variable__dropdown' );\n\n        // Save the container of the groups\n        this.$elements.dropdownGroupsContainer = $wrapper.find( '.form-variable__groups' );\n    }\n\n    createFilter(){\n        // Check if it's a field that should filter tokens\n        if ( this.shouldSupportFilters() ){\n            // Get the field type\n            const fieldType = this.Field.attributes.fieldType;\n\n            // Get the field type human-readable name\n            const fieldTypeHumanReadable = isDefined( UncannyAutomator.i18n.tokens.tokenType[ fieldType ] ) ? UncannyAutomator.i18n.tokens.tokenType[ fieldType ] : fieldType;\n\n            // Create filter container\n            const $filterContainer = $( `\n                <div class=\"form-variable__filter\"></div>\n            ` );\n\n            // Create checkbox\n            const filterToggle = new Field( 'checkbox', {\n                optionCode:   'token__enableFilter',\n                currentValue: true,\n                label: `<span class=\"form-variable__filter-label\">` + vsprintf( UncannyAutomator.i18n.tokens.filter, [ `<span class=\"form-variable__filter-type\">${ fieldTypeHumanReadable }</span>` ] ) + `<span>`,\n            });\n\n            // Get checkbox form element\n            const $filterFormElement = filterToggle.createFormElement();\n\n            // Add the field\n            $filterContainer.prepend( $filterFormElement );\n\n            // Add filter to the DOM\n            this.$elements.searchFieldContainer.append( $filterContainer );\n\n            // Save the filter container\n            this.$elements.filterContainer = $filterContainer;\n\n            // Listen changes to the checkbox value\n            $filterFormElement.on( 'automator:field:change', () => {\n                // Get value\n                const filterValue = filterToggle.getValue();\n\n                // Check if we have to filter or remove the filter\n                if ( filterValue ){\n                    this.setFilter( true );\n                }\n                else {\n                    this.setFilter( false );\n                }\n            });\n        }    \n    }\n\n    createGroupsOfTokens(){\n        // Get the container\n        const $container = this.$elements.wrapper.find( '.form-variable__groups' );\n\n        // Iterate the groups of tokens\n        this.tokens.forEach(( groupOfTokens ) => {\n            $container.append( this.createIndividualGroupOfTokens( groupOfTokens ) );\n        });\n\n        // Save all the groups\n        this.$elements.allGroups = $container.find( '.form-variable__group' );\n\n        // Save all the items\n        this.$elements.dropdownTokens = $container.find( '.form-variable__group-item' );\n\n        // Add the \"no results\" option\n        this.$elements.noResultsOption = $( `\n            <div class=\"form-variable__group-item-no-results form-variable__group-item-no-results--hide\">\n                <div class=\"form-variable__group-item-no-results-title\">\n                    ${ UncannyAutomator.i18n.tokens.noResults }\n                </div>\n                <div class=\"form-variable__group-item-no-results-description\">\n                    ${ this.shouldSupportFilters() ? UncannyAutomator.i18n.tokens.noResultsDescriptionWithFilter : UncannyAutomator.i18n.tokens.noResultsDescription }\n                </div>\n            </div>\n        ` );\n        $container.append( this.$elements.noResultsOption );\n    }\n\n    createIndividualGroupOfTokens( groupOfTokens ){\n        const $group = $( `\n            <div \n                class=\"form-variable__group\"\n                data-id=\"${ groupOfTokens.id }\"\n            >\n                <div class=\"form-variable__group-source\">\n                    <div class=\"form-variable-group-source__icon\"></div>\n                    <div class=\"form-variable-group-source__description\"></div>\n                    <div class=\"form-variable-group-source__toggle\">\n                        <span class=\"form-variable-group-source__toggle-icon\"></span>\n                    </div>\n                </div>\n                <span class=\"form-variable__group-children\"></span>\n            </div>\n        ` );\n\n        // Add the name\n        const groupName = groupOfTokens.name;\n        if ( ! typeof groupName == 'string' ){\n            groupName = groupName.html.clone();\n        }\n\n        $group\n            .find( '.form-variable-group-source__description' )\n            .append( groupOfTokens.name );\n\n        // Create the icon\n        let $icon = groupOfTokens.icon.clone();\n\n        // Add the icon to the group\n        $group.find( '.form-variable-group-source__icon' ).append( $icon );\n\n        // Get the toggle button\n        const $toggleButton = $group.find( '.form-variable__group-source' );\n        // Listen clicks to the toggle button\n        $toggleButton.on( 'click', () => {\n            $group.toggleClass( 'form-variable__group--open' );\n        });\n\n        // Get the container where we're going to add the tokens\n        const $tokensListContainer = $group.find( '.form-variable__group-children' );\n\n        // Add tokens\n        groupOfTokens.tokens.forEach(( token ) => {\n            let tokenName = ! isEmpty( token.name ) ? token.name : '';\n\n            // Create the token\n            const $token = $( `\n                <div \n                    class=\"form-variable__group-item\"\n                    data-search=\"${\n                        tokenName\n                            .trim()\n                            .toLowerCase()\n                            .replace( /\\s/g, '' )\n                    }\"\n                    data-type=\"${ token.type }\"\n                >\n                    ${ tokenName }\n\n                    ${ UncannyAutomator.recipe.type == 'anonymous' && ! UncannyAutomator.recipe.requiresUserData && isDefined( token.requiresUser ) && token.requiresUser ? '<span class=\"form-variable__group-item-tag\">' + UncannyAutomator.i18n.needsUserData + '</span>' : '' }\n                </div>\n            ` );\n\n            // Check if it's the \"USERMETA:KEY\" token\n            if ( token.id == 'USERMETA:KEY' ){\n                // Listen clicks to the tokens\n                $token.on( 'click', () => {\n                    // Close the token selector\n                    this.close();\n\n                    // Create the content for the modal\n                    const $modalContent = $( `<div></div>` );\n\n                    // Create the field\n                    const metaKeyField = new Field( 'text', {\n                        optionCode: 'token__metaKeyField',\n                        label: UncannyAutomator.i18n.tokens.specialTokens.userMeta.modal.userMetaKey,\n                        description: UncannyAutomator.i18n.tokens.specialTokens.userMeta.modal.userMetaKeyDescription,\n                        isRequired: true,\n                    }); \n\n                    // Add the field\n                    $modalContent.append( metaKeyField.createFormElement() );\n\n                    // Show a modal\n                    const modal = new Modal({\n                        title: UncannyAutomator.i18n.tokens.specialTokens.userMeta.modal.title,\n                        content: $modalContent,\n                        buttons: {\n                            cancel:  UncannyAutomator.i18n.cancel,\n                            confirm: UncannyAutomator.i18n.tokens.specialTokens.userMeta.modal.confirmButton,\n                        }\n                    });\n\n                    modal.setEvents({\n                        afterSetEvents: () => {\n                            modal.show();\n                        },\n                        onConfirm: () => {\n                            // Validate the field\n                            const fieldValidation = metaKeyField.validate();\n\n                            // Get the field value\n                            const fieldValue = metaKeyField.getValue();\n\n                            // Check if the field is valid\n                            if ( fieldValidation.isValid ){\n                                // Clone the token, don't modify the original\n                                token = $.extend( true, {}, token );\n\n                                // Change ID of the token\n                                token.id = token.id.replace( 'KEY', fieldValue );\n\n                                // Change name of the token\n                                token.name = vsprintf( UncannyAutomator.i18n.tokens.global.userMetaKeyTemplate, [ fieldValue ] );\n\n                                // Add the token\n                                this.Field.field.trigger( 'ua-add-token', token );\n\n                                // Destroy the modal\n                                modal.destroy();\n                            }\n                        },\n                        afterHide: function(){\n                            modal.destroy();\n                        }\n                    });\n                });\n            }\n            else {\n                // Listen clicks to the tokens\n                $token.on( 'click', () => {\n                    // Trigger event to add the token\n                    this.Field.field.trigger( 'ua-add-token', token );\n\n                    // Close the token selector\n                    this.close();\n                });\n            }\n\n            // Add token\n            $tokensListContainer.append( $token );\n        });\n\n        return $group;\n    }\n\n    listenToggleButton(){\n        this.$elements.toggleButton.on( 'click', () => {\n            // Check if it's NOT open\n            if ( ! this.data.isOpen ){\n                this.open();\n            }\n            else {\n                this.close();\n            }\n        });\n    }\n\n    search(){\n        // Listen changes to the search field\n        this.$elements.searchField.on( 'input', throttle( () => {\n            // Get the value\n            let query = this.$elements.searchField.val();\n\n            // Remove spaces and make the query lowercase\n            query = query\n                .trim()\n                .toLowerCase()\n                .replace( /\\s/g, '' );\n\n            if ( ! isEmpty( query ) ){\n                // Open all groups of tokens\n                this.$elements.allGroups\n                    .addClass( 'form-variable__group--open' );\n\n                // Hide all elements\n                this.$elements.dropdownTokens\n                    .addClass( 'form-variable__group-item--hidden-by-search' );\n\n                // Get search matches\n                const $searchMatches = this.$elements.dropdownTokens\n                    .filter(( i, token ) => {\n                        return token.dataset.search.search( query ) !== -1\n                    }\n                );\n\n                // Show the search matches\n                $searchMatches\n                    .removeClass( 'form-variable__group-item--hidden-by-search' );\n            }\n            else {\n                // Close all groups\n                this.$elements.allGroups\n                    .removeClass( 'form-variable__group--open' );\n\n                // Show all tokens\n                this.$elements.dropdownTokens\n                    .removeClass( 'form-variable__group-item--hidden-by-search' );\n            }\n\n            // Set the visibility of the group of tokens\n            this.updateGroupsOfTokensVisibility();\n        }, 30 ) );\n    }\n\n    setFilter( filterByType = true ){\n        // Check if we have to filter\n        if ( filterByType ){\n            // Hide all elements\n            this.$elements.dropdownTokens\n                .addClass( 'form-variable__group-item--hidden-by-filter' );\n\n            // Get the tokens by type\n            const $tokensByType = this.$elements.dropdownTokens\n                .filter(( i, token ) => {\n                    // Check if the field is a \"float\" field. In that case,\n                    // promote all the \"int\" tokens to \"float\". All integers\n                    // are floats\n                    const tokenType = ( token.dataset.type == 'int' && this.Field.attributes.fieldType == 'float' ) ? 'float' : token.dataset.type;\n\n                    // Return the tokens that match the field type\n                    return tokenType == this.Field.attributes.fieldType;\n                }\n            );\n\n            // Show the tokens that match the field type\n            $tokensByType\n                .removeClass( 'form-variable__group-item--hidden-by-filter' );\n        }\n        else {\n            // Show all tokens\n            this.$elements.dropdownTokens\n                .removeClass( 'form-variable__group-item--hidden-by-filter' );\n        }\n\n        // Set the visibility of the group of tokens\n        this.updateGroupsOfTokensVisibility();\n    }\n\n    updateGroupsOfTokensVisibility(){\n        // this.$elements.allGroups\n            // .removeClass( 'form-variable__group--open' );\n\n        // Create the variable that we will use to evaluate\n        // if there are available tokens\n        let hasResults = false;\n\n        // Show all the groups of tokens\n        this.$elements.allGroups\n            .removeClass( 'form-variable__group--without-available-tokens' );\n\n        // Hide the group of tokens that don't have available tokens\n        this.$elements.allGroups\n            .filter(( i, group ) => {\n                // Check if the group has available tokens\n                const groupHasAvailableTokens = group\n                    .querySelectorAll( '.form-variable__group-item:not(.form-variable__group-item--hidden-by-filter):not(.form-variable__group-item--hidden-by-search)' )\n                    .length > 0;\n\n                // If it doesn't have available tokens, then hide the group\n                if ( ! groupHasAvailableTokens ){\n                    group.classList.add( 'form-variable__group--without-available-tokens' );\n                }\n                else {\n                    // The group has available tokens, update \"hasResults\"\n                    hasResults = true;\n                }\n            }\n        );\n\n        // Check if there are available tokens at all\n        if ( hasResults ){\n            this.$elements.noResultsOption\n                .addClass( 'form-variable__group-item-no-results--hide' );\n        }\n        else {\n            this.$elements.noResultsOption\n                .removeClass( 'form-variable__group-item-no-results--hide' );\n        }\n    }\n\n    open(){\n        // If it's a date or time field, try to close\n        // the calendar\n        if ( [ 'date', 'time' ].includes( this.Field.attributes.fieldType ) ){\n            try {\n                this.Field.flatpickrInstance.close();\n            } catch ( e ){}\n        }\n\n        // Add open class\n        this.$elements.wrapper.addClass( 'form-variable--open' );\n\n        // Save status\n        this.data.isOpen = true;\n\n        // Listen clicks outside the token selector and close it\n        this.closeWhenClickedOutside();\n\n        // Reset the search field (remove the value)\n        this.$elements.searchField\n            .val( '' )\n            .trigger( 'input' )\n            // Set padding of the search field depending on the width\n            // of the checkbox label\n            .css({\n                'padding-right': `${ ( ( isDefined( this.$elements.filterContainer ) ? this.$elements.filterContainer.outerWidth() : 0 ) + 12 ) }px`\n            });;\n\n        // Focus the search field\n        this.$elements.searchField\n            .focus();\n                                \n        // Determine direction of the selector\n        this.setDropdownDirection();\n\n        // Set scroll\n        this.setDropdownHeight();\n    }\n\n    close(){\n        this.$elements.wrapper.removeClass( 'form-variable--open' );\n\n        // Save status\n        this.data.isOpen = false;\n\n        // Rest input value and trigger 'input' event\n        this.$elements.searchField\n            .val( '' )\n            .trigger( 'input' );\n\n        // Stop listening clicks outside the token selector\n        $( document ).off( 'mouseup.uap-token-selector-click-outside' );\n    }\n\n    destroy(){\n        // Remove all the elements but the original field\n        this.$elements.renderContainer.children().insertAfter( this.$elements.wrapper );\n        this.$elements.wrapper.remove();\n    }\n\n    closeWhenClickedOutside(){\n        $( document ).on( 'mouseup.uap-token-selector-click-outside', ( event ) => {\n            // Set the targetted container\n            const $container = this.$elements.wrapper;\n\n            if ( ! $container.is( event.target ) && $container.has( event.target ).length === 0 ){\n                // Hide\n                this.close();\n            }\n        });\n    }\n\n    getDropdownPosition(){\n        const $window = $( window );\n\n        const position = {}\n        position.above = this.$elements.wrapper.offset().top - $window.scrollTop();\n        position.below = $window.height() - ( position.above + this.$elements.wrapper.outerHeight() );\n\n        // Check if the current field is a textarea\n        if ( this.Field.type == 'textarea' ){\n            // Recalculate the space below\n            position.below = $window.height() - ( position.above + 38 );\n        }\n\n        // Add \"real size\" class. We're using this to\n        // get the real size of the dropdown\n        this.$elements.dropdown.addClass( 'uo-realsize' );\n        // Get the dropdown height\n        const dropdownHeight = this.$elements.dropdown.outerHeight() + 110; // + 75px to show at least 1 option\n        this.$elements.dropdown.removeClass( 'uo-realsize' );\n\n        // Show dropdown always below for textareas\n        if ( this.Field.type == 'textarea' ){\n            position.hasSpaceBelow = true;\n        }\n        else {\n            position.hasSpaceBelow = position.below >= dropdownHeight;\n        }\n\n        return position;\n    }\n\n    setDropdownDirection(){\n        // Get the position of the dropdown\n        const position = this.getDropdownPosition();\n\n        // Remove the position classes\n        this.$elements.wrapper.removeClass( 'form-variable--above form-variable--below' );\n\n        // Determine the position\n        if ( position.below > position.above || position.hasSpaceBelow ){\n            // Let's show it below\n            this.$elements.wrapper.addClass( 'form-variable--below' );\n\n            // Save the position\n            this.data.position = 'below';\n        }\n        else {\n            // Let's show it above\n            this.$elements.wrapper.addClass( 'form-variable--above' );\n\n            // Save the position\n            this.data.position = 'above';\n        }\n    }\n\n    setDropdownHeight(){\n        // Check if it's open\n        if ( this.data.isOpen ){\n            // Get the max height of the dropdown\n            const maxHeight = this.getDropdownPosition()[ this.data.position ] - this.$elements.searchField.outerHeight() - 45;\n\n            // Set the max height\n            this.$elements.dropdownGroupsContainer\n                .css({ \n                    'max-height' : `${ maxHeight }px`\n                });\n        }\n    }\n\n    focusSearchField(){\n        this.$elements.searchField\n            .focus();\n    }\n\n    resizeDropdownOnWindowResize(){\n        $( window ).on( 'resize', \n            throttle( () => {\n                // Determine direction of the selector\n                this.setDropdownDirection();\n\n                // Set height\n                this.setDropdownHeight();\n            }, 20 )\n        );\n    }\n\n    resizeDropdownOnWindowScroll(){\n        $( window ).on( 'scroll', \n            debounce( () => {\n                // Determine direction of the selector\n                this.setDropdownDirection();\n\n                // Set height\n                this.setDropdownHeight();\n            }, 300 )\n        );\n    }\n\n    refreshOnFieldChange(){\n        // CodeMirror methods\n        this.Field.formElement.on( 'automator:field:change', () => {\n            // Determine direction of the selector\n            this.setDropdownDirection();\n\n            // Set height\n            this.setDropdownHeight();\n        });\n    }\n\n    shouldSupportFilters(){\n        // Get the field type\n        const fieldType = this.Field.attributes.fieldType;\n\n        return [ 'email', 'int', 'float', 'url', 'date', 'time' ].includes( fieldType );\n    }\n}","import $ from 'jquery';\n\nimport flatpickr from \"flatpickr\";\n\nimport {\n\tAJAXRequest,\n\tcompareStrings,\n\tgetCurrentFieldsValues,\n\tgetField,\n\tgetFieldTypes,\n\tgetUniqueId,\n\tinArray,\n\tisDefined,\n\tisEmpty,\n\tdebounce,\n\tremoveSpaces,\n\tvsprintf\n} from './Utilities';\n\nimport {\n\tinitURLChecker,\n\tvalidateField\n} from './Validation';\n\nimport TokenSelector from './tokens/token-selector';\n\n/**\n * Create a field\n *\n * @since 0.4\n *\n * @param {string}              type - Field type\n * @param {object}              attributes - Object with information about the field\n * @param {string}              attributes.itemType             Item type. Valid values are trigger, action and closure.\n * @param {int}                 attributes.itemID               ID of the recipe item\n * @param {(null|string|array)} attributes.defaultValue         Default value of the field\n * @param {string}              attributes.currentValue         Current value of the field\n * @param {string}              attributes.placeholder          Placeholder of the field\n * @param {string}              attributes.isHidden             Defines if the field should be hidden\n * @param {string}              attributes.label                Label of the field\n * @param {string}              attributes.description          Description of the field\n * @param {object}              attributes.options              Only used if the field is a select. All the options of the select.\n * @param {null|string}         [attributes.color]              Only used for checkboxes. Valid values are null, 'gutenberg' or 'green'\n * @param {null|string}         [attributes.align]              Only used for checkboxes. Valid values are null, 'left' or 'right'\n * @param {object}              [attributes.toggle]             Only used for checkboxes. Has On and Off strings\n * @param {string}              [attributes.toggle.on]          String shown when the toggle is selected\n * @param {string}              [attributes.toggle.off]         String shown when the toggle is unselected\n *\n * @param {boolean}             attributes.isAjax               Only used if the field is a select. Add listner for the AJAX request.\n * @param {(null|string|array)} attributes.targetField          Only used if the field is a select. AJAX return values and populate this field.\n * @param {string}              attributes.integrationID        Integration of plugin\n * @param {string}              attributes.endPoint             endPoint for Ajax Call\n */\n\nclass Field {\n\tconstructor( type, attributes, createDOMelements = true, customValidationFunction = null ){\n\t\tthis.type = type;\n\t\t\n\t\tthis.attributes \t\t\t  = this.setAttributes( attributes );\n\t\tthis.customValidationFunction = customValidationFunction;\n\n\t\tif ( createDOMelements ){\n\t\t\tthis.createFormElement();\n\t\t}\n\t}\n\n\t/**\n\t * Create a jQuery DOM element with the field\n\t *\n\t * @since 0.3\n\t */\n\n\tcreateFormElement( initLibraries = true ){\n\t\t// Create response object\n\t\tlet response = null;\n\n\t\t// Local variables\n\t\tlet type = this.type;\n\t  \tlet attributes = this.attributes;\n\n\t\t// Check if it's a valid field type\n\t\tif ( inArray( type, getFieldTypes() ) ){\n\t\t\t// Create form element container, this is global\n\t\t\tlet formElement = $( '<div/>', { 'class': 'form-element' } );\n\n\t\t\t// Check the user is trying to add a custom class to the formElement element\n\t\t\tif ( isDefined( attributes.formElementClass ) ){\n\t\t\t\tformElement.addClass( attributes.formElementClass );\n\t\t\t}\n\n\t\t\t// Fields attributes, those will be added to the field jQuery object\n\t\t\tlet fieldAttributes = {\n\t\t\t\t'name':                  attributes.optionCode,\n\t\t\t\t'id':                    attributes.uniqueFieldID,\n\n\t\t\t\t'data-isajax':           attributes.isAjax,\n\t\t\t\t'data-targetfield':      attributes.targetField,\n\t\t\t\t'data-integrationid':    attributes.integrationID,\n\t\t\t\t'data-endPoint':         attributes.endPoint,\n\n\t\t\t\t'data-supportsTokens':   attributes.supportsTokens,\n\t\t\t\t'data-supportsTinymce':  attributes.supportsTinyMCE,\n\t\t\t\t'data-required':         attributes.isRequired,\n\t\t\t\t'data-item_type':        attributes.itemType,\n\t\t\t\t'data-item-id':          attributes.itemId,\n\n\t\t\t\t'data-option-group':     attributes.groupId,\n\n\t\t\t\t'data-is-hidden':        attributes.isHidden,\n\t\t\t\t'data-is-child-field':   attributes.isChildField,\n\t\t\t}\n\n\t\t\t// Define field container variable once. An different jQuery object will be created based on the field type\n\t\t\tlet fieldContainer, field;\n\n\t\t\t// Create field based in field type\n\t\t\tswitch ( type ){\n\t\t\t\tcase 'select':\n\t\t\t\t\t// Field container\n\t\t\t\t\tfieldContainer = $( '<div/>', {\n\t\t\t\t\t\t'class': 'form-select'\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.fieldContainer = fieldContainer;\n\n\t\t\t\t\t// Create select element and add fieldAttributes to jQuery object. Merge second object into fieldAttributes, recursively\n\t\t\t\t\tfield = $( '<select/>', $.extend( {}, fieldAttributes, {\n\t\t\t\t\t\t'data-type': 'select',\n\t\t\t\t\t\t'class':\t 'form-element__select',\n\t\t\t\t\t\t'data-supports-custom-value': attributes.supportsCustomValue,\n\t\t\t\t\t}));\n\n\t\t\t\t\t// Check if it supports multiple values\n\t\t\t\t\tif ( attributes.supportsMultipleValues ){\n\t\t\t\t\t\t// Make it a multiple select\n\t\t\t\t\t\tfield.prop( 'multiple', 'multiple' );\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.field = field;\n\n\t\t\t\t\tlet hasSelectedOption = false,\n\t\t\t\t\t\tnumberOfOptions = 0,\n\t\t\t\t\t\tdefaultValue,\n\t\t\t\t\t\tdefaultOptionExists;\n\n\t\t\t\t\t// Check if it has default option and get the default option's value\n\t\t\t\t\tif ( attributes.hasDefaultValue ){\n\t\t\t\t\t\tif ( ! isEmpty( attributes.defaultValue.option_value ) && ! isEmpty( attributes.defaultValue.option_name ) ){\n\t\t\t\t\t\t\t// The default option has value and name, so we have to add a new option instead of searching for one\n\t\t\t\t\t\t\tdefaultValue = attributes.defaultValue.option_value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdefaultValue = attributes.defaultValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create select options\n\t\t\t\t\tlet $normalOptions = $(\n\t\t\t\t\t\t`<optgroup\n\t\t\t\t\t\t\ttitle=\"form-element__select-normal-options\"\n\t\t\t\t\t\t\tclass=\"form-element__select-normal-options\">\n\t\t\t\t\t\t</optgroup>` \n\t\t\t\t\t);\n\n\t\t\t\t\t// console.log( attributes.label );\n\t\t\t\t\t// console.log( '👉 Original value: ' + attributes.currentValue );\n\n\t\t\t\t\t// Remove the \"automator_custom_value\" option\n\t\t\t\t\tattributes.options = attributes.options.filter(( option ) => {\n\t\t\t\t\t\treturn option.value !== 'automator_custom_value';\n\t\t\t\t\t});\n\n\t\t\t\t\t$.each( attributes.options, function ( value, option_data ){\n\t\t\t\t\t\tlet selectOption = $( '<option/>', {\n\t\t\t\t\t\t\t'value':  option_data.value,\n\t\t\t\t\t\t\t'text':\t  option_data.text\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Check if one of the options value match with the default value. In that case, just select it instead of creating another one with the same value\n\t\t\t\t\t\tif ( attributes.hasDefaultValue && compareStrings( defaultValue, value ) ){\n\t\t\t\t\t\t\tselectOption.prop( 'selected', true );\n\t\t\t\t\t\t\tdefaultOptionExists = true;\n\t\t\t\t\t\t\thasSelectedOption   = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// But also check if the select has a value (and it's not empty), in that case we have to select that one\n\t\t\t\t\t\tif ( attributes.hasValue && compareStrings( attributes.currentValue, option_data.value ) ){\n\t\t\t\t\t\t\tselectOption.prop( 'selected', true );\n\t\t\t\t\t\t\thasSelectedOption = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectOption.appendTo( $normalOptions );\n\t\t\t\t\t\tnumberOfOptions++;\n\t\t\t\t\t});\n\t\t\t\t\t// Append options to the field\n\t\t\t\t\t$normalOptions.appendTo( field );\n\n\t\t\t\t\t// ⚠️ Check if it's a multiselect\n\t\t\t\t\tif ( attributes.supportsMultipleValues ){\n\t\t\t\t\t\t// If so, check if it's has a current value\n\t\t\t\t\t\tif ( ! isEmpty( attributes.currentValue ) ){\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tfield.val( attributes.currentValue );\n\t\t\t\t\t\t\t} catch ( e ){\n\t\t\t\t\t\t\t\t// console.log( e );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Check if it has a selected value\n\t\t\t\t\t\tif ( ! isEmpty( field.val() ) ){\n\t\t\t\t\t\t\thasSelectedOption = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if an option was selected, if not then check if we have a default option that doesn't exist in the select, in that case, create one\n\t\t\t\t\tif ( attributes.hasDefaultValue && ! defaultOptionExists ){\n\t\t\t\t\t\t// Create option\n\t\t\t\t\t\tif ( ! isEmpty( attributes.defaultValue.option_value ) && ! isEmpty( attributes.defaultValue.option_name ) ){\n\n\t\t\t\t\t\t\tlet defaultOption = $( '<option/>', {\n\t\t\t\t\t\t\t\t'value': attributes.defaultValue.option_value,\n\t\t\t\t\t\t\t\t'text':  attributes.defaultValue.option_name\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif ( ! attributes.hasValue && ! compareStrings( attributes.defaultValue.option_value, attributes.currentValue ) ){\n\t\t\t\t\t\t\t\tdefaultOption.prop( 'selected', true );\n\t\t\t\t\t\t\t\thasSelectedOption = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Add first (or second, if the select has a placeholder)\n\t\t\t\t\t\t\tdefaultOption.prependTo( field );\n\t\t\t\t\t\t\tnumberOfOptions++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if we have to add a placeholder\n\t\t\t\t\tif ( attributes.hasPlaceholder ){\n\t\t\t\t\t\t// Add empty option at the top\n\t\t\t\t\t\tfield.prepend( '<option></option>' );\n\n\t\t\t\t\t\t// If nothing else is selected, then remove the selected\n\t\t\t\t\t\t// value of the select\n\t\t\t\t\t\tif ( ! attributes.hasDefaultValue && ! attributes.hasValue ){\n\t\t\t\t\t\t\tfield.find( 'option:selected' ).prop( 'selected', false );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if this select supports the token selector\n\t\t\t\t\t// If it does, create the \"Custom value\" field\n\t\t\t\t\tif ( attributes.supportsCustomValue ){\n\t\t\t\t\t\tlet customFieldValue = attributes.customValue;\n\n\t\t\t\t\t\t// Create \"Other options\" section\n\t\t\t\t\t\tconst $otherOptions = $( `\n\t\t\t\t\t\t\t<optgroup label=\"${ UncannyAutomator.i18n.validation.field.select.otherOptions }\">\n\t\t\t\t\t\t\t\t<option value=\"automator_custom_value\">${ UncannyAutomator.i18n.validation.field.select.customValue }</option>\n\t\t\t\t\t\t\t</optgroup>\n\t\t\t\t\t\t` );\n\n\t\t\t\t\t\t// Append \"Other options\" to the field\n\t\t\t\t\t\tfield.append( $otherOptions );\n\n\t\t\t\t\t\t// Check if we have to select it\n\t\t\t\t\t\tif ( attributes.hasValue && compareStrings( attributes.currentValue, 'automator_custom_value' ) ){\n\t\t\t\t\t\t\t// Select that option\n\t\t\t\t\t\t\t$otherOptions.find( 'option' ).attr( 'selected', true );\n\t\t\t\t\t\t\thasSelectedOption = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Check if it doesn't have a selected value\n\t\t\t\t\t\tif ( attributes.hasValue && ! hasSelectedOption ){\n\t\t\t\t\t\t\t// Select that option\n\t\t\t\t\t\t\t$otherOptions.find( 'option' ).attr( 'selected', true );\n\t\t\t\t\t\t\thasSelectedOption = true;\n\n\t\t\t\t\t\t\t// Set the current value as the custom value\n\t\t\t\t\t\t\tcustomFieldValue = attributes.currentValue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Create the custom field\n\t\t\t\t\t\tthis.customValueField = new Field( 'text', {\n\t\t\t\t\t\t\titemId: attributes.itemId,\n\t\t\t\t\t\t\titemType: attributes.itemType,\n\n\t\t\t\t\t\t\tisRequired: attributes.isRequired,\n\t\t\t\t\t\t\tisReadOnly: false,\n\t\t\t\t\t\t\tsupportsTinyMCE: false,\n\t\t\t\t\t\t\tsupportsCopyToClipboard: false,\n\t\t\t\t\t\t\tsupportsTokens: attributes.supportsTokens,\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tisAjax: false, //\n\n\t\t\t\t\t\t\tfieldType: 'text', \n\t\t\t\t\t\t\toptionCode: `${ attributes.optionCode }_custom`,\n\n\t\t\t\t\t\t\tlabel: '',\n\t\t\t\t\t\t\tdescription: attributes.hasCustomValueDescription ? attributes.customValueDescription : undefined,\n\t\t\t\t\t\t\tplaceholder: '',\n\t\t\t\t\t\t\tisHidden: false,\n\t\t\t\t\t\t\ttokenName: vsprintf( UncannyAutomator.i18n.validation.field.select.customValueToken, [ attributes.label ]),\n\n\t\t\t\t\t\t\tdefaultValue: null,\n\t\t\t\t\t\t\tcurrentValue: customFieldValue,\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tisChildField: true,\n\t\t\t\t\t\t\tparentOptionCode: attributes.optionCode\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// Has a selected option\n\t\t\t\t\tthis.selectHasSelectedOption = hasSelectedOption;\n\n\t\t\t\t\t// Check if it has options, if it doesn't then add one and disable\n\t\t\t\t\tif ( numberOfOptions == 0 ){\n\t\t\t\t\t\tlet $noResults = $( ( new Option( UncannyAutomator.i18n.noResults, '', true, true ) ) );\n\n\t\t\t\t\t\t$noResults.prop( 'disabled', true );\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.field.find( '.form-element__select-normal-options' ).append( $noResults );\n\n\t\t\t\t\t\tif ( ! this.attributes.supportsCustomValue ){\n\t\t\t\t\t\t\t// Disable the select\n\t\t\t\t\t\t\tthis.field.prop( 'disabled', true );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Bind changes\n\t\t\t\t\tfield.on( 'change', function( event, customData ){\n\t\t\t\t\t\tformElement.trigger( 'automator:field:change', customData );\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'text':\n\t\t\t\tcase 'url':\n\t\t\t\tcase 'email':\n\t\t\t\tcase 'int':\n\t\t\t\tcase 'float':\n\t\t\t\tcase 'date':\n\t\t\t\tcase 'time':\n\t\t\t\t\t// FALLTHROUGH: These fields share the same structure as all of them are input text. The validation is done by another function. For now, these fields types only have two differences, the CSS class added in fieldContainer and the type property of the attributes object added to the field variable.\n\n\t\t\t\t\t// Create CSS classes that will be used by the field container element. This will create classes like \"form-input--url\". They are not used for validation but are useful to add custom CSS to each field\n\t\t\t\t\tlet fieldContainerClass = `form-input form-input--${ type }`;\n\n\t\t\t\t\t// Field container\n\t\t\t\t\tfieldContainer = $( '<div/>', {\n\t\t\t\t\t\t'class': fieldContainerClass\n\t\t\t\t\t} );\n\n\t\t\t\t\t// Add the CodeMirror field\n\t\t\t\t\tthis.$fakeCodemirrorField = $( '<div/>', {\n\t\t\t\t\t\t'class': 'form-element__input-cm'\n\t\t\t\t\t});\n\n\t\t\t\t\tfieldContainer.append( this.$fakeCodemirrorField );\n\n\t\t\t\t\tthis.fieldContainer = fieldContainer;\n\n\t\t\t\t\t// Create input element and add fieldAttributes to jQuery object. Merge second object into fieldAttributes, recursively\n\t\t\t\t\tfield = $( '<input/>', $.extend( {}, fieldAttributes, {\n\t\t\t\t\t\t'class':     'form-element__input',\n\t\t\t\t\t\t'type':      'text',\n\t\t\t\t\t\t'data-type': type,\n\t\t\t\t\t}));\n\n\t\t\t\t\t// Check if maxlength is defined\n\t\t\t\t\tif ( isDefined( attributes.maxLength ) ){\n\t\t\t\t\t\tfield.prop( 'maxlength', attributes.maxLength );\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.field = field;\n\n\t\t\t\t\t// Add tokens CSS class to field. This will be used to render the Token Selector once the element is added to the DOM\n\t\t\t\t\tif ( attributes.supportsTokens ){\n\t\t\t\t\t\tfieldContainer.addClass( 'form-input--token' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if the field has a placeholder and add it\n\t\t\t\t\tif ( attributes.hasPlaceholder ){\n\t\t\t\t\t\tfield.prop( 'placeholder', attributes.placeholder );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if the field has a value and add it\n\t\t\t\t\tif ( attributes.hasValue ){\n\t\t\t\t\t\tfield.prop( 'value', attributes.currentValue );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Now that we now that the field doesn't have a value we can check if the developer defined a default value\n\t\t\t\t\t\tif ( attributes.hasDefaultValue ){\n\t\t\t\t\t\t\tfield.prop( 'value', attributes.defaultValue );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Add \"clear\" button to date and time fields\n\t\t\t\t\tif ( [ 'date', 'time' ].includes( attributes.fieldType ) ){\n\t\t\t\t\t\t// Add button\n\t\t\t\t\t\tconst $clearButton = $( `\n\t\t\t\t\t\t\t\t<div class=\"form-element__input-clear\" uap-tooltip=\"${ UncannyAutomator.i18n.clear }\">\n\t\t\t\t\t\t\t\t\t<span class=\"uo-icon uo-icon--times\"></span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t` );\n\n\t\t\t\t\t\t// Add class to the container\n\t\t\t\t\t\tfieldContainer\n\t\t\t\t\t\t\t.addClass( 'form-input--has-clear' );\n\n\t\t\t\t\t\t// Append the clear button\n\t\t\t\t\t\tthis.$fakeCodemirrorField\n\t\t\t\t\t\t\t.append( $clearButton );\n\n\t\t\t\t\t\t// Listen clicks to the button\n\t\t\t\t\t\t$clearButton.on( 'click', () => {\n\t\t\t\t\t\t\tthis.clearValue();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// Bind changes\n\t\t\t\t\tfield.on( 'input', function(){\n\t\t\t\t\t\tformElement.trigger( 'automator:field:change' );\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'textarea':\n\t\t\t\t\t// Field container\n\t\t\t\t\tfieldContainer = $( '<div/>', {'class': 'form-textarea'} );\n\n\t\t\t\t\tthis.fieldContainer = fieldContainer;\n\n\t\t\t\t\t// Create textarea\n\t\t\t\t\tfield = $( '<textarea/>', $.extend( true, fieldAttributes, {\n\t\t\t\t\t\t'data-type':\t\t 'textarea',\n\t\t\t\t\t\t'class':\t\t\t 'form-element__textarea',\n\t\t\t\t\t\t'data-item_type':\t attributes.itemType\n\t\t\t\t\t}));\n\n\t\t\t\t\t// Check if maxlength is defined\n\t\t\t\t\tif ( isDefined( attributes.maxLength ) ){\n\t\t\t\t\t\tfield.prop( 'maxlength', attributes.maxLength );\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.field = field;\n\n\t\t\t\t\t// Add tokens CSS class to field. This will be used to render the Token Selector once the element is added to the DOM\n\t\t\t\t\tif ( attributes.supportsTokens ){\n\t\t\t\t\t\tfieldContainer.addClass( 'form-textarea--token' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if the field has a placeholder and add it\n\t\t\t\t\tif ( attributes.hasPlaceholder ){\n\t\t\t\t\t\tfield.prop( 'placeholder', attributes.placeholder );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Add the CodeMirror field\n\t\t\t\t\t// All textareas have a CodeMirror editor, independently on\n\t\t\t\t\t// whether they also have TinyMCE.\n\t\t\t\t\tthis.$fakeCodemirrorField = $( '<div/>', {\n\t\t\t\t\t\t'class': 'form-element__input-cm'\n\t\t\t\t\t});\n\n\t\t\t\t\tfieldContainer.append( this.$fakeCodemirrorField );\n\n\t\t\t\t\t// Check if the field has a value and add it\n\t\t\t\t\tif ( attributes.hasValue ){\n\t\t\t\t\t\tfield.text( attributes.currentValue );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Now that we now that the field doesn't have a value we can check if the developer defined a default value\n\t\t\t\t\t\tif ( attributes.hasDefaultValue ){\n\t\t\t\t\t\t\tfield.text( attributes.defaultValue );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Bind changes\n\t\t\t\t\tfield.on( 'input', function(){\n\t\t\t\t\t\tformElement.trigger( 'automator:field:change' );\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\t\t   \n\t\t\t\tcase 'checkbox':\n\t\t\t\t\t// Field container\n\t\t\t\t\tfieldContainer = $( '<div/>', {'class': 'form-checkbox' } );\n\n\t\t\t\t\tthis.fieldContainer = fieldContainer;\n\n\t\t\t\t\tlet checkboxLabel = $( '<label/>', {'class': 'form-checkbox__container' } );\n\t\t\t\t\tlet checkboxPseudo = $( '<div/>', {'class': 'checkbox--show' } );\n\n\t\t\t\t\t// Create checkbox\n\t\t\t\t\tfield = $( '<input/>', $.extend( {}, fieldAttributes, {\n\t\t\t\t\t\t'type':\t     'checkbox',\n\t\t\t\t\t\t'data-type': 'checkbox',\n\t\t\t\t\t\t'class':\t 'checkbox--hidden checkbox--primary',\n\t\t\t\t\t}));\n\n\t\t\t\t\t// Check if checked by default\n\t\t\t\t\tif ( attributes.hasValue && attributes.currentValue ){\n\t\t\t\t\t\tfield.prop( 'checked', true );\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.field = field;\n\n\t\t\t\t\t// Add label\n\t\t\t\t\tif ( attributes.hasLabel ){\n\t\t\t\t\t\tcheckboxLabel.html( attributes.label );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Append elements\n\t\t\t\t\tfieldContainer.append( checkboxLabel );\n\t\t\t\t\tcheckboxLabel.append( field );\n\t\t\t\t\tcheckboxLabel.append( checkboxPseudo );\n\n\t\t\t\t\t// Check if we have to render a Toggle\n\t\t\t\t\tif ( isDefined( attributes.isToggle ) && attributes.isToggle ){\n\t\t\t\t\t\tfieldContainer.addClass( 'form-checkbox--toggle' );\n\n\t\t\t\t\t\t// Check if we have to add on and off strings divs\n\t\t\t\t\t\tif ( isDefined( attributes.toggle ) ){\n\t\t\t\t\t\t\t// Check \"on\"\n\t\t\t\t\t\t\tif ( isDefined( attributes.toggle.on ) ){\n\t\t\t\t\t\t\t\tlet checkboxToggleOn = $( '<span/>', { 'class': 'checkbox-label checkbox-label--on' }).text( attributes.toggle.on );\n\t\t\t\t\t\t\t\tcheckboxLabel.append( checkboxToggleOn );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Check \"off\"\n\t\t\t\t\t\t\tif ( isDefined( attributes.toggle.off ) ){\n\t\t\t\t\t\t\t\tlet checkboxToggleOff = $( '<span/>', { 'class': 'checkbox-label checkbox-label--off' }).text( attributes.toggle.off );\n\t\t\t\t\t\t\t\tcheckboxLabel.append( checkboxToggleOff );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Define color\n\t\t\t\t\tif ( isDefined( attributes.color ) ){\n\t\t\t\t\t\t// Check if the color is valid\n\t\t\t\t\t\tif ( inArray( attributes.color, [ 'gutenberg', 'green' ] ) ){\n\t\t\t\t\t\t\t// Add class\n\t\t\t\t\t\t\tswitch ( attributes.color ){\n\t\t\t\t\t\t\t\tcase 'gutenberg':\n\t\t\t\t\t\t\t\t\tfieldContainer.addClass( 'form-checkbox--toggle-gutenberg' );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'green':\n\t\t\t\t\t\t\t\t\tfieldContainer.addClass( 'form-checkbox--toggle-green' );\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconsole.error( vsprintf( 'The color %s does not exists. Default color will be used instead.', [ attributes.color ] ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Define align\n\t\t\t\t\tif ( isDefined( attributes.align ) ){\n\t\t\t\t\t\t// Check if it's a valid value\n\t\t\t\t\t\tif ( inArray( attributes.align, [ 'left', 'right' ] ) ){\n\t\t\t\t\t\t\t// Check if it's 'right', otherwise ignore, since 'left' doesn't needs a class\n\t\t\t\t\t\t\tif ( attributes.align == 'right' ){\n\t\t\t\t\t\t\t\t// Add class\n\t\t\t\t\t\t\t\tfieldContainer.addClass( 'form-checkbox--toggle-right' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconsole.error( vsprintf( 'The alignment %s does not exists. %s will be used instead.', [ attributes.align, '\"left\"' ] ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Bind changes\n\t\t\t\t\tfield.on( 'change', function( event, customData ){\n\t\t\t\t\t\tformElement.trigger( 'automator:field:change', customData );\n\t\t\t\t\t});\n\n\t\t\t\t\t// Change field variable with all the container\n\t\t\t\t\tfield = checkboxLabel;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'radio':\n\t\t\t\t\t// Field container\n\t\t\t\t\tfieldContainer = $( '<div/>', {'class': 'form-radio' } );\n\t\t\t\t\tthis.fieldContainer = fieldContainer;\n\n\t\t\t\t\t// Create array to save all the jQuery DOM elements\n\t\t\t\t\tlet $fields = $(),\n\t\t\t\t\t\t$fieldContainers = $();\n\n\t\t\t\t\t// Iterate options\n\t\t\t\t\t$.each( attributes.options, function( index, option ){\n\t\t\t\t\t\t// Create container\n\t\t\t\t\t\tconst $formRadioContainer = $( '<label/>', { 'class': 'form-radio__container' });\n\n\t\t\t\t\t\t// Add label\n\t\t\t\t\t\t$formRadioContainer.html( option.text );\n\n\t\t\t\t\t\t// Create radio\n\t\t\t\t\t\tconst $field = $( '<input/>', $.extend( {}, fieldAttributes, {\n\t\t\t\t\t\t\t'type':\t     'radio',\n\t\t\t\t\t\t\t'data-type': 'radio',\n\t\t\t\t\t\t\t'class':\t 'radio--hidden radio--primary',\n\n\t\t\t\t\t\t\t'value':      option.value,\n\t\t\t\t\t\t\t'name':       fieldAttributes.id\n\t\t\t\t\t\t}));\n\n\t\t\t\t\t\t// Save radio\n\t\t\t\t\t\t$fields = $fields.add( $field );\n\n\t\t\t\t\t\t// Create fake radio\n\t\t\t\t\t\tconst $fakeRadio = $( '<div/>', { 'class': 'radio--show' });\n\n\t\t\t\t\t\t// Append elements\n\t\t\t\t\t\t$formRadioContainer.append( $field );\n\t\t\t\t\t\t$formRadioContainer.append( $fakeRadio );\n\n\t\t\t\t\t\t// Check if this field has a value, if it does, and the value\n\t\t\t\t\t\t// matches the input radio name, then check it\n\t\t\t\t\t\tif ( attributes.hasValue && attributes.currentValue == option.value ){\n\t\t\t\t\t\t\t$field.prop( 'checked', true );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Otherwise, check if it has a default value and use that\n\t\t\t\t\t\telse if ( ! attributes.hasValue && attributes.hasDefaultValue && attributes.defaultValue == option.value ){\n\t\t\t\t\t\t\t$field.prop( 'checked', true );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Save container\n\t\t\t\t\t\t$fieldContainers = $fieldContainers.add( $formRadioContainer );\n\t\t\t\t\t});\n\n\t\t\t\t\t// Save fields\n\t\t\t\t\tthis.field = $fieldContainers;\n\t\t\t\t\tfield = $fieldContainers;\n\n\t\t\t\t\t// Bind changes\n\t\t\t\t\t$fields.on( 'change', ( event, customData ) => {\n\t\t\t\t\t\t// Check if the value is different\n\t\t\t\t\t\tformElement.trigger( 'automator:field:change', customData );\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Append field jQuery object to field container\n\t\t\tfieldContainer.append( field );\n\n\t\t\t// Create label\n\n\t\t\t// Create Label, even if it's empty but the field is required, so we can add the asterisk\n\t\t\tlet fieldLabel;\n\n\t\t\tif ( type != 'checkbox' && ( attributes.hasLabel || attributes.isRequired ) ){\n\t\t\t\tfieldLabel = $( '<label/>', {\n\t\t\t\t\t'class': 'form-element__label',\n\t\t\t\t\t'for': \t attributes.uniqueFieldID\n\t\t\t\t});\n\n\t\t\t\t// Add label text\n\t\t\t\tif ( attributes.hasLabel ){\n\t\t\t\t\tfieldLabel.html( attributes.label );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if it's a required field\n\t\t\tif ( attributes.isRequired ){\n\t\t\t\t// Add required class to the field container\n\t\t\t\tfieldContainer.addClass( 'form-element--required' );\n\n\t\t\t\t// Check if it's a checkbox\n\t\t\t\tif ( attributes.fieldType == 'checkbox' ){\n\t\t\t\t\t// Add required attribute to the field\n\t\t\t\t\tfield.find( 'input' ).prop( 'required', true );\n\n\t\t\t\t\t// Add asterisk to the label\n\t\t\t\t\tif ( attributes.hasLabel ){\n\t\t\t\t\t\t// Add required icon next to label\n\t\t\t\t\t\tlet fieldLabelAsterisk = $( '<span/>', { 'class': 'form-element-label__required' } );\n\t\t\t\t\t\tfield.append( fieldLabelAsterisk );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Add required attribute to the field\n\t\t\t\t\tfield.prop( 'required', true );\n\n\t\t\t\t\t// Add asterisk to the label\n\t\t\t\t\tif ( attributes.hasLabel ){\n\t\t\t\t\t\t// Add required icon next to label\n\t\t\t\t\t\tlet fieldLabelAsterisk = $( '<span/>', { 'class': 'form-element-label__required' } );\n\t\t\t\t\t\tfieldLabel.append( fieldLabelAsterisk );\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t}\n\n\t\t\t// Check if it's read only\n\t\t\tif ( isDefined( attributes.isReadOnly ) && attributes.isReadOnly ){\n\t\t\t\t// Check if it's NOT a date or time field\n\t\t\t\tif ( ! [ 'date', 'time' ].includes( this.attributes.fieldType ) ){\n\t\t\t\t\t// Add required class to the field container\n\t\t\t\t\tfieldContainer.addClass( 'form-element--readonly' ); \n\t\t\t\t}\n\n\t\t\t\t// Check if it's a select\n\t\t\t\tif ( attributes.fieldType == 'select' ){\n\t\t\t\t\t// Disable the select\n\t\t\t\t\tfield.prop( 'disabled', true );\n\t\t\t\t}\n\t\t\t\telse if ( [ 'checkbox', 'radio' ].includes( attributes.fieldType ) ){\n\t\t\t\t\t// Disable the radio and checkbox\n\t\t\t\t\tfield.find( 'input' ).prop( 'disabled', true );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Add read only attribute to the field\n\t\t\t\t\tfield.prop( 'readonly', true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Append label element if is defined\n\t\t\tif ( attributes.hasLabel || attributes.isRequired ){\n\t\t\t\tfieldContainer.prepend( fieldLabel );\n\t\t\t}\n\n\t\t\t// Error container\n\t\t\tlet fieldError = $( '<div/>', { 'class': 'form-element__error' });\n\t\t\tfieldContainer.append( fieldError );\n\n\t\t\tthis.fieldContainer = fieldContainer;\n\n\t\t\t// Field description\n\t\t\tif ( attributes.hasDescription ){\n\t\t\t\tlet fieldDescription = $( '<div/>', { 'class': 'description' } );\n\t\t\t\tfieldDescription.html( attributes.description );\n\t\t\t\tfieldContainer.append( fieldDescription );\n\t\t\t}\n\n\t\t\t// Check if the field is hidden\n\t\t\tif ( attributes.isHidden ){\n\t\t\t\t// Add class to hide the field container\n\t\t\t\tfieldContainer.addClass( 'form-element--hidden' );\n\t\t\t}\n\n\t\t\t// Append everything to the form element container\n\t\t\tformElement.append( fieldContainer );\n\n\t\t\t// Check if it's a select and has a customField defined,\n\t\t\t// if so, add it\n\t\t\tif ( attributes.fieldType == 'select' && isDefined( this.customValueField ) ){\n\t\t\t\t// Create container for the custom value field\n\t\t\t\tthis.customValueFieldContainer = $(\n\t\t\t\t\t`<div class=\"form-select-custom\">\n\t\t\t\t\t\t<div class=\"form-element-children\"></div>\n\t\t\t\t\t</div>`\n\t\t\t\t);\n\n\t\t\t\t// Get the form element\n\t\t\t\tthis.customValueFieldContainer.find( '.form-element-children' ).append( this.customValueField.createFormElement() );\n\n\t\t\t\t// Append it\n\t\t\t\tformElement.append( this.customValueFieldContainer );\n\n\t\t\t\t// Check if we have to show the custom field\n\t\t\t\tif ( this.getValue() == 'automator_custom_value' ){\n\t\t\t\t\tthis.customValueFieldContainer.addClass( 'form-select-custom--visible' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.customValueFieldContainer.removeClass( 'form-select-custom--visible' );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Response\n\t\t\tresponse = formElement;\n\n\t\t\t// Save Form Element\n\t\t\tthis.formElement = formElement;\n\n\t\t\t// Init libraries\n\t\t\tif ( initLibraries ){\n\t\t\t\tthis.initLibraries();\n\t\t\t}\n\n\t\t\t// Trigger methods on change\n\t\t\tthis.onChange();\n\n\t\t\t// Trigger methods on focus\n\t\t\tthis.onFocus();\n\t\t}\n\t\telse {\n\t\t\t// Error: Invalid field type\n\t\t\tconsole.error( vsprintf( 'The field type \"%s\" is invalid. The valid ones are %s', [ type, getFieldTypes().join( ', ' ) ] ) );\n\t\t}\n\n\t\treturn response;\n\t}\n\n\t/**\n\t * Set attributes. It add properties like hasValue, hasPlaceholder, etc, automatically\n\t * \n\t * @since 0.4\n\t *\n\t * @param  {object} attributes - The field attributes\n\t *\n\t * @return {object} attributes - The field attributes\n\t */\n\n\tsetAttributes( attributes ){\n\t\t// Save field type in the attributes\n\t\tattributes.fieldType = this.type;\n\n\t\t// Create an unique ID\n\t\tattributes.uniqueFieldID = `${ attributes.optionCode }__${ getUniqueId() }`;\n\n\t\t// Check if it's a checkbox and sanitaze the current value\n\t\tif ( attributes.fieldType == 'checkbox' && ! isEmpty( attributes.currentValue ) ){\n\t\t\t// Check if the value is \"true\" or \"false\"\n\t\t\tif ( [ 'true', 'false' ].includes( attributes.currentValue ) ){\n\t\t\t\t// Make it a boolean\n\t\t\t\tattributes.currentValue = attributes.currentValue == 'true' ? true : false;\n\n\t\t\t\t// If it's false, set hasValue to false\n\t\t\t\tif ( ! attributes.currentValue ){\n\t\t\t\t\tattributes.hasValue = false;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tattributes.hasValue = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Has value\n\t\tif ( ! isDefined( attributes.hasValue ) ){\n\t\t\tif ( ! isEmpty( attributes.currentValue ) ){\n\t\t\t\tattributes.hasValue = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattributes.hasValue = false;\n\t\t\t}\n\t\t}\n\n\t\t// Has placeholder\n\t\tif ( ! isDefined( attributes.hasPlaceholder ) ){\n\t\t\tif ( ! isEmpty( attributes.placeholder ) ){\n\t\t\t\tattributes.hasPlaceholder = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattributes.hasPlaceholder = false;\n\t\t\t}\n\t\t}\n\n\t\t// Has default value\n\t\tif ( ! isDefined( attributes.hasDefaultValue ) ){\n\t\t\tif ( ! isEmpty( attributes.defaultValue ) ){\n\t\t\t\tattributes.hasDefaultValue = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattributes.hasDefaultValue = false;\n\t\t\t}\n\t\t}\n\n\t\t// Has label\n\t\tif ( ! isDefined( attributes.hasLabel ) ){\n\t\t\tif ( ! isEmpty( attributes.label ) ){\n\t\t\t\tattributes.hasLabel = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattributes.hasLabel = false;\n\t\t\t}\n\t\t}\n\n\t\t// Has description\n\t\tif ( ! isDefined( attributes.hasDescription ) ){\n\t\t\tif ( ! isEmpty( attributes.description ) ){\n\t\t\t\tattributes.hasDescription = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattributes.hasDescription = false;\n\t\t\t}\n\t\t}\n\n\t\t// Is Required\n\t\tif ( ! isDefined( attributes.isRequired ) ){\n\t\t\tattributes.isRequired = false;\n\t\t}\n\n\t\t// Is children\n\t\tif ( ! isDefined( attributes.isChildField ) ){\n\t\t\tattributes.isChildField = false;\n\t\t}\n\n\t\t// Supports tokens\n\t\tif ( ! isDefined( attributes.supportsTokens ) ){\n\t\t\tattributes.supportsTokens = false;\n\t\t}\n\n\t\t// Check if it can support tokens\n\t\tif ( attributes.supportsTokens && attributes.fieldType == 'select' && ! [ 'action', 'closure' ].includes( attributes.itemType ) ){\n\t\t\tattributes.supportsTokens = false;\n\t\t}\n\n\t\t// Check default value for readOnly\n\t\tif ( ! isDefined( attributes.isReadOnly ) ){\n\t\t\tattributes.isReadOnly = false;\n\t\t}\n\n\t\t// Check if it's a select\n\t\tif ( attributes.fieldType == 'select' ){\n\t\t\t// Check if it supports multiple values\n\t\t\tif ( ! isDefined( attributes.supportsMultipleValues ) ){\n\t\t\t\tattributes.supportsMultipleValues = false;\n\t\t\t}\n\n\t\t\t// ⚠️ Check if it supports multiple values, if it does,\n\t\t\t// don't support custom values.\n\t\t\tif ( attributes.supportsMultipleValues ){\n\t\t\t\tattributes.supportsCustomValue = false;\n\t\t\t}\n\n\t\t\t// ⚠️ Check if the current dropdown is a multiselect,\n\t\t\t// if so, check if it has a current value. In case it \n\t\t\t// has a value, try to parse it, because it might be a \n\t\t\t// JSON string\n\t\t\tif ( attributes.supportsMultipleValues ){\n\t\t\t\ttry {\n\t\t\t\t\tattributes.currentValue = JSON.parse( attributes.currentValue );\n\t\t\t\t} catch ( e ){\n\t\t\t\t\t// console.log( e );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if it can support custom tokens\n\t\t\tif ( ! isDefined( attributes.supportsCustomValue ) ){\n\t\t\t\tattributes.supportsCustomValue = false;\n\t\t\t}\n\n\t\t\t// Check if it can support tokens, but can't support custom values\n\t\t\t// if ( attributes.supportsTokens && ! attributes.supportsCustomValue ){\n\t\t\t// \tattributes.supportsCustomValue = true;\n\t\t\t// }\n\n\t\t\t// Check if the user defined a description for the custom field too\n\t\t\tattributes.hasCustomValueDescription = ! isEmpty( attributes.customValueDescription );\n\t\t}\n\t\t\n\t\t// Check if it's a date field\n\t\tif ( attributes.fieldType == 'date' ){\n\t\t\tattributes.isReadOnly = true;\n\n\t\t\t// Check if it doesn't have a custom date format\n\t\t\tif ( ! isDefined( attributes.dateFormat ) ){\n\t\t\t\tattributes.dateFormat = 'Y-m-d';\n\t\t\t}\n\n\t\t\t// Check if it doesn't have a custom date alt format\n\t\t\tif ( ! isDefined( attributes.dateAltFormat ) ){\n\t\t\t\tattributes.dateAltFormat = UncannyAutomator.format.date;\n\t\t\t}\n\n\t\t\t// Check if it has a min date\n\t\t\tif ( isDefined( attributes.minDate ) ){\n\t\t\t\tattributes.minDate = attributes.minDate;\n\t\t\t}\n\n\t\t\t// Check if it has a max date\n\t\t\tif ( isDefined( attributes.maxDate ) ){\n\t\t\t\tattributes.maxDate = attributes.maxDate;\n\t\t\t}\n\n\t\t\t// Set default value for the supports range option\n\t\t\tif ( ! isDefined( attributes.supportsRange ) ){\n\t\t\t\tattributes.supportsRange = false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if it's a time field\n\t\tif ( attributes.fieldType == 'time' ){\n\t\t\tattributes.isReadOnly = true;\n\n\t\t\t// Check if it doesn't have a custom time format\n\t\t\tif ( ! isDefined( attributes.timeFormat ) ){\n\t\t\t\tattributes.timeFormat = 'h:i K';\n\t\t\t}\n\n\t\t\t// Check if it doesn't have a custom time alt format\n\t\t\tif ( ! isDefined( attributes.timeAltFormat ) ){\n\t\t\t\tattributes.timeAltFormat = 'h:i K';\n\t\t\t}\n\n\t\t\t// Check if it has a min time\n\t\t\tif ( isDefined( attributes.minTime ) ){\n\t\t\t\tattributes.minTime = attributes.minTime;\n\t\t\t}\n\n\t\t\t// Check if it has a max time\n\t\t\tif ( isDefined( attributes.maxTime ) ){\n\t\t\t\tattributes.maxTime = attributes.maxTime;\n\t\t\t}\n\t\t}\n\n\t\t// Supports tinyMCE\n\t\tif ( ! isDefined( attributes.supportsTinyMCE ) ){\n\t\t\tattributes.supportsTinyMCE = false;\n\t\t}\n\n\t\t// Is Toggle\n\t\tif ( ! isDefined( attributes.isToggle ) && isDefined( attributes.toggle ) ){\n\t\t\tattributes.isToggle = true;\n\t\t}\n\n\t\t// Is AJAX\n\t\tif ( ! isDefined( attributes.isAjax ) ){\n\t\t\tattributes.isAjax = false;\n\t\t}\n\n\t\t// Set the default value for isHidden\n\t\tif ( ! isDefined( attributes.isHidden ) ){\n\t\t\tattributes.isHidden = false;\n\t\t}\n\n\t\treturn attributes;\n\t}\n\n\t/**\n\t * Validate field\n\t * \n\t * @since 0.4\n\t *\n\t * @param  {boolean} renderError - TRUE if you want to render the field errors, FALSE if you only want to return the response object\n\t *\n\t * @return {validateField} validateField object. Read the comments on Validation.js to learn more\n\t */\n\n\tvalidate( renderError = true ){\n\t\t// Parameters\n\n\t\t// Field (DOM)\n\t\tlet field = null,\n\t\t\tvalue;\n\n\t\tif ( renderError ){\n\t\t\tfield = this.getFieldContainer();\n\t\t\tvalue = this.getValue();\n\t\t}\n\t\telse {\n\t\t\tvalue = this.attributes.currentValue;\n\t\t}\n\n\t\t// Type\n\t\tlet fieldType = this.type;\n\n\t\t// Attributes\n\t\tlet attributes = {\n\t\t\tsupportsTokens: this.attributes.supportsTokens,\n\t\t\trequired:  \t    this.attributes.isRequired\n\t\t}\n\n\t\t// This uses the validateField function. Check Validation.js for more information\n\t\treturn validateField( field, this.type, value, attributes, this.customValidationFunction );\n\t}\n\n\t/**\n\t * Invoke functions on field change\n\t * Those functions are global for all the Field objects\n\t * Don't use directly, use 'automator:field:change' instead\n\t */\n\n\tonChange(){\n\t\tthis.formElement.on( 'automator:field:change', ( event, customData ) => {\n\t\t\t// Check if it's a select that supports custom values (and that option is selected)\n\t\t\t// console.log( this.attributes.label );\n\t\t\t// console.log( '> 🚨 Change (automator:field:change)' );\n\n\t\t\t// Check if it has a value\n\t\t\tif ( isDefined( this.fieldContainer ) ){\n\t\t\t\tif ( ! isEmpty( this.getValue() ) ){\n\t\t\t\t\tthis.fieldContainer\n\t\t\t\t\t\t.addClass( 'form-input--has-value' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.fieldContainer\n\t\t\t\t\t\t.removeClass( 'form-input--has-value' );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( this.attributes.fieldType == 'select' && this.attributes.supportsCustomValue ){\n\t\t\t\tif ( this.getValue() == 'automator_custom_value' ){\n\t\t\t\t\t// Show custom field container\n\t\t\t\t\tthis.customValueFieldContainer.addClass( 'form-select-custom--visible' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Hide custom field container\n\t\t\t\t\tthis.customValueFieldContainer.removeClass( 'form-select-custom--visible' );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst onChangeAJAXCallback = () => {\n\t\t\t\t// Check if it's an AJAX field\n\t\t\t\tif ( this.attributes.isAjax ){\n\t\t\t\t\t// Check if the target field is different\n\t\t\t\t\tif ( this.attributes.targetField !== this.attributes.optionCode ){\n\t\t\t\t\t\t// console.log( this.attributes.label );\n\t\t\t\t\t\t// console.log( '> AJAX (onChangeAJAXCallback)' );\n\n\t\t\t\t\t\tthis.doAJAX();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Check if it's a child field\n\t\t\t\tif ( isDefined( this.attributes.isChildField ) && this.attributes.isChildField ){\n\t\t\t\t\t// Check if the option code of the parent is defined\n\t\t\t\t\tif ( isDefined( this.attributes.parentOptionCode ) ){\n\t\t\t\t\t\t// Get the field\n\t\t\t\t\t\tconst parentField = getField( this.attributes.itemId, this.attributes.parentOptionCode );\n\n\t\t\t\t\t\t// Check if we found it\n\t\t\t\t\t\tif ( isDefined( parentField ) ){\n\t\t\t\t\t\t\t// console.log( this.attributes.label + ' --> ' + parentField.attributes.label );\n\t\t\t\t\t\t\t// console.log( '> AJAX (onChangeAJAXCallback)' );\n\n\t\t\t\t\t\t\t// Do AJAX call on parent\n\t\t\t\t\t\t\tparentField.doAJAX();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if it's an AJAX field, has a target field\n\t\t\t// and the target field is different than the option code\n\t\t\tif (\n\t\t\t\t// Check if the field is ajax\n\t\t\t\tthis.attributes.isAjax\n\t\t\t\t// Check if there is a valid target field (Field instance)\n\t\t\t\t&& isDefined( this.attributes.targetField )\n\t\t\t\t// Check if the ID of the target field is different that the \n\t\t\t\t// ID of the parent field\n\t\t\t\t&& this.attributes.targetField !== this.attributes.optionCode\n\t\t\t\t&& (\n\t\t\t\t\t// Check if the parent field completed the first load\n\t\t\t\t\tthis.attributes.completedFirstLoad\n\t\t\t\t\t// Otherwise, even if the first load wasn't completed,\n\t\t\t\t\t// check if the \"current value\" (value saved) on\n\t\t\t\t\t// the database is empty, or if it doesn't have a default value\n\t\t\t\t\t|| ( \n\t\t\t\t\t\tisEmpty( this.attributes.currentValue ) \n\t\t\t\t\t\t&& ! this.attributes.hasDefaultValue \n\t\t\t\t\t\t&& ! this.attributes.completedFirstLoad\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t){\n\t\t\t\t// Get the target field\n\t\t\t\tlet targetField = getField( this.attributes.itemId, this.attributes.targetField );\n\n\t\t\t\t// console.log( 'Reset value of ' + targetField.attributes.label );\n\n\t\t\t\t// Reset the value of the target field\n\t\t\t\ttargetField.setValue( null, false );\n\t\t\t\ttargetField.setCustomValue( null, false );\n\t\t\t}\n\n\t\t\t// Check if it's a dropdown, checkbox or radio\n\t\t\tif ( [ 'select', 'radio', 'checkbox' ].includes( this.attributes.fieldType ) ){\n\t\t\t\t// Do it right away\n\t\t\t\tonChangeAJAXCallback();\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Check if the inverval exists, and clear it\n\t\t\t\tif ( isDefined( this.onChangeTimeout ) ){\n\t\t\t\t\tclearTimeout( this.onChangeTimeout );\n\t\t\t\t}\n\n\t\t\t\t// Wait a few seconds before doing the change\n\t\t\t\tthis.onChangeTimeout = setTimeout(() => {\n\t\t\t\t\tonChangeAJAXCallback();\n\t\t\t\t}, 1500 );\n\t\t\t}\n\n\t\t\t// Return false to prevent bubbling in child fields\n\t\t\treturn false;\n\t\t});\n\t}\n\n\t/**\n\t * Invoke functions on field change\n\t * Those functions are global for all the Field objects\n\t * Don't use directly, use 'automator:field:change' instead\n\t */\n\n\tonFocus(){\n\t\tthis.field.on( 'focusin', ( event ) => {\n\t\t\t// Check if it's a read-only field\n\t\t\tif ( this.attributes.isReadOnly ){\n\t\t\t\t// Select the text\n\t\t\t\t$( event.currentTarget ).select();\n\t\t\t}\n\t\t});\n\n\t\tthis.field.on( 'focusout', () => {});\n\t}\n\n\t/**\n\t * Check if the item's object has all the required properties\n\t *\n\t * @since 0.5\n\t */\n\n\tisReady(){\n\t\tlet ready = false;\n\n\t\tif ( isDefined( UncannyAutomator.recipe.items[ this.attributes.itemId ] ) ){\n\t\t\tready = true;\n\t\t}\n\n\t\treturn ready;\n\t}\n\n\t/**\n\t * Do AJAX\n\t *\n\t * @since 0.5\n\t */\n\n\tdoAJAX(){\n\t\t// Get field value. If it isn't defined in the DOM then get the default value\n\t\tlet fieldValue = isDefined( this.getValue() ) ? this.getValue() : this.getMetaValue();\n\n\t\t// Check if we have to do an AJAX call on this field\n\t\tif ( this.attributes.isAjax ){\n\t\t\t// Get the target field\n\t\t\tlet targetField = this;\n\n\t\t\tif ( this.attributes.optionCode != this.attributes.targetField ){\n\t\t\t\ttargetField = getField( this.attributes.itemId, this.attributes.targetField );\n\t\t\t}\n\n\t\t\t// Check that we have everything\n\t\t\tif ( ! isEmpty( this.attributes.integrationId ) && ! isEmpty( this.attributes.endpoint ) ){\n\t\t\t\t// Before doing the request, show a loading animation in the changed field\n\t\t\t\tthis.startLoadingAnimation();\n\t\t\t\t// And show animation in the target field too\n\t\t\t\ttargetField.startLoadingAnimation();\n\n\t\t\t\t// Get parent field value\n\t\t\t\tlet parentFieldValue = this.getValue(),\n\t\t\t\t      targetFieldValue = isDefined( targetField.getValue() ) ? targetField.getValue() : targetField.getMetaValue();\n\n\t\t\t\tAJAXRequest( this.attributes.endpoint, {\n\t\t\t\t\trecipe_id:      UncannyAutomator.recipe.id,\n\t\t\t\t\tintegration_id: this.attributes.integrationId,\n\t\t\t\t\titem_id: \t    this.attributes.itemId,\t\t\t\n\t\t\t\t\tgroup_id: \t    this.attributes.groupId,\n\t\t\t\t\tfield_id: \t    this.attributes.optionCode,\n\t\t\t\t\ttarget_field:   this.attributes.targetField,\n\t\t\t\t\tvalue: \t\t    parentFieldValue,\n\t\t\t\t\tvalues: \t\tgetCurrentFieldsValues( this.attributes.itemId )\n\t\t\t\t}, ( response ) => {\n\t\t\t\t\t// console.log( this.attributes.label );\n\t\t\t\t\t// console.log( '%c> AJAX completed', 'background: red; color: #fff;' );\n\n\t\t\t\t\t// Stop loading animation in both fields\n\t\t\t\t\tthis.stopLoadingAnimation();\n\t\t\t\t\ttargetField.stopLoadingAnimation();\n\n\t\t\t\t\tlet targetFieldAttributes = targetField.getAttributes();\n\n\t\t\t\t\t// console.table({\n\t\t\t\t\t// \tparentField:      this.getAttributes().optionCode,\n\t\t\t\t\t// \tparentFieldValue: parentFieldValue,\n\t\t\t\t\t// \ttargetField:      this.attributes.targetField,\n\t\t\t\t\t// \ttargetFieldValue: targetFieldValue\n\t\t\t\t\t// });\n\n\t\t\t\t\t// Check if the target field is a select and the response is an array\n\n\t\t\t\t\t// console.log( targetFieldAttributes.label );\n\t\t\t\t\t// console.log( '> Set options' );\n\n\t\t\t\t\tif ( targetFieldAttributes.fieldType == 'select' && $.isArray( response ) ){\n\t\t\t\t\t\t// Value of the target field before the call\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t// Check if the field is ajax\n\t\t\t\t\t\t\tthis.attributes.isAjax\n\t\t\t\t\t\t\t// Check if there is a valid target field (Field instance)\n\t\t\t\t\t\t\t&& isDefined( this.attributes.targetField )\n\t\t\t\t\t\t\t// Check if the ID of the target field is different that the \n\t\t\t\t\t\t\t// ID of the parent field\n\t\t\t\t\t\t\t&& this.attributes.targetField !== this.attributes.optionCode\n\t\t\t\t\t\t\t&& (\n\t\t\t\t\t\t\t\t// Check if the parent field completed the first load\n\t\t\t\t\t\t\t\tthis.attributes.completedFirstLoad\n\t\t\t\t\t\t\t\t// Otherwise, even if the first load wasn't completed,\n\t\t\t\t\t\t\t\t// check if the \"current value\" (value saved) on\n\t\t\t\t\t\t\t\t// the database is empty, or if it doesn't have a default value\n\t\t\t\t\t\t\t\t|| ( \n\t\t\t\t\t\t\t\t\tisEmpty( this.attributes.currentValue ) \n\t\t\t\t\t\t\t\t\t&& ! this.attributes.hasDefaultValue \n\t\t\t\t\t\t\t\t\t&& ! this.attributes.completedFirstLoad\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t){\n\t\t\t\t\t\t\ttargetFieldValue = null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// console.log( this.attributes.label );\n\t\t\t\t\t\t// console.log( this.attributes.completedFirstLoad );\n\t\t\t\t\t\t// console.log( targetFieldValue );\n\t\t\t\t\t\t// console.log( targetField.attributes.currentValue );\n\t\t\t\t\t\t// debugger;\n\n\t\t\t\t\t\t// Check if the value of the target field is custom\n\t\t\t\t\t\tif ( targetFieldValue == 'automator_custom_value' ){\n\t\t\t\t\t\t\t// Get the custom field value\n\t\t\t\t\t\t\tconst customFieldValue = targetField.getSelectCustomValue();\n\n\t\t\t\t\t\t\t// Check if the value of the custom field is NOT empty\n\t\t\t\t\t\t\tif ( ! isEmpty( customFieldValue ) ){\n\t\t\t\t\t\t\t\t// Then use the custom value as the real value\n\t\t\t\t\t\t\t\ttargetFieldValue = customFieldValue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// Otherwise, don't use the custom value at all\n\t\t\t\t\t\t\t\ttargetFieldValue = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// console.log( targetField.attributes.label );\n\t\t\t\t\t\t// console.log( '> Value: ' + targetFieldValue );\n\n\t\t\t\t\t\t// The developer wants to set new options for a select\n\t\t\t\t\t\t// Don't trigger change (even though select2 needs it),\n\t\t\t\t\t\t// we're going to trigger it later\n\t\t\t\t\t\ttargetField.setSelectOptions( response, false );\n\n\t\t\t\t\t\t// console.log( targetField.attributes.label + ' (by ' + this.attributes.label + ')' );\n\t\t\t\t\t\t// console.log( '> Set: ' + targetFieldValue );\n\n\t\t\t\t\t\t// Set the value again\n\t\t\t\t\t\ttargetField.setValue( targetFieldValue );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Try to set the value\n\t\t\t\t\t\ttargetField.setValue( response );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Update the \"completed first load\" status\n\t\t\t\t\tthis.attributes.completedFirstLoad = true;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get form element\n\t * \n\t * @since 0.4\n\t *\n\t * @return {object} jQuery object of the field's container\n\t */\n\n\tgetFormElement(){\n\t\tif ( this.isReady() ){\n\t\t\t// Reset the \"first load\" status\n\t\t\tthis.attributes.completedFirstLoad = false;\n\n\t\t\t// Do the AJAX call only if it's not a child field\n\t\t\t// Otherwise, we will just wait for the AJAX call\n\t\t\t// of the parent field to end. That will trigger an\n\t\t\t// AJAX call in the child field.\n\t\t\tlet isTargetField   = false;\n\n\t\t\ttry {\n\t\t\t\t// Get group of options\n\t\t\t\tconst fields = UncannyAutomator.recipe.items[ this.attributes.itemId ].options[ this.attributes.groupId ].fields;\n\n\t\t\t\t// Determine if it's a target field\n\t\t\t\tisTargetField = fields.reduce( ( accumulator, field ) => {\n\t\t\t\t\treturn accumulator || ( \n\t\t\t\t\t\t// Check if this field is the target field of another field\n\t\t\t\t\t\t( field.attributes.targetField == this.attributes.optionCode ) \n\t\t\t\t\t\t// But it's not the field itself\n\t\t\t\t\t\t&&  ( field.attributes.optionCode != this.attributes.optionCode )\n\t\t\t\t\t\t// And it's AJAX\n\t\t\t\t\t\t&& field.attributes.isAjax\n\t\t\t\t\t);\n\t\t\t\t}, false );\n\t\t\t}\n\t\t\tcatch ( e ){\n\t\t\t\t// console.log( 'Prevented error' );\n\t\t\t\t// console.log( e );\n\t\t\t}\n\n\t\t\tif ( ! isTargetField ){\n\t\t\t\t// console.log( this.attributes.label );\n\t\t\t\t// console.log( '> AJAX (getFormElement)' );\n\n\t\t\t\t// Check if the field AJAX, and it's both the parent and target\n\t\t\t\tif (\n\t\t\t\t\tthis.attributes.targetField == this.attributes.optionCode\n\t\t\t\t\t&& this.attributes.isAjax\n\t\t\t\t){\n\t\t\t\t\tthis.doAJAX();\n\t\t\t\t}\n\n\t\t\t\tthis.field.trigger( 'automator:field:change', {\n\t\t\t\t\tmanuallySet: false\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn this.formElement;\n\t}\n\n\t/**\n\t * Get field container\n\t * \n\t * @since 0.4\n\t *\n\t * @return {object} jQuery object of the field's container\n\t */\n\n\tgetFieldContainer(){\n\t\treturn this.fieldContainer;\n\t}\n\n\t/**\n\t * Get field ID\n\t * \n\t * @since 0.5\n\t *\n\t * @return {string} The field ID\n\t */\n\n\tgetFieldID(){\n\t\treturn this.attributes.optionCode;\n\t}\n\n\t/**\n\t * Get field\n\t * \n\t * @since 0.4\n\t *\n\t * @return {object} jQuery object of the field\n\t */\n\n\tgetField(){\n\t\treturn this.field;\n\t}\n\n\tgetFieldCM(){\n\t\treturn this.$fakeCodemirrorField;\n\t}\n\n\t/**\n\t * Get attributes\n\t * \n\t * @since 0.5\n\t *\n\t * @return {object} Field attributes\n\t */\n\n\tgetAttributes(){\n\t\treturn this.attributes;\n\t}\n\n\t/**\n\t * Get field's value FROM THE DOM ELEMENT\n\t * If you want to get the value from the main object then check {attributes.currentValue}\n\t * \n\t * @since 0.4\n\t *\n\t * @return {string|int} Value of the field\n\t */\n\n\tgetValue(){\n\t\tlet response = null;\n\n\t\tif ( isDefined( this.field ) ){\n\t\t\tswitch ( this.type ){\n\t\t\t\tcase 'select':\n\t\t\t\tcase 'text':\n\t\t\t\tcase 'url':\n\t\t\t\tcase 'email':\n\t\t\t\tcase 'int':\n\t\t\t\tcase 'float':\n\t\t\t\t\tresponse = this.field.val();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'textarea':\n\t\t\t\t\t// Check if it has a token selector\n\t\t\t\t\tif ( isDefined( this.TokenSelector ) ){\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tthis.TokenSelector.parseHTMLTokensInPlainTextarea();\n\t\t\t\t\t\t} catch ( e ){\n\t\t\t\t\t\t\tconsole.log( e );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = this.field.val();\n\n\t\t\t\t\tif ( this.attributes.supportsTinyMCE ){\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t// Replace \"\\n\" characters\n\t\t\t\t\t\t\t// We're doing this because TinyMCE is already adding paragraphs\n\t\t\t\t\t\t\tresponse = response.replaceAll( '\\n', '' );\n\t\t\t\t\t\t} catch ( e ){\n\t\t\t\t\t\t\tconsole.log( e );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\tresponse = this.field.is( ':checked' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'radio':\n\t\t\t\t\tresponse = this.field.find( 'input:checked' ).val();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'date':\n\t\t\t\t\tresponse = this.field.val();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'time':\n\t\t\t\t\tresponse = this.field.val();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t! isDefined( this.field )\n\t\t\t|| ! isDefined( response )\n\t\t){\n\t\t\t// Check if the field has a value and add it\n\t\t\tif ( this.attributes.hasValue ){\n\t\t\t\t// Return that value\n\t\t\t\tresponse = this.attributes.currentValue;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If it doesn't have a value, then check if it has a default\n\t\t\t\t// value\n\t\t\t\tif ( this.attributes.hasDefaultValue ){\n\t\t\t\t\t// Return the default value\n\t\t\t\t\tresponse = this.attributes.defaultValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn response;\n\t}\n\n\t/**\n\t * Get readable value\n\t *\n\t * @since 0.6\n\t *\n\t * @return string with the value\n\t */\n\n\tgetReadableValue(){\n\t\tlet response = null,\n\t\t\tvalue \t = this.getValue();\n\n\t\tswitch ( this.type ){\n\t\t\tcase 'select':\n\t\t\t\t// Check if the field DOM element is defined\n\t\t\t\tif ( isDefined( this.field ) ){\n\t\t\t\t\t// Check if it supports multiple values, and the value is an array\n\t\t\t\t\tif ( this.attributes.supportsMultipleValues && $.isArray( value ) ){\n\t\t\t\t\t\tlet optionsText = '';\n\n\t\t\t\t\t\tresponse = value.map(( optionValue ) => {\n\t\t\t\t\t\t\treturn this.field.find( vsprintf( 'option[value=\"%s\"]', [ optionValue ] ) ).text();\n\t\t\t\t\t\t}).join( `${ UncannyAutomator.i18n.itemSeparator } ` );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tresponse = this.field.find( vsprintf( 'option[value=\"%s\"]', [ value ] ) ).text();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Check if it supports multiple values, and the value is an array\n\t\t\t\t\tif ( this.attributes.supportsMultipleValues && $.isArray( value ) ){\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tlet optionsText = '';\n\n\t\t\t\t\t\t\tresponse = value.map(( optionValue ) => {\n\t\t\t\t\t\t\t\treturn this.getSelectOptionByValue( optionValue ).text;\n\t\t\t\t\t\t\t}).join( `${ UncannyAutomator.i18n.itemSeparator } ` );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch ( e ){\n\t\t\t\t\t\t\t// console.log( e );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t// Get option from the options array\n\t\t\t\t\t\t\tresponse = this.getSelectOptionByValue( value ).text;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch ( e ){\n\t\t\t\t\t\t\t// console.log( e );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'text':\n\t\t\tcase 'url':\n\t\t\tcase 'email':\n\t\t\tcase 'int':\n\t\t\tcase 'float':\n\t\t\tcase 'textarea':\n\t\t\t\t// Create DOM element to remove the HTML tags\n\t\t\t\tvalue = $( '<p/>' ).html( value ).text();\n\t\t\t\tbreak;\n\n\t\t\tcase 'checkbox':\n\t\t\t\tif ( value ){\n\t\t\t\t\tresponse = UncannyAutomator.i18n.trueLabel;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresponse = UncannyAutomator.i18n.falseLabel;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'radio':\n\t\t\t\t// Check if the field DOM element is defined\n\t\t\t\tif ( isDefined( this.field ) ){\n\t\t\t\t\t// Get checked radio\n\t\t\t\t\tconst $checkedRadio = this.field.find( 'input:checked' );\n\n\t\t\t\t\t// Check if there is a checked radio\n\t\t\t\t\tif ( $checkedRadio.length == 1 ){\n\t\t\t\t\t\t// Get container\n\t\t\t\t\t\tconst $radioContainer = $checkedRadio.closest( '.form-radio__container' );\n\n\t\t\t\t\t\t// Get text\n\t\t\t\t\t\tresponse = $radioContainer.text().trim();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Get option from the options array\n\t\t\t\t\t\tresponse = this.getSelectOptionByValue( value ).text;\n\t\t\t\t\t}\n\t\t\t\t\tcatch ( e ){\n\t\t\t\t\t\t// console.log( e );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\n\t\t\tcase 'date':\n\t\t\t\t// Create DOM element to remove the HTML tags\n\t\t\t\tvalue = $( '<p/>' ).html( value ).text();\n\t\t\t\tbreak;\n\n\t\t\tcase 'time':\n\t\t\t\t// Create DOM element to remove the HTML tags\n\t\t\t\tvalue = $( '<p/>' ).html( value ).text();\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn response;\n\t}\n\n\t/**\n\t * Get the custom value of a select (if there is one)\n\t *\n\t * @since 2.5\n\t *\n\t * @return string, with the value\n\t */\n\tgetSelectCustomValue(){\n\t\t// Default response\n\t\tlet fieldValue = null;\n\n\t\t// Check if it's a select\n\t\tif ( this.attributes.fieldType == 'select' && this.attributes.supportsCustomValue && this.getValue() == 'automator_custom_value' ){\n\t\t\t// Check if the child field was created\n\t\t\tif ( isDefined( this.customValueField ) ){\n\t\t\t\tfieldValue = this.customValueField.getValue();\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Try to get it from the meta\n\t\t\t\ttry {\n\t\t\t\t\tfieldValue = UncannyAutomator.recipe.items[ this.attributes.itemId ].meta[ `${ this.attributes.optionCode }_custom` ];\n\t\t\t\t}\n\t\t\t\tcatch ( e ){\n\t\t\t\t\t// console.log( e );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fieldValue;\n\t}\n\n\t/**\n\t * Get a select option by option value\n\t *\n\t * @since 2.5\n\t *\n\t * @return array\n\t */\n\tgetSelectOptionByValue( value = '' ){\n\t\tlet option = null;\n\n\t\t// Get the field options\n\t\tlet options = this.attributes.options;\n\n\t\t// Check if it supports a custom value\n\t\tif ( this.attributes.supportsCustomValue ){\n\t\t\toptions.push({\n\t\t\t\tvalue: 'automator_custom_value',\n\t\t\t\ttext:  UncannyAutomator.i18n.validation.field.select.customValue\n\t\t\t});\n\t\t}\n\n\t\t// Check if the options are defined\n\t\tif ( ! isEmpty( options ) ){\n\t\t\t// Iterate options and find the value\n\t\t\toptions.forEach(( selectOption ) => {\n\t\t\t\t// Compare the option value with the value parameter\n\t\t\t\tif ( value == selectOption.value ){\n\t\t\t\t\toption = selectOption;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn option;\n\t}\n\n\t/**\n\t * Get field's meta value\n\t * \n\t * @since 0.5\n\t *\n\t * @return {string|int} Value of the field\n\t */\n\n\tgetMetaValue(){\n\t\tlet response;\n\n\t\t// If the item is defined\n\t\tif ( isDefined( UncannyAutomator.recipe.items[ this.attributes.itemId ] ) ){\n\t\t\tlet metaValue = UncannyAutomator.recipe.items[ this.attributes.itemId ].meta[ this.attributes.optionCode ];\n\n\t\t\tif ( isDefined( metaValue ) ){\n\t\t\t\tresponse = metaValue;\n\t\t\t}\n\t\t}\n\n\t\treturn response;\n\t}\n\n\t/**\n\t * Set value\n\t * \n\t * @since 0.4\n\t *\n\t * @param {string} Value of the field\n\t */\n\n\tsetValue( value, doTrigger = true, options = { updateCodemirror: true } ){\n\t\t// console.log( this.attributes.label );\n\t\t// console.log( '> setValue: ' + value );\n\n\t\tif ( isDefined( this.field ) ){\n\t\t\tswitch ( this.type ){\n\t\t\t\tcase 'select':\n\t\t\t\t\t// Sanitize the value\n\t\t\t\t\tif ( ! isDefined( value ) ){\n\t\t\t\t\t\tif ( this.attributes.supportsMultipleValues ){\n\t\t\t\t\t\t\tvalue = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvalue = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get all options\n\t\t\t\t\tlet allOptions = this.field.find( 'option' );\n\n\t\t\t\t\tif ( this.attributes.supportsMultipleValues ){\n\t\t\t\t\t\t// Unselect all the options\n\t\t\t\t\t\tallOptions.prop( 'selected', false );\n\n\t\t\t\t\t\t// Iterate the selected options\n\t\t\t\t\t\tif ( $.isArray( value ) && ! isEmpty( value ) ){\n\t\t\t\t\t\t\t// Iterate the values\n\t\t\t\t\t\t\tvalue.forEach(( optionID ) => {\n\t\t\t\t\t\t\t\t// Get option\n\t\t\t\t\t\t\t\tlet option = this.field.find( 'option[value=\"' + optionID + '\"]' );\n\n\t\t\t\t\t\t\t\t// Check if option exists\n\t\t\t\t\t\t\t\tif ( option.length > 0 ){\n\t\t\t\t\t\t\t\t\t// Select option\n\t\t\t\t\t\t\t\t\toption.prop( 'selected', true );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t// Trigger change\n\t\t\t\t\t\t\tif ( doTrigger ){\n\t\t\t\t\t\t\t\tthis.field.trigger( 'change', {\n\t\t\t\t\t\t\t\t\tmanuallySet: false\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Get option\n\t\t\t\t\t\tlet option = this.field.find( 'option[value=\"' + value + '\"]' );\n\n\t\t\t\t\t\t// Check if option exists\n\t\t\t\t\t\tif ( option.length > 0 ){\n\t\t\t\t\t\t\t// Unselect all the options\n\t\t\t\t\t\t\tallOptions.prop( 'selected', false );\n\n\t\t\t\t\t\t\t// Select option\n\t\t\t\t\t\t\toption.prop( 'selected', true );\n\n\t\t\t\t\t\t\t// Trigger change\n\t\t\t\t\t\t\tif ( doTrigger ){\n\t\t\t\t\t\t\t\tthis.field.trigger( 'change', {\n\t\t\t\t\t\t\t\t\tmanuallySet: false\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Unselect all the options\n\t\t\t\t\t\t\tallOptions.prop( 'selected', false );\n\n\t\t\t\t\t\t\t// Check if the field supports custom options\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tthis.attributes.supportsCustomValue\n\t\t\t\t\t\t\t\t&& ! isEmpty( value )\n\t\t\t\t\t\t\t){\n\t\t\t\t\t\t\t\t// Set the value as a custom option\n\t\t\t\t\t\t\t\tthis.setCustomValue( value, false );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Trigger change\n\t\t\t\t\t\t\tif ( doTrigger ){\n\t\t\t\t\t\t\t\tthis.field.trigger( 'change', {\n\t\t\t\t\t\t\t\t\tmanuallySet: false\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// console.error( vsprintf( 'The option with ID %s does not exists', [ value ] ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'text':\n\t\t\t\tcase 'url':\n\t\t\t\tcase 'email':\n\t\t\t\tcase 'int':\n\t\t\t\tcase 'float':\n\t\t\t\t\t// Check if we should try to update the CodeMirror field\n\t\t\t\t\tif ( isDefined( options.updateCodemirror ) && options.updateCodemirror && isDefined( this.fieldCM ) ){\n\t\t\t\t\t\t// Try to set the value\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t// console.log( 'Set the value in Codemirror' );\n\t\t\t\t\t\t\t// Set value using CodeMirror's method\n\t\t\t\t\t\t\t// this will copy the value in the real field\n\t\t\t\t\t\t\tthis.fieldCM.setValue( value );\n\t\t\t\t\t\t} catch ( e ){\n\t\t\t\t\t\t\t// console.log( 'Set the value in the real field FALLBACK' );\n\t\t\t\t\t\t\t// Fallback. Set the value in the real field\n\t\t\t\t\t\t\tthis.field.val( value );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// console.log( 'Set the value in the real field' );\n\t\t\t\t\t\t// Set value\n\t\t\t\t\t\tthis.field.val( value );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Trigger change\n\t\t\t\t\tif ( doTrigger ){\n\t\t\t\t\t\tthis.field.trigger( 'automator:field:change' );\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'textarea':\n\t\t\t\t\t// Set the value\n        \t\t\tthis.field.val( value );\n\n        \t\t\t// Set the value in the TinyMCE editor too\n        \t\t\tif ( isDefined( this.fieldTinyMCE ) ){\n        \t\t\t\tthis.fieldTinyMCE.setContent( value );\n        \t\t\t}\n\n        \t\t\t/*\n\t\t\t\t\t// Check if \"Text\" view is selected\n        \t\t\tif ( this.field.is( ':visible' ) ){\n        \t\t\t\t\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            // Insert token\n\t\t\t            this.editor.execCommand( 'mceInsertContent', false, token );\n\t\t\t        }\n\t\n\n\n\t\t\t\t\t// Set value\n\t\t\t\t\tthis.field.val( value );*/\n\n\t\t\t\t\t// Trigger change\n\t\t\t\t\tif ( doTrigger ){\n\t\t\t\t\t\tthis.field.trigger( 'automator:field:change' );\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\tlet wantsToCheck = value, // Just for readability\n\t\t\t\t\t\tisChecked = this.getValue();\n\n\t\t\t\t\t// If true, check\n\t\t\t\t\tif ( wantsToCheck && ! isChecked ){\n\t\t\t\t\t\tthis.field.prop( 'checked', true );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! wantsToCheck && isChecked ) {\n\t\t\t\t\t\tthis.field.prop( 'checked', false );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( doTrigger && ( ( wantsToCheck && ! isChecked ) || ( ! wantsToCheck && isChecked ) ) ){\n\t\t\t\t\t\t// Trigger change\n\t\t\t\t\t\tthis.field.trigger( 'automator:field:change' );\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'radio':\n\t\t\t\t\t// Search for the radio and check it\n\t\t\t\t\tthis.field.filter( `[name=\"${ value }\"]` ).prop( 'checked', true );\n\n\t\t\t\t\t// Trigger change\n\t\t\t\t\tif ( doTrigger ){\n\t\t\t\t\t\t// Trigger change\n\t\t\t\t\t\tthis.field.trigger( 'automator:field:change' );\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'date':\n\t\t\t\t\t// Set value\n\t\t\t\t\tthis.field.val( value );\n\n\t\t\t\t\t// Trigger change\n\t\t\t\t\tif ( doTrigger ){\n\t\t\t\t\t\tthis.field.trigger( 'automator:field:change' );\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'time':\n\t\t\t\t\t// Set value\n\t\t\t\t\tthis.field.val( value );\n\n\t\t\t\t\t// Trigger change\n\t\t\t\t\tif ( doTrigger ){\n\t\t\t\t\t\tthis.field.trigger( 'automator:field:change' );\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\t\n\t}\n\n\t/**\n\t * Clear the value\n\t *\n\t * @since 3.0\n\t */\n\t\n\tclearValue(){\n\t\t// Set an empty value\n\t\tthis.setValue( '', true );\n\n\t\t// Clear the value in the Codemirror instance\n\t\ttry {\n\t\t\tthis.fieldCM.setValue( '' );\n\t\t} catch ( e ){}\n\n\t\t// Check if it's a date or time field\n\t\tif ( [ 'date', 'time' ].includes( this.attributes.fieldType ) ){\n\t\t\t// Try to clear the flatpickr value\n\t\t\ttry {\n\t\t\t\tthis.flatpickrInstance.clear();\n\t\t\t} catch ( e ){}\n\t\t}\n\t}\n\n\t/**\n\t * Set value of the custom value\n\t *\n\t * @since 2.8.2\n\t */\n\t\n\tsetCustomValue( value, doTrigger = true ){\n\t\t// console.log( this.attributes.label );\n\t\t// console.log( '> setCustomValue: ' + value );\n\n\t\t// Check if it's a select and has a customField defined,\n\t\t// if so, add it\n\t\tif (\n\t\t\tthis.attributes.fieldType == 'select'\n\t\t\t&& isDefined( this.customValueField )\n\t\t){\n\t\t\t// First, select the custom option\n\t\t\tthis.field.val( 'automator_custom_value' );\n\n\t\t\t// Set the value in the custom value field\n\t\t\tthis.customValueField.setValue( value, doTrigger );\n\n\t\t\t// Check if the user wants to trigger the change event\n\t\t\tif ( doTrigger ){\n\t\t\t\tthis.field.trigger( 'change', {\n\t\t\t\t\tmanuallySet: false\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Check if a select has a selected option\n\t *\n\t * @since 0.5\n\t */\n\n\thasSelectedOption(){\n\t\treturn this.selectHasSelectedOption;\n\t}\n\n\t/**\n\t * Set select options\n\t *\n\t * @since 0.5\n\t *\n\t * @param {array} \n\t */\n\n\tsetSelectOptions( options, triggerChange = true ){\n\t\t// Remove current options\n\t\tthis.removeSelectOptions();\n\n\t\t// Sanitize the select options\n\t\ttry {\n\t\t\toptions = options.filter(( option ) => {\n\t\t\t\treturn isDefined( option.value ) && isDefined( option.text );\n\t\t\t});\n\t\t} catch ( e ){}\n\n\t\tif ( isDefined( this.field ) ){\n\t\t\t// Get the container where we're going to add the options\n\t\t\tconst $optionsContainer = this.field.find( '.form-element__select-normal-options' );\n\n\t\t\tif ( options.length > 0 ){\n\t\t\t\t// Remove disabled\n\t\t\t\tthis.field.prop( 'disabled', false );\n\n\t\t\t\t// Get value\n\t\t\t\tlet value = isDefined( this.getValue() ) ? this.getValue() : this.getMetaValue();\n\n\t\t\t\t// Create array to save all options\n\t\t\t\tlet optionsDOM = [];\n\n\t\t\t\t// Create and append options\n\t\t\t\t$.each( options, ( index, option ) => {\n\t\t\t\t\tlet optionDOM = new Option( option.text, option.value, false, false );\n\n\t\t\t\t\t$optionsContainer.append( optionDOM );\n\t\t\t\t\toptionsDOM.push( optionDOM );\n\t\t\t\t});\n\n\t\t\t\tif ( ! isEmpty( value ) ){\n\t\t\t\t\t$.each( this.field.find( 'option' ), ( index, option ) => {\n\t\t\t\t\t\tif ( option.value == value ){\n\t\t\t\t\t\t\t$( option ).prop( 'selected', true );\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet $noResults = $( ( new Option( UncannyAutomator.i18n.noResults, '', ! this.attributes.supportsCustomValue, ! this.attributes.supportsCustomValue ) ) );\n\t\t\t\t$noResults.prop( 'disabled', true );\n\n\t\t\t\t$optionsContainer.append( $noResults );\n\n\t\t\t\tif ( ! this.attributes.supportsCustomValue ){\n\t\t\t\t\t// Disable the select\n\t\t\t\t\tthis.field.prop( 'disabled', true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( triggerChange ){\n\t\t\t\tthis.field.trigger( 'change' );\n\t\t\t\t// this.field.trigger( 'automator:field:change' );\n\t\t\t}\n\n\t\t\t// Render this select2 again\n\t\t\tthis.rerenderSelect2();\n\t\t}\n\t}\n\n\t/**\n\t * Remove select options\n\t *\n\t * @since 0.5\n\t */\n\n\tremoveSelectOptions(){\n\t\tif ( isDefined( this.field ) ){\n\t\t\tthis.field.find( '.form-element__select-normal-options' ).empty();\n\t\t}\n\t}\n\n\t/**\n\t * Check if field has loading animation\n\t * \n\t * @since 0.4\n\t *\n\t * @return {boolean} TRUE if the field has the loading animation\n\t */\n\n\tisLoading(){\n\t\treturn this.formElement.hasClass( 'form-element--loading' );\n\t}\n\n\t/**\n\t * Add loading animation to field\n\t * \n\t * @since 0.4\n\t */\n\n\tstartLoadingAnimation(){\n\t\t// Check if has class\n\t\tlet CSSclass = 'form-element--loading';\n\n\t\tif ( isDefined( this.formElement ) && ! this.formElement.hasClass( CSSclass ) ){\n\t\t\t\n\t\t\t// Add class\n\t\t\tthis.formElement.addClass( CSSclass );\n\n\t\t\t// Check if it's a checkbox\n\t\t\tif ( this.type == 'checkbox' && ! isDefined( this.attributes.isToggle ) ){\n\t\t\t\tthis.fieldContainer.addClass( 'form-checkbox--loading-inline' );\n\t\t\t}\n\n\t\t\t// Trigger\n\t\t\tthis.formElement.trigger( 'automator:field:loading' );\n\t\t}\n\t}\n\n\t/**\n\t * Remove loading animation to field\n\t * \n\t * @since 0.4\n\t */\n\n\tstopLoadingAnimation(){\n\t\t// Check if has class\n\t\tlet CSSclass = 'form-element--loading';\n\n\t\tif ( isDefined( this.formElement ) && this.formElement.hasClass( CSSclass ) ){\n\t\t\t\n\t\t\t// Remove class\n\t\t\tthis.formElement.removeClass( CSSclass );\n\n\t\t\t// Remove checkbox class\n\t\t\tthis.fieldContainer.removeClass( 'form-checkbox--loading-inline' );\n\n\t\t\t// Trigger\n\t\t\tthis.formElement.trigger( 'automator:field:loading' );\n\t\t}\n\t}\n\n\t/**\n\t * Init field libraries, like Select2\n\t *\n\t * @since 0.5\n\t */\n\n\tinitLibraries(){\n\t\tswitch ( this.type ){\n\t\t\tcase 'select':\n\t\t\t\t// Select2\n\t\t\t\tthis.initSelect2( this.field );\n\t\t\t\tbreak;\n\n\t\t\tcase 'text':\n\t\t\tcase 'url':\n\t\t\tcase 'email':\n\t\t\tcase 'int':\n\t\t\tcase 'float':\n\t\t\tcase 'textarea':\n\t\t\t\t// URL Checker\n\t\t\t\tif ( this.attributes.fieldType == 'url' ){\n\t\t\t\t\tinitURLChecker( this.fieldContainer );\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'date':\n\t\t\tcase 'time':\n\t\t\t\t// Init flatpickr.js\n\t\t\t\tthis.initFlatpickr( this.field );\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Select\n\t * Get the select2 settings\n\t *\n\t * @since 2.7.3\n\t */\n\n\tgetSelect2Settings(){\n\t\t// Define select2 settings\n\t\tlet settings = {\n\t\t\ttheme: 'uap-select2',\n\t        searchInputPlaceholder: UncannyAutomator.i18n.search,\n\t        language: {\n\t            noResults: function () {\n\t                return UncannyAutomator.i18n.noResults;\n\t            },\n\t        },\n            templateResult: ( data ) => {\n            \tlet template = data.text;\n\n            \t// Check if the ID is defined\n                if ( isDefined( data.id ) ){\n                \t// Check if it's a number\n                    if ( Number.isInteger( parseInt( data.id ) ) && parseInt( data.id ) > 0 ){\n                        template = `<span class=\"uap-select2-item__meta\">(${ vsprintf( UncannyAutomator.i18n.postIDPlaceholder, [ data.id.replace( '-objectkey', '' )])})</span> ${ data.text }`; \n                    } \n                }\n\n                return template;\n            },\n            templateSelection: function ( data ) {\n                let template = data.text;\n\n            \t// Check if the ID is defined\n                if ( isDefined( data.id ) ){\n                \t// Check if it's a number\n                    if ( Number.isInteger( parseInt( data.id ) ) && parseInt( data.id ) > 0 ){\n                        template = `<span class=\"uap-select2-item__meta\">(${ vsprintf( UncannyAutomator.i18n.postIDPlaceholder, [ data.id.replace( '-objectkey', '' )])})</span> ${ template }`; \n                    } \n                }\n\n                return template;\n            },\n            escapeMarkup: function ( markUp ) {\n                return markUp;\n            }\n\t    };\n\n\t    // Check if we have to add a placeholder\n\t\tif ( this.attributes.hasPlaceholder ){\n\t\t\t// Add placeholder\n\t\t\tsettings.placeholder = this.attributes.placeholder;\n\t\t}\n\n\t\t// Check if we don't need the search field\n\t\tif ( this.attributes.customClass ){\n\t\t\tsettings.customClass = this.attributes.customClass;\n\t\t}\n\n\t\treturn settings;\n\t}\n\n\t/**\n\t * Init Select2\n\t * \n\t * @since 0.5\n\t */\n\n\tinitSelect2( $field ){\n\t\tlet settings = this.getSelect2Settings();\n\n\t\tif ( ! $field.hasClass( 'select2-hidden-accessible' ) ){\n\t\t\t$field.select2( settings );\n\t\t}\n\t}\n\n\t/**\n\t * Init Flatpickr\n\t *\n\t * @since 3.0\n\t */\n\t\n\tinitFlatpickr( $field ){\n\t\t// Create a global element to add the calendar\n\t\tif ( ! isDefined( document.getElementById( 'uap-flatpickr-calendar' ) ) ){\n\t\t\t$( 'body' )\n\t\t\t\t.append( $( `<div id=\"uap-flatpickr-calendar\" class=\"uap uap-flatpickr-calendar\"></div>` ) )\n\t\t}\n\t\tconst container = document.getElementById( 'uap-flatpickr-calendar' );\n\n\t\tlet settings = {\n\t\t\tallowInput: true,\n\n\t\t\tpositionElement: this.$fakeCodemirrorField[0],\n\n\t\t\taltInput:   true,\n\n\t\t\tclickOpens: false,\n\n\t\t\tappendTo: container,\n\n\t\t\tlocale: {\n\t\t\t\tweekdays: {\n\t\t\t\t\tshorthand: [\n\t\t\t\t\t\tUncannyAutomator.i18n.format.date.weekdays.shorthand.sunday, UncannyAutomator.i18n.format.date.weekdays.shorthand.monday, UncannyAutomator.i18n.format.date.weekdays.shorthand.tuesday, UncannyAutomator.i18n.format.date.weekdays.shorthand.wednesday, UncannyAutomator.i18n.format.date.weekdays.shorthand.thursday, UncannyAutomator.i18n.format.date.weekdays.shorthand.friday, UncannyAutomator.i18n.format.date.weekdays.shorthand.saturday ],\n\t\t\t\t\tlonghand: [ UncannyAutomator.i18n.format.date.weekdays.longhand.sunday, UncannyAutomator.i18n.format.date.weekdays.longhand.monday, UncannyAutomator.i18n.format.date.weekdays.longhand.tuesday, UncannyAutomator.i18n.format.date.weekdays.longhand.wednesday, UncannyAutomator.i18n.format.date.weekdays.longhand.thursday, UncannyAutomator.i18n.format.date.weekdays.longhand.friday, UncannyAutomator.i18n.format.date.weekdays.longhand.saturday ],\n\t\t\t\t},\n\t\t\t\tmonths: {\n\t\t\t\t\tshorthand: [\n\t\t\t\t\t\tUncannyAutomator.i18n.format.date.months.shorthand.january, UncannyAutomator.i18n.format.date.months.shorthand.february, UncannyAutomator.i18n.format.date.months.shorthand.march, UncannyAutomator.i18n.format.date.months.shorthand.april, UncannyAutomator.i18n.format.date.months.shorthand.may, UncannyAutomator.i18n.format.date.months.shorthand.june, UncannyAutomator.i18n.format.date.months.shorthand.july, UncannyAutomator.i18n.format.date.months.shorthand.august, UncannyAutomator.i18n.format.date.months.shorthand.september, UncannyAutomator.i18n.format.date.months.shorthand.october, UncannyAutomator.i18n.format.date.months.shorthand.november, UncannyAutomator.i18n.format.date.months.shorthand.december,\n\t\t\t\t\t],\n\t\t\t\tlonghand: [\n\t\t\t\t\t\tUncannyAutomator.i18n.format.date.months.longhand.january, UncannyAutomator.i18n.format.date.months.longhand.february, UncannyAutomator.i18n.format.date.months.longhand.march, UncannyAutomator.i18n.format.date.months.longhand.april, UncannyAutomator.i18n.format.date.months.longhand.may, UncannyAutomator.i18n.format.date.months.longhand.june, UncannyAutomator.i18n.format.date.months.longhand.july, UncannyAutomator.i18n.format.date.months.longhand.august, UncannyAutomator.i18n.format.date.months.longhand.september, UncannyAutomator.i18n.format.date.months.longhand.october, UncannyAutomator.i18n.format.date.months.longhand.november, UncannyAutomator.i18n.format.date.months.longhand.december,\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\trangeSeparator: ` ${ UncannyAutomator.i18n.format.date.rangeSeparator } `,\n\t\t\t\t// Numeric representation of the day of the week. 0 (for Sunday) through 6 (for Saturday)\n\t\t\t\t// In the translatable string we say that 1 is Sunday and Saturday is 7, so we have to subtract 1\n\t\t\t\tfirstDayOfWeek: ( parseInt( UncannyAutomator.i18n.format.date.firstDayOfWeek ) >= 1 && parseInt( UncannyAutomator.i18n.format.date.firstDayOfWeek ) <= 7 ) ? parseInt( UncannyAutomator.i18n.format.date.firstDayOfWeek ) - 1 : 0,\n\t\t\t\tweekAbbreviation: ` ${ UncannyAutomator.i18n.format.date.weekAbbreviation } `,\n\t\t\t\tscrollTitle: UncannyAutomator.i18n.scrollToIncrement,\n\t\t        toggleTitle: UncannyAutomator.i18n.clickToToggle,\n\t\t        amPM: [ UncannyAutomator.i18n.format.date.am, UncannyAutomator.i18n.format.date.pm ],\n\t\t        yearAriaLabel: UncannyAutomator.i18n.format.date.year,\n\t\t        monthAriaLabel: UncannyAutomator.i18n.format.date.month,\n\t\t        hourAriaLabel: UncannyAutomator.i18n.format.date.hour,\n\t\t        minuteAriaLabel: UncannyAutomator.i18n.format.date.minute,\n\t\t\t},\n\n\t\t\tonReady: ( selectedDates, dateStr, instance ) => {\n\t\t\t\t// Check if the value of the date field is not equal\n\t\t\t\t// to the value of the Codemirror field. That would mean\n\t\t\t\t// that the date field has a valid value, and that we\n\t\t\t\t// have to format it\n\t\t\t\ttry {\n\t\t\t\t\tconst formatCodemirrorDate = () => {\n\t\t\t\t\t\t// Check if the field value is not a token\n\t\t\t\t\t\tif ( ! this.getValue().includes( '}}' ) ){\n\t\t\t\t\t\t\t// Check if the date in the field is formatted differently than\n\t\t\t\t\t\t\t// the date in the alternative date field\n\t\t\t\t\t\t\tif ( this.fieldCM.getValue() != instance.altInput.value ){\n\t\t\t\t\t\t\t\tthis.fieldCM.setValue( instance.altInput.value );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if CodeMirror is ready\n\t\t\t\t\tif ( isDefined( this.fieldCM ) ){\n\t\t\t\t\t\tformatCodemirrorDate();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.field.on( 'ua-codemirror-ready', () => {\n\t\t\t\t\t\t\tformatCodemirrorDate();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} catch ( e ){ console.log( e ); }\n\t\t\t},\n\n\t\t\tonChange: ( selectedDates, dateStr, instance ) => {\n\t\t\t\t// Update the Codemirror field\n\t\t\t\ttry {\n\t\t\t\t\tconst setCodemirrorValue = () => {\n\t\t\t\t\t\t// Remove the current value from the Codemirror field,\n\t\t\t\t\t\t// and set the value of the alt date/time field as value\n\t\t\t\t\t\tthis.fieldCM.setValue( instance.altInput.value );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if CodeMirror is ready\n\t\t\t\t\tif ( isDefined( this.fieldCM ) ){\n\t\t\t\t\t\tsetCodemirrorValue();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.field.on( 'ua-codemirror-ready', () => {\n\t\t\t\t\t\t\tsetCodemirrorValue();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} catch ( e ){ console.log( e ); }\n\t\t\t}\n\t\t};\n\n\t\t// Settings depending on the field type\n\t\t// https://github.com/flatpickr/flatpickr/blob/master/src/types/options.ts#L19\n\t\tif ( this.attributes.fieldType == 'date' ){\n\t\t\tsettings = $.extend( settings, {\n\t\t\t\t// https://flatpickr.js.org/formatting/\n\t\t\t\tdateFormat: this.attributes.dateFormat,\n\t\t\t\taltFormat:  this.attributes.dateAltFormat,\n\t\t\t});\n\n\t\t\t// Check if it supports a range\n\t\t\tif ( this.attributes.supportsRange ){\n\t\t\t\tsettings.mode = 'range';\n\t\t\t}\n\n\t\t\t// Check if it has a min date\n\t\t\tif ( isDefined( this.attributes.minDate ) ){\n\t\t\t\tsettings.minDate = this.attributes.minDate;\n\t\t\t}\n\n\t\t\t// Check if it has a max date\n\t\t\tif ( isDefined( this.attributes.maxDate ) ){\n\t\t\t\tsettings.maxDate = this.attributes.maxDate;\n\t\t\t}\n\t\t}\n\n\t\tif ( this.attributes.fieldType == 'time' ){\n\t\t\tsettings = $.extend( settings, {\n\t\t\t\tenableTime: true,\n    \t\tnoCalendar: true,\n\n    \t\t// https://flatpickr.js.org/formatting/\n    \t\tdateFormat: this.attributes.timeFormat,\n\t\t\t\taltFormat:  this.attributes.timeAltFormat,\n\t\t\t});\n\n\t\t\t// Check if it has a min time\n\t\t\tif ( isDefined( this.attributes.minTime ) ){\n\t\t\t\tsettings.minTime = this.attributes.minTime;\n\t\t\t}\n\n\t\t\t// Check if it has a max time\n\t\t\tif ( isDefined( this.attributes.manTime ) ){\n\t\t\t\tsettings.manTime = this.attributes.manTime;\n\t\t\t}\n\t\t}\n\n\t\t// Init flatpickr\n\t\tthis.flatpickrInstance = $field.flatpickr( settings );\n\t}\n\n\t/**\n\t * Init CodeMirror\n\t *\n\t * @since 3.0\n\t */\n\t\n\tinitCodeMirror(){\n\t\t// Check if this isn't already a CodeMirror instance\n\t\tif ( \n\t\t\t[ 'text', 'url', 'email', 'int', 'float', 'date', 'time', 'textarea' ].includes( this.attributes.fieldType )\n\t\t){\n\t\t\t// Check if we already created a CodeMirror for this field\n\t\t\tthis.destroyCodeMirror();\n\n\t\t\tconst initialValue = this.getValue();\n\n\t\t\t// CodeMirror\n\t\t\tthis.fieldCM = CodeMirror( this.$fakeCodemirrorField[0], {\n\t\t\t\tlineNumbers: 0,\n\t\t\t\ttabSize: 4,\n\t\t\t\tvalue: initialValue,\n\t\t\t\tmode: 'default',\n\t\t\t\tdragDrop: false,\n\t\t\t\tviewportMargin: Infinity,\n\t\t\t\tlineWrapping: true,\n\t\t\t\tautoRefresh: true,\n\n\t\t\t\t// Only allow breaklines in textareas\n\t\t\t\tnoNewlines: ! ( this.attributes.fieldType == 'textarea' ),\n\t\t\t\t// Only allow scrollbars in textareas\n\t\t\t\tscrollbarStyle: this.attributes.fieldType == 'textarea' ? 'native' : null,\n\n\t\t\t\textraKeys: {\n\t\t\t\t\tTab: () => {\n\t\t\t\t\t\t// Get next field\n\t\t\t\t\t\tconst nextField = this.getNextField();\n\n\t\t\t\t\t\t// Check if there is a next field\n\t\t\t\t\t\tif ( isDefined( nextField ) ){\n\t\t\t\t\t\t\t// Focus the field\n\t\t\t\t\t\t\tnextField.focus();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\treadOnly: this.attributes.isReadOnly\n\t\t\t});\n\n\t\t\t// Add the placeholder\n\t\t\tif ( this.attributes.hasPlaceholder ){\n\t\t\t\tthis.fieldCM.setOption( 'placeholder', this.attributes.placeholder );\n\t\t\t}\n\n\t\t\tthis.fieldCM.on( 'changes', ( event, source ) => {\n\t\t\t\t// Check if the current field is NOT a date or time field\n\t\t\t\tif ( ! [ 'date', 'time' ].includes( this.attributes.fieldType ) ){\n\t\t\t\t\tthis.setValue( this.fieldCM.getValue(), true, {\n\t\t\t\t\t\tupdateCodemirror: false\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.fieldCM.on( 'focus', () => {\n\t\t\t\t// If it's a date or time field, try to open the calendar\n\t\t\t\tif ( [ 'date', 'time' ].includes( this.attributes.fieldType ) ){\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Open calendar\n\t\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\t\tthis.flatpickrInstance.open();\n\t\t\t\t\t\t}, 50 );\n\t\t\t\t\t} catch ( e ){\n\t\t\t\t\t\tconsole.log( e );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.field.on( 'focus', () => {\n\t\t\t\tthis.fieldCM.focus();\n\t\t\t});\n\n\t\t\tthis.field.trigger( 'ua-codemirror-ready' );\n\t\t}\n\t\t\n\t\tif ( this.attributes.fieldType == 'select' ){\n\t\t\t// Check if it has a custom value\n\t\t\tif ( isDefined( this.customValueField ) ){\n\t\t\t\tthis.customValueField.initCodeMirror();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get the field below the current field\n\t *\n\t * @since 3.0\n\t */\n\n\tgetNextField(){\n\t\tlet nextField = null;\n\n\t\t// Check if this field is part of an item\n\t\tif ( isDefined( this.attributes.itemId ) && isDefined( this.attributes.groupId ) ){\n\t\t\t// Get the group of fields\n\t\t\tconst groupOfFields = UncannyAutomator.recipe.items[ this.attributes.itemId ].options[ this.attributes.groupId ].fields;\n\n\t\t\t// Check if it's defined and is an array\n\t\t\tif ( isDefined( groupOfFields ) && $.isArray( groupOfFields ) ){\n\t\t\t\t// Get the position of the current field\n\t\t\t\tconst fieldPosition = groupOfFields.indexOf( this );\n\n\t\t\t\t// Check if we found the field\n\t\t\t\tif ( fieldPosition != -1 ){\n\t\t\t\t\t// Check if it's NOT the last field\n\t\t\t\t\tif ( fieldPosition != groupOfFields.length - 1 ){\n\t\t\t\t\t\t// Get the next field\n\t\t\t\t\t\tnextField = groupOfFields[ fieldPosition + 1 ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check if it's the user selector\n\t\tif ( isDefined( this.attributes.itemType ) && this.attributes.itemType == 'user-selector' ){\n\t\t\t// Get fields\n\t\t\tconst groupOfFields = UncannyAutomator.recipe.userSelector.fields;\n\n\t\t\t// Check if it's defined and is an array\n\t\t\tif ( isDefined( groupOfFields ) && $.isArray( groupOfFields ) ){\n\t\t\t\t// Get the position of the current field\n\t\t\t\tconst fieldPosition = groupOfFields.indexOf( this );\n\n\t\t\t\t// Check if we found the field\n\t\t\t\tif ( fieldPosition != -1 ){\n\t\t\t\t\t// Check if it's NOT the last field\n\t\t\t\t\tif ( fieldPosition != groupOfFields.length - 1 ){\n\t\t\t\t\t\t// Get the next field\n\t\t\t\t\t\tnextField = groupOfFields[ fieldPosition + 1 ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn nextField;\n\t}\n\n\t/**\n\t * Focus the current field\n\t *\n\t * @since 3.0\n\t */\n\n\tfocus(){\n\t\tif ( isDefined( this.field ) ){\n\t\t\tswitch ( this.type ){\n\t\t\t\tcase 'select':\n\t\t\t\t\t// Try to open the select2 field\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.field.select2( 'focus' );\n\t\t\t\t\t} catch ( e ){\n\t\t\t\t\t\t// Otherwise, just try to focus the normal dropdown\n\t\t\t\t\t\tthis.field.focus();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'text':\n\t\t\t\tcase 'url':\n\t\t\t\tcase 'email':\n\t\t\t\tcase 'int':\n\t\t\t\tcase 'float':\n\t\t\t\tcase 'date':\n\t\t\t\tcase 'time':\n\t\t\t\t\t// Check if it's using CodeMirror\n\t\t\t\t\tif ( isDefined( this.fieldCM ) ){\n\t\t\t\t\t\tthis.fieldCM.focus();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.field.focus();\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'textarea':\n\t\t\t\t\t// Check if it's using TinyMCE\n\t\t\t\t\tif ( isDefined( this.fieldTinyMCE ) ){\n\t\t\t\t\t\t// Check if it's using the \"Text\" tab\n\t\t\t\t\t\tif ( this.field.is( ':visible' ) ){\n\t\t\t\t\t\t\tthis.field.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t// Focus the TinyMCE field\n\t\t\t\t\t\t\t\tthis.fieldTinyMCE.focus();\n\t\t\t\t\t\t\t} catch ( e ){}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.field.focus();\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\tthis.field.focus();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'radio':\n\t\t\t\t\tthis.field.focus();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Destroy CodeMirror\n\t *\n\t * @since 3.0\n\t */\n\tdestroyCodeMirror(){\n\t\t// Check if we already created a CodeMirror for this field\n\t\tif ( isDefined( this.fieldCM ) ){\n\t\t\ttry {\n\t\t\t\tconst $field = this.fieldCM.getWrapperElement();\n\t\t\t\t$field.parentNode.removeChild( $field );\n\t\t\t\tthis.fieldCM = null;\n\t\t\t} catch ( e ){}\n\t\t}\n\t}\n\n\t/**\n\t * Select\n\t * Rerender the dropdown\n\t */\n\t\n\trerenderSelect2(){\n\t\tlet settings = this.getSelect2Settings();\n\n\t\tif ( ! isEmpty( this.field ) && this.field.hasClass( 'select2-hidden-accessible' ) ){\n\t\t\tthis.field.select2( 'destroy' ).select2( settings );\n\t\t}\n\t}\n\n\t/**\n\t * Init Token Selector\n\t *\n\t * @since 3.0\n\t */\n\n\tinitTokenSelector(){\n\t\tif (\n\t\t\tthis.attributes.supportsTokens\n\t\t){\n\t\t\t// Check if we already created the token selector\n\t\t\tthis.destroyTokenSelector();\n\n\t\t\tthis.tokenSelector = new TokenSelector( this );\n\t\t}\n\n\t\tif ( this.attributes.fieldType == 'select' ){\n\t\t\t// Check if it has a custom value\n\t\t\tif ( isDefined( this.customValueField ) ){\n\t\t\t\tthis.customValueField.initTokenSelector();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Destroy the Token selector\n\t *\n\t * @since 3.0\n\t */\n\n\tdestroyTokenSelector(){\n\t\t// Check if we already created the token selector\n\t \tif ( isDefined( this.tokenSelector ) ){\n\t\t\tthis.tokenSelector.destroy();\n\t\t}\n\t}\n\n\t/**\n\t * Init TinyMCE\n\t * We're going to call this in ItemOptions.js because TinyMCE needs the item in the DOM before changing it\n\t *\n\t * @since 0.5\n\t */\n\n\tinitTinyMCE(){\n\t\tlet $textarea = this.field;\n\n\t\t// TinyMCE\n\t\tif ( isDefined( this.field ) && this.attributes.fieldType == 'textarea' && this.attributes.supportsTinyMCE ){\n\t\t\t// Get field ID\n\t\t\tconst fieldId = this.field.prop( 'id' );\n\n\t\t\t// Get editor\n\t        let editor = tinymce.get( fieldId );\n\n\t        if ( isDefined( editor ) ){\n\t        \twp.editor.remove( fieldId );\n\t        }\n\n\t\t\twp.editor.initialize( fieldId, {\n\t\t\t\tmediaButtons: true,\n\t\t\t\ttinymce: { \n\t\t\t\t\t// wpautop: true, \n\t\t\t\t\ttoolbar1: 'formatselect bold italic bullist numlist blockquote alignleft aligncenter alignright link unlink wp_more',\n\t\t\t\t\ttoolbar2: 'strikethrough hr forecolor pastetext removeformat visualchars outdent indent undo redo'\n\t\t\t\t}, \n\t\t\t\tquicktags: true,\n\t\t\t});\n\n\t\t\t// Get editor\n\t        editor = tinymce.get( fieldId );\n\t        \n\t        // Check what's the current active tab\n\t        // If .hidden is true, then the active tab is \"Text\"\n\t        if ( editor.hidden ){\n\t        \tthis.fieldContainer\n\t        \t\t.addClass( 'form-textarea--tinymce-text' );\n\t        }\n\t        else {\n\t        \tthis.fieldContainer\n\t        \t\t.addClass( 'form-textarea--tinymce-visual' );\n\t        }\n\n\t        // Detect changes on the \"Visual\" and \"Text\" tabs\n\t        this.formElement.find( '.switch-tmce' ).on( 'click', () => {\n\t        \tthis.field.trigger( 'ua-tinymce-activate-visual-view' );\n\n\t        \t// Change class to indicate what's the activate tab\n\t        \tthis.fieldContainer\n\t        \t\t.removeClass( 'form-textarea--tinymce-text' )\n\t        \t\t.addClass( 'form-textarea--tinymce-visual' );\n\t        });\n\n\t        this.formElement.find( '.switch-html' ).on( 'click', () => {\n\t        \tthis.field.trigger( 'ua-tinymce-activate-text-view' );\n\n\t        \t// Change class to indicate what's the activate tab\n\t        \tthis.fieldContainer\n\t        \t\t.removeClass( 'form-textarea--tinymce-visual' )\n\t        \t\t.addClass( 'form-textarea--tinymce-text' );\n\n\t        \t// Set the value of the normal field\n\t        \t// But don't trigger the change event\n\t        \ttry {\n\t        \t\tthis.fieldCM.setValue( editor.getContent({\n\t\t\t\t\t\tformat : 'raw'\n\t\t\t\t\t}) );\n\t        \t} catch ( e ){\n\t        \t\tthis.field.val( editor.getContent({\n\t\t\t\t\t\tformat : 'raw'\n\t\t\t\t\t}) );\n\t        \t}\n\t        });\n\n\t        this.fieldTinyMCE = editor;\n\n\t        editor.on( 'init', () => {\n\t        \tthis.field.trigger( 'ua-tinymce-ready' );\n\t        });\n\t\t}\n\t}\n}\n\nexport default Field;\n\n/**\n * Extend Select2 to add a placeholder in the search input\n *\n * @since 0.1\n *\n * @param   {object} Select2 Instance\n *\n * @return  {object} Select2 Instance\n */\n\n(function($){\n\t\n    // Get default settings\n    var Defaults = $.fn.select2.amd.require( 'select2/defaults' );\n\n    // Set default value for searchInputPlaceholder\n    $.extend( Defaults.defaults, {\n        searchInputPlaceholder: ''\n    });\n\t\n    // Get search element\n    var SearchDropdown = $.fn.select2.amd.require( 'select2/dropdown/search' );\n\n    // Save instance of search element\n    var _renderSearchDropdown = SearchDropdown.prototype.render;\n\n    SearchDropdown.prototype.render = function ( decorated ){\n        // Add placeholder attribute\n        var $rendered = _renderSearchDropdown.apply( this, Array.prototype.slice.apply( arguments ) );\n        this.$search.attr( 'placeholder', this.options.get( 'searchInputPlaceholder' ) );\n\t\tthis.$search.addClass( this.options.get( 'customClass' ) );\n        // Return search element\n        return $rendered;\n    };\n})( window.jQuery );","import $ from 'jquery';\n\nimport {\n\tgetItemsByIntegration,\n\tgetDOMElements,\n    restCall,\n    isDefined,\n    isEmpty,\n    replaceCurlyBraces,\n    addParametersToURL,\n    openInNewTab,\n    recipeSetRequiresUser,\n    vsprintf\n} from './Utilities';\n\nimport ItemCreatorIntegrations from './ItemCreatorIntegrations';\n\nimport ItemHeaderMenu from './ItemHeaderMenu';\nimport ItemHeaderIcon from './ItemHeaderIcon';\nimport ItemHeaderTag  from './ItemHeaderTag';\n\nimport Triggers \t  from './Triggers';\nimport Actions \t\t  from './Actions';\n\nimport Modal          from './Modal';\n\nclass itemCreatorTaskSelector {\n\tconstructor( itemType, integrationID, $currentItem ){\n\t\tthis.itemType \t\t= itemType;\n\t\tthis.integrationID \t= integrationID;\n\t\tthis.$currentItem \t= $currentItem;\n\n\t\t// Render DOM elements\n\t\tthis.render();\n\t}\n\n\trender(){\n\t\t// Create $container\n\t\tthis.$container = $( `<div class=\"item\"></div>` );\n\t\tthis.$item = this.$container;\n\n\t\tthis.createHeader();\n\t\tthis.createItemsList();\n\t\tthis.removeConnectingIntegrationsParameters();\n\n        this.$currentItem.replaceWith( this.$container );\n\t}\n\n\tcreateHeader(){\n\t\tconst $header = $( `\n\t\t\t<div>\n\t\t\t\t<div class=\"item-title uap-clear\">\n\t\t\t\t\t<div class=\"item-title__describe\">\n\t\t\t\t\t\t<div class=\"item-title__non-editable\">\n\t\t\t\t\t\t\t${ this.itemType == 'trigger' ? UncannyAutomator.i18n.trigger.select : UncannyAutomator.i18n.action.select }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t` );\n\n\t\t// Add the item actions (the three dots)\n        let $itemActions = new ItemHeaderMenu( this.itemType );\n        $header.append( $itemActions );\n\n        // Add the item icon\n        let $itemIcon = new ItemHeaderIcon( this.integrationID );\n        $header.append( $itemIcon );\n\n        // Add the integration tag\n        let $integrationTag = new ItemHeaderTag( this.integrationID );\n        $header.find( '.item-title' ).prepend( $integrationTag );\n\n        // Append the header to the main container\n        this.$container.append( $header );\n\t}\n\n\tcreateItemsList(){\n\t\tlet items, searchPlaceholder, unlockItems;\n\n\t\t// Get data depending on the item type\n\t\tif ( this.itemType == 'trigger' ){\n\t\t\titems \t           = getItemsByIntegration( this.integrationID, 'triggers' );\n\t\t\tsearchPlaceholder  = UncannyAutomator.i18n.trigger.search;\n\t\t\tunlockItems        = UncannyAutomator.i18n.proOnly.unlockTriggers;\n\t\t}\n\t\telse if ( this.itemType == 'action' ){\n\t\t\titems              = getItemsByIntegration( this.integrationID, 'actions' );\n\t\t\tsearchPlaceholder  = UncannyAutomator.i18n.action.search;\n\t\t\tunlockItems        = UncannyAutomator.i18n.proOnly.unlockActions;\n\t\t}\n\n\t\t// Create the main container\n\t\tconst $container   = $( `\n\t\t\t<div class=\"item__content\">\n\t\t\t\t<div class=\"item-options item-options--nopadding item-options--noborder\">\n\t\t\t\t\t<div class=\"form-element\">\n\t\t\t\t\t\t<div class=\"item__task-selector\">\n\t\t\t\t\t\t\t<div class=\"item-task-selector__search\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tclass=\"item-task-selector__search-input\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"${ searchPlaceholder }\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"item-task-selector__options\">\n\t\t\t\t\t\t\t\t<div class=\"item-task-selector-options__group item-task-selector-options__group--available\"></div>\n\t\t\t\t\t\t\t\t<div class=\"item-task-selector-options__group item-task-selector-options__group--unavailable\">\n\t\t\t\t\t\t\t\t\t<div class=\"item-task-selector-options__group-items\"></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class=\"item-task-selector__option item-task-selector__option--no-results item-task-selector__option--hide\">\n\t\t\t\t\t\t\t\t\t${ UncannyAutomator.i18n.noResults }\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t` );\n\n\t\t// Get important elements\n\t\tconst $optionsContainer = $container.find( '.item-options' ),\n\t\t      $taskSelector     = $container.find( '.item__task-selector' ),\n\t\t      $searchField      = $container.find( '.item-task-selector__search-input' ),\n\t\t      $itemsList        = {\n\t\t      \tcontainer: $container.find( '.item-task-selector__options' ),\n\t\t      \tavailable: $container.find( '.item-task-selector-options__group--available' ),\n\t\t      \tunavailable: {\n\t\t      \t\tcontainer: $container.find( '.item-task-selector-options__group--unavailable' ),\n\t\t      \t\tlist:      $container.find( '.item-task-selector-options__group-items' )\n\t\t      \t},\n\t\t      \tnoResults: $container.find( '.item-task-selector__option--no-results' )\n\t\t      };\n\n\t\t// Check if it has available items\n\t\tif ( items.hasAvailableItems ){\n\t\t\t// Sort available items\n\t\t\t// Move the ones that require user data to the bottom if the user has Automator free\n\t\t\t// and this is an anonymous recipe\n\t\t\tif (\n\t\t\t\t// Check if WP is ready\n\t\t\t\t( ! isDefined( UncannyAutomator.wp ) || ! UncannyAutomator.wp )\n\t\t\t\t// Check if the recipe is anonymous\n            \t&& UncannyAutomator.recipe.type == 'anonymous'\n\t\t\t){\n\t\t\t\tconst itemsThatRequireUserData     = [],\n\t\t\t\t      itemsThatDontRequireUserData = [];\n\n\t\t\t\titems.available.forEach(( item ) => {\n\t\t\t\t\tif ( item.requires_user ){\n\t\t\t\t\t\titemsThatRequireUserData.push( item );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\titemsThatDontRequireUserData.push( item );\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\titems.available = [ ...itemsThatDontRequireUserData, ...itemsThatRequireUserData ];\n\t\t\t}\n\n\t\t\t// Append available items to the list container\n\t\t\t$itemsList.available.append( items.available.map(( item ) => {\n\t\t\t\t// Check if it's a Pro item\n\t\t\t\tconst isPro = item.is_pro;\n\n\t\t\t\t// Check if the user can't add this action to this recipe\n\t\t\t\t// This happens if the action requires user data, but the user has Automator free\n\t\t\t\tconst cannotAddRequiresUserData = (\n\t\t\t\t\t// Check if WP is ready\n\t\t\t\t\t( ! isDefined( UncannyAutomator.wp ) || ! UncannyAutomator.wp )\n\t\t\t\t\t// Check if the recipe is anonymous\n                \t&& UncannyAutomator.recipe.type == 'anonymous'\n                \t// Check if the action requires user data\n                \t&& item.requires_user\n\t\t\t\t);\n\n\t\t\t\t// Create container\n\t\t\t\tconst $item = $( `\n\t\t\t\t\t<div class=\"item-task-selector__option ${ isPro ? 'item-task-selector__option--pro' : '' } ${ item.requires_user ? 'item-task-selector__option--requires-user' : '' } ${ cannotAddRequiresUserData ? 'item-task-selector__option-cannot-add' : '' }\"\n\t\t\t\t\t\tdata-search=\"${ item.select_option_name.toLowerCase().replace( /\\s+|{|}/g, '' ) }\">\n\t\t\t\t\t\t<div class=\"item-task-selector__option-sentence\">\n\t\t\t\t\t\t\t${ cannotAddRequiresUserData ? '<span class=\"uo-icon uo-icon--lock-alt\"></span>' : '' }\n\t\t\t\t\t\t\t${ replaceCurlyBraces( item.select_option_name, '<span class=\"item-task-selector__option-variable\">', '</span>' ) } ${ isPro ? `<span class=\"item-task-selector-option__badge\">${ UncannyAutomator.i18n.proOnly.pro }</span>` : '' }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"item-task-selector__option-properties\">\n\t\t\t\t\t\t\t${ UncannyAutomator.recipe.type == 'anonymous' && ! UncannyAutomator.recipe.requiresUserData && item.requires_user ? `<span class=\"item-task-selector-option__requires-user\">${ UncannyAutomator.i18n.needsUserData }</span>` : '' }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t` );\n\n\t\t\t\t// Listen clicks on the container\n\t\t\t\t$item.on( 'click', () => {\n\t\t\t\t\t// Add loading class to the parent container\n\t\t\t\t\t$taskSelector.addClass( 'item__task-selector--loading' );\n\n\t\t\t\t\t// Add loading class to the container\n\t\t\t\t\t$item.addClass( 'item-task-selector__option--loading' );\n\n\t\t\t\t\t// Get the correct request code\n\t\t\t\t\tconst restRequestCode = [ 'trigger', 'action' ].includes( this.itemType ) ? `add-new-${ this.itemType }` : '';\n\t\t\t\t\t\n\t\t\t\t\t// Save the value of the fields with default values\n\t\t\t\t\t// in the item meta\n\t\t\t\t\tlet defaultMeta = {}\n\t\t\t\t\t$.each( item.options, ( index, option ) => {\n\t\t\t\t\t\tif ( isDefined( option.default_value ) ){\n\t\t\t\t\t\t\tdefaultMeta[ option.option_code ] = option.default_value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// Check if the trigger is an anonymous trigger\n\t\t\t\t\tif ( item.type == 'anonymous' ){\n\t\t\t\t\t\t// Save the \"can_log_in_new_user\" value\n\t\t\t\t\t\tdefaultMeta.can_log_in_new_user = isDefined( item.can_log_in_new_user ) ? item.can_log_in_new_user : true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do REST call to add the item\n\t\t\t\t\tconst addItemREST = ( onSuccess, onFail ) => {\n\t\t\t\t\t\trestCall( 'add', {\n\t\t\t\t\t\t\trecipePostID: UncannyAutomator.recipe.id,\n\t\t\t\t\t\t\taction:       restRequestCode,\n\t\t\t\t\t\t\titem_code:    item.code,\n\t\t\t\t\t\t\tdefault_meta: $.extend( {}, defaultMeta, {\n\t\t\t\t\t\t\t\tintegration_name: UncannyAutomator.integrations[ this.integrationID ].name,\n\t\t\t\t\t\t\t\tsentence: \t\t  item.sentence\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}, ( response ) => {\n\t\t\t\t\t\t\t// Render both metaboxes again\n\t\t\t\t\t\t\t// This will close the options panel if it's opened\n\t\t\t\t\t\t\tnew Triggers();\n\t\t\t\t\t\t\tnew Actions();\n\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\tif ( this.itemType == 'trigger' ){\n\t\t\t\t\t\t\t\tnew Triggers();\n\n\t\t\t\t\t\t\t\t// Check if it's an anonymous recipe\n\t\t                        if ( UncannyAutomator.recipe.type == 'anonymous' ){\n\t\t                        \t// Render the Actions metabox again\n\t\t                        \t// We're doing this because we need to update the user selector\n\t\t                        \tnew Actions();\n\t\t                        }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif ( this.itemType == 'action' ){\n\t\t\t\t\t\t\t\tnew Actions();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t*/\n\n\t\t\t\t\t\t\t// Check if the ID of the new item is defined\n\t\t\t\t\t\t\tif ( isDefined( response.post_ID ) ){\n\t\t\t\t\t\t\t\t// Get item form element\n\t\t\t\t\t\t\t\tconst $newItem = getDOMElements( 'item', {\n\t\t\t\t\t\t\t\t\tid: response.post_ID\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t// Determine if the item is already valid\n\t\t\t\t\t\t\t\t// This will be true only if the new item doesn't have\n\t\t\t\t\t\t\t\t// options, or all the options have a default value\n\t\t\t\t\t\t\t\tconst isValid = UncannyAutomator.recipe.items[ response.post_ID ].isValid;\n\n\t\t\t\t\t\t\t\t// Check if it's valid\n\t\t\t\t\t\t\t\tif ( isValid ){\n\t\t\t\t\t\t\t\t\t// Check if the recipe is NOT live\n\t\t\t\t\t\t\t\t\tif ( ! UncannyAutomator.recipe.isLive ){\n\t\t\t\t\t\t\t\t\t\t// Set the item to live\n\t\t\t\t\t\t\t\t\t\t$newItem.item\n\t\t\t\t\t\t\t\t\t\t\t.find( '.item-status input[type=\"checkbox\"]' )\n\t\t\t\t\t\t\t\t\t\t\t.prop( 'checked', true )\n\t\t\t\t\t\t\t\t\t\t\t.trigger( 'change' );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t// Get first token and trigger a click\n\t\t\t\t\t\t\t\t\t// This will open the first group of options\n\t\t\t\t\t\t\t\t\t$newItem.item\n\t\t\t\t\t\t\t\t\t\t.find( '.item-title__token:not(.item-title__token--filled)' )\n\t\t\t\t\t\t\t\t\t\t.first()\n\t\t\t\t\t\t\t\t\t\t.trigger( 'click' );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Check if the user defined a custom callback\n\t\t\t\t\t\t\tif ( isDefined( onSuccess ) ){\n\t\t\t\t\t\t\t\tonSuccess( response );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, ( response ) => {\n\t\t\t\t\t\t\tconsole.log( 'ERROR-TODO. Couldn\\'t add the item' );\n\n\t\t\t\t\t\t\t// Remove loading class to the parent container\n\t\t\t\t\t\t\t$taskSelector.removeClass( 'item__task-selector--loading' );\n\n\t\t\t\t\t\t\t// Remove loading class to the container\n\t\t\t\t\t\t\t$item.removeClass( 'item-task-selector__option--loading' );\n\n\t\t\t\t\t\t\t// Check if it's an invalid action\n\t\t\t\t\t\t\tif ( response.success == false ){\n\t\t\t\t\t\t\t\tnew Triggers();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Check if the user defined a custom callback\n\t\t\t\t\t\t\tif ( isDefined( onFail ) ){\n\t\t\t\t\t\t\t\tonFail( response );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t// Check if we have to show a modal to set a user before adding the item\n\t\t\t\t\tif ( \n\t\t\t\t\t\t// Check if the item that the user wants to add is an action\n\t\t\t\t\t\tthis.itemType == 'action'\n\t\t\t\t\t\t// Check if the recipe is anonymous\n\t\t\t\t\t\t&& UncannyAutomator.recipe.type == 'anonymous' \n\t\t\t\t\t\t// Check if the recipe currently DOES NOT need user data\n\t\t\t\t\t\t// Otherwise, don't show the modal as the user already knows\n\t\t\t\t\t\t// the recipe needs user data\n\t\t\t\t\t\t&& ! UncannyAutomator.recipe.requiresUserData\n\t\t\t\t\t\t// Check if the action the user is trying to add requires user data\n\t\t\t\t\t\t&& item.requires_user\n\t\t\t\t\t){\n\t\t\t\t\t\t// Create modal\n\t\t\t\t\t\tlet modal;\n\n\t\t\t\t\t\t// Remove loading class to the parent container\n\t\t\t\t\t\t$taskSelector.removeClass( 'item__task-selector--loading' );\n\n\t\t\t\t\t\t// Remove loading class to the container\n\t\t\t\t\t\t$item.removeClass( 'item-task-selector__option--loading' );\n\n\t\t\t\t\t\t// Check if WP is ready\n\t\t\t\t\t\tif ( ! isDefined( UncannyAutomator.wp ) || ! UncannyAutomator.wp ){\n\t\t\t\t\t\t\tmodal = new Modal({\n\t\t\t\t\t\t        title:   `${ UncannyAutomator.i18n.userSelector.userDataModal.action.forbidden.title } <span class=\"needs-user-data-modal-pro-badge\">${ UncannyAutomator.i18n.proOnly.pro }</span>`,\n\t\t\t\t\t\t        content: `\n\t\t\t\t\t\t        \t<div class=\"needs-user-data-modal\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"needs-user-data-modal__title\">${ UncannyAutomator.i18n.userSelector.userDataModal.action.forbidden.content.mustRunOnUser }</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"needs-user-data-modal__sentence\">\n\t\t\t\t\t\t\t\t\t\t\t${ replaceCurlyBraces( item.select_option_name, '<span>', '</span>' ) }\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"needs-user-data-modal__disclaimer\">\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"description\">${ vsprintf( UncannyAutomator.i18n.userSelector.userDataModal.action.forbidden.content.description, [ UncannyAutomator.i18n.uncannyAutomatorPro ] ) } <a href=\"${ addParametersToURL( 'https://automatorplugin.com/pricing/', { 'utm_source':   'uncanny_automator', 'utm_medium': 'select_an_item', 'utm_campaign': 'update_to_pro', 'utm_content': 'requires_user_data',\n\t\t\t\t\t\t\t\t\t\t\t}) }\" target=\"_blank\">${ UncannyAutomator.i18n.upgradeNow } <span class=\"uo-icon uo-icon--external-link-alt\"></span></a></div>\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"description\">${ UncannyAutomator.i18n.userSelector.userDataModal.action.forbidden.content.upgradeLater } <a href=\"${ addParametersToURL( 'https://automatorplugin.com/knowledge-base/creating-a-recipe/#Recipe_types', { 'utm_source': 'uncanny_automator', 'utm_medium': 'select_an_item', 'utm_content': 'requires_user_data-learn-more',\n\t\t\t\t\t\t\t\t\t\t\t}) }\" target=\"_blank\">${ UncannyAutomator.i18n.learnMore } <span class=\"uo-icon uo-icon--external-link-alt\"></span></a></div>\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t`,\n\t\t\t\t\t\t        buttons: {\n\t\t\t\t\t\t            cancel:  UncannyAutomator.i18n.cancel,\n\t\t\t\t\t\t            confirm: UncannyAutomator.i18n.userSelector.userDataModal.action.forbidden.confirmButton,\n\t\t\t\t\t\t        },\n\t\t\t\t\t\t    }, {\n\t\t\t\t\t\t    \tsize: 'large'\n\t\t\t\t\t\t    });\n\n\t\t\t\t\t\t    modal.setEvents({\n\t\t\t\t\t\t        onConfirm: () => {\n\t\t\t\t\t\t        \t// Close and destroy modal\n\t\t\t\t\t\t        \tmodal.destroy();\n\n\t\t\t\t\t\t        \t// Open link in new tab\n\t\t\t\t\t\t        \topenInNewTab( addParametersToURL( 'https://automatorplugin.com/pricing/', { 'utm_source':   'uncanny_automator', 'utm_medium': 'select_an_item', 'utm_campaign': 'update_to_pro', 'utm_content': 'requires_user_data',\n\t\t\t\t\t\t\t\t\t\t\t}) );\n\t\t\t\t\t\t        },\n\t\t\t\t\t\t        onCancel: () => {\n\t\t\t\t\t\t        \t// Close and destroy modal\n\t\t\t\t\t\t        \tmodal.destroy();\n\t\t\t\t\t\t        },\n\t\t\t\t\t\t    });\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Check if we should set the recipe to draft when the user adds the action\n\t\t\t\t\t\t\t// We're doing this because the user will need to fill the User Selector\n\t\t\t\t\t\t\tconst actionWillSetRecipeToDraft = UncannyAutomator.recipe.isLive;\n\n\t\t\t\t\t\t\tmodal = new Modal({\n\t\t\t\t\t\t        title:   `${ UncannyAutomator.i18n.userSelector.userDataModal.action.allowed.title } <span class=\"needs-user-data-modal-pro-badge needs-user-data-modal-pro-badge--gray\">${ UncannyAutomator.i18n.proOnly.pro }</span>`,\n\t\t\t\t\t\t        content: `\n\t\t\t\t\t\t\t\t\t<div class=\"needs-user-data-modal\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"needs-user-data-modal__title\">${ UncannyAutomator.i18n.userSelector.userDataModal.action.allowed.content.mustRunOnUser }</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"needs-user-data-modal__sentence\">\n\t\t\t\t\t\t\t\t\t\t\t${ replaceCurlyBraces( item.select_option_name, '<span>', '</span>' ) }\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"needs-user-data-modal__disclaimer\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"description\">${ UncannyAutomator.i18n.userSelector.userDataModal.action.allowed.content.description }</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t`,\n\t\t\t\t\t\t        buttons: {\n\t\t\t\t\t\t            cancel:  UncannyAutomator.i18n.cancel,\n\t\t\t\t\t\t            confirm: UncannyAutomator.i18n.userSelector.userDataModal.action.allowed.confirmButton,\n\t\t\t\t\t\t        },\n\t\t\t\t\t\t    }, {\n\t\t\t\t\t\t    \tsize: 'large'\n\t\t\t\t\t\t    });\n\n\t\t\t\t\t\t    modal.setEvents({\n\t\t\t\t\t\t        onConfirm: () => {\n\t\t\t\t\t\t        \tlet modalElements = modal.getElements();\n\n\t\t\t\t\t\t\t        // Add loading class to button\n\t\t\t\t\t\t\t        modalElements.modal.box.buttons.confirm.addClass( 'uap-btn--loading' ).prop( 'disabled', true );\n\n\t\t\t\t\t\t        \t// Do an AJAX call to set the global recipe requires user\n\t\t\t\t\t\t        \trecipeSetRequiresUser(\n\t\t\t\t\t\t        \t\t// Set to true (requires user)\n\t\t\t\t\t\t        \t\ttrue,\n\t\t\t\t\t\t        \t\t// On success\n\t\t\t\t\t\t        \t\t( response ) => {\n\t\t\t\t\t\t\t\t        \t// Do the request\n\t\t\t\t\t\t\t\t            addItemREST(() => {\n\t\t\t\t\t\t\t\t            \t// On success, close and destroy the modal\n\t\t\t\t\t\t\t\t            \tmodal.destroy();\n\n\n\t\t\t\t\t\t\t\t            }, () => {\n\t\t\t\t\t\t\t\t            \t// On fail\n\t\t\t\t\t\t\t\t            \t// Remove loading class to button\n\t\t\t\t\t\t\t        \t\t\tmodalElements.modal.box.buttons.confirm.removeClass( 'uap-btn--loading' ).prop( 'disabled', false );\n\t\t\t\t\t\t\t\t            });\n\t\t\t\t\t\t        \t\t},\n\t\t\t\t\t\t        \t\t// On fail\n\t\t\t\t\t\t        \t\t( response ) => {\n\t\t\t\t\t\t        \t\t\t// Remove loading class to button\n\t\t\t\t\t\t\t        \t\tmodalElements.modal.box.buttons.confirm.removeClass( 'uap-btn--loading' ).prop( 'disabled', false );\n\t\t\t\t\t\t        \t\t}\n\t\t\t\t\t\t        \t);\n\n\t\t\t\t\t\t\t\t\t// Do a call to set the recipe to draft\n\t\t\t\t\t\t\t\t\tif ( actionWillSetRecipeToDraft ){\n\t\t\t\t\t\t\t\t\t\tUncannyAutomator.recipe.publish.statusToggle.setValue( false );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t        },\n\t\t\t\t\t\t        onCancel: () => {\n\t\t\t\t\t\t        \t// Close and destroy modal\n\t\t\t\t\t\t        \tmodal.destroy();\n\t\t\t\t\t\t        },\n\t\t\t\t\t\t    });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Do the request\n\t\t\t\t\t\taddItemREST();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Return the\n\t\t\t\treturn $item;\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\t// Remove the available items container\n\t\t\t$itemsList.available.remove();\n\t\t}\n\n\t\t// Check if it has unavailable items\n\t\tif ( items.hasUnavailableItems ){\n\t\t\t// Append unavailable items to the list container\n\t\t\t$itemsList.unavailable.list.append( items.unavailable.map(( item ) => {\n\n\t\t\t\t// Create the UTM medium\n\t\t\t\tconst utm_medium = `unavailable_item-${ this.integrationID }-${ this.integrationID }_${ replaceCurlyBraces( item.name, '', '' ).toLowerCase().replace( /\\s+|{|}/g, '_' ) }`;\n\n\t\t\t\t// Create container\n\t\t\t\tconst $item = $( `\n\t\t\t\t\t<a href=\"${ addParametersToURL( 'https://automatorplugin.com/pricing/', {\n\t\t\t\t\t\t    'utm_source':   'uncanny_automator',\n\t\t\t\t\t\t    'utm_medium':   'select_an_item',\n\t\t\t\t\t\t    'utm_campaign': 'update_to_pro',\n\t\t\t\t\t\t    'utm_content':  utm_medium,\n\t\t\t\t\t\t}) }\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\tclass=\"item-task-selector__option item-task-selector__option--pro\"\n\t\t\t\t\t\tdata-search=\"${ item.name.toLowerCase().replace( /\\s+|{|}/g, '' ) }\">\n\t\t\t\t\t\t<div class=\"item-task-selector__option-sentence\">\n\t\t\t\t\t\t\t<span class=\"uo-icon uo-icon--lock-alt\"></span>\n\t\t\t\t\t\t\t${ replaceCurlyBraces( item.name, '<span class=\"item-task-selector__option-variable\">', '</span>' ) }\n\t\t\t\t\t\t\t<span class=\"item-task-selector-option__badge\">${ UncannyAutomator.i18n.proOnly.pro }</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t` );\n\n\t\t\t\treturn $item;\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\t// Remove the unavailable items container\n\t\t\t$itemsList.unavailable.container.remove();\n\t\t}\n\n\t\t// Get the list of items\n\t\tconst $items = $itemsList.container.find( '.item-task-selector__option:not(.item-task-selector__option--no-results)' );\n\n\t\t// Listen changes on the search field\n        $searchField.on( 'input', () => {\n        \t// Get the current value\n            const query = $searchField.val().toLowerCase().replace( /\\s+|{|}/g, '' );\n\n            // Reset before searching\n            $items.removeClass( 'item-task-selector__option--show item-task-selector__option--hide' );\n\n            // Create variable to evaluate later if there were results\n            let hasResults = true;\n\n            // Check if the query is not empty\n            if ( ! isEmpty( query ) ){\n\t\t\t\t// If value it isn't empty then we have to check if there are going to be results, so false by default\n\t\t\t\thasResults = false;\n\n\t\t\t\t$.each( $items, ( index, item ) => {\n\t\t\t\t\tlet $item = $( item ),\n\t\t\t\t\t    text  = $item.data( 'search' );\n\n\t\t\t\t\tif ( text.search( query ) !== -1 ){\n\t\t\t\t\t    $item.addClass( 'item-task-selector__option--show' );\n\n\t\t\t\t\t    // At least one result, so true\n\t\t\t\t\t    hasResults = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t    $item.addClass( 'item-task-selector__option--hide' );\n\t\t\t\t\t}\n\t\t\t\t});\n            }\n\n            // Show and hide noResults\n            $itemsList.noResults.removeClass( 'item-task-selector__option--hide item-task-selector__option--show' );\n\n            if ( ! hasResults ){\n\t\t\t\t$itemsList.noResults.addClass( 'item-task-selector__option--show' );\n            }\n            else {\n\t\t\t\t$itemsList.noResults.addClass( 'item-task-selector__option--hide' )\n            }\n        });\n\n        // Append \"Cancel\" button\n        $optionsContainer.append( this.createCancelButton() );\n\n\t\t// Append the header to the main container\n        this.$container.append( $container );\n\t}\n\n\tcreateCancelButton(){\n\t\tlet $cancelButton = $( '<div/>', { 'class': 'uap-btn uap-btn--secondary' }).text( UncannyAutomator.i18n.cancel );\n\n\t\t$cancelButton.on( 'click', () => {\n\t\t\tnew ItemCreatorIntegrations( this.itemType, this.$item );\n\t\t});\n\n\t\treturn $cancelButton;\n\t}\n\n\tremoveConnectingIntegrationsParameters(){\n\t\t// If the user is seeing this screen it's because the modal is closed,\n\t\t// or because the user already connected the integration\n        addParametersToURL( window.location.href, {\n            ua_connecting_integration:    '',\n            ua_connecting_integration_id: '',\n            ua_connecting_integration_context: '',\n        }, {\n            setAsURL: true,\n            refresh: false\n        });\n\t}\n}\n\nexport default itemCreatorTaskSelector;","import $ from 'jquery';\n\nimport {\n    sortArrayOfObjectsAlphabetically,\n    addParametersToURL,\n    getDOMElements,\n    getIntegrationIcon,\n    filterDeprecatedItems,\n    getURLParameter,\n    isDefined,\n    isEmpty,\n    openCenteredWindow,\n    vsprintf\n} from './Utilities';\n\nimport ItemHeaderMenu          from './ItemHeaderMenu';\n\nimport itemCreatorTaskSelector from './ItemCreatorTaskSelector';\n\nimport Modal                   from './Modal';\n\nclass ItemCreatorIntegrations {\n    constructor( itemType, $currentItem ){\n        this.itemType     = itemType;\n        this.$currentItem = $currentItem;\n        this.integrations = [];\n\n        // Render DOM elements\n        this.render();\n\n        // Handle URL parameters to continue process of connecting an integration\n        this.handleContinueIntegrationConnection();\n    }\n\n    render(){\n        // Create container\n        let container = $( '<div/>', { 'class': 'item' });\n        this.$item    = container;\n\n        let header       = this.createHeader(),\n            itemContent  = $( '<div/>', {'class': 'item__content' }),\n            integrations = this.createIntegrations(),\n            discoverMore = this.createDiscoverMoreIntegrations();\n\n        container.append( header );\n\n        itemContent.append( integrations );\n        itemContent.append( discoverMore );\n\n        container.append( itemContent );\n\n        // Check if the $item is defined, in that case we're going to replace the item element instead of creating a new one\n        if ( isDefined( this.$currentItem ) ){\n            // Empty container\n            this.$currentItem.replaceWith( container );\n        }\n        else {\n            // Get last item and append next to it\n            let lastItem = getDOMElements( 'lastItem', {\n                type: this.itemType\n            });\n\n            if ( this.itemType == 'trigger' ){\n                // Check if there is a last item\n                if ( lastItem.length > 0 ){\n                    container.insertAfter( lastItem );\n                }\n                else {\n                    // Otherwise append the item to the metabox\n                    let metabox = getDOMElements( 'metabox', {\n                        type: this.itemType\n                    });\n\n                    metabox.append( container );\n                }\n            }\n            \n            if ( this.itemType == 'action' ){\n                // Check if there is at least one item\n                let items = getDOMElements( 'items', {\n                    type: this.itemType\n                });\n\n                if ( items.length > 0 ){\n                    // Insert before the button\n                    container.insertBefore( $('.add-action-btn') );\n\n                }\n                else {\n                    // Otherwise replace the itemCreatorAdd container with the new container\n                    let metabox = getDOMElements( 'metabox', {\n                        type: this.itemType\n                    });\n\n                    let itemCreatorAdd = metabox.find( '.item.item--start' );\n                    itemCreatorAdd.replaceWith( container );\n                }\n            }\n        }\n    }\n\n    createHeader(){\n        let header  = $( '<div/>' );\n\n        let icon           = $( '<div/>', { 'class': 'item-icon' }),\n            titleContainer = $( '<div/>', { 'class': 'item-title uap-clear' }),\n            titleContent   = $( '<div/>', { 'class': 'item-title__describe' }),\n            title          = $( '<div/>', { 'class': 'item-title__non-editable' }).text( UncannyAutomator.i18n.integration.select );\n\n        let actions        = new ItemHeaderMenu( this.itemType );\n        header.append( actions );\n\n        header.append( icon );\n\n        titleContent.append( title );\n        titleContainer.append( titleContent );\n        header.append( titleContainer );\n\n        return header;\n    }\n\n    createIntegrations(){\n        let container    = $( '<div/>', { 'class': 'item-integrations' });\n\n        // Get non empty integrations\n        this.filterByNonEmptyIntegrations( this.itemType );\n\n        // Order integrations alphabetically\n        this.sortIntegrationsAlphabetically(); \n\n        // Iterate integrations\n        this.integrations.forEach(( integration ) => {\n            // Get integration ID\n            const integrationID = integration.id;\n\n            // Create integration element\n            let integrationElement = this.createIntegration( integrationID, integration );\n\n            // Create default action on click\n            let onClick = () => {\n                new itemCreatorTaskSelector( this.itemType, integrationID, this.$item );\n            }\n\n            // Before what's going to happen on click\n            // Check if it's an API integration\n            if ( isDefined( integration.connected ) ){\n                // Get current step and change the callback accordingly\n                switch ( this.integrationModalCurrentStep( integration ) ){\n                    // Step 1\n                    case 1:\n                        onClick = () => {\n                            // Set parameter to show the modal again in case the user reloads the page\n                            addParametersToURL( window.location.href, {\n                                ua_connecting_integration: 1,\n                                ua_connecting_integration_id: integrationID,\n                                ua_connecting_integration_context: this.itemType\n                            }, {\n                                setAsURL: true,\n                                refresh: false\n                            });\n\n                            // Show the modal to connect the integration\n                            this.connectIntegrationModal( integrationID, integration, {\n                                currentStep: 1\n                            });\n                        }\n\n                        break;\n\n                    // Step 2\n                    case 2:\n                        // -> Send to the settings page of the integration\n                        onClick = () => {\n                            // Set parameter to show the modal again in case the user reloads the page\n                            addParametersToURL( window.location.href, {\n                                ua_connecting_integration: 1,\n                                ua_connecting_integration_id: integrationID,\n                                ua_connecting_integration_context: this.itemType\n                            }, {\n                                setAsURL: true,\n                                refresh: false\n                            });\n\n                            // Show the modal to connect the integration\n                            this.connectIntegrationModal( integrationID, integration, {\n                                currentStep: 2\n                            });\n                        }\n\n                        break;\n\n                    // Step 3\n                    case 3:\n                        // Do nothing, leave the original callback,\n                        // which will just show the list of actiosn\n\n                        break;\n                }\n            }\n\n            // Bind\n            integrationElement.on( 'click', () => {\n                onClick();\n            });\n\n            // Append\n            container.append( integrationElement );\n        });\n\n        // Return jQuery element\n        return container;\n    }\n\n    connectIntegrationModal( integrationID, integration, options = {} ){\n        // Extend the options\n        options = Object.assign({\n            currentStep: 1\n        }, options );\n\n        // Connect API url\n        const connectApiUrl = addParametersToURL( UncannyAutomator.connectApiUrl, {\n            redirect_url: addParametersToURL( UncannyAutomator.dashboardUrl, {\n                ua_close_window: 1\n            })\n        });\n\n        // Check what should be the first step\n        let modalFirstStep = '';\n\n        // Check if wp is ready\n        if ( isDefined( UncannyAutomator.wp ) && UncannyAutomator.wp ){\n            modalFirstStep = `\n                <div class=\"connect-integration-modal-step ${ options.currentStep > 1 ? 'connect-integration-modal-step--completed' : '' }\">\n                    <div class=\"connect-integration-modal-step__icon\">\n                        <span class=\"uo-icon uo-icon--check-circle\"></span>\n                    </div> \n                    <div class=\"connect-integration-modal-step__description\">\n                        <div class=\"connect-integration-modal-step__description-main\">\n                            <strong>1.</strong> ${ vsprintf( UncannyAutomator.i18n.apiIntegrations.instructionsToConnect.step1Pro, [ UncannyAutomator.i18n.uncannyAutomatorPro ] ) }\n                        </div>\n                    </div>\n                    <div class=\"connect-integration-modal-step__action\">\n                        <a id=\"connect-integration-modal-activate-license\" class=\"connect-integration-modal-step__action-anchor\">\n                            ${ UncannyAutomator.i18n.apiIntegrations.instructionsToConnect.activate } <span class=\"uo-icon uo-icon--arrow-circle-right\"></span>\n                        </a>\n                    </div>\n                </div>\n            `;\n        }\n        else {\n            modalFirstStep = `\n                <div class=\"connect-integration-modal-step ${ options.currentStep > 1 ? 'connect-integration-modal-step--completed' : '' }\">\n                    <div class=\"connect-integration-modal-step__icon\">\n                        <span class=\"uo-icon uo-icon--smile-plus\"></span>\n                    </div> \n                    <div class=\"connect-integration-modal-step__description\">\n                        <div class=\"connect-integration-modal-step__description-main\">\n                            <strong>1.</strong> ${ vsprintf( UncannyAutomator.i18n.apiIntegrations.instructionsToConnect.step1, [ UncannyAutomator.i18n.uncannyAutomator ] ) }\n                        </div>\n                    </div>\n                    <div class=\"connect-integration-modal-step__action\">\n                        <a id=\"connect-integration-modal-sign-up\" class=\"connect-integration-modal-step__action-anchor\">\n                            ${ UncannyAutomator.i18n.apiIntegrations.instructionsToConnect.signUp } <span class=\"uo-icon uo-icon--arrow-circle-right\"></span>\n                        </a>\n                    </div>\n                </div>\n            `;\n        }\n\n        // Create modal\n        const modal = new Modal({\n            title:   `${ UncannyAutomator.i18n.apiIntegrations.instructionsToConnect.connectIntegration }`,\n            content: `\n                <div class=\"connect-integration-modal\">\n                    <div class=\"connect-integration-modal-steps__counter\">\n                        ${ vsprintf( UncannyAutomator.i18n.apiIntegrations.instructionsToConnect.stepCounter, [ options.currentStep - 1, '2' ] ) }\n                    </div>\n                    <div class=\"connect-integration-modal-steps\">\n                        <div class=\"connect-integration-modal-steps__list\">\n                            ${ modalFirstStep }\n                            <div class=\"connect-integration-modal-step ${ options.currentStep > 2 ? 'connect-integration-modal-step--completed' : '' } ${ options.currentStep == 1 ? 'connect-integration-modal-step--previous-not-completed' : '' }\">\n                                <div class=\"connect-integration-modal-step__icon\">\n                                    <span class=\"uo-icon uo-icon--plug\"></span>\n                                </div> \n                                <div class=\"connect-integration-modal-step__description\">\n                                    <div class=\"connect-integration-modal-step__description-main\">\n                                        <strong>2.</strong> ${ vsprintf( UncannyAutomator.i18n.apiIntegrations.instructionsToConnect.step2, [ '<span class=\"connect-integration-modal-step-integration-name\">' + getIntegrationIcon( integrationID ).node.outerHTML + integration.name + '</span>', UncannyAutomator.i18n.uncannyAutomator ] ) }\n                                    </div>\n                                </div>\n                                <div class=\"connect-integration-modal-step__action\">\n                                    <span ${ options.currentStep == 1 ? 'uap-tooltip=\"' + UncannyAutomator.i18n.apiIntegrations.instructionsToConnect.completePrevious + '\"' : '' }>\n                                        <a id=\"connect-integration-modal-connect-account\" class=\"connect-integration-modal-step__action-anchor\">\n                                            ${ UncannyAutomator.i18n.apiIntegrations.instructionsToConnect.connectAccount } <span class=\"uo-icon uo-icon--arrow-circle-right\"></span>\n                                        </a>\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            `,\n            buttons: {\n                cancel:  UncannyAutomator.i18n.cancel,\n                confirm: null\n            }\n        }, {\n            size: 'extra-large'\n        });\n\n        modal.setEvents({\n            onCancel: () => {\n                // Close and destroy modal\n                modal.destroy();\n\n                // Remove the parameters that force the modal to be visible on load\n                setTimeout(() => {\n                    addParametersToURL( window.location.href, {\n                        ua_connecting_integration:    '',\n                        ua_connecting_integration_id: '',\n                        ua_connecting_integration_context: '',\n                    }, {\n                        setAsURL: true,\n                        refresh: false\n                    });\n                }, 10 );\n            },\n        });\n\n        // Add actions to the step buttons\n        modal.getElements().modal.container.find( '#connect-integration-modal-sign-up' )\n            .on( 'click', ( event ) => {\n                // Prevent default behavior\n                event.preventDefault();\n\n                // Add loading animation\n                event.currentTarget.classList\n                    .add( 'connect-integration-modal-step__action-anchor--loading' );\n\n                // Open URL on a new window\n                const newWindow = openCenteredWindow({\n                    url:   connectApiUrl,\n                    w:     550,\n                    h:     600,\n                    onClose: () => {\n                        location.reload();\n                    }\n                });\n            });\n\n        // Add actions to the step buttons\n        modal.getElements().modal.container.find( '#connect-integration-modal-activate-license' )\n            .on( 'click', ( event ) => {\n                // Prevent default behavior\n                event.preventDefault();\n\n                // Add loading animation\n                event.currentTarget.classList\n                    .add( 'connect-integration-modal-step__action-anchor--loading' );\n\n                // Open URL on a new window\n                const newWindow = openCenteredWindow({\n                    url:   UncannyAutomator.licenseUrl,\n                    w:     550,\n                    h:     600,\n                    onClose: () => {\n                        location.reload();\n                    }\n                });\n            });\n\n        // Check if the current step is the second step\n        if ( options.currentStep == 2 ){\n            modal.getElements().modal.container.find( '#connect-integration-modal-connect-account' )\n                .on( 'click', ( event ) => {\n                    // Prevent default behavior\n                    event.preventDefault();\n\n                    // Add loading animation\n                    event.currentTarget.classList\n                        .add( 'connect-integration-modal-step__action-anchor--loading' );\n\n                    // Open URL on a new window\n                    const newWindow = openCenteredWindow({\n                        url:   addParametersToURL( integration.settings_url, {\n                            minimal: 1,\n                            hide_settings_tabs: 1\n                        }),\n                        w:     550,\n                        h:     600,\n                        onClose: () => {\n                            location.reload();\n                        }\n                    });\n                });\n        }            \n    }\n\n    handleContinueIntegrationConnection(){\n        // Check if the parameter is defined on page load\n        if (\n            getURLParameter( null, 'ua_connecting_integration' ) == 1\n            && getURLParameter( null, 'ua_connecting_integration_context' ) == this.itemType\n        ){\n            // Get the integration code\n            const integrationID = getURLParameter( null, 'ua_connecting_integration_id' );\n\n            // Check if it's defined\n            if ( ! isEmpty( integrationID ) ){\n                // Get the integration data\n                const integration = UncannyAutomator.integrations[ integrationID ];\n\n                // Check if the integration exists\n                if ( isDefined( integration ) ){\n                    // Evaluate if we should show the modal\n                    if (\n                        // Integration is an API integration\n                        isDefined( integration.connected )\n                    ){\n                        // Get current step and render content accordingly\n                        switch ( this.integrationModalCurrentStep( integration ) ){\n                            // Step 1\n                            case 1:\n                                // Show the modal to connect the integration\n                                // 1st step not completed\n                                this.connectIntegrationModal( integrationID, integration, {\n                                    currentStep: 1\n                                });\n\n                                break;\n\n                            // Step 2\n                            case 2:\n                                // Show the modal to connect the integration\n                                this.connectIntegrationModal( integrationID, integration, {\n                                    currentStep: 2\n                                });\n\n                                break;\n\n                            // Step 3\n                            case 3:\n                                // Go to the list of items\n                                new itemCreatorTaskSelector( this.itemType, integrationID, this.$item );\n\n                                break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    createIntegration( integrationID, integration ){\n        let container   = $( '<div/>', { 'class': 'item-integration' }),\n            logo        = $( '<div/>', { 'class': 'item-integration__logo' }),\n            name        = $( '<div/>', { 'class': 'item-integration__name' });\n\n        // Check if it's a Pro only integration\n        if ( integration.isProOnly ){\n            // Add a class to identify it\n            container.addClass( 'item-integration--pro' );\n\n            // Add PRO tag\n            container.append( $( `\n                <div class=\"item-integration__badge\">${ UncannyAutomator.i18n.proOnly.pro }</div>\n            ` ) );\n        }\n        \n        // Check if the integration is not available\n        if ( ! integration.isAvailable ){\n            // Add a class to identify it\n            container.addClass( 'item-integration--unavailable item-integration--unavailable-requires-pro' );\n\n            // Add tooltip\n            container.attr( 'uap-tooltip', vsprintf( UncannyAutomator.i18n.proOnly.requiresPro, [ UncannyAutomator.i18n.uncannyAutomatorPro ] ) );\n        }\n        else {\n            // Check if it's an API integration\n            if ( isDefined( integration.connected ) ){\n                // Check if the user connected an automatorplugin.com account\n                if ( UncannyAutomator.hasAccountConnected ){\n                    // Check if the current action is not available because the\n                    // user didn't connect an account to it\n                    if ( ! integration.connected ){\n                        // Add a class to identify it\n                        container.addClass( 'item-integration--unavailable item-integration--unavailable-integration-not-connected' );\n\n                        // Add tooltip\n                        container.attr( 'uap-tooltip', vsprintf( UncannyAutomator.i18n.apiIntegrations.integrationNotConnected, [ integration.name ] ));\n\n                        // Add tag\n                        container.append( $( `\n                            <div class=\"item-integration__badge item-integration__badge--warning\">${ UncannyAutomator.i18n.apiIntegrations.notConnected }</div>\n                        ` ) );\n                    }\n                    else {\n                        // Add a class to identify it\n                        container.addClass( 'item-integration--available' );\n                    }\n                }\n                else {\n                    // Add a class to identify it\n                    container.addClass( 'item-integration--unavailable item-integration--unavailable-ap-account-not-connected' );\n\n                    // Add tooltip\n                    container.attr( 'uap-tooltip', vsprintf( UncannyAutomator.i18n.apiIntegrations.integrationNotConnected, [ integration.name ] ));\n\n                    // Add tag\n                    container.append( $( `\n                        <div class=\"item-integration__badge item-integration__badge--warning\">${ UncannyAutomator.i18n.apiIntegrations.notConnected }</div>\n                    ` ) );\n                } \n            }\n            else {\n                // Check if we're rendering this in the actions metabox\n                // We're checking this because actions need some exceptions\n                if ( this.itemType == 'action' ){\n                    // Check if the integration might have actions that are not available\n                    // because they require user data\n                    if (\n                        // Check if WP is ready\n                        ( ! isDefined( UncannyAutomator.wp ) || ! UncannyAutomator.wp )\n                        // Check if the recipe is anonymous\n                        && UncannyAutomator.recipe.type == 'anonymous'\n                    ){\n                        // Check if it has actions that DON'T require user data\n                        const actionsThatDontRequireUserData = integration.items.actions.available.filter(( action ) => {\n                            return action.requires_user == false;\n                        });\n\n                        if ( actionsThatDontRequireUserData.length == 0 ){\n                            // Add a class to identify it\n                            container.addClass( 'item-integration--unavailable item-integration--unavailable-requires-user-data' );\n\n                            // Add tooltip\n                            container.attr( 'uap-tooltip', UncannyAutomator.i18n.apiIntegrations.allActionsRequireUserData );\n                        }\n                        else {\n                            // Add a class to identify it\n                            container.addClass( 'item-integration--available' );\n                        }\n                    }\n                    else {\n                        // Add a class to identify it\n                        container.addClass( 'item-integration--available' );\n                    }\n                }\n                else {\n                    // Add a class to identify it\n                    container.addClass( 'item-integration--available' );\n                }\n            }\n        }\n\n        // Create the variable where we're going to save the logo\n        let $logoImg;\n\n        // Check if it has a svg image\n        if ( isDefined( integration.icon_svg ) ){\n            $logoImg = $( `<img src=\"${ integration.icon_svg }\" alt=\"${ integration.name }\">` );\n        }\n        // Check if it has a png image\n        else if ( isDefined( integration.icon_32 ) && isDefined( integration.icon_64 ) ){\n            $logoImg = $( `<img src=\"${ integration.icon_32 }\" srcset=\"${ vsprintf( '%s 1x, %s 2x', [ integration.icon_32, integration.icon_64 ]) }\" alt=\"${ integration.name }\">` );\n        }\n\n        // TO-DO\n        // Improve UI/UX\n        // Set integration name\n        name.text( integration.name );\n\n        // Append\n        logo.append( $logoImg );\n        container.append( logo );\n        container.append( name );\n\n        // Return jQuery element\n        return container;\n    }\n\n    createDiscoverMoreIntegrations(){\n        return $( `\n            <div class=\"item-content__description\">\n                ${ UncannyAutomator.recipe.type == 'anonymous' ? UncannyAutomator.i18n.integration.dontSeeTrigger : UncannyAutomator.i18n.integration.discoverMore } <a href=\"${ addParametersToURL( 'https://automatorplugin.com/integrations/', {\n                        'utm_source':  'uncanny_automator',\n                        'utm_medium':  'select_an_integration',\n                        'utm_content': 'discover_more_integrations'\n                    }) }\" target=\"_blank\">${ UncannyAutomator.i18n.learnMore } <span class=\"uo-icon uo-icon--external-link-alt\"></span></a>\n            </div>\n        ` );\n    }\n\n    filterByNonEmptyIntegrations( itemType ){\n        // Check if it's a valid item type\n        if ( [ 'trigger', 'action' ].includes( itemType ) ){\n            // Get the integrations\n            const integrations = $.extend( true, {}, UncannyAutomator.integrations );\n\n            // Iterate each integration\n            Object.entries( integrations ).forEach(([ integrationID, integration ]) => {\n                // Evaluate if it has the requested items by item type\n                let hasItems = false;\n                // Also evaluate if it has available items\n                let isProOnly = false;\n                // Also evaluate if it has available items\n                let isAvailable = false;\n\n                // Remove deprecated items\n                let items;\n\n                if ( itemType == 'trigger' ){\n                    // Get items\n                    items       = filterDeprecatedItems( integration.items.triggers );\n\n                    hasItems    = items.hasTriggers;\n                    isAvailable = items.hasAvailableItems;\n                    isProOnly   = items.allItemsArePro;\n                }\n                else if ( itemType == 'action' ){\n                    // Get items\n                    items       = filterDeprecatedItems( integration.items.actions );\n\n                    hasItems    = items.hasActions;\n                    isAvailable = items.hasAvailableItems;\n                    isProOnly   = items.allItemsArePro;\n                }\n\n                // Check if it has the requested items by item type\n                if ( hasItems ){\n                    // Add integration to the list of integrations\n                    this.integrations.push( $.extend({}, integration, {\n                        id:          integrationID,\n                        isAvailable: isAvailable,\n                        isProOnly:   isProOnly\n                    }) );\n                }\n            });\n        }\n    }\n\n    sortIntegrationsAlphabetically(){\n        // Sort the array of integrations using the integration name\n        this.integrations = sortArrayOfObjectsAlphabetically( this.integrations, 'name' );\n    }\n\n    /**\n     * Validate what's the current step when connecting a premium integration\n     *\n     * Step 1. Connect ap.com account, or validate license\n     * Step 2. Connect integration account\n     * Step 3. Integration connected\n     *\n     * @since 3.1.2\n     *\n     * @param  {Object}  integration  An object from this.integrations with the integration data\n     * \n     * @return {Integer}              The current step\n     */\n    integrationModalCurrentStep( integration = {} ){\n        let step;\n\n        if (\n            // Condition #1\n            // User has Automator free\n            // + ap.com account not connected\n            (\n                // Check if the user has Automator Free\n                (\n                    ! isDefined( UncannyAutomator.wp ) \n                    || isDefined( UncannyAutomator.wp ) && ! UncannyAutomator.wp\n                ) \n                && \n                // Check if the ap.com account is NOT connected\n                ! UncannyAutomator.hasAccountConnected\n            )\n            ||\n            // Condition #2\n            // User has Automator Pro\n            // + ap.com account not connected\n            // + Pro license not valid\n            (\n                // Check if the user has Automator Pro\n                (\n                    isDefined( UncannyAutomator.wp ) && UncannyAutomator.wp\n                )\n                && \n                // Check if the ap.com account is NOT connected\n                ! UncannyAutomator.hasAccountConnected\n                &&\n                // Check if the Pro license is not valid\n                ! UncannyAutomator.hasValidProLicense\n            )\n        ){\n            // Then, this is the first step\n            // The user has to connect an ap.com account or validate the license\n            step = 1;\n        }\n        else if (\n            // Condition #1\n            // User has Automator free\n            // + ap.com account connected\n            (\n                // Check if the user has Automator Free\n                (\n                    ! isDefined( UncannyAutomator.wp ) \n                    || isDefined( UncannyAutomator.wp ) && ! UncannyAutomator.wp\n                ) \n                && \n                // Check if the ap.com account is connected\n                UncannyAutomator.hasAccountConnected\n            )\n            ||\n            // Condition #2\n            // User has Automator Pro\n            // + ap.com account connected OR pro license valid\n            (\n                // Check if the user has Automator Pro\n                (\n                    isDefined( UncannyAutomator.wp ) && UncannyAutomator.wp\n                )\n                && \n                (\n                    // Check if the ap.com account is connected\n                    UncannyAutomator.hasAccountConnected\n                    ||\n                    // Check if the Pro license is valid\n                    UncannyAutomator.hasValidProLicense\n                )\n            )\n        ){\n            // Check if the premium integration still doesn't have an account connected\n            if ( ! integration.connected ){\n                // Then, this is the second step\n                // The user has to connect the integration\n                step = 2;\n            }\n            else {\n                // Then, this is the third step\n                // Everything needed is ready\n                step = 3;\n            }\n        }\n\n        return step;\n    }\n}\n\nexport default ItemCreatorIntegrations;","import $ from 'jquery';\n\nimport {\n\tvsprintf,\n\tisDefined\n} from './Utilities.js';\n\nclass ItemHeaderIcon {\n\tconstructor( integrationCode ){\n\t\tthis.integrationCode = integrationCode;\n\n\t\treturn this.createItemIcon();\n\t}\n\n\t/**\n     * Create item icon\n     *\n     * @since 0.5\n     *\n     * @return {object}   HTML with the item icon\n     */\n\n    createItemIcon(){\n    \tlet container   = $( '<div/>', { 'class': 'item-icon' });\n\n    \tif ( isDefined( UncannyAutomator.integrations[ this.integrationCode ] ) ){\n\t\t\t// Get integration by integrationCode\n\t        let integration = UncannyAutomator.integrations[ this.integrationCode ];\n\n\t        // Create the variable where we're going to save the icon\n\t        let $icon;\n\n\t\t\t// Check if it has a svg image\n\t\t\tif ( isDefined( integration.icon_svg ) ){\n\t\t\t\t$icon = $( `<img src=\"${ integration.icon_svg }\" alt=\"${ integration.name }\">` );\n\t\t\t}\n\t\t\t// Check if it has a png image\n\t\t\telse if ( isDefined( integration.icon_32 ) && isDefined( integration.icon_64 ) ){\n\t\t\t\t$icon = $( `<img src=\"${ integration.icon_32 }\" srcset=\"${ vsprintf( '%s 1x, %s 2x', [ integration.icon_32, integration.icon_64 ]) }\" alt=\"${ integration.name }\">` );\n\t\t\t}\n\n\t        container.append( $icon );\n    \t} \n\n        // Return element\n        return container;\n    }\n}\n\nexport default ItemHeaderIcon;","import $ from 'jquery';\n\nimport {\n    restCall,\n    getGlobalItem,\n    isDefined,\n    replaceCurlyBraces,\n    addParametersToURL\n} from './Utilities.js';\n\nimport Modal from './Modal.js';\n\nimport Triggers from './Triggers.js';\nimport Actions  from './Actions.js';\n\nclass ItemHeaderMenu {\n    /**\n     * Create item actions\n     *\n     * @since 0.5\n     *\n     * @return jQuery DOM element with the item actions\n     */\n\n    constructor( itemType, integrationID, itemCode, itemId ){\n        this.itemType      = itemType;\n        this.integrationID = integrationID;\n        this.itemCode      = itemCode;\n        this.itemId        = itemId;\n        this.item          = UncannyAutomator.recipe.items[ itemId ];\n\n        return this.createItemActions();\n    }\n\n    createItemActions(){\n        // Create elements\n        let container     = $( '<div/>', { 'class': 'item-actions' }),\n            btn           = $( '<div/>', { 'class': 'item-actions__btn' }),\n            btnIcon       = $( '<i/>', { 'class': 'uo-icon uo-icon--ellipsis-h-alt' }),\n            dropdown      = $( '<div/>', { 'class': 'item-actions__dropdown' }),\n            dropdownUl    = $( '<ul/>', { 'class': 'item-actions-dropdown__ul' });\n\n        btn.append( btnIcon );\n        container.append( btn );\n\n        // Delete\n        let deleteAction  = $( '<li/>', { 'class': 'item-actions-dropdown__action' }),\n            deleteText    = $( '<span/>' ).text( UncannyAutomator.i18n.delete );\n\n        deleteAction.append( deleteText );\n        dropdownUl.append( deleteAction );\n\n        // Support\n        if ( isDefined( this.itemType ) && isDefined( this.itemCode ) ) {\n            if ( ! isDefined( this.item) || isDefined( this.item ) && ! this.item.isMissing ){\n                let globalItemData = getGlobalItem( this.integrationID, this.itemType, this.itemCode );\n\n                if ( isDefined( globalItemData.support_link ) ){\n                    let utmContent = `support_menu_link-${ this.integrationID }-${ this.integrationID }_${ this.itemCode }-${ this.integrationID }_${ replaceCurlyBraces( globalItemData.select_option_name, '', '' ).toLowerCase().replace( /\\s+|{|}/g, '_' ) }`;\n\n                    let supportAction = $( '<a/>', {\n                        'href':  addParametersToURL( globalItemData.support_link, {\n                            'utm_source':  'uncanny_automator',\n                            'utm_medium':  'action_menu',\n                            'utm_content': utmContent\n                        }),\n                        'class': 'item-actions-dropdown__action',\n                        'target': '_blank'\n                    }),\n                        supportText   = $( '<span/>' ).text( UncannyAutomator.i18n.support );\n\n                    supportAction.append( supportText );\n                    dropdownUl.append( supportAction );\n                }\n            }\n        }\n\n        dropdown.append( dropdownUl );\n        container.append( dropdown );\n\n        // Listen clicks to the open button\n        btn.on( 'click', () => {\n            // Evaluate if it's open\n            const isOpen = container.hasClass( 'item-actions--open' );\n\n            // Check if it's not open\n            if ( ! isOpen ){\n                // Open the dropdown\n                container.addClass( 'item-actions--open' );\n\n                // Listen clicks outside the dropdown\n                $( document ).on( 'mouseup.uap-actions-click-outside', ( event ) => {\n                    if ( ! container.is( event.target ) && container.has( event.target ).length === 0 ){\n                        // Close dropdown\n                        container.removeClass( 'item-actions--open' );\n\n                        // Remove event listener to listen clicks outside the dropdown\n                        $( document ).off( 'mouseup.uap-actions-click-outside' );\n                    }\n                });           \n            }\n            else {\n                // Close dropdown\n                container.removeClass( 'item-actions--open' );\n\n                // Remove event listener to listen clicks outside the dropdown\n                $( document ).off( 'mouseup.uap-actions-click-outside' );\n            }\n        });\n\n        // Delete\n        deleteAction.on( 'click', () => {\n            if ( isDefined( this.itemId ) && UncannyAutomator.recipe.isLive && UncannyAutomator.recipe.items[ this.itemId ].isLive ){\n                // Hide dropdown with options\n                container.removeClass( 'item-actions--open' );\n\n                // Create modal box\n                // Read Modal.js comments for more information\n                let modal = new Modal({\n                    title:       UncannyAutomator.i18n.confirmationModal.title,\n                    warning:     replaceCurlyBraces( UncannyAutomator.i18n.confirmationModal.deleteWarning, '<strong>', '</strong>' ),\n                    buttons: {\n                        cancel:  UncannyAutomator.i18n.cancel,\n                        confirm: UncannyAutomator.i18n.confirm,\n                    }\n                });\n\n                modal.setEvents({\n                    afterSetEvents: () => {\n                        modal.show();\n                    },\n                    onConfirm: () => {\n                        let elements        = modal.getElements();\n                        let confirmButton   = elements.modal.box.buttons.confirm;\n\n                        // Add loading class to button\n                        confirmButton.addClass( 'uap-btn--loading' ).prop( 'disabled', true );\n\n                        // Do call and hide\n                        restCall( 'delete', {\n                            'ID': this.itemId\n                        }, () => {\n                            // Destroy modal\n                            modal.destroy();\n\n                            // Refresh UI\n                            if ( this.itemType == 'trigger' ){\n                                new Triggers();\n\n                                // Check if it's an anonymous recipe\n                                if ( UncannyAutomator.recipe.type == 'anonymous' ){\n                                    // Render the Actions metabox again\n                                    // We're doing this because we need to update the user selector\n                                    new Actions();\n                                }\n                            }\n                            \n                            if ( this.itemType == 'action' || this.itemType == 'closure' ){\n                                new Actions();\n                            }\n\n                            // Check if the recipe is still valid, if it isn't then make the recipe draft\n                            if ( ! UncannyAutomator.recipe.isValid ){\n                                UncannyAutomator.recipe.publish.statusToggle.setValue( false );\n                            }\n                        }, () => {\n                            // Destroy modal\n                            modal.destroy();\n\n                            console.log( '‼️ ERROR-TODO. Couldn\\'t delete the item' );\n\n                            // Refresh UI\n                            if ( this.itemType == 'trigger' ){\n                                new Triggers();\n                            }\n                            \n                            if ( this.itemType == 'action' || this.itemType == 'closure' ){\n                                new Actions();\n                            }\n                        });\n                    },\n                    afterHide: function(){\n                        modal.destroy();\n                    }\n                });\n            }\n            else {\n                // Delete without warning\n                if ( isDefined( this.itemId ) ){\n                    // Set loading to the \"delete\" option\n                    deleteAction.addClass( 'item-actions-dropdown__action--loading' );\n\n                    // Do the AJAX request to delete it\n                    restCall( 'delete', {\n                        'ID': this.itemId\n                    }, () => {\n                        // Reset UI\n                        if ( this.itemType == 'trigger' ){\n                            new Triggers();\n\n                            // Check if it's an anonymous recipe\n                            if ( UncannyAutomator.recipe.type == 'anonymous' ){\n                                // Render the Actions metabox again\n                                // We're doing this because we need to update the user selector\n                                new Actions();\n                            }\n                        }\n                        \n                        if ( this.itemType == 'action' || this.itemType == 'closure' ){\n                            new Actions();\n                        }\n                    }, () => {\n                        console.log( '‼️ ERROR-TODO. Couldn\\'t delete the item' );\n\n                        // Reset UI\n                        if ( this.itemType == 'trigger' ){\n                            new Triggers();\n                        }\n                        \n                        if ( this.itemType == 'action' || this.itemType == 'closure' ){\n                            new Actions();\n                        }\n                    });\n                }\n                else {\n                    // Reset UI\n                    if ( this.itemType == 'trigger' ){\n                        new Triggers();\n                    }\n                    \n                    if ( this.itemType == 'action' ){\n                        new Actions();\n                    }\n                }\n            }\n        });\n\n        return container;\n    }\n}\n\nexport default ItemHeaderMenu;\n","import $ from 'jquery';\n\nimport {\n    restCall,\n    getGlobalItem,\n    getDOMElements,\n    parseStringWithTokens,\n    isEmpty,\n    isDefined,\n    replaceCurlyBraces\n} from './Utilities.js';\n\nimport Modal       from './Modal.js';\nimport ItemOptions from './ItemOptions.js';\nimport Field       from './Field.js';\nimport Triggers    from './Triggers.js';\nimport Actions     from './Actions.js';\n\nimport {\n    validateItem\n} from './Validation.js';\n\nimport RecipeNotices from './RecipeNotices.js';\n\nclass ItemHeaderSentence {\n    constructor( itemType, integrationID, itemCode, itemId ){\n        this.itemType = itemType;\n        this.integrationID = integrationID;\n        this.itemCode = itemCode;\n        this.itemId   = itemId;\n        this.item     = UncannyAutomator.recipe.items[ itemId ];\n\n        return this.createItemSentence( itemType, itemCode, itemId );\n    }\n\n    /**\n     * Create item sentence + status toggle\n     * \n     * @since 0.5     \n     *\n     * @return {object}   jQuery DOM object with the item sentence + status toggle\n     */\n\n    createItemSentence( itemType, itemCode, itemId ){\n        // Get information about the global item\n        let globalItem = getGlobalItem( this.integrationID, itemType, itemCode );\n        this.globalItem = globalItem;\n\n        // Get sentence\n        let itemSentence;\n\n        if ( ! this.item.isMissing ){\n            itemSentence = getGlobalItem( this.integrationID, this.item.itemType, this.item.itemCode ).sentence;\n        }\n        else {\n            itemSentence = this.item.sentence;\n        }\n\n        itemSentence = parseStringWithTokens(\n            this.item,\n            itemSentence,\n            UncannyAutomator.recipe.items[ this.itemId ].meta,\n            true\n        );\n\n        // Bind elements\n        /*\n        itemSentence.elements.normal.on( 'click', function(){\n            //\n        });\n        */\n\n        if ( ! this.item.isMissing ){\n            // Listen clicks on tokens\n            itemSentence.elements.token.on( 'click', ( event ) => {\n                // Get token element\n                const $token = $( event.currentTarget );\n\n                // Remove \"open\" class from al items\n                itemSentence.elements.token.removeClass( 'item-title__token--open' );\n                // Add \"open\" class to the clicked token\n                $token.addClass( 'item-title__token--open' );\n\n                // Add \"open\" class to the item\n                const $item = $token.parents('.item');\n                $item.addClass( 'item--open' );\n                \n                $item.trigger( 'automator:item:open', $item.hasClass( 'item--open' ) );\n\n                // Get options ID\n                let optionsID = $token.data( 'options-id' );\n\n                // Get option group\n                let optionGroupDOM = getDOMElements( 'optionGroup', {\n                    itemID:  itemId,\n                    groupID: optionsID,\n                });\n\n                // Create and show\n                new ItemOptions( itemId, optionsID );\n            });\n        }\n            \n        // Create DOM elements\n        let container = $( '<div/>', { 'class': 'item-title__describe-container' }),\n            status    = $( '<div/>', { 'class': 'item-status' });\n\n        container.append( itemSentence.html.addClass( 'item-title__describe' ) );\n\n        // Create toggle. We're using Field. Read Field.js comments for more information\n        var itemToggle = new Field( 'checkbox', {\n            color: 'green',\n            align: 'right',\n            toggle: {\n                on:  UncannyAutomator.i18n.status.liveRecipeItem,\n                off: UncannyAutomator.i18n.status.draftRecipeItem,\n            },\n            currentValue: UncannyAutomator.recipe.items[ itemId ].isLive\n        });\n\n        let itemStatusToggle = itemToggle.getFormElement();\n            status.append( itemStatusToggle );\n            container.append( status );\n\n        if ( ! this.item.isMissing ){\n            itemStatusToggle.on( 'automator:field:change', function(){\n                let makeLive = itemToggle.getValue();\n                var isValidItem = true; // True by default, will change to false is it's invalid\n\n                // Check if the user wants to make it live\n                if ( makeLive ){\n                    // Validate\n                    let validation = validateItem( itemId );\n                    isValidItem = validation.isValid; \n                }\n\n                // Do AJAX\n                // Show loading animation\n                itemToggle.startLoadingAnimation();\n\n                if ( isValidItem ){\n                    // Set post status\n                    let post_status = makeLive ? 'publish' : 'draft';\n\n                    // Check if they want to make an item draft in a live recipe\n                    if ( ! makeLive && UncannyAutomator.recipe.isLive ){\n                        // Create modal box\n                        // Read Modal.js comments for more information\n                        let modal = new Modal({\n                            title:       UncannyAutomator.i18n.confirmationModal.title,\n                            warning:     replaceCurlyBraces( UncannyAutomator.i18n.confirmationModal.statusWarning, '<strong>', '</strong>' ),\n                            buttons: {\n                                cancel:  UncannyAutomator.i18n.cancel,\n                                confirm: UncannyAutomator.i18n.confirm,\n                            }\n                        });\n\n                        modal.setEvents({\n                            afterSetEvents: function(){\n                                modal.show();\n                            },\n                            onConfirm: function(){\n                                let elements        = modal.getElements();\n                                let confirmButton   = elements.modal.box.buttons.confirm;\n\n                                // Add loading class to button\n                                confirmButton.addClass( 'uap-btn--loading' ).prop( 'disabled', true );\n\n                                // Start loading animation on toggle\n                                itemToggle.startLoadingAnimation();\n\n                                // Get the item sentence HTML\n                                let itemSentenceHTML;\n                                try {\n                                    itemSentenceHTML = itemSentence.html.get(0).outerHTML;\n                                } catch ( e ){}\n\n                                restCall( 'change_post_status', {\n                                    post_ID:      itemId,\n                                    post_status:  post_status,\n                                    sentence_human_readable: itemSentence.brackets,\n                                    sentence_human_readable_html: itemSentenceHTML\n                                }, function(){\n                                    // On success\n                                    // Destroy modal\n                                    modal.destroy();\n\n                                    // Refresh UI\n                                    new Triggers();\n                                    new Actions();\n\n                                    // Show error\n                                    new RecipeNotices();\n\n                                    // Check if the recipe is still valid, if it isn't then make the recipe draft\n                                    if ( ! UncannyAutomator.recipe.isValid ){\n                                        UncannyAutomator.recipe.publish.statusToggle.setValue( false );\n                                    }\n                                }, function(){\n                                    // On fail\n                                    console.log( '‼️ ERROR-TODO. Couldn\\'t set the item status' );\n\n                                    // Destroy modal\n                                    modal.destroy();\n\n                                    // Remove loading animation, data didn't change\n                                    itemToggle.stopLoadingAnimation();\n\n                                    // Revert user change\n                                    itemToggle.setValue( ! makeLive, false );\n                                });\n                            },\n                            onCancel: function(){\n                                // Destroy modal\n                                modal.destroy();\n                                // Revert user change\n                                itemToggle.setValue( ! makeLive, false );\n\n                                // Stop loading animation in the toggle\n                                itemToggle.stopLoadingAnimation();\n                            },\n                            afterHide: function(){\n                                modal.destroy();\n                            }\n                        });\n                    }\n                    else {\n                        // Get the item sentence HTML\n                        let itemSentenceHTML;\n                        try {\n                            itemSentenceHTML = itemSentence.html.get(0).outerHTML;\n                        } catch ( e ){}\n                                \n                        // Is valid, make live\n                        restCall( 'change_post_status', {\n                            post_ID:      itemId,\n                            post_status:  post_status,\n                            sentence_human_readable: itemSentence.brackets,\n                            sentence_human_readable_html: itemSentenceHTML\n                        }, function(){\n                            // On sucess\n                            // Update object\n\n                            // Refresh UI\n                            // Debugging! don't re-render the UI\n                            // new Triggers();\n                            // new Actions();\n\n                            // Remove loading animation, data didn't change\n                            itemToggle.stopLoadingAnimation();\n\n                            // Show error\n                            new RecipeNotices();\n                        }, function(){\n                            // On fail\n                            console.log( '‼️ ERROR-TODO. Couldn\\'t set the item status' );\n\n                            // Remove loading animation, data didn't change\n                            itemToggle.stopLoadingAnimation();\n\n                            // Revert user change\n                            itemToggle.setValue( ! makeLive, false );\n                        });\n                    }\n                }\n                else {\n                    // JS won't take more than some milliseconds to do this, so we're going to wait one second just for the user to understand what's happening\n                    setTimeout(function(){\n                        // Remove loading animation\n                        itemToggle.stopLoadingAnimation();\n\n                        // Revert user change\n                        itemToggle.setValue( false, false );\n                    }, 1000 );\n                }\n            });\n        }\n\n        return container;\n    }\n}\n\nexport default ItemHeaderSentence;","import $ from 'jquery';\n\nimport {\n    isDefined\n} from './Utilities.js';\n\nclass ItemHeaderTag {\n    constructor( integrationId, integrationName = null ){\n        this.integrationId = integrationId;\n        this.integrationName = integrationName;\n\n        return this.createItemTag();\n    }\n\n    /**\n     * Create item tag with the name of the integration\n     *\n     * @since 0.5\n     * \n     * @param {string}    integrationCode - The integration code\n     *\n     * @return {object}   HTML with the item tag\n     */\n\n    createItemTag(){\n        // Get integration by integrationId\n        let integration = UncannyAutomator.integrations[ this.integrationId ];\n\n        // Create tag element and set the integraiton name\n        let container   = $( '<div/>', { 'class': 'item-title__integration uap-clear' }),\n            tag         = $( '<div/>', { 'class': 'item-title__tag' });\n\n        if ( isDefined( integration ) ){\n            tag.text( integration.name );\n        }\n        else {\n            tag.text( this.integrationName );\n        }\n\n        container.append( tag );\n\n        // Return tag\n        return container;\n    }\n}\n\nexport default ItemHeaderTag;","import $ from 'jquery';\n\nimport {\n\tgetDOMElements,\n    restCall,\n    AJAXRequest,\n    isDefined,\n    isEmpty,\n    parseStringWithTokens,\n    vsprintf,\n    getCurrentFieldsValues\n} from './Utilities.js';\n\nimport {\n    validateItemFields,\n} from './Validation';\n\nimport Triggers from './Triggers.js';\nimport Actions  from './Actions.js';\n\nimport Modal    from './Modal.js';\nimport Markdown from './Markdown.js';\n\nclass ItemOptions {\n\tconstructor( itemId, optionId ){\n\t\tthis.itemId   = itemId;\n\t\tthis.optionId = optionId;\n\t\tthis.item \t  = UncannyAutomator.recipe.items[ itemId ];\n\n\t\t// Array to save the Field objects\n\t\tthis.fields   = this.item.options[ this.optionId ].fields;\n\t\t// Array to save the buttons\n\t\tthis.buttons  = this.item.options[ this.optionId ].buttons;\n\n\t\tthis.create();\n\n\t\t// AFTER we added the elements to the DOM let's call init \n\t\t// TokenSelector, TinyMCE and CodeMirror. We're going to call this in\n\t\t// ItemOptions.js because the TokenSelector, TinyMCE and \n\t\t// CodeMirror need the item in the DOM before changing it\n\t\t// Select2 and the URL checker are called in Field.js\n\t\tthis.initTokenSelector();\n\t\tthis.initTinyMCE();\n\t\tthis.initCodeMirror();\n\t}\n\n\tcreate(){\n\t\t// Container\n\t\tlet container = getDOMElements( 'item', {\n\t\t\tid: this.itemId\n\t\t}).contentContainer;\n\n\t\tlet itemOptions\t= $( '<div/>', { 'class': 'item-options' });\n\n\t\t// Buttons. We have to create these before the fields, but append after\n\t\tlet buttons = this.createButtons();\n\n\t\t// Fields\n\t\tlet fields = this.createFields();\n\t\tthis.fieldsContainer = fields;\n\t\titemOptions.append( fields );\n\n\t\t// Create notices container\n\t\tlet noticeContainer  = $( '<div/>', { 'class': 'item-options__notices' });\n\t\tthis.noticeContainer = noticeContainer;\n\t\titemOptions.append( noticeContainer );\n\n\t\t// Append buttons\n\t\titemOptions.append( buttons );\n\n\t\t// Append to the item\n\t\tcontainer.html( itemOptions );\n\t}\n\n\tcreateFields(){\n\t\tlet container = $( '<div/>', { 'class': 'item-options__group' });\n\n\t\t// Create fields\n\t\t$.each( this.fields, ( index, field ) => {\n\t\t\t// Get field type\n\t\t\tlet fieldType = field.getAttributes().fieldType;\n\n\t\t\t// Check if it's a repeater\n\t\t\tif ( fieldType == 'repeater' ){\n\t\t\t\t// Create the fields again first (to avoid showing unsaved changed)\n\t\t\t\tfield.createFields();\n\t\t\t}\n\n\t\t\t// Append the form element to the DOM\n\t\t\tfield.createFormElement();\n\t\t\tcontainer.append( field.getFormElement() );\n\n\t\t\t// Bind submit on Enter (for all except groups and textareas)\n\t\t\tif ( ! [ 'textarea', 'group', 'repeater' ].includes( fieldType ) ){\n\t\t\t\t// Get field element and bind 'keyup'\n\t\t\t\tfield.getField().on( 'keyup', ( event ) => {\n\t\t\t\t\t// Check if it's an enter\n\t\t\t\t\tif ( event.keyCode == 13 ){\n\t\t\t\t\t\t// Trigger a click on the Save Button\n\t\t\t\t\t\tthis.saveButton.trigger( 'click' );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Check if it's a group\n\t\t\telse if ( fieldType == 'group' ){\n\t\t\t\t// Iterate fields\n\t\t\t\tfield.fields.forEach(( field ) => {\n\t\t\t\t\t// Get the field type\n\t\t\t\t\tconst fieldType = field.getAttributes().fieldType;\n\n\t\t\t\t\t// Check if it's not a textarea\n\t\t\t\t\tif ( fieldType !== 'textarea' ){\n\t\t\t\t\t\t// Get field element and bind 'keyup'\n\t\t\t\t\t\tfield.getField().on( 'keyup', ( event ) => {\n\t\t\t\t\t\t\t// Check if it's an enter\n\t\t\t\t\t\t\tif ( event.keyCode == 13 ){\n\t\t\t\t\t\t\t\t// Trigger a click on the Save Button\n\t\t\t\t\t\t\t\tthis.saveButton.trigger( 'click' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if ( fieldType == 'repeater' ){\n\t\t\t\t// Iterate rows\n\t\t\t\tfield.fieldRows.forEach(( row, index ) => {\n\t\t\t\t\t// Iterate each row\n\t\t\t\t\trow.forEach(( Field, index ) => {\n\t\t\t\t\t\t// Get field element and bind 'keyup'\n\t\t\t\t\t\tField.getField().on( 'keyup', ( event ) => {\n\t\t\t\t\t\t\t// Check if it's an enter\n\t\t\t\t\t\t\tif ( event.keyCode == 13 ){\n\t\t\t\t\t\t\t\t// Trigger a click on the Save Button\n\t\t\t\t\t\t\t\tthis.saveButton.trigger( 'click' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn container;\n\t}\n\n\tcreateButtons(){\n\t\t// Buttons\n\t\tlet container \t  \t = $( '<div/>', { 'class': 'item-options__buttons' });\n\n\t\t// Actions buttons\n\t\tlet automatorButtons = $( '<div/>', { 'class': 'item-options__automator-buttons' }),\n\t\t\tdeveloperButtons = $( '<div/>', { 'class': 'item-options__developer-buttons' });\n\n\t\tlet saveButton \t  \t = $( '<div/>', { 'class': 'uap-btn uap-btn--primary' }),\n\t\t\tcancelButton  \t = $( '<div/>', { 'class': 'uap-btn uap-btn--secondary' }).text( UncannyAutomator.i18n.cancel );\n\n\t\tif ( this.item.itemType == 'trigger' ){\n\t\t\tsaveButton.text( UncannyAutomator.i18n.save );\n\t\t}\n\n\t\tif ( this.item.itemType == 'action' ){\n\t\t\tsaveButton.text( UncannyAutomator.i18n.save );\n\t\t}\n\n        if ( this.item.itemType == 'closure' ){\n            saveButton.text( UncannyAutomator.i18n.save );\n        }\n\n        this.saveButton = saveButton;\n\n\t\tautomatorButtons.append( saveButton );\n\t\tautomatorButtons.append( cancelButton );\n\n\t\t// Check developer defined buttons\n\t\t$.each( this.buttons, ( index, button ) => {\n\t\t\t// Create button\n\t\t\tconst $buttonElement = $( '<div/>', { 'class': 'uap-btn' }).text( button.text );\n\n\t\t\t// Check if we have to add a custom class to the button\n\t\t\tif ( isDefined( button.css_classes ) ){\n\t\t\t\t// Add classes\n\t\t\t\t$buttonElement.addClass( button.css_classes );\n\t\t\t}\n\n\t\t\t// Check if it has a defined onClick function\n\t\t\tlet doOnClick = () => {};\n\t\t\tif ( isDefined( button.on_click ) ){\n\t\t\t\t// Try to overwrite empty function\n\t\t\t\ttry {\n\t\t\t\t\t// Try to convert the string to function, but first remove the <script> tags and trim the string\n\t\t\t\t\tdoOnClick = eval( `(${ button.on_click.replace( '<script>', '' ).replace( '</script>', '' ).trim() })` ); \n\t\t\t\t} catch ( e ){ console.log( e ); console.log( button.on_click ); }\n\t\t\t}\n\n\t\t\t// Listen clicks on the button\n\t\t\t$buttonElement.on( 'click', () => {\n\t\t\t\t// Invoke callback\n\t\t\t\tdoOnClick(\n\t\t\t\t\t// button\n\t\t\t\t\t$buttonElement,\n\t\t\t\t\t// data\n\t\t\t\t\t{\n\t\t\t\t\t\titem:      this.item,\n\t\t\t\t\t\tvalues:    getCurrentFieldsValues( this.itemId ),\n\t\t\t\t\t},\n\t\t\t\t\t// modules\n\t\t\t\t\t(function(){\n\t\t\t\t\t\t// Get required modules\n\t\t\t\t\t\tlet modules = {};\n\n\t\t\t\t\t\t// Check if the developer wants custom modules\n\t\t\t\t\t\tif ( isDefined( button.modules ) ){\n\t\t\t\t\t\t\t// Check if we have to add the modal module\n\t\t\t\t\t\t\tif ( button.modules.includes( 'modal' ) ){\n\t\t\t\t\t\t\t\t// Include modal\n\t\t\t\t\t\t\t\tmodules.Modal = Modal;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( button.modules.includes( 'markdown' ) ){\n\t\t\t\t\t\t\t\t// Include Markdown\n\t\t\t\t\t\t\t\tmodules.Markdown = Markdown;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Return modules\n\t\t\t\t\t\treturn modules;\n\t\t\t\t\t})()\n\t\t\t\t);\n\t\t\t});\n\n\t\t\t// Add button to the container\n\t\t\tdeveloperButtons.append( $buttonElement );\n\t\t});\n\n\t\tcontainer.append( automatorButtons );\n\t\tcontainer.append( developerButtons );\n\n\t\tsaveButton.on( 'click', () => {\n\t\t\t// Verify form\n            let formValidation = validateItemFields( this.fieldsContainer );\n\n            // Check if it's valid\n            if ( formValidation.isValid ){\n            \t// Disable button and show loading animation\n            \tsaveButton.addClass( 'uap-btn--loading uap-btn--disabled' );\n\n            \t// The REST call wants:\n            \t// - The item ID\n            \t// - The option code (the one from the token, the main one)\n            \t// - The value. If there is more than one then a serialized object\n            \tlet itemId \t\t= this.itemId,\n            \t\toptionCode \t= this.optionId,\n            \t\toptionValue = this.getOptionValue();\n\n            \t// Get a temporary item sentence\n            \t// This must use values that are not yet saved in the meta of the item\n            \tconst itemSentence = parseStringWithTokens( this.item, this.item.meta.sentence, $.extend({}, this.item.meta, getCurrentFieldsValues( this.itemId ) ) );\n\n            \t// Get the item sentence HTML\n            \tlet itemSentenceHTML;\n            \ttry {\n            \t\titemSentenceHTML = itemSentence.html.get(0).outerHTML;\n            \t} catch ( e ){}\n\n            \trestCall( 'update', {\n                    itemId:       itemId,\n                    optionCode:   optionCode,\n                    optionValue:  optionValue,\n                    sentence_human_readable: itemSentence.brackets,\n                    sentence_human_readable_html: itemSentenceHTML\n                }, ( response ) => {\n                \t// Trigger \"saved\" on all item fields\n                \tthis.fields.forEach(( Field ) => {\n                \t\tField.getFormElement().trigger( 'saved' );\n                \t});\n\n           \t        if ( this.item.itemType == 'trigger' ){\n                        new Triggers();\n                    }\n\n                    if ( this.item.itemType == 'action' || this.item.itemType == 'closure' ){\n                        new Actions();\n                    }\n\n                    // Determine if the item is already valid\n\t\t\t\t\t// This will be true only if the new item doesn't have\n\t\t\t\t\t// options, or all the options have a default value\n\t\t\t\t\tconst isValid = UncannyAutomator.recipe.items[ this.item.id ].isValid;\n\n                    // Get item form element\n                \tconst $item = getDOMElements( 'item', {\n                \t\tid: this.item.id\n                \t});\n\n                \t// Check if it's valid\n\t\t\t\t\tif ( isValid ){\n\t\t\t\t\t\t// Check if the recipe is NOT live\n\t\t\t\t\t\tif ( ! UncannyAutomator.recipe.isLive ){\n\t\t\t\t\t\t\t// Check if the ITEM isn't already live\n\t\t\t\t\t\t\t// Otherwise, we don't have to trigger it again\n\t\t\t\t\t\t\tif ( ! this.item.isLive ){\n\t\t\t\t\t\t\t\t// Set the item to live\n\t\t\t\t\t\t\t\t$item.item\n\t\t\t\t\t\t\t\t\t.find( '.item-status input[type=\"checkbox\"]' )\n\t\t\t\t\t\t\t\t\t.prop( 'checked', true )\n\t\t\t\t\t\t\t\t\t.trigger( 'change' );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Get first token and trigger a click\n\t\t\t\t\t\t// This will open the first group of options\n\t\t\t\t\t\t$item.item\n\t\t\t\t\t\t\t.find( '.item-title__token:not(.item-title__token--filled)' )\n\t\t\t\t\t\t\t.first()\n\t\t\t\t\t\t\t.trigger( 'click' );\n\t\t\t\t\t}\n                }, ( response ) => {\n                \tconsole.log( '‼️ ERROR-TODO. Couldn\\'t save the options of the item' );\n\n                \t// Reset UI\n\t\t\t\t\tif ( this.item.itemType == 'trigger' ){\n\t\t\t\t\t\tnew Triggers();\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.item.itemType == 'action' || this.item.itemType == 'closure' ){\n\t\t\t\t\t\tnew Actions();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Try to open the options again\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Get the item elements\n\t\t\t\t\t\tgetDOMElements( 'item', {\n\t\t\t\t\t\t\tid: this.itemId\n\t\t\t\t\t\t})\n\t\t\t\t\t\t// Get the main container\n\t\t\t\t\t\t.item\n\t\t\t\t\t\t// Find the token in the sentence\n\t\t\t\t\t\t.find( `.item-title__token[data-options-id=\"${ optionCode }\"]` )\n\t\t\t\t\t\t// Trigger a click\n\t\t\t\t\t\t.trigger( 'click' ); \n\t\t\t\t\t} catch ( e ){}\n                });\n            }\n\t\t});\n\n\t\tcancelButton.on( 'click', () => {\n\t\t\t// Reset UI\n\t\t\tif ( this.item.itemType == 'trigger' ){\n\t\t\t\tnew Triggers();\n\t\t\t}\n\n\t\t\tif ( this.item.itemType == 'action' || this.item.itemType == 'closure' ){\n\t\t\t\tnew Actions();\n\t\t\t}\n\t\t});\n\n\t\treturn container;\n\t}\n\n\tinitTokenSelector(){\n\t\t$.each( this.fields, ( index, field ) => {\n\t\t\t// Get the field type\n\t\t\tfield.initTokenSelector();\t\t\n\t\t});\n\t}\n\n\tinitTinyMCE(){\n\t\t$.each( this.fields, ( index, field ) => {\n\t\t\t// Get the field type\n\t\t\tif ( field.getAttributes().fieldType == 'textarea' ){\n\t\t\t\t// TinyMCE will be initialized only if it's a textarea and supportsTinyMCE is true\n\t\t\t\tfield.initTinyMCE();\n\t\t\t}\t\t\t\n\t\t});\n\t}\n\n\tinitCodeMirror(){\n\t\t$.each( this.fields, ( index, field ) => {\n\t\t\t// Get the field type\n\t\t\tfield.initCodeMirror();\n\t\t});\n\t}\n\n\t/**\n\t * Get the value that we have to send to the REST call\n\t *\n\t * @since 0.5\n\t */\n\n\tgetOptionValue(){\n\t\tlet response = {},\n\t\t\thasSelect = false,\n\t\t\thasRepeater = false;\n\n\t\t$.each( this.fields, ( index, field ) => {\n\t\t\tlet id \t  = field.getAttributes().optionCode,\n\t\t\t\tvalue = field.getValue();\n\n\t\t\tif ( [ 'select', 'radio' ].includes( field.getAttributes().fieldType ) ){\n\t\t\t\t// Has select\n\t\t\t\thasSelect = true;\n\n\t\t\t\t// Check if it's a multiselect\n\t\t\t\t// Then save the value as a JSON string, don't save it\n\t\t\t\t// as an array\n\t\t\t\tif ( field.getAttributes().supportsMultipleValues ){\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvalue = JSON.stringify( value );\n\t\t\t\t\t} catch ( e ){\n\t\t\t\t\t\tconsole.log( e );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Save readable value\n\t\t\t\tresponse[ vsprintf( '%s_readable', [ id ] ) ] = field.getReadableValue();\n\n\t\t\t\t// Check if we have to save the custom value (only for selects)\n\t\t\t\tconst customValue = field.getSelectCustomValue();\n\t\t\t\tif ( value == 'automator_custom_value' ){\n\t\t\t\t\tresponse[ vsprintf( '%s_custom', [ id ] ) ] = customValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( field.getAttributes().fieldType == 'repeater' ){\n\t\t\t\t// Has repeater\n\t\t\t\thasRepeater = true;\n\t\t\t\t\n\t\t\t\t// Convert data to a JSON string\n\t\t\t\tvalue = JSON.stringify( value );\n\t\t\t}\n\n\t\t\tresponse[ id ] = value;\n\t\t});\n\n\t\tif ( ! hasRepeater && ! hasSelect && Object.keys( response ).length == 1 ){\n\t\t\t// One field\n\t\t\tresponse = response[ Object.keys( response )[ 0 ] ];\n\t\t}\n\n\t\treturn response;\n\t}\n}\n\nexport default ItemOptions;","import $ from 'jquery';\n\nimport {\n\tisDefined,\n\tescapeHTML\n} from './Utilities.js';\n\nclass Markdown {\n\tconstructor( content = '' ){\n\t\t// Save content\n\t\tthis.content = content;\n\t}\n\n\tgetHTML(){\n\t\t// Define content and escape HTML\n\t\tlet content = escapeHTML( this.content );\n\t\t\n\t\tcontent = this.parseItalicsAndBold( content );\n\t\tcontent = this.parseAnchors( content );\n\n\t\treturn content;\n\t}\n\n\tparseItalicsAndBold( content ){\n\t\t// Underscores\n\t\t// Since we are consuming a \\s character, we need to add it\n\t\tcontent = content.replace( /(^|\\s|>|\\b)__(?=\\S)([^]+?)__(?=\\b|<|\\s|$)/gm, '$1<strong>$2</strong>' );\n\t\tcontent = content.replace( /(^|\\s|>|\\b)_(?=\\S)([^]+?)_(?=\\b|<|\\s|$)/gm, '$1<em>$2</em>' );\n\n\t\t// Asterisks\n\t\tcontent = content.replace( /(\\*\\*)(?=\\S)([^\\r]*?\\S[*]*)\\1/g, '<strong>$2</strong>' );\n\t\tcontent = content.replace( /(\\*)(?=\\S)([^\\r]*?\\S)\\1/g, '<em>$2</em>' );\n\n\t\t// Return content\n\t\treturn content;\n\t}\n\n\tparseAnchors( content ){\n\t\t// Inline-style links: [link text](url \"optional title\")\n\t\tcontent = content.replace( /(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]\\([ \\t]*()<?(.*?(?:\\(.*?\\).*?)?)>?[ \\t]*((['\"])(.*?)\\6[ \\t]*)?\\))/g, function( wholeMatch, m1, m2, m3, m4, m5, m6, m7 ){\n\t\t\tif ( ! isDefined( m7 ) ){\n\t\t\t\tm7 = '';\n\t\t\t}\n\n\t\t\twholeMatch = m1;\n\t\t\t\n\t\t\tvar linkText = m2,\n\t\t\t\tlinkId \t = m3.toLowerCase(),\n\t\t\t\turl \t = m4,\n\t\t\t\ttitle \t = m7;\n\n\t\t\tif ( ! url ){\n\t\t\t\tif ( ! linkId ){\n\t\t\t\t\t// Lower-case and turn embedded newlines into spaces\n\t\t\t\t\tlinkId = linkText.toLowerCase().replace( / ?\\n/g, ' ' );\n\t\t\t\t}\n\n\t\t\t\turl = '#' + linkId;\n\n\t\t\t\tif ( wholeMatch.search( /\\(\\s*\\)$/m ) > -1 ){\n\t\t\t\t\t// Special case for explicit empty url\n\t\t\t\t\turl = '';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn wholeMatch;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\turl = encodeURI( url, '*_', false );\n\t\t\tvar result = '<a href=\"' + url + '\" target=\"_blank\"';\n\n\t\t\tif ( title !== '' && title !== null ){\n\t\t\t\ttitle = title.replace( /\"/g, '&quot;' );\n\t\t\t\ttitle = encodeURI( title, '*_', false );\n\t\t\t\tresult += ' title=\"' + title + '\"';\n\t\t\t}\n\n\t\t\tresult += '>' + linkText + '</a>';\n\n\t\t\treturn result;\n\t\t});\n\n\t\t// Return content\n\t\treturn content;\n\t}\n}\n\nexport default Markdown;","import $ from 'jquery';\n\nimport {\n    itemsObject,\n    getDOMElements,\n    isEmpty,\n    isDefined,\n    vsprintf,\n    addParametersToURL\n} from './Utilities.js';\nimport ItemCreatorIntegrations from './ItemCreatorIntegrations.js';\nimport Triggers from './Triggers';\nimport Actions from './Actions';\nimport MetaboxItems from './MetaboxItems';\n\nclass MetaboxFooter {\n\n    constructor( itemType ){\n        this.itemType = itemType;\n\n        if ( this.shouldCreateMetaboxFooter() ){\n            this.createFooter();\n        }\n    }\n\n    shouldCreateMetaboxFooter(){\n        // Check if we should create the metabox\n        // For the triggers we're going to create it always,\n        // but for the actions we're going to create only if there is at least one action\n\n        let create = false;\n\n        if ( this.itemType == 'trigger' ){\n            // Get triggers\n            let recipeActions = itemsObject( 'get', {\n                filter: {\n                    itemType: 'trigger'\n                }\n            });\n\n            // Check if has triggers\n            let hasTriggers = ! isEmpty( recipeActions );\n\n            // Create metabox if hasTriggers\n            if ( ( hasTriggers || ( ! isDefined( UncannyAutomator.wp ) || ! UncannyAutomator.wp ) ) || UncannyAutomator.recipe.type == 'anonymous' ){\n                create = true;\n            }\n        }\n\n        if ( this.itemType == 'action' ){\n            // Get actions\n            let recipeActions = itemsObject( 'get', {\n                filter: {\n                    itemType: 'action'\n                }\n            });\n\n            // Check if has actions\n            let hasActions = ! isEmpty( recipeActions );\n\n            // Create metabox if hasActions\n            if ( hasActions ){\n                create = true;\n            }\n        }\n\n        return create;\n    }\n\n    createFooter(){\n        // Create error container\n        let container  = $( '<div/>', { 'class': 'metabox__footer' });\n\n        // \"Add another\" button\n        let addAnother = $( '<div/>', { 'class': 'uap-btn uap-btn--secondary' });\n\n        // Add button, but don't add it in the triggers metabox for anonymous recipes\n        if ( this.itemType == 'action' || ( this.itemType == 'trigger' && UncannyAutomator.recipe.type == 'user' ) ){\n            // Append \"Add another\" button\n            container.append( addAnother );\n        }\n\n        if ( this.itemType == 'trigger' ){\n            // Do only for \"user\" recipes\n            if ( UncannyAutomator.recipe.type == 'user' ){\n                // Set text to the \"Add Another\" button\n                addAnother.text( UncannyAutomator.i18n.trigger.addAnother );\n            }\n\n            // Do only for \"anonymous\" recipes\n            if ( UncannyAutomator.recipe.type == 'anonymous' ){\n                // Create and append anonymous notice\n                let $anonymousNotice = this.createAnonymousNotice();\n                container.append( $anonymousNotice );\n            }\n        }\n\n        if ( this.itemType == 'action' ){\n            // Set text to the \"Add Another\" button\n            addAnother.text( UncannyAutomator.i18n.action.addAnother );\n            container.addClass('add-action-btn');\n        }\n\n        // Bind button\n        if ( ( this.itemType == 'trigger' ) || this.itemType == 'action' ){\n            // Listen clicks to the \"Add another\" button\n            addAnother.on( 'click', () => {\n                // Multiple triggers are only allowed in the pro version\n                // So we're only doing this for actions\n                new ItemCreatorIntegrations( this.itemType );\n            });\n        }\n\n        // Append to the metabox\n        let metabox = getDOMElements( 'metabox', {\n            type: this.itemType\n        })\n\n        metabox.append( container );\n    }\n\n    createAnonymousNotice(){\n        let $notice = $( `\n            <div class=\"description\">\n                ${ UncannyAutomator.i18n.recipeType.everyoneOnlyOneTrigger } <a href=\"${ addParametersToURL( 'https://automatorplugin.com/knowledge-base/managing-triggers/', {\n                        'utm_source':  'uncanny_automator',\n                        'utm_medium':  'anonymous_recipe_one_trigger',\n                        'utm_content': 'learn_more'\n                    }) }\" target=\"_blank\">${ UncannyAutomator.i18n.learnMore } <span class=\"uo-icon uo-icon--external-link-alt\"></span></a>\n            </div>\n        ` );\n\n        return $notice;\n    }\n}\n\nexport default MetaboxFooter;","import $ from 'jquery';\n\nimport {\n    restCall\n} from './Utilities.js';\n\nimport Field from './Field';\nimport Modal from './Modal.js';\nimport Actions  from './Actions.js';\n\nclass ItemHeaderAsync {\n\n    buttonContainer;\n    button;\n    buttonIcon;\n\n    removeButton;\n\n    asyncModeField;\n    asyncModeHTML;\n\n    delayNumberField;\n    delayNumberHTML;\n\n    delayUnitField;\n    delayUnitHTML;\n\n    scheduleDateField;\n    scheduleDateHTML;\n\n    scheduleTimeField;\n    scheduleTimeHTML;\n\n    scheduleNoticeHTML;\n\n    modal;\n\n    /**\n     * Create item actions\n     *\n     * @since 0.5\n     *\n     * @return jQuery DOM element with the item actions\n     */\n\n    constructor( itemType, integrationID, itemCode, itemId ){\n        this.itemType      = itemType;\n        this.integrationID = integrationID;\n        this.itemCode      = itemCode;\n        this.itemId        = itemId;\n        this.item          = UncannyAutomator.recipe.items[ itemId ];\n        this.asyncMode     = this.item.meta.async_mode;\n\n        if ( UncannyAutomator.proVersion.startsWith( \"2\" ) ) {\n            return null;\n        }\n\n        return this.createAsyncButton();\n        \n    }\n\n    hasSchedule() {\n        if ( ! this.asyncMode ) {\n            return false;\n        }\n\n        if ( this.asyncMode == 'delay' ) {\n            return this.item.meta.async_delay_number && this.item.meta.async_delay_unit;\n        }\n\n        if ( this.asyncMode == 'schedule' ) {\n            return this.item.meta.async_schedule_time && this.item.meta.async_schedule_date;\n        }\n\n        return false;\n    }\n\n    getButtonText() {\n        if ( this.hasSchedule() ) {\n            let text = UncannyAutomator.i18n.action.asyncActions[this.asyncMode];\n            text += ' ';\n            text += '<strong>' + this.item.meta.async_sentence + '</strong>';\n            return  text;\n        }\n        return UncannyAutomator.i18n.action.asyncActions.delay;\n    }\n\n    createAsyncButton(){\n\n        // Create elements\n        this.buttonContainer     = $( '<div/>', { 'class': 'item-async' } );\n        this.button           = $( '<div/>', { 'class': 'item-async__btn' } );\n        this.buttonIcon       = $( '<i/>', { 'class': 'uo-icon uo-icon--clock' } );\n\n        this.button.html( this.getButtonText() );\n        this.button.prepend( this.buttonIcon );\n\n        this.buttonContainer.append( this.button );\n\n        if ( this.hasSchedule() ) {\n            this.createRemoveButton();\n        }\n\n        if ( this.isNew() ) {\n            this.createBadge( UncannyAutomator.i18n.action.asyncActions.new );\n        }\n\n        // Listen clicks to the open button\n        this.button.on( 'click', () => {\n            if ( ! this.buttonContainer.hasClass(\"disabled\") ) {\n                this.showModal();\n            }\n        } );\n\n        this.buttonContainer.on('automator:asyncButton:maybeDisable', (e, disable) => {\n            let buttonContainer = $( e.currentTarget );\n\n            if ( disable ) {\n                buttonContainer.attr( 'uap-tooltip', UncannyAutomator.i18n.action.asyncActions.pleaseSave );\n                buttonContainer.attr( 'uap-flow', 'down' );\n                buttonContainer.addClass('disabled');\n            } else {\n                buttonContainer.removeAttr( 'uap-tooltip' );\n                buttonContainer.removeClass('disabled');\n            }\n\n        });\n\n        return this.buttonContainer;\n    }\n\n    enable() {\n        this.button.removeAttr('uap-tooltip');\n        this.button.removeAttr('disabled');\n    }\n\n    isNew() {\n        // TODO When to hide this?\n        return true;\n    }\n\n    createBadge( label ) {\n        this.buttonBadge = $( '<span/>', { 'class': 'async-button__badge' } );\n        this.buttonBadge.text( label );\n        this.button.append( this.buttonBadge );\n    }\n\n    createRemoveButton() {\n        this.removeButton = $( '<span/>', { 'class': 'async-remove' } );\n        this.removeButtonIcon = $( '<i/>', { 'class': 'uo-icon uo-icon--times' } );\n\n        this.removeButton.text( UncannyAutomator.i18n.action.asyncActions.remove ) \n        this.removeButton.on( 'click', () => {\n            this.removeSchedule();\n        });\n        this.removeButton.prepend( this.removeButtonIcon );\n        this.buttonContainer.append( this.removeButton );\n    }\n\n    createModalContent() {\n        // Create the content for the modal\n        let modalContent = $( `<div/>`, { 'class': 'async-action-modal' } );\n\n        this.asyncModeHTML = this.createAsyncModeHTML();\n\n        this.asyncModeHTML.find( \".form-radio__container:first\" ).after( this.createDelayOptions() );\n        this.asyncModeHTML.find( \".form-radio__container:last\" ).after( this.createScheduleOptions() );\n\n        this.attachModeChangeEvent();\n    \n        // Add the field\n        modalContent.append( this.asyncModeHTML );\n\n        if ( this.hasSchedule() ) {\n            let modalNoticeHTML = $( '<div/>', { 'class': 'async-notice async-notice__blue' } );\n            let modalNoticeIcon = $( '<i/>', { 'class': 'uo-icon uo-icon--exclamation-triangle' } );\n            modalNoticeHTML.append( modalNoticeIcon );\n            modalNoticeHTML.append( UncannyAutomator.i18n.action.asyncActions.modal.scheduleNotice2 );\n            modalContent.append( modalNoticeHTML );\n        } \n\n        return modalContent;\n    }\n\n    showModal() {\n\n        let confirmButtonText = UncannyAutomator.i18n.action.asyncActions.modal.confirm;\n\n        if ( this.hasSchedule() && this.asyncMode == 'schedule' ) {\n            confirmButtonText = UncannyAutomator.i18n.action.asyncActions.schedule;\n        }\n\n        // Show a modal\n        this.modal = new Modal( {\n            title: UncannyAutomator.i18n.action.asyncActions.modal.title,\n            content: this.createModalContent(),\n            buttons: {\n                cancel:  UncannyAutomator.i18n.cancel,\n                confirm: confirmButtonText,\n            }\n        }, {\n            size: 'large',\n            customClass: 'async-action'\n        } );\n\n        this.modalEvents();\n    }\n\n    modalEvents() {\n        this.modal.setEvents( {\n            afterSetEvents: () => {\n                \n                this.modal.show();\n            },\n            onConfirm: () => {\n                this.submitModal();\n                \n            },\n            afterHide: () => {\n                this.modal.destroy();\n            }\n        } );\n    }\n\n    submitModal() {\n        let elements        = this.modal.getElements();\n        let confirmButton   = elements.modal.box.buttons.confirm;\n\n        // Add loading class to button\n        confirmButton.addClass( 'uap-btn--loading' ).prop( 'disabled', true );\n\n        if ( ! this.validateForm().isValid ) {\n            confirmButton.removeClass( 'uap-btn--loading' ).prop( 'disabled', false );\n            return;\n        }\n\n        let asyncMode = this.asyncModeField.getValue();\n        let delayNumber = this.delayNumberField.getValue();\n        let delayUnit = this.delayUnitField.getValue();\n        let scheduleTime = this.scheduleTimeField.getValue();\n        let scheduleDate = this.scheduleDateField.getValue();\n\n\n        let sentence;\n\n        if ( asyncMode == 'delay' ) {\n            sentence = this.delaySentence();\n        } else {\n            sentence = this.scheduleSentence();\n        }\n        \n        this.saveSchedule( asyncMode, delayNumber, delayUnit, scheduleTime, scheduleDate, sentence )\n        \n    }\n\n    delaySeconds() {\n        let delayUnit = this.delayUnitField.getValue();\n        let delayNumber = this.delayNumberField.getValue();\n        let multiplier;\n\n        switch ( delayUnit ) {\n            case 'seconds':\n                multiplier = 1;\n                break;\n            case 'minutes':\n                multiplier = 60;\n                break;\n            case 'hours':\n                multiplier = 60 * 60;\n                break;\n            case 'days':\n                multiplier = 60 * 60 * 24;\n                break;    \n            case 'years':\n                multiplier = 60 * 60 * 24 * 365;\n                break;\n            default:\n                multiplier = 1;\n                break;\n        }\n\n        return delayNumber * multiplier; \n    }\n\n    delaySentence() {\n        let unit = this.delayUnitField.getValue();\n\n        if ( this.delayNumberField.getValue() == 1 ) {\n            unit = unit.slice(0, -1);\n        }\n\n        return '' + this.delayNumberField.getValue() + ' ' + UncannyAutomator.i18n.action.asyncActions.modal[unit].toLowerCase();\n    }\n\n    scheduleSeconds() {\n        return Date.parse( this.scheduleDateField.getValue() + ' ' + this.scheduleTimeField.getValue() );\n    }\n\n    scheduleSentence() {\n        return this.scheduleDateField.getValue() + ' @ ' + this.scheduleTimeField.getValue();\n    }\n\n    saveSchedule( asyncMode, delayNumber = null, delayUnit = null, scheduleTime = null, scheduleDate = null, sentence = null ) {\n        // Do call and hide\n        restCall( 'schedule_action', {\n            'recipeId': UncannyAutomator.recipe.id,\n            'actionId': this.itemId,\n            'asyncMode': asyncMode,\n            'delayNumber': delayNumber,\n            'delayUnit': delayUnit,\n            'scheduleTime': scheduleTime,\n            'scheduleDate': scheduleDate,\n            'scheduleSentence': sentence\n        }, () => {\n            // Destroy modal\n            this.modal.destroy();\n            \n            new Actions();\n\n            // Check if the recipe is still valid, if it isn't then make the recipe draft\n            if ( ! UncannyAutomator.recipe.isValid ){\n                UncannyAutomator.recipe.publish.statusToggle.setValue( false );\n            }\n        }, () => {\n            // Destroy modal\n            this.modal.destroy();\n\n            console.log( '‼️ ERROR-TODO. Couldn\\'t schedule the item' );\n\n            new Actions();\n            \n        });\n    }\n\n    removeSchedule() {\n        this.removeButtonIcon.removeClass('uo-icon--times');\n        this.removeButtonIcon.addClass('uo-icon--loading uo-icon--rotate');\n        // Do call and hide\n        restCall( 'remove_schedule', {\n            'recipeId': UncannyAutomator.recipe.id,\n            'actionId': this.itemId,\n        }, () => {\n        \n            new Actions();\n\n            // Check if the recipe is still valid, if it isn't then make the recipe draft\n            if ( ! UncannyAutomator.recipe.isValid ){\n                UncannyAutomator.recipe.publish.statusToggle.setValue( false );\n            }\n        }, () => {\n\n            console.log( '‼️ ERROR-TODO. Couldn\\'t schedule the item' );\n\n            new Actions();\n            \n        });\n    }\n\n    createTimeZone() {\n\n        let timeZoneLink = $( '<a/>', {\n            'href':  UncannyAutomator.i18n.action.asyncActions.modal.timezoneLink,\n            'target': '_blank'\n        })\n\n        let timeZoneHelpIcon = $( '<i/>', { 'class': 'uo-icon uo-icon--question-circle' });\n\n        let timeZoneDesc = $( '<span/>', { 'class': 'schedule-fields__description' }).html( '<strong>' + UncannyAutomator.i18n.action.asyncActions.modal.timezone + '</strong>: ' + UncannyAutomator.i18n.action.asyncActions.modal.timezoneString );\n\n        timeZoneLink.append( timeZoneHelpIcon );\n\n        timeZoneDesc.append( timeZoneLink );\n\n        return timeZoneDesc;\n\n    }\n\n    createAsyncModeHTML() {\n        // Create the radio field\n        this.asyncModeField = new Field( 'radio', {\n            itemType: 'action',\n            optionCode: 'schedule_type',\n            name: 'schedule-type',\n            isRequired: true,\n            currentValue: this.asyncMode ? this.asyncMode : 'delay',\n            options: [\n                {\n                    value: 'delay',\n                    text: UncannyAutomator.i18n.action.asyncActions.delay\n                },\n                {\n                    value: 'schedule',\n                    text: UncannyAutomator.i18n.action.asyncActions.schedule\n                }\n            ]\n\n        }); \n\n        return this.asyncModeField.createFormElement().addClass( 'schedule-type-radio' );\n    }\n\n    attachModeChangeEvent() {\n        // Attach an event and change the confirm button text according to selection\n        this.asyncModeHTML.on( \"automator:field:change\", () => {\n            let selectedAsyncMode = this.asyncModeField.getValue();\n            let text, showNotice;\n            \n            if ( selectedAsyncMode == 'schedule' ) {\n                text = UncannyAutomator.i18n.action.asyncActions.schedule;\n            } else {\n                text = UncannyAutomator.i18n.action.asyncActions.modal.confirm;\n            }\n\n            if ( ! this.hasSchedule() ) {\n                if ( selectedAsyncMode == 'schedule' ) {\n                    this.scheduleNoticeHTML.removeClass( 'hidden' );\n                } else {\n                    this.scheduleNoticeHTML.addClass( 'hidden' );\n                }\n            }\n\n            this.modal.elements.modal.box.buttons.confirm.text( text );\n        });\n    }\n\n    createScheduleOptions() {\n\n        let scheduleOptions = $( `<div/>`, { 'class': 'schedule-options' } );\n\n        let scheduleDesc = $( '<span/>', { 'class': 'async-mode__description' } ).text( UncannyAutomator.i18n.action.asyncActions.modal.scheduleDesc );\n\n        let scheduleFields = $( '<div/>', { 'class': 'schedule-fields' } );\n\n        if ( ! this.hasSchedule() ) {\n            this.scheduleNoticeHTML = $( '<div/>', { 'class': 'schedule-notice hidden' } );\n            let scheduleNoticeIcon = $( '<i/>', { 'class': 'uo-icon uo-icon--question-circle' } );\n            this.scheduleNoticeHTML.text( UncannyAutomator.i18n.action.asyncActions.modal.scheduleNotice1 );\n            \n            this.scheduleNoticeHTML.addClass( 'schedule-notice__yellow' );\n        } \n\n        scheduleOptions.append( scheduleDesc );\n\n        scheduleFields.append( this.createScheduleDateHTML() );\n\n        scheduleFields.append( this.createScheduleTimeHTML() );\n\n        scheduleOptions.append( scheduleFields );\n       \n        scheduleOptions.append( this.createTimeZone() );\n\n        scheduleOptions.append( this.scheduleNoticeHTML );\n\n        return scheduleOptions;\n    }\n\n    createDelayOptions() {\n        let delayOptions = $( `<div/>`, { 'class': 'delay-options' } );\n\n        let delayDesc = $( '<span/>', { 'class': 'async-mode__description' } ).text( UncannyAutomator.i18n.action.asyncActions.modal.delayDesc );\n\n        let delayFields = $( '<div/>', { 'class': 'delay-fields' } );\n\n\n        this.delayNumberHTML = this.createDelayNumberHTML();\n\n        this.delayUnitHTML = this.createDelayUnitHTML();\n        \n        let delayFieldsDesc = $( '<span/>', { 'class': 'delay-fields__description' } ).text( UncannyAutomator.i18n.action.asyncActions.modal.after );\n\n\n\n        delayFields.append( this.delayNumberHTML );\n\n        delayFields.append( this.delayUnitHTML );\n\n        delayFields.append( delayFieldsDesc );\n\n\n        delayOptions.append( delayDesc );\n\n        delayOptions.append( delayFields );\n\n\n        return delayOptions;\n    }\n\n    createDelayNumberHTML() {\n\n        this.delayNumberField = new Field( 'int', {\n            itemType: 'action',\n            optionCode: 'delay-number',\n            isRequired: true,\n            placeholder: '10',\n            supportsTokens: false,\n            currentValue: this.item.meta.async_delay_number ? this.item.meta.async_delay_number : ''\n        },\n        true,\n        this.validateDelayNumber );\n\n        // Create form element\n        const $delayNumberField = this.delayNumberField.createFormElement();\n\n        $delayNumberField.addClass( 'delay-fields__number' );\n\n        // Init Codemirror\n        this.delayNumberField.initCodeMirror();\n\n        return $delayNumberField;\n    }\n\n    createDelayUnitHTML() {\n\n        this.delayUnitField = new Field( 'select', {\n            itemType: 'action',\n            optionCode: 'delay-unit',\n            currentValue: this.item.meta.async_delay_unit ? this.item.meta.async_delay_unit : 'minutes',\n            customClass: 'hide-this',\n            isRequired: true,\n            options: [\n                {\n                    value: 'seconds',\n                    text:  UncannyAutomator.i18n.action.asyncActions.modal.seconds\n                },\n                {\n                    value: 'minutes',\n                    text:  UncannyAutomator.i18n.action.asyncActions.modal.minutes\n                },\n                {\n                    value: 'hours',\n                    text:  UncannyAutomator.i18n.action.asyncActions.modal.hours\n                },\n                {\n                    value: 'days',\n                    text:  UncannyAutomator.i18n.action.asyncActions.modal.days\n                },\n                {\n                    value: 'years',\n                    text:  UncannyAutomator.i18n.action.asyncActions.modal.years\n                },\n            ]\n        });\n\n        return this.delayUnitField.createFormElement().addClass( 'delay-fields__unit' );\n    }\n\n    createScheduleDateHTML() {\n        // Create value field\n        this.scheduleDateField = new Field( 'date', {\n            itemType: 'action',\n            optionCode: 'schedule-date',\n            isRequired: true,\n            placeholder: UncannyAutomator.i18n.action.asyncActions.modal.today,\n            dateFormat: UncannyAutomator.i18n.action.asyncActions.modal.dateFormat,\n            supportsTokens: false,\n            currentValue: this.item.meta.async_schedule_date ? this.item.meta.async_schedule_date : '',\n            placeholder: UncannyAutomator.i18n.format.date.selectDate\n        });\n\n        // Create form element\n        const $scheduleDateField = this.scheduleDateField.createFormElement();\n\n        $scheduleDateField.addClass( 'schedule-fields__date' );\n\n        // Init Codemirror\n        this.scheduleDateField.initCodeMirror();\n\n        return $scheduleDateField;\n    }\n\n    createScheduleTimeHTML() {\n        // Create value field\n        this.scheduleTimeField = new Field( 'time', {\n            itemType: 'action',\n            optionCode: 'schedule-time',\n            isRequired: true,\n            placeholder:\"11:00 AM\",\n            timeFormat: \"h:i K\",\n            timeAltFormat: \"h:i K\",\n            supportsTokens: false,\n            currentValue: this.item.meta.async_schedule_time ? this.item.meta.async_schedule_time : '',\n            placeholder: UncannyAutomator.i18n.format.date.selectTime\n        });\n\n        // Create form element\n        const $scheduleTimeField = this.scheduleTimeField.createFormElement();\n\n        $scheduleTimeField.addClass( 'schedule-fields__time' )\n\n        // Init Codemirror\n        this.scheduleTimeField.initCodeMirror();\n\n        return $scheduleTimeField;\n    }\n\n    validateForm() {\n\n        let asyncMode = this.asyncModeField.getValue();\n\n        let validSchedule;\n        \n        switch ( asyncMode ) {\n            case 'schedule':\n                validSchedule = this.validateScheduleFields();\n                break;\n            case 'delay':\n                \n                validSchedule = this.delayNumberField.validate();\n                break;\n            default:\n                validSchedule = { isValid: false, message: UncannyAutomator.i18n.action.asyncActions.modal.validation.unsupported }\n                break;\n        }\n\n        if ( ! validSchedule.isValid ) {\n            return validSchedule;\n        }\n\n        return { isValid: true };\n    }\n\n    validateScheduleFields() {\n        let validSchedule = this.scheduleDateField.validate();\n\n        if ( validSchedule.isValid ) {\n            validSchedule =  this.scheduleTimeField.validate();\n        }\n       \n        return validSchedule;\n    }\n\n    validateDelayNumber( value, simulate_int ) {\n\n        if ( value < 1 ) {\n            return { isValid: false, message: UncannyAutomator.i18n.action.asyncActions.modal.validation.positiveNumber }\n        }   \n\n        return { isValid: true };\n    }\n}\n\nexport default ItemHeaderAsync;\n","import $ from 'jquery';\n\nimport {\n    getDOMElements,\n    isEmpty,\n    isDefined\n} from './Utilities.js';\n\nimport ItemHeaderMenu     from './ItemHeaderMenu.js';\nimport ItemHeaderIcon     from './ItemHeaderIcon.js';\nimport ItemHeaderTag      from './ItemHeaderTag.js';\nimport ItemHeaderAsync from './ItemHeaderAsync.js';\nimport ItemHeaderSentence from './ItemHeaderSentence.js';\n\nclass MetaboxItems {\n    constructor( itemType, items ){\n        $.each( items, ( itemId, item ) => {\n            if ( itemType == item.itemType ){\n                // Create item\n                let item = this.createItem( itemId );\n\n                // Append to the metabox\n                let metabox = getDOMElements( 'metabox', {\n                    type: itemType\n                });\n\n                metabox.append( item );\n            }\n        });\n    }\n\n    createItem( itemId ){\n        // Get item data\n        let item = UncannyAutomator.recipe.items[ itemId ];\n\n        // Create container\n        let container = $( '<div/>', {\n            'class':   'item',\n            'data-id': itemId\n        });\n\n        if ( item.isMissing ){\n            container.addClass( 'item--missing' );\n        }\n\n        if ( item.meta.async_mode ){\n            container.addClass( 'item--hasSchedule' );\n        }\n\n        // Replace tokens in the CSS\n        if ( ! isEmpty( item.inlineCss ) ){\n            item.inlineCss = item.inlineCss.replace( /{{item_id}}/g, itemId );\n\n            // Add inline inlineCss\n            container.prepend( item.inlineCss );\n        }\n\n        // Create header\n        let header = this.createHeader(\n            item.integrationCode,\n            item.itemType,\n            item.itemCode,\n            itemId,\n        );\n\n        let notice = this.createNotice( item );\n\n        container.append( header );\n        container.append( notice );\n\n        container.on( 'automator:item:open', (e, open) => {\n            let asyncButtons = container.find('.item-async');\n            $( asyncButtons[0] ).trigger( 'automator:asyncButton:maybeDisable', open );           \n        })\n\n        // Debug\n        // console.groupCollapsed( vsprintf( 'ID: %s', [ itemId ] ) );\n        // console.log( item );\n        // console.groupEnd();\n\n        return container;\n    }\n\n    /**\n     * Creates item header\n     * \n     * @since 0.5\n     *\n     * @param {string}    integrationCode - The integration code\n     * @param {string}    itemType - The item type: 'trigger', 'action' or 'closure'\n     * @param {string}    itemCode - The code of the item\n     * @param {int}       itemId - The ID of the item\n     */\n\n    createHeader( integrationCode, itemType, itemCode, itemId ){\n        let container = $( '<div/>' ),\n            title     = $( '<div/>', { 'class': 'item-title uap-clear' });\n\n        // Get item data\n        let item = UncannyAutomator.recipe.items[ itemId ];\n\n        // If the item is missing remove the integrationCode\n        // We don't want to show the integration icon\n        if ( item.isMissing ){\n            integrationCode = null;\n        }\n        \n        let actions = new ItemHeaderMenu( itemType, integrationCode, itemCode, itemId );\n        container.append( actions );\n\n        let icon    = new ItemHeaderIcon( integrationCode );\n        container.append( icon );\n\n        // Integration name for missing items\n        let integrationName = item.integrationName;\n        \n        let itemTag = new ItemHeaderTag( integrationCode, integrationName );\n        title.append( itemTag );\n\n        let titleSentence = new ItemHeaderSentence( itemType, integrationCode, itemCode, itemId );\n        title.append( titleSentence );\n        container.append( title );\n\n        let itemContent = $( '<div/>', { 'class': 'item__content' });\n        container.append( itemContent );\n\n        if ( itemType == 'action' && isDefined( UncannyAutomator.wp ) && UncannyAutomator.wp ) {\n            let asyncButton = new ItemHeaderAsync( itemType, integrationCode, itemCode, itemId, container );\n\n            container.append( asyncButton );\n        }\n\n        return container;\n    }\n\n    /**\n     * Create item notice\n     *\n     * @since 0.6\n     *\n     */\n\n    createNotice( item ){\n        let container;\n\n        if ( item.isMissing ){\n            container = $( '<div/>', { 'class': 'item-notice' });\n            container.text( UncannyAutomator.i18n.itemMissing );\n        }\n\n        return container;\n    }\n}\n\nexport default MetaboxItems;","import $ from 'jquery';\n\nimport {\n\tisDefined\n} from './Utilities.js';\n\n/**\n * Create a new modal box\n *\n * @since 0.4\n */\n\nclass Modal {\n\t/*\n\t * Construct method\n\t *\n\t * @since 0.4\n\t *\n\t * @param  {object} settings\n\t * @param  {object} [settings.content]\n\t * @param  {string} [settings.content.title] - Title of the metabox\n\t * @param  {string} [settings.content.warning] - Content of warning in the metabox\n\t * @param  {object} [settings.content.buttons]\n\t * @param  {string} [settings.content.buttons.cancel] - Text of the cancel button\n\t * @param  {string} [settings.content.buttons.confirm] - Text of the confirm button\n\t * @param  {object} [settings.events.onConfirm] - Function that is going to be invoked when the user press the confirm button\n\t * @param  {object} [settings.events.onCancel] - Function that is going to be invoked when the user press the cancel button\n\t * @param  {object} [settings.events.onShow] - Function that is going to be invoked when the modal box is shown\n\t * @param  {object} [settings.events.onHide] - Function that is going to be invoked when the modal box is hidden\n\t * \n\t * @return {object} - The modal box object\n\t */\n\n\tconstructor( content, config = {} ){\n\t\t// Create elements object\n\t\tthis.elements = {\n\t\t\tcontainer: null,\n\t\t\tautomatorContainer: null, // ( .uap ) This DIV is only created to avoid conflicts with other plugins\n\t\t\tmodal: {\n\t\t\t\tcontainer: null,\n\t\t\t\tbox: {\n\t\t\t\t\tcontainer: null,\n\t\t\t\t\ttitle: null,\n\t\t\t\t\twarning: null,\n\t\t\t\t\tbuttons: {\n\t\t\t\t\t\tcontainer: null,\n\t\t\t\t\t\tcancel: null,\n\t\t\t\t\t\tconfirm: null\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Set container\n\t\tthis.elements.container = $( 'body' );\n\n\t\t// Set isVisible property\n\t\tthis.isVisible = false;\n\n\t\t// Define default configuration\n\t\tthis.config = $.extend( true, {\n\t\t\tfadeDuration: 150,\n\t\t\tsize: 'medium',\n\t\t\twarningFirst: false\n\t\t}, config );\n\n\t\t// Save modal box content. Add default values\n\t\tthis.content = $.extend( {}, {\n\t\t\tbuttons: {\n\t\t\t\tcancel: UncannyAutomator.i18n.cancel,\n\t\t\t}\n\t\t}, content );\n\n\t\t// Create new modal box\n\t\tthis.create();\n\n\t\t// Return object\n\t\treturn this;\n\t}\n\n\t/*\n\t * Create modal box DOM elements\n\t *\n\t * @since 0.4\n\t */\n\n\tcreate(){\n\t\tlet automatorContainer = $( '<div/>', { 'class': 'uap' });\n\t\tlet modal = $( '<div/>', { 'class': 'modal' });\n\t\tlet modalBox = $( '<div/>', { 'class': 'modal__box' });\n\n\t\t// Check if the user wants a different modal size than the default size\n\t\tif ( isDefined( this.config.size ) && [ 'small', 'medium', 'large', 'extra-large' ].includes( this.config.size ) ){\n\t\t\t// Add the correct size class\n\t\t\tmodal.addClass( `modal--${ this.config.size }` );\n\t\t}\n\n\t\t// Check if the user wants to add a custom class\n\t\tif ( isDefined( this.config.customClass ) ){\n\t\t\tmodal.addClass( `modal--${ this.config.customClass }` );\n\t\t}\n\n\t\t// Save elements\n\t\tthis.elements.automatorContainer = automatorContainer;\n\t\tthis.elements.modal.container = modal;\n\t\tthis.elements.modal.box.container = modalBox;\n\n\t\t// Set title\n\t\tif ( isDefined( this.content.title ) ){\n\t\t\tlet modalTitle = $( '<div/>', { 'class': 'modal__title' }).html( this.content.title );\n\t\t\tmodalBox.append( modalTitle );\n\n\t\t\t// Save element\n\t\t\tthis.elements.modal.box.title = modalTitle;\n\t\t}\n\n\t\t// Set content\n\t\tlet modalContent;\n\t\tif ( isDefined( this.content.content ) ){\n\t\t\tmodalContent = $( '<div/>', { 'class': 'modal__content' });\n\n\t\t\t// Check if the content is node element\n\t\t\ttry {\n\t\t\t\tmodalContent.append( this.content.content );\n\t\t\t} catch ( e ){\n\t\t\t\tmodalContent.html( this.content.content );\n\t\t\t}\n\t\t\t\n\t\t\tmodalBox.append( modalContent );\n\n\t\t\t// Save element\n\t\t\tthis.elements.modal.box.content = modalContent;\n\t\t}\n\n\t\t// Set warning\n\t\tlet modalWarning;\n\t\tif ( isDefined( this.content.warning ) ){\n\t\t\tmodalWarning = $( '<div/>', { 'class': 'modal__warning' }).html( this.content.warning );\n\t\t\t\n\t\t\t// Save element\n\t\t\tthis.elements.modal.box.warning = modalWarning;\n\t\t}\n\n\t\t// Check the order of the warning\n\t\tif ( isDefined( this.config.warningFirst ) && this.config.warningFirst ){\n\t\t\tif ( isDefined( this.content.warning ) ){\n\t\t\t\tmodalBox.append( modalWarning );\n\t\t\t}\n\n\t\t\tif ( isDefined( this.content.content ) ){\n\t\t\t\tmodalBox.append( modalContent );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif ( isDefined( this.content.content ) ){\n\t\t\t\tmodalBox.append( modalContent );\n\t\t\t}\n\n\t\t\tif ( isDefined( this.content.warning ) ){\n\t\t\t\tmodalBox.append( modalWarning );\n\t\t\t}\n\t\t}\n\n\t\t// Set buttons\n\t\tlet modalButtons = $( '<div/>', { 'class': 'modal__buttons' });\n\t\tlet cancelButton = $( '<button/>', { 'class': 'uap-btn uap-btn--secondary' }).html( this.content.buttons.cancel );\n\t\tmodalButtons.append( cancelButton );\n\n\t\t// Save elements\n\t\tthis.elements.modal.box.buttons.container = modalButtons;\n\t\tthis.elements.modal.box.buttons.cancel = cancelButton;\n\n\t\tif ( isDefined( this.content.buttons.confirm ) ){\n\t\t\tlet confirmButton = $( '<button/>', { 'class': 'uap-btn uap-btn--primary' }).html( this.content.buttons.confirm );\n\t\t\tmodalButtons.append( confirmButton );\n\n\t\t\t// Save element\n\t\t\tthis.elements.modal.box.buttons.confirm = confirmButton;\n\t\t}\n\n\t\tmodalBox.append( modalButtons );\n\n\t\t// Append elements and add to the container\n\t\tmodal.append( modalBox );\n\t\tautomatorContainer.append( modal );\n\t\tthis.elements.container.append( automatorContainer );\n\n\t\t// Add open class to the html tag\n\t\t$( 'html' ).addClass( 'automator-modal-open' );\n\n\t\t// Bind\n\t\tthis.bind();\n\t}\n\n\t/*\n\t * Define events\n\t *\n\t * @since 0.4\n\t */\n\n\tsetEvents( events ){\n\t\tlet emptyFunction = () => {};\n\n\t\t// Define events\n\t\tthis.events = {\n\t\t\tafterSetEvents: isDefined( events.afterSetEvents ) \t? events.afterSetEvents : emptyFunction,\n\t\t\tafterShow: \t\tisDefined( events.afterShow ) \t \t? events.afterShow \t\t: emptyFunction,\n\t\t\tafterHide: \t\tisDefined( events.afterHide ) \t \t? events.afterHide \t\t: emptyFunction,\n\t\t\tonConfirm:  \tisDefined( events.onConfirm ) \t\t? events.onConfirm \t\t: emptyFunction,\n\t\t\tonCancel:   \tisDefined( events.onCancel )  \t\t? events.onCancel \t\t: emptyFunction,\n\t\t};\n\n\t\tif ( ! isDefined( events.onCancel ) ){\n\t\t\tthis.events.onCancel = () => {\n\t\t\t\t// Default onCancel function\n\t\t\t\t// Hide modal box\n\t\t\t\tthis.hide();\n\t\t\t};\n\t\t}\n\n\t\t// Fire afterSetEvents event\n\t\tthis.events.afterSetEvents();\n\t}\n\n\t/*\n\t * Remove all the DOM elements\n\t *\n\t * @since 0.4\n\t */\n\n\tdestroy(){\n\t\tlet thisModal = this;\n\n\t\t// Unbind everything\n\t\tthis.unbind();\n\n\t\t// Check if it's visible\n\t\tif ( this.isVisible ){\n\t\t\t// We have to hide it first\n\t\t\tthis.hide(function(){\n\t\t\t\tthisModal.elements.automatorContainer.remove();\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthisModal.elements.automatorContainer.remove();\n\t\t}\n\n\t\t// Remove modal open class from the html tag\n\t\t$( 'html' ).removeClass( 'automator-modal-open' );\n\t}\n\n\t/*\n\t * Bind the clicks on the buttons\n\t *\n\t * @since 0.4\n\t */\n\n\tbind(){\n\t\tlet thisModal = this;\n\n\t\t// Bind cancel button\n\t\tif ( isDefined( this.elements.modal.box.buttons.cancel ) ){\n\t\t\tthis.elements.modal.box.buttons.cancel.on( 'click', function(){\n\t\t\t\tthisModal.events.onCancel();\n\t\t\t});\n\t\t}\n\n\t\t// Bind confirm button\n\t\tif ( isDefined( this.elements.modal.box.buttons.confirm ) ){\n\t\t\tthis.elements.modal.box.buttons.confirm.on( 'click', function(){\n\t\t\t\tthisModal.events.onConfirm();\n\t\t\t});\n\t\t}\n\t}\n\n\t/*\n\t * Unbind all events\n\t *\n\t * @since 0.4\n\t */\n\n\tunbind(){\n\t\tif ( isDefined( this.elements.modal.box.buttons.cancel ) ){\n\t\t\tthis.elements.modal.box.buttons.cancel.unbind( 'click' );\n\t\t}\n\n\t\tif ( isDefined( this.elements.modal.box.buttons.confirm ) ){\n\t\t\tthis.elements.modal.box.buttons.confirm.unbind( 'click' );\n\t\t}\n\t\t\n\t}\n\n\t/*\n\t * Show modal box\n\t *\n\t * @since 0.4\n\t *\n\t * @param {object} [callback] - Custom function that it's going to be invoked after we show the modal box\n\t */\n\n\tshow( callback = null ){\n\t\tlet thisModal = this;\n\n\t\t// Set callback\n\t\tlet event = function(){};\n\n\t\tif ( isDefined( callback ) ){\n\t\t\tevent = callback;\n\t\t}\n\t\telse {\n\t\t\tevent = this.events.afterShow;\n\t\t}\n\n\t\tcallback = event;\n\n\t\t// Change is visible status\n\t\tthis.isVisible = true;\n\n\t\t// Fade in\n\t\tthis.elements.modal.container.fadeIn( thisModal.config.fadeDuration, callback );\n\t}\n\n\t/*\n\t * Show modal box\n\t *\n\t * @since 0.4\n\t *\n\t * @param {object} [callback] - Custom function that it's going to be invoked after we hide the modal box\n\t */\n\n\thide( callback = null ){\n\t\tlet thisModal = this;\n\n\t\t// Set callback\n\t\tlet event = function(){};\n\n\t\tif ( isDefined( callback ) ){\n\t\t\tevent = callback;\n\t\t}\n\t\telse {\n\t\t\tevent = this.events.afterHide;\n\t\t}\n\n\t\tcallback = event;\n\n\t\t// Change is visible status\n\t\tthis.isVisible = false;\n\n\t\t// Fade out\n\t\tthis.elements.modal.container.fadeOut( thisModal.config.fadeDuration, callback );\n\n\t\t// Remove modal open class from the html tag\n\t\t$( 'html' ).removeClass( 'automator-modal-open' );\n\t}\n\n\t/*\n\t * Returns all the DOM elements\n\t *\n\t * @since 0.4\n\t *\n\t * @return {object} All the DOM elements created by this class\n\t */\n\n\tgetElements(){\n\t\treturn this.elements;\n\t}\n}\n\nexport default Modal;\n","import $ from 'jquery';\n\nimport {\n\taddParametersToURL,\n\titemsObject,\n\tisDefined,\n\tisEmpty,\n\tinArray,\n\tvsprintf,\n\trestCall,\n} from './Utilities.js';\n\nimport RecipeNotices from './RecipeNotices.js';\n\nimport Field from './Field.js';\n\nclass Publish {\n\n\tconstructor(){\n\t\t// Get metabox element\n\t\tthis.elements = {\n\t\t\tmetabox: $( '#uo-automator-publish-metabox' ),\n\t\t\ttimesPerUser: {\n\t\t\t\teditLink:\t\tnull,\n\t\t\t\thiddenBox: \t\tnull,\n\t\t\t\tsaveButton: \tnull,\n\t\t\t\tcancelButton: \tnull,\n\t\t\t\tendPoint: \t\t'recipe_completions_allowed'\n\t\t\t},\n\t\t\ttimesPerRecipe: {\n\t\t\t\teditLink:\t\tnull,\n\t\t\t\thiddenBox: \t\tnull,\n\t\t\t\tsaveButton: \tnull,\n\t\t\t\tcancelButton: \tnull,\n\t\t\t\tendPoint: \t\t'recipe_max_completions_allowed'\n\t\t\t},\n\t\t\ttoggle: null\n\t\t}\n\n\t\t// Create new metabox\n\t\tthis.createMetabox();\n\t}\n\n\tcreateMetabox(){\n\t\tlet container          = $( '<div/>', { id: 'uap-publish-metabox' }),\n\t\t\tcontent            = $( '<div/>', { class: 'metabox__content' }),\n\t\t\tfooter             = $( '<div/>', { class: 'metabox__footer' });\n\n\t\t// Check if we have to add the times per user row\n\t\tif ( UncannyAutomator.recipe.type != 'anonymous' ){\n\t\t\t// Times per user row\n\t\t\tlet timesRow \t       = $( '<div/>', { class: 'publish-row' }),\n\t\t\t\ttimesRowVisible    = $( '<div/>', { class: 'publish-row__visible' }),\n\t\t\t\ttimesRowIconBox    = $( '<span/>', { class: 'publish-row__icon' }),\n\t\t\t\ttimesRowIcon       = $( '<i/>', { class: 'uo-icon uo-icon--repeat-alt' }),\n\t\t\t\ttimesRowName       = $( '<span/>', { class: 'publish-row__name' }).text( UncannyAutomator.i18n.publish.timesPerUser );\n\n\t\t\t// Change value of numbers of times from -1 to empty\n\t\t\tUncannyAutomator.recipe.publish.timesPerUser = UncannyAutomator.recipe.publish.timesPerUser == -1 ? '' : UncannyAutomator.recipe.publish.timesPerUser;\n\t\t\tlet timesValue \t\t   = isEmpty( UncannyAutomator.recipe.publish.timesPerUser ) ? UncannyAutomator.i18n.publish.unlimited : UncannyAutomator.recipe.publish.timesPerUser;\n\n\t\t\tlet timesRowValue      = $( '<span/>', { class: 'publish-row__value' }).text( timesValue ),\n\t\t\t\ttimesRowEdit       = $( '<span/>', { class: 'publish-row__edit' }).text( UncannyAutomator.i18n.edit ),\n\t\t\t\ttimesRowHidden     = $( '<div/>', { class: 'publish-row__hidden' }),\n\t\t\t\ttimesRowHiddenBox  = $( '<div/>', { class: 'publish-row__settings' });\n\n\t\t\tthis.elements.timesPerUser.editLink  = timesRowEdit;\n\t\t\tthis.elements.timesPerUser.hiddenBox = timesRowHidden;\n\n\t\t\tlet timesRowField \t   = new Field( 'int', {\n\t\t\t\tcurrentValue: UncannyAutomator.recipe.publish.timesPerUser,\n\t\t\t\tdescription:  UncannyAutomator.i18n.publish.leaveEmpty,\n\t\t\t\tplaceholder:  UncannyAutomator.i18n.publish.unlimited,\n\t\t\t}, true, function( value, simulatedValue ){\n\t\t\t\t// Custom validation function\n\t\t\t\t// Create response object\n\t\t\t\tlet response = {\n\t\t\t\t\tisValid: false,\n\t\t\t\t\tmessage: ''\n\t\t\t\t}\n\n\t\t\t\t// Check if the number is 1 or bigger\n\t\t\t\tif ( value >= 1 ){\n\t\t\t\t\tresponse.isValid = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresponse.message = UncannyAutomator.i18n.publish.oneOrBigger\n\t\t\t\t}\n\n\t\t\t\t// Return response\n\t\t\t\treturn response;\n\t\t\t});\n\n\t\t\tthis.timesField \t   = timesRowField;\n\n\t\t\tlet timesRowButtons    = $( '<div/>', { class: 'publish-row__buttons' }),\n\t\t\t\ttimesRowSaveBtn    = $( '<div/>', { class: 'uap-btn uap-btn--primary' }).text( UncannyAutomator.i18n.save ),\n\t\t\t\ttimesRowCancelBtn  = $( '<div/>', { class: 'uap-btn uap-btn--secondary' }).text( UncannyAutomator.i18n.cancel );\n\n\t\t\tthis.elements.timesPerUser.saveButton   = timesRowSaveBtn;\n\t\t\tthis.elements.timesPerUser.cancelButton = timesRowCancelBtn;\n\n\t\t\ttimesRowButtons.append( timesRowSaveBtn );\n\t\t\ttimesRowButtons.append( timesRowCancelBtn );\n\n\t\t\ttimesRowHiddenBox.append( timesRowField.getFormElement() );\n\t\t\ttimesRowHiddenBox.append( timesRowButtons );\n\t\t\ttimesRowHidden.append( timesRowHiddenBox );\n\n\t\t\ttimesRowIconBox.append( timesRowIcon );\n\t\t\ttimesRowVisible.append( timesRowIconBox );\n\t\t\ttimesRowVisible.append( timesRowName );\n\t\t\ttimesRowVisible.append( timesRowValue );\n\t\t\ttimesRowVisible.append( timesRowEdit );\n\n\t\t\ttimesRow.append( timesRowVisible );\n\t\t\ttimesRow.append( timesRowHidden );\n\n\t\t\tcontent.append( timesRow );\n\t\t}\n\n\t\tlet timesPerRecipe = this.timesPerRecipe();\n\t\tcontent.append( timesPerRecipe );\n\n\t\t// Recipe type\n\t\tlet recipeTypeRow        = $( '<div/>',  { class: 'publish-row' }),\n\t\t\trecipeTypeRowVisible = $( '<div/>',  { class: 'publish-row__visible' }),\n\t\t\trecipeTypeRowIconBox = $( '<span/>', { class: 'publish-row__icon' }),\n\t\t\trecipeTypeRowIcon    = $( '<i/>',    { class: 'uo-icon uo-icon--user-astronaut' }),\n\t\t\trecipeTypeRowName    = $( '<span/>', { class: 'publish-row__name' }).text( UncannyAutomator.i18n.publish.recipeType ),\n\t\t\trecipeTypeRowValue   = $( '<span/>', { class: 'publish-row__value' }),\n\t\t\trecipeTypeLearnMore  = $( `\n\t\t\t\t<a href=\"${ addParametersToURL( 'https://automatorplugin.com/knowledge-base/creating-a-recipe/', {\n                        'utm_source':  'uncanny_automator',\n                        'utm_medium':  'publish_metabox',\n                        'utm_content': 'recipe_type_question_icon'\n                    }) }\" class=\"publish-row__learn-more\" target=\"_blank\"><span class=\"uo-icon uo-icon--question-circle\"></span></a>\n\t\t\t` );\n\n\t\tif ( UncannyAutomator.recipe.type == 'user' ){\n\t\t\trecipeTypeRowValue.text( UncannyAutomator.i18n.recipeType.userRecipeName );\n\t\t}\n\n\t\tif ( UncannyAutomator.recipe.type == 'anonymous' ){\n\t\t\trecipeTypeRowValue.text( UncannyAutomator.i18n.recipeType.everyoneRecipeName );\n\t\t}\n\n\t\trecipeTypeRowIconBox.append( recipeTypeRowIcon );\n\t\trecipeTypeRowVisible.append( recipeTypeRowIconBox );\n\t\trecipeTypeRowVisible.append( recipeTypeRowName );\n\t\trecipeTypeRowVisible.append( recipeTypeRowValue );\n\t\trecipeTypeRowVisible.append( recipeTypeLearnMore );\n\t\trecipeTypeRow.append( recipeTypeRowVisible );\n\n\t\tcontent.append( recipeTypeRow );\n\n\t\t// Created on row\n\t\tlet createdRow \t\t   = $( '<div/>', { class: 'publish-row' }),\n\t\t\tcreatedRowVisible  = $( '<div/>', { class: 'publish-row__visible' }),\n\t\t\tcreatedRowIconBox  = $( '<span/>', { class: 'publish-row__icon' }),\n\t\t\tcreatedRowIcon     = $( '<i/>', { class: 'uo-icon uo-icon--calendar-alt' }),\n\t\t\tcreatedRowName     = $( '<span/>', { class: 'publish-row__name' }).text( UncannyAutomator.i18n.publish.createdOn ),\n\t\t\tcreatedRowValue    = $( '<span/>', { class: 'publish-row__value' }).text( UncannyAutomator.recipe.publish.createdOn );\n\n\t\tcreatedRowIconBox.append( createdRowIcon );\n\t\tcreatedRowVisible.append( createdRowIconBox );\n\t\tcreatedRowVisible.append( createdRowName );\n\t\tcreatedRowVisible.append( createdRowValue );\n\t\tcreatedRow.append( createdRowVisible );\n\n\t\tcontent.append( createdRow );\n\n\t\t// Copy/Duplicate Recipe\n\t\tlet copyRecipeRow \t\t   = $( '<div/>', { class: 'publish-row' }),\n\t\t\tcopyRecipeRowVisible  = $( '<div/>', { class: 'publish-row__visible' }),\n\t\t\tcopyRecipeRowName     = $( '<a/>', { class: 'publish-row__copy-to-draft button button-secondary', href: UncannyAutomator.recipe.publish.copyToDraft.replace( /&amp;/g, '&' ) }).text( UncannyAutomator.i18n.publish.copyRecipe );\n\n\t\tcopyRecipeRowVisible.append( copyRecipeRowName );\n\t\tcopyRecipeRow.append( copyRecipeRowVisible );\n\n\t\tcontent.append( copyRecipeRow );\n\n\t\t// Footer\n\n\t\tlet footerRow          = $( '<div/>', { class: 'publish-footer__row uap-clear' }),\n\t\t\tfooterRowLeft      = $( '<div/>', { class: 'publish-footer__left' }),\n\t\t\tfooterMoveToDraft  = $( '<a/>', { class: 'publish-footer__move-to-draft', href: UncannyAutomator.recipe.publish.moveToTrash.replace( /&amp;/g, '&' ) }).text( UncannyAutomator.i18n.proOnly.moveToTrash ),\n\t\t\tfooterRowRight     = $( '<div/>', { class: 'publish-footer__right' });\n\n\t\tlet recipeStatusToggle = new Field( 'checkbox', {\n            color: 'gutenberg',\n            align: 'right',\n            toggle: {\n                on:  UncannyAutomator.i18n.status.liveRecipe,\n                off: UncannyAutomator.i18n.status.draftRecipe,\n            },\n            currentValue: UncannyAutomator.recipe.isLive\n\t\t});\n\n\t\t// Save toggle Field in main object\n\t\tUncannyAutomator.recipe.publish.statusToggle = recipeStatusToggle;\n\n\t\tlet recipeStatusToggleDOM = recipeStatusToggle.getFormElement();\n\t\tthis.recipeStatusToggle   = recipeStatusToggle;\n\n\t\tthis.elements.toggle   = recipeStatusToggleDOM;\n\n\t\tfooterRowLeft.append( footerMoveToDraft );\n\t\tfooterRowRight.append( recipeStatusToggleDOM );\n\t\tfooterRow.append( footerRowLeft );\n\t\tfooterRow.append( footerRowRight );\n\t\t\n\t\tfooter.append( footerRow );\n\n\t\t// Append main elements to the metabox\n\t\tcontainer.append( content );\n\t\tcontainer.append( footer );\n\n\t\t// Render metabox\n\t\tthis.elements.metabox.html( container );\n\n\t\t// Render errors\n\t\tnew RecipeNotices();\n\n\t\t// Bind\n\t\tthis.bind();\n\n\t\t// Validate status\n\t\tthis.validateStatus();\n\t}\n\n\ttimesPerRecipe(){\n\t\t// Times per recipe row\n\t\tlet timesRecipeRow \t       = $( '<div/>', { class: 'publish-row' }),\n\t\t\ttimesRecipeRowVisible    = $( '<div/>', { class: 'publish-row__visible' }),\n\t\t\ttimesRecipeRowIconBox    = $( '<span/>', { class: 'publish-row__icon' }),\n\t\t\ttimesRecipeRowIcon       = $( '<i/>', { class: 'uo-icon uo-icon--stopwatch-20' }),\n\t\t\ttimesRecipeRowName       = $( '<span/>', { class: 'publish-row__name' }).text( UncannyAutomator.i18n.publish.timesPerRecipe );\n\n\t\t// Change value of numbers of times from -1 to empty\n\t\tUncannyAutomator.recipe.publish.timesPerRecipe = UncannyAutomator.recipe.publish.timesPerRecipe == -1 ? '' : UncannyAutomator.recipe.publish.timesPerRecipe;\n\t\tlet timesRecipeValue \t\t   = isEmpty( UncannyAutomator.recipe.publish.timesPerRecipe ) ? UncannyAutomator.i18n.publish.unlimited : UncannyAutomator.recipe.publish.timesPerRecipe;\n\n\t\tlet timesRecipeRowValue      = $( '<span/>', { class: 'publish-row__value' }).text( timesRecipeValue ),\n\t\t\ttimesRecipeRowEdit       = $( '<span/>', { class: 'publish-row__edit' }).text( UncannyAutomator.i18n.edit ),\n\t\t\ttimesRecipeRowHidden     = $( '<div/>', { class: 'publish-row__hidden' }),\n\t\t\ttimesRecipeRowHiddenBox  = $( '<div/>', { class: 'publish-row__settings' });\n\n\t\tthis.elements.timesPerRecipe.editLink  = timesRecipeRowEdit;\n\t\tthis.elements.timesPerRecipe.hiddenBox = timesRecipeRowHidden;\n\n\t\tlet timesRecipeRowField \t   = new Field( 'int', {\n\t\t\tcurrentValue: UncannyAutomator.recipe.publish.timesPerRecipe,\n\t\t\tdescription:  UncannyAutomator.i18n.publish.leaveEmpty,\n\t\t\tplaceholder:  UncannyAutomator.i18n.publish.unlimited,\n\t\t}, true, function( value, simulatedValue ){\n\t\t\t// Custom validation function\n\t\t\t// Create response object\n\t\t\tlet response = {\n\t\t\t\tisValid: false,\n\t\t\t\tmessage: ''\n\t\t\t}\n\n\t\t\t// Check if the number is 1 or bigger\n\t\t\tif ( value >= 1 ){\n\t\t\t\tresponse.isValid = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresponse.message = UncannyAutomator.i18n.publish.oneOrBigger\n\t\t\t}\n\n\t\t\t// Return response\n\t\t\treturn response;\n\t\t});\n\n\t\tthis.timesRecipeField \t   = timesRecipeRowField;\n\n\t\tlet timesRecipeRowButtons    = $( '<div/>', { class: 'publish-row__buttons' }),\n\t\t\ttimesRecipeRowSaveBtn    = $( '<div/>', { class: 'uap-btn uap-btn--primary' }).text( UncannyAutomator.i18n.save ),\n\t\t\ttimesRecipeRowCancelBtn  = $( '<div/>', { class: 'uap-btn uap-btn--secondary' }).text( UncannyAutomator.i18n.cancel );\n\n\t\tthis.elements.timesPerRecipe.saveButton   = timesRecipeRowSaveBtn;\n\t\tthis.elements.timesPerRecipe.cancelButton = timesRecipeRowCancelBtn;\n\n\t\ttimesRecipeRowButtons.append( timesRecipeRowSaveBtn );\n\t\ttimesRecipeRowButtons.append( timesRecipeRowCancelBtn );\n\n\t\ttimesRecipeRowHiddenBox.append( timesRecipeRowField.getFormElement() );\n\t\ttimesRecipeRowHiddenBox.append( timesRecipeRowButtons );\n\t\ttimesRecipeRowHidden.append( timesRecipeRowHiddenBox );\n\n\t\ttimesRecipeRowIconBox.append( timesRecipeRowIcon );\n\t\ttimesRecipeRowVisible.append( timesRecipeRowIconBox );\n\t\ttimesRecipeRowVisible.append( timesRecipeRowName );\n\t\ttimesRecipeRowVisible.append( timesRecipeRowValue );\n\t\ttimesRecipeRowVisible.append( timesRecipeRowEdit );\n\n\t\ttimesRecipeRow.append( timesRecipeRowVisible );\n\t\ttimesRecipeRow.append( timesRecipeRowHidden );\n\n\t\treturn timesRecipeRow;\n\t}\n\n\tvalidateStatus(){\n\t\t// We're going to use this method to check if the recipe is live but it's invalid\n\t\tif ( UncannyAutomator.recipe.isLive && ! UncannyAutomator.recipe.isValid ){\n\t\t\t// Make Draft\n\t\t\tUncannyAutomator.recipe.publish.statusToggle.setValue( false );\n\t\t}\n\t}\n\n\tvalidateTimesPerFields($element, $fieldValue, $timeField){\n\t\t// Times per user, click on \"Edit\"\n\t\t$element.editLink.on( 'click', () => {\n\t\t\t// Slide toggle\n\t\t\t$element.hiddenBox.slideToggle( 300 );\n\t\t});\n\n\t\t// Times per user, click on \"Cancel\"\n\t\t$element.cancelButton.on( 'click', () => {\n\t\t\t// Slide toggle\n\t\t\t$element.hiddenBox.slideToggle( 300, () => {\n\t\t\t\t// Reset UI\n\t\t\t\tnew Publish();\n\t\t\t});\n\t\t});\n\n\t\t// Timer per user, click on \"Save\"\n\t\t$element.saveButton.on( 'click', () => {\n\t\t\t// Validate input\n\t\t\tlet validation = $timeField.validate();\n\n\t\t\t// Check if it's valid. Otherwise do nothing. Field.js will show an error\n\t\t\tif ( validation.isValid ){\n\n\t\t\t\t// Add loading class to save button\n\t\t\t\t$element.saveButton.addClass( 'uap-btn--loading uap-btn--disabled' );\n\n\t\t\t\t// Get value. We have to check if it's empty and change it to -1\n\t\t\t\tlet numberOfTimes = $timeField.getValue();\n\n\t\t\t\tif ( isEmpty( numberOfTimes ) ){\n\t\t\t\t\tnumberOfTimes = -1;\n\t\t\t\t}\n\n\t\t\t\trestCall( $element.endPoint, {\n\t\t\t\t\tpost_ID: \t\t\t\t\tUncannyAutomator.recipe.id,\n\t\t\t\t\trecipe_completions_allowed: numberOfTimes\n\t\t\t\t}, () => {\n\t\t\t\t\t// Update JS object\n\t\t\t\t\tif ( 'recipe_completions_allowed' == $element.endPoint ) {\n\t\t\t\t\t\tUncannyAutomator.recipe.publish.timesPerUser = numberOfTimes;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tUncannyAutomator.recipe.publish.timesPerRecipe = numberOfTimes;\n\t\t\t\t\t}\n\t\t\t\t\t//$fieldValue = numberOfTimes;\n\t\t\t\t\t// Slide toggle fields container and refresh the Publish UI\n\t\t\t\t\t$element.hiddenBox.slideToggle( 300, () => {\n\t\t\t\t\t\t// Reset UI\n\t\t\t\t\t\tnew Publish();\n\t\t\t\t\t});\n\t\t\t\t}, () => {\n\t\t\t\t\tconsole.log( '‼️ ERROR-TODO. Couldn\\'t save times per user' );\n\n\t\t\t\t\t// Revert changes\n\t\t\t\t\t$timeField.setValue( $fieldValue );\n\n\t\t\t\t\t// Remove the loading class to save button\n\t\t\t\t\t$element.saveButton.removeClass( 'uap-btn--loading uap-btn--disabled' );\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// Get field element and bind 'keyup'\n\t\t$timeField.getField().on( 'keyup', ( event ) => {\n\t\t\t// Check if it's an enter\n\t\t\tif ( event.keyCode == 13 ){\n\t\t\t\t// Trigger a click on the Save Button\n\t\t\t\t$element.saveButton.trigger( 'click' );\n\t\t\t}\n\t\t});\n\t}\n\n\tbind(){\n\t\t// Check if we have to add the event listeners to the \"times per user\" row\n\t\tif ( UncannyAutomator.recipe.type != 'anonymous' ){\n\t\t\t// Times per user, click on \"Edit\"\n\t\t\tthis.validateTimesPerFields( this.elements.timesPerUser, UncannyAutomator.recipe.publish.timesPerUser, this.timesField );\n\t\t\t// this.elements.timesPerUser.editLink.on( 'click', () => {\n\t\t\t// \t// Slide toggle\n\t\t\t// \tthis.elements.timesPerUser.hiddenBox.slideToggle( 300 );\n\t\t\t// });\n\t\t\t//\n\t\t\t// // Times per user, click on \"Cancel\"\n\t\t\t// this.elements.timesPerUser.cancelButton.on( 'click', () => {\n\t\t\t// \t// Slide toggle\n\t\t\t// \tthis.elements.timesPerUser.hiddenBox.slideToggle( 300, () => {\n\t\t\t// \t\t// Reset UI\n\t\t\t// \t\tnew Publish();\n\t\t\t// \t});\n\t\t\t// });\n\t\t\t//\n\t\t\t// // Timer per user, click on \"Save\"\n\t\t\t// this.elements.timesPerUser.saveButton.on( 'click', () => {\n\t\t\t// \t// Validate input\n\t\t\t// \tlet validation = this.timesField.validate();\n\t\t\t//\n\t\t\t// \t// Check if it's valid. Otherwise do nothing. Field.js will show an error\n\t\t\t// \tif ( validation.isValid ){\n\t\t\t//\n\t\t\t// \t\t// Add loading class to save button\n\t\t\t// \t\tthis.elements.timesPerUser.saveButton.addClass( 'uap-btn--loading uap-btn--disabled' );\n\t\t\t//\n\t\t\t// \t\t// Get value. We have to check if it's empty and change it to -1\n\t\t\t// \t\tlet numberOfTimes = this.timesField.getValue();\n\t\t\t//\n\t\t\t// \t\tif ( isEmpty( numberOfTimes ) ){\n\t\t\t// \t\t\tnumberOfTimes = -1;\n\t\t\t// \t\t}\n\t\t\t//\n\t\t\t// \t\trestCall( 'recipe_completions_allowed', {\n\t\t\t// \t\t\tpost_ID: \t\t\t\t\tUncannyAutomator.recipe.id,\n\t\t\t// \t\t\trecipe_completions_allowed: numberOfTimes\n\t\t\t// \t\t}, () => {\n\t\t\t// \t\t\t// Update JS object\n\t\t\t// \t\t\tUncannyAutomator.recipe.publish.timesPerUser = numberOfTimes;\n\t\t\t//\n\t\t\t// \t\t\t// Slide toggle fields container and refresh the Publish UI\n\t\t\t// \t\t\tthis.elements.timesPerUser.hiddenBox.slideToggle( 300, () => {\n\t\t\t// \t\t\t\t// Reset UI\n\t\t\t// \t\t\t\tnew Publish();\n\t\t\t// \t\t\t});\n\t\t\t// \t\t}, () => {\n\t\t\t// \t\t\tconsole.log( '‼️ ERROR-TODO. Couldn\\'t save times per user' );\n\t\t\t//\n\t\t\t// \t\t\t// Revert changes\n\t\t\t// \t\t\tthis.timesField.setValue( UncannyAutomator.recipe.publish.timesPerUser );\n\t\t\t//\n\t\t\t// \t\t\t// Remove the loading class to save button\n\t\t\t// \t\t\tthis.elements.timesPerUser.saveButton.removeClass( 'uap-btn--loading uap-btn--disabled' );\n\t\t\t// \t\t});\n\t\t\t// \t}\n\t\t\t// });\n\t\t\t//\n\t\t\t// // Get field element and bind 'keyup'\n\t\t\t// this.timesField.getField().on( 'keyup', ( event ) => {\n\t\t\t// \t// Check if it's an enter\n\t\t\t// \tif ( event.keyCode == 13 ){\n\t\t\t// \t\t// Trigger a click on the Save Button\n\t\t\t// \t\tthis.elements.timesPerUser.saveButton.trigger( 'click' );\n\t\t\t// \t}\n\t\t\t// });\n\t\t}\n\n\t\t//Validate Recipe max times\n\t\tthis.validateTimesPerFields( this.elements.timesPerRecipe, UncannyAutomator.recipe.publish.timesPerRecipe, this.timesRecipeField );\n\t\t// Status change\n\t\tthis.elements.toggle.on( 'automator:field:change', () => {\n\t\t\t// Set loading status\n\t\t\tthis.recipeStatusToggle.startLoadingAnimation();\n\n\t\t\t// Set post status\n\t\t\tlet makeLive   = this.recipeStatusToggle.getValue(),\n\t\t\t\tpostStatus = makeLive ? 'publish' : 'draft';\n\n\t\t\t// Check if can make it live\n\t\t\tlet recipeTriggers = itemsObject( 'get', {\n\t\t\t\t\tfilter: {\n\t\t\t\t\t\titemType: 'trigger'\n\t\t\t\t\t}\n\t\t\t\t}),\n                canMakeLive = true;\n\n\t\t\t// Check if the user is trying to make the recipe live\n\t\t\tif ( canMakeLive && ( ! makeLive || ( makeLive && UncannyAutomator.recipe.isValid ) ) ){\n\n\t\t\t\trestCall( 'change_post_status', {\n\t\t\t\t\tpost_ID: \t UncannyAutomator.recipe.id,\n\t\t\t\t\tpost_status: postStatus\n\t\t\t\t}, () => {\n\t\t\t\t\t// Update main object\n\t\t\t\t\tUncannyAutomator.recipe.isLive = makeLive;\n\n\t\t\t\t\t// Reset the UI\n\t\t\t\t\tnew Publish();\n\t\t\t\t}, () => {\n\t\t\t\t\t// Shomething went wrong, show error\n\t\t\t\t\tconsole.log( '‼️ ERROR-TODO. Couldn\\'t set the recipe status' );\n\n\t\t\t\t\t// Revert user change\n\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\t// Stop loading animation\n\t\t\t\t\t\tthis.recipeStatusToggle.stopLoadingAnimation();\n\n\t\t\t\t\t\t// Revert value\n\t\t\t\t\t\tthis.recipeStatusToggle.setValue( false, false );\n\t\t\t\t\t}, 1000);\n\t\t\t\t});\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( ! canMakeLive ){\n\t\t\t\t\t// Set error message\n                    UncannyAutomator.recipe.message.error = vsprintf( UncannyAutomator.i18n.proOnly.proToPublish, [ UncannyAutomator.i18n.uncannyAutomatorPro ] );\n\t\t\t\t}\n\n\t\t\t\t// Set error mode\n\t\t\t\tUncannyAutomator.recipe.errorMode = true;\n\n\t\t\t\t// Show error\n\t\t\t\tnew RecipeNotices();\n\n\t\t\t\t// Revert user change\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t// Stop loading animation\n\t\t\t\t\tthis.recipeStatusToggle.stopLoadingAnimation();\n\n\t\t\t\t\t// Revert value\n\t\t\t\t\tthis.recipeStatusToggle.setValue( false, false );\n\t\t\t\t}, 1000);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport default Publish;\n","import $ from 'jquery';\n\nimport {\n\tisEmpty,\n\tvsprintf,\n} from './Utilities.js';\n\nclass RecipeNotices {\n\tconstructor(){\n\t\t// Get main element\n\t\tthis.elements = {\n\t\t\tcontainer: $( '#uo-uap-notices' )\n\t\t}\n\n\t\t// Check if the container exists\n\t\t// If not, then create it\n\t\tif ( this.elements.container.length == 0 ){\n\t\t\tthis.createContainer();\n\t\t\tthis.elements.container = $( '#uo-uap-notices' );\n\t\t}\n\n\t\t// Empty the container\n\t\tthis.emptyContainer();\n\n\t\t// Create warning\n\t\tthis.createWarning();\n\n\t\t// Check if error mode is enabled\n\t\tif ( UncannyAutomator.recipe.errorMode ){\n\t\t\t// Create error\n\t\t\tthis.createError();\n\t\t}\t\n\t}\n\n\temptyContainer(){\n\t\tthis.elements.container.empty();\n\t}\n\n\tcreateContainer(){\n\t\t/* Create notice containers */\n\t    let noticeContainer = $( '<div/>', { id: 'uo-uap-notices', class: 'uap' });\n\t    $( '#uap-publish-metabox' ).prepend( noticeContainer );\n\t}\n\n\tcreateError(){\n\t\tlet thisRecipeNotices = this;\n\n\t\t// Check if we have to create the notice\n\t\tif ( ! isEmpty( UncannyAutomator.recipe.message.error ) ){\n\t\t\t// Create error container\n\t\t\tlet notice = $( '<div/>', { class: 'uo-notice uo-notice--error' }).text( UncannyAutomator.recipe.message.error );\n\t\t\tthis.elements.container.append( notice );\n\t\t}\n\t}\n\n\tcreateWarning(){\n\t\tlet thisRecipeNotices = this;\n\n\t\t// Check if we have to create the notice\n\t\tif ( ! isEmpty( UncannyAutomator.recipe.message.warning ) ){\n\t\t\tlet notice = $( '<div/>', { class: 'uo-notice uo-notice--warning' }).text( UncannyAutomator.recipe.message.warning );\n\t\t\tthis.elements.container.append( notice );\n\t\t}\n\t}\n}\n\nexport default RecipeNotices;","import $ from 'jquery';\n\nimport {\n\trestCall,\n\tgetDOMElements,\n\tisEmpty\n} from './Utilities.js';\n\nclass RecipeTypeSelector {\n\tconstructor( doWhenReady ){\n\t\t// Save callbacks\n\t\tthis.doWhenReady = doWhenReady;\n\n\t\t// Render\n\t\tthis.render();\n\n\t\t// Get elements\n\t\tthis.getElements();\n\n\t\t// Listen to the form submission\n\t\tthis.listenSubmission();\n\t}\n\n\trender(){\n\t\t// Create HTML\n\t\tconst $recipeTypeSelector = $( `\n\t\t\t<div class=\"uap\">\n\t\t\t\t<div id=\"uap-type-selector\" class=\"uap-type-selector\">\n\t\t\t\t\t<div class=\"uap-type-selector__box\">\n\t\t\t\t\t\t<form id=\"uap-type-selector-form\" class=\"uap-type-selector__form\">\n\t\t\t\t\t\t\t<div class=\"uap-type-selector__title\">\n\t\t\t\t\t\t\t\t${ UncannyAutomator.i18n.recipeType.title }\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"uap-type-selector__content\">\n\t\t\t\t\t\t\t\t<div class=\"uap-type-selector__types\">\n\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type uap-type-selector-type--user\">\n\t\t\t\t\t\t\t\t\t\t<input class=\"uap-type-selector-type__hidden-field\" type=\"radio\" name=\"uap-recipe-type\" value=\"user\" id=\"uap-recipe-type-user\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"uap-type-selector-type__label\" for=\"uap-recipe-type-user\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type__container\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type__icon\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type__icon-img uap-type-selector-type__icon-img--user\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type__title\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t${ UncannyAutomator.i18n.recipeType.userRecipeName }\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type__description\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t${ UncannyAutomator.i18n.recipeType.userRecipeDescription }\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type uap-type-selector-type--anonymous\">\n\t\t\t\t\t\t\t\t\t\t<input class=\"uap-type-selector-type__hidden-field\" type=\"radio\" name=\"uap-recipe-type\" value=\"anonymous\" id=\"uap-recipe-type-anonymous\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"uap-type-selector-type__label\" for=\"uap-recipe-type-anonymous\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type__container\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type__icon\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type__icon-img uap-type-selector-type__icon-img--anonymous\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type__title\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t${ UncannyAutomator.i18n.recipeType.everyoneRecipeName }\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"uap-type-selector-type__description\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t${ UncannyAutomator.i18n.recipeType.everyoneRecipeDescription }\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"uap-type-selector__warning\">\n\t\t\t\t\t\t\t\t${ UncannyAutomator.i18n.recipeType.cantChangeLaterNotice }\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"uap-type-selector__buttons\">\n\t\t\t\t\t\t\t\t<button type=\"submit\" id=\"uap-type-selector-submit-button\" class=\"uap-btn uap-btn--primary\">${ UncannyAutomator.i18n.confirm }</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t` );\n\n\t\t// Append container to the body\n\t\t$( 'body' ).append( $recipeTypeSelector );\n\t}\n\n\tgetElements(){\n\t\t// Get elements\n\t\tthis.$elements = {\n\t\t\tcontainer:    $( '#uap-type-selector' ),\n\t\t\tform:         $( '#uap-type-selector-form' ),\n\t\t\twarning:      $( '#uap-type-selector .uap-type-selector__warning' ),\n\t\t\tsubmitButton: $( '#uap-type-selector-submit-button' )\n\t\t}\n\t}\n\n\tlistenSubmission(){\n\t\t// Listen submission\n\t\tthis.$elements.form.on( 'submit', ( event ) => {\n\t\t\t// Prevent default\n\t\t\tevent.preventDefault();\n\n\t\t\t// Get recipe type\n\t\t\tconst recipeType = this.$elements.form.find( 'input[name=\"uap-recipe-type\"]:checked' ).val();\n\n\t\t\t// Check if it's defined and it's a valid value\n\t\t\tif ( ! isEmpty( recipeType ) ){\n\t\t\t\t// Check if it has a valid value\n\t\t\t\tif ( [ 'user', 'anonymous' ].includes( recipeType ) ){\n\t\t\t\t\t// Save recipe type\n\t\t\t\t\tthis.saveRecipeType( recipeType );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// The user is trying save a different value\n\t\t\t\t\tthis.showError( UncannyAutomator.i18n.recipeType.errorTryingToSaveOtherValue );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// The user didn't select an option\n\t\t\t\tthis.showError( UncannyAutomator.i18n.recipeType.errorDidNotSelectType );\n\t\t\t}\n\t\t});\n\t}\n\n\tsaveRecipeType( recipeType ){\n\t\t// Define endpoint\n\t\tconst endpoint = 'change_post_recipe_type';\n\n\t\t// Define data to send\n\t\tconst data = {\n\t\t\tpost_ID:     UncannyAutomator.recipe.id,\n\t\t\trecipe_type: recipeType\n\t\t}\n\n\t\t// Add loading animation to the button\n\t\tthis.$elements.submitButton.addClass( 'uap-btn--loading uap-btn--disabled' );\n\n\t\t// Do a REST call to save the recipe type\n\t\trestCall( endpoint, data,\n\t\t\t( response ) => {\n\t\t\t\t// Check if it was successful\n\t\t\t\tif ( response.success ){\n\t\t\t\t\t// Remove container \n\t\t\t\t\t// We should render everything again and \n\t\t\t\t\t// add a conditional to not render the elements\n\t\t\t\t\tthis.$elements.container.remove();\n\n\t\t\t\t\t// Save in main object\n\t\t\t\t\tUncannyAutomator.recipe.type = recipeType;\n\n\t\t\t\t\t// Get the container of the title\n\t\t\t\t\tlet $triggersMetaboxTitle = $( '#uo-recipe-triggers-meta-box-ui h2.hndle.ui-sortable-handle' );\n\n\t\t\t\t\t// Create the title of triggers metabox\n\t\t\t\t\tlet triggersMetaboxTitle = UncannyAutomator.i18n.trigger.userTriggers;\n\t\t\t\t\tif ( UncannyAutomator.recipe.type == 'anonymous' ){\n\t\t\t\t\t\ttriggersMetaboxTitle = UncannyAutomator.i18n.trigger.everyoneTrigger;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Change text the title container\n\t\t\t\t\t$triggersMetaboxTitle.text( triggersMetaboxTitle );\n\n\t\t\t\t\t// Call callbacks\n\t\t\t\t\tthis.doWhenReady( recipeType );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Show error\n\t\t\t\t\tthis.showError( UncannyAutomator.i18n.recipeType.errorSomethingWentWrong );\n\t\t\t\t}\n\t\t\t},\n\t\t\t( response ) => {\n\t\t\t\tconsole.log( '‼️ ERROR-TODO. Couldn\\'t save the recipe type' );\n\n\t\t\t\t// Remove loading class\n\t\t\t\tthis.$elements.submitButton.removeClass( 'uap-btn--loading uap-btn--disabled' );\n\n\t\t\t\t// Show error message\n\t\t\t\tthis.showError( UncannyAutomator.i18n.recipeType.errorSomethingWentWrong );\n\t\t\t}\n\t\t);\n\t}\n\n\tshowError( errorMessage ){\n\t\t// Create error\n\t\tconst $error = $( `\n\t\t\t<div class=\"uap-type-selector__error\">\n\t\t\t\t${ errorMessage }\n\t\t\t</div>\n\t\t` );\n\n\t\t// Check if the container already has an error container\n\t\tconst $oldErrorContainer = this.$elements.container.find( '.uap-type-selector__error' );\n\t\tif ( $oldErrorContainer.length > 0 ){\n\t\t\t$oldErrorContainer.remove();\n\t\t}\n\n\t\t// Add error container\n\t\t$error.insertAfter( this.$elements.warning );\n\n\t\t// Add class to shake\n\t\tsetTimeout(() => {\n\t\t\t$error.addClass( 'uap-type-selector__error--shake' );\n\t\t}, 10 );\n\t}\n}\n\nexport default RecipeTypeSelector;","import $ from 'jquery';\n\nimport {\n    itemsObject,\n    getDOMElements,\n    isEmpty,\n    isDefined,\n    getURLParameter,\n    vsprintf\n} from './Utilities.js';\nimport ItemCreatorIntegrations  from './ItemCreatorIntegrations.js';\nimport MetaboxNotice            from './MetaboxNotice.js';\nimport MetaboxItems             from './MetaboxItems.js';\nimport MetaboxFooter            from './MetaboxFooter.js';\n\nclass Triggers {\n    constructor(){\n        // Create console group\n        // console.group( 'Triggers' );\n\n        // Get and clear metabox\n        let metabox = getDOMElements( 'metabox', { type: 'trigger' });\n        metabox.empty();\n\n        // Get recipe triggers\n        let triggers = itemsObject( 'get', {\n            filter: {\n                itemType: 'trigger'\n            }\n        });\n\n        // Check if it has triggers\n        if ( ! isEmpty( triggers ) ){\n            // Render items\n            new MetaboxItems( 'trigger', triggers );\n\n            // Create metabox footer\n            new MetaboxFooter( 'trigger' );\n\n            // Check if we have to show the integrations on load\n            if ( this.isContinuingIntegrationConnection() ){\n                // Render the integrations list\n                new ItemCreatorIntegrations( 'trigger' );\n            }\n        }\n        else {\n            new ItemCreatorIntegrations( 'trigger' );\n\n            // Create metabox footer\n            new MetaboxFooter( 'trigger' );\n        }\n\n        // Close console group\n        // console.groupEnd();\n    }\n\n    isContinuingIntegrationConnection(){\n        return getURLParameter( null, 'ua_connecting_integration' ) == 1 && getURLParameter( null, 'ua_connecting_integration_context' ) == 'trigger';\n    }\n}\n\nexport default Triggers;","import $ from 'jquery';\n\nimport {\n\tisDefined,\n\tisEmpty\n} from './Utilities';\n\nimport Field from './Field';\n\nclass FieldsGroup {\n\tconstructor( attributes, createDOMelements = true, customValidationFunction = null ){\n\t\t// Save attributes\n\t\tthis.setAttributes( attributes );\n\n\t\t// Create fields\n\t\tthis.createFields();\n\t}\n\n\t/**\n\t * Set attributes. It add properties like hasValue, hasPlaceholder, etc, automatically\n\t * \n\t * @since 0.4\n\t *\n\t * @param  {object} attributes - The field attributes\n\t *\n\t * @return {object} attributes - The field attributes\n\t */\n\n\tsetAttributes( attributes ){\n\t\t// Has label\n\t\tif ( ! isDefined( attributes.hasLabel ) ){\n\t\t\tif ( ! isEmpty( attributes.label ) ){\n\t\t\t\tattributes.hasLabel = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattributes.hasLabel = false;\n\t\t\t}\n\t\t}\n\n\t\t// Has description\n\t\tif ( ! isDefined( attributes.hasDescription ) ){\n\t\t\tif ( ! isEmpty( attributes.description ) ){\n\t\t\t\tattributes.hasDescription = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattributes.hasDescription = false;\n\t\t\t}\n\t\t}\n\n\t\tthis.attributes = attributes;\n\t}\n\n\t/**\n\t * Create instances of Field\n\t *\n\t * @since  2.0\n\t *\n\t * @return undefined\n\t */\n\n\tcreateFields(){\n\t\t// Replace fields data with Field instances\n\t\tthis.fields = this.attributes.fields.map(( fieldData ) => {\n\t\t\t// Create Field\n\t\t\treturn new Field( fieldData.fieldType, fieldData );\n\t\t});\n\t}\n\n\t/**\n\t * Create a jQuery DOM element with the field\n\t *\n\t * @since 0.3\n\t */\n\n\tcreateFormElement(){\n\t\t// Create response object\n\t\tlet response = null;\n\n\t\t// Create container\n\t\tconst $container = $( `<div class=\"form-group\"></div>` );\n\n\t\t// Check if it has a label\n\t\tif ( this.attributes.hasLabel ){\n\t\t\t// Create label\n\t\t\tconst $label = $( `<div class=\"form-group__label\">${ this.attributes.label }</div>` );\n\n\t\t\t// Append label\n\t\t\t$container.append( $label );\n\t\t}\n\n\t\t// Create form group. We're going to add the fields here\n\t\tconst $formGroup = $( `<div class=\"form-group__fields\"></div>` );\n\t\t// Iterate fields\n\t\tthis.fields.forEach(( field ) => {\n\t\t\t// Create form element\n\t\t\tconst $fieldElement = field.createFormElement();\n\n\t\t\t// Append form element\n\t\t\t$formGroup.append( $fieldElement );\n\t\t});\n\t\t// Append fields\n\t\t$container.append( $formGroup );\n\n\t\t// Check if it has a description\n\t\tif ( this.attributes.hasLabel ){\n\t\t\t// Create description\n\t\t\tconst $description = $( `<div class=\"form-group__description\">${ this.attributes.description }</div>` );\n\t\t\n\t\t\t// Append description\n\t\t\t$container.append( $description );\n\t\t}\n\n\t\t// Save form element\n\t\tthis.formElement = $container;\n\t\tresponse = $container;\n\n\t\t// Return form element\n\t\treturn response;\n\t}\n\n\t/**\n\t * Get value\n\t *\n\t * @since  2.0\n\t *\n\t * @return {object} Object where the key is the field ID and the value is the field's value\n\t */\n\t\n\tgetValue(){\n\t\t// Create object where we're going to save the values\n\t\tlet fieldsValue = {};\n\n\t\t// Iterate fields\n\t\tthis.fields.forEach(( field ) => {\n\t\t\t// Add the field value\n\t\t\tfieldsValue[ field.getFieldID() ] = field.getValue();\n\t\t});\n\n\t\t// Return validation object\n\t\treturn fieldsValue;\n\t}\n\n\t/**\n\t * Get form element\n\t * \n\t * @since 2.0\n\t *\n\t * @return {object} jQuery object of the field's container\n\t */\n\n\tgetFormElement(){\n\t\treturn this.formElement;\n\t}\n\n\t/**\n\t * Get attributes\n\t * \n\t * @since 2.0\n\t *\n\t * @return {object} Field attributes\n\t */\n\n\tgetAttributes(){\n\t\treturn this.attributes;\n\t}\n\n\t/**\n\t * Validate the fields\n\t * \n\t * @since 2.0\n\t *\n\t * @param  {boolean} renderError - TRUE if you want to render the field errors, FALSE if you only want to return the response object\n\t *\n\t * @return {object} Object where the key is the field ID and the value is a validateField object\n\t */\n\t\n\tvalidate( renderError = true ){\n\t\t// Create validation object\n\t\tlet validationObject = {\n\t\t\tisValid: true,\n\t\t\tmessage: ''\n\t\t};\n\n\t\t// Iterate fields\n\t\tthis.fields.forEach(( field ) => {\n\t\t\t// Validate and add response to the validation object\n\t\t\tvalidationObject[ field.getFieldID() ] = field.validate( renderError );\n\n\t\t\t// Update main validation\n\t\t\tvalidationObject.isValid = validationObject.isValid && validationObject[ field.getFieldID() ].isValid;\n\t\t});\n\n\t\t// Return validation object\n\t\treturn validationObject;\n\t}\n}\n\nexport default FieldsGroup;","import $ from 'jquery';\n\nimport {\n\tisDefined,\n\tisEmpty\n} from './Utilities';\n\nimport Field from './Field';\n\nconst sortable = require( 'html5sortable' );\n\nclass FieldsRepeater {\n\tconstructor( attributes, createDOMelements = true, customValidationFunction = null ){\n\t\t// Save attributes\n\t\tthis.setAttributes( attributes );\n\n\t\t// Create fields\n\t\tthis.createFields();\n\t}\n\n\t/**\n\t * Set attributes. It add properties like hasValue, hasPlaceholder, etc, automatically\n\t * \n\t * @since 0.4\n\t *\n\t * @param  {object} attributes - The field attributes\n\t *\n\t * @return {object} attributes - The field attributes\n\t */\n\n\tsetAttributes( attributes ){\n\t\t// Has label\n\t\tif ( ! isDefined( attributes.hasLabel ) ){\n\t\t\tif ( ! isEmpty( attributes.label ) ){\n\t\t\t\tattributes.hasLabel = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattributes.hasLabel = false;\n\t\t\t}\n\t\t}\n\n\t\t// Has description\n\t\tif ( ! isDefined( attributes.hasDescription ) ){\n\t\t\tif ( ! isEmpty( attributes.description ) ){\n\t\t\t\tattributes.hasDescription = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattributes.hasDescription = false;\n\t\t\t}\n\t\t}\n\n\t\tthis.attributes = attributes;\n\t}\n\n\t/**\n\t * Create instances of Field\n\t *\n\t * @since  2.0\n\t *\n\t * @return undefined\n\t */\n\n\tcreateFields(){\n\t\t// Get fields template\n\t\tconst rowFieldsTemplate = this.attributes.fields;\n\n\t\t// Create array with fields\n\t\tlet fieldsRows = [];\n\n\t\t// Check if there is data and create multiple rows of the repeater field\n\t\tif ( Array.isArray( this.attributes.currentValue ) && this.attributes.currentValue.length > 0 ){\n\t\t\t// https://regex101.com/r/tLL7S9/1/\n\t\t\t// Get field id and index from strings like FIELD_1\n\n\t\t\t// Iterate default rows\n\t\t\tthis.attributes.currentValue.forEach(( row, index ) => {\n\t\t\t\t// Clone template row\n\t\t\t\tlet rowFields = JSON.parse( JSON.stringify( rowFieldsTemplate ) );\n\n\t\t\t\t// Iterate the rows in the template and try to get their\n\t\t\t\t// value from the \"row\" array\n\t\t\t\trowFields = rowFields.map(( field, index ) => {\n\t\t\t\t\t// Check if there is a value for this field\n\t\t\t\t\tif ( isDefined( row[ field.optionCode ] ) ){\n\t\t\t\t\t\t// Save value\n\t\t\t\t\t\tfield.currentValue = row[ field.optionCode ];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Set empty value\n\t\t\t\t\t\tfield.currentValue = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Return field\n\t\t\t\t\treturn field;\n\t\t\t\t});\n\n\t\t\t\t// Add row with fields\n\t\t\t\tfieldsRows.push( rowFields );\n\t\t\t});\n\t\t}\n\t\t// Otherwise, just create one row\n\t\telse {\n\t\t\t// Check if the field is required\n\t\t\tif ( this.attributes.isRequired ){\n\t\t\t\t// Create an empty row\n\t\t\t\tlet emptyRow = JSON.parse( JSON.stringify( rowFieldsTemplate ) );\n\n\t\t\t\t// Remove undefined current value\n\t\t\t\temptyRow.currentValue = '';\n\n\t\t\t\t// Add it to the main array\n\t\t\t\tfieldsRows.push( emptyRow );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Otherwise, do nothing\n\t\t\t}\n\t\t}\n\n\t\t// Now iterate the row with fields\n\t\tfieldsRows = fieldsRows.map(( row, index ) => {\n\t\t\t// Now iterate each group of fields\n\t\t\trow = row.map(( fieldObject, index ) => {\n\t\t\t\t// Remove the label\n\t\t\t\tfieldObject.label = '';\n\n\t\t\t\t// Remove the description\n\t\t\t\tfieldObject.description = '';\n\n\t\t\t\t// Create field\n\t\t\t\tlet field = new Field( fieldObject.fieldType, fieldObject );\n\n\t\t\t\t// Return field instance\n\t\t\t\treturn field;\n\t\t\t});\n\n\t\t\t// Return row\n\t\t\treturn row;\n\t\t});\n\n\t\t// Update the fields property\n\t\tthis.fieldRows = fieldsRows;\n\t}\n\n\t/**\n\t * Create a jQuery DOM element with the field\n\t *\n\t * @since 0.3\n\t */\n\n\tcreateFormElement(){\n\t\t// Create response object\n\t\tlet response = null;\n\n\t\t// Create container\n\t\tconst $container = $( `<div class=\"form-repeater\"></div>` );\n\n\t\t// Check if it has a label\n\t\tif ( this.attributes.hasLabel ){\n\t\t\t// Create label\n\t\t\tconst $label = $( `\n\t\t\t\t<div class=\"form-repeater__label\">\n\t\t\t\t\t${ this.attributes.label }\n\t\t\t\t\t${ this.attributes.isRequired ? `<span class=\"form-repeater__label-required\"></span>` : `` }\n\t\t\t\t</div>\n\t\t\t` );\n\n\t\t\t// Append label\n\t\t\t$container.append( $label );\n\t\t}\n\n\t\t// Create table with the fields\n\t\tlet $table = this.getFieldsTable();\n\t\t$container.append( $table );\n\n\t\t// Add error container\n\t\t$table.append( $( `<div class=\"form-element__error\"></div>` ) );\n\n\t\t// Check if it has a description\n\t\tif ( this.attributes.hasDescription ){\n\t\t\t// Create description\n\t\t\tconst $description = $( `<div class=\"form-repeater__description\">${ this.attributes.description }</div>` );\n\t\t\n\t\t\t// Append description\n\t\t\t$container.append( $description );\n\t\t}\n\n\t\t// Save form element\n\t\tthis.formElement = $container;\n\t\tresponse = $container;\n\n\t\t// If there is more than one row, make list sortable\n\t\tif ( this.fieldRows.length > 1 ){\n\t\t\tthis.makeRowsSortable();\n\t\t}\n\n\t\t// Listen save\n\t\tthis.listenSave();\n\n\t\t// Return form element\n\t\treturn response;\n\t}\n\n\t/**\n\t * Listen save\n\t */\n\n\tlistenSave(){\n\t\t// Get form element\n\t\tthis.formElement.on( 'saved', ( event ) => {\n\t\t\t// Update the fields array\n\t\t\tthis.updateAttributesFieldsFromRow();\n\t\t});\n\t}\n\n\t/**\n\t * Use fieldRows to update the original attributes.fields\n\t * We will use this to render the container again after it was\n\t * saved\n\t */\n\n\tupdateAttributesFieldsFromRow(){\n\t\t// Create the array where we're going to save the fields data\n\t\tlet fields = [];\n\n\t\t// Iterate fieldRows\n\t\tthis.fieldRows.forEach(( rowFields ) => {\n\t\t\t// Create array to save the row fields\n\t\t\tlet row = [];\n\n\t\t\t// Iterate row fields\n\t\t\trowFields.forEach(( Field ) => {\n\t\t\t\t// Add field\n\t\t\t\trow.push( Field.attributes );\n\t\t\t});\n\t\t\t\n\t\t\t// Add row\n\t\t\tfields.push( row );\n\t\t});\n\n\t\t// Update fields\n\t\tthis.attributes.fields = fields;\n\t}\n\n\t/**\n\t * Make list of rows sortable\n\t */\n\t\n\tmakeRowsSortable(){\n\t\t// Make rows sortable\n\t\t// Use sortable from the html5sortable library\n\t\tsortable( this.formElement.find( '.form-repeater-fields__table-rows' ), {\n\t\t\tforcePlaceholderSize: true,\n\t\t\thandle: '.form-repeater-fields__table-rows-cell--number',\n\t\t\tplaceholder: `<tr><td colspan=\"${ ( this.fieldRows[0].length + 2 ) }\">&nbsp;</td></tr>`,\n\t\t\titemSerializer: ( serializedItem, sortableContainer ) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: serializedItem.index,\n\t\t\t\t\thtml:     serializedItem.html\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Listen modifications to the rows order\n\t\tthis.formElement.find( '.form-repeater-fields__table-rows' ).on( 'sortupdate', ( event ) => {\n\t\t\t// Create an array where each element is the index of the row in the old order\n\t\t\tlet newOrder = [];\n\n\t\t\t// Iterate the rows (in their new order)\n\t\t\t$.each( event.detail.destination.items, ( index, row ) => {\n\t\t\t\tnewOrder.push( $( row ).data( 'order' ) );\n\t\t\t});\n\n\t\t\t// Change the order of the rows in the FieldRepeater instance\n\t\t\tlet newFieldRowsOrder = [];\n\t\t\tnewOrder.forEach(( oldIndex ) => {\n\t\t\t\tnewFieldRowsOrder.push( this.fieldRows[ oldIndex ] );\n\t\t\t});\n\t\t\tthis.fieldRows = newFieldRowsOrder;\n\n\t\t\t// Render the field agian\n\t\t\tthis.reRender();\n\t\t});\n\t}\n\n\t/**\n\t * Create and return fields table\n\t *\n\t * @since  2.0\n\t */\n\t\n\tgetFieldsTable(){\n\t\t// Create variable to save the table\n\t\tconst $table = $( `\n\t\t\t<div class=\"form-repeater-fields\">\n\t\t\t\t<table class=\"form-repeater-fields__table\">\n\t\t\t\t\t<thead class=\"form-repeater-fields__table-heading\"></thead>\n\t\t\t\t\t<tbody class=\"form-repeater-fields__table-rows\"></tbody>\n\t\t\t\t</table>\n\t\t\t\t<div class=\"form-repeater-fields__actions\"></div>\n\t\t\t</div>\n\t\t` );\n\n\t\t// Create table with the rows\n\t\t// Get table headers\n\t\t// We will create a table where the name of the column will\n\t\t// be the label of the field\n\t\tlet heading = [];\n\n\t\t// Iterate the original fields object inside attributes (not the Field instances)\n\t\tthis.attributes.fields.forEach(( fieldData, index ) => {\n\t\t\t// Get column title\n\t\t\tconst title = isDefined( fieldData.label ) ? fieldData.label : '';\n\n\t\t\t// Check if the fields under this column are required\n\t\t\tconst isRequired = isDefined( fieldData.isRequired ) ? fieldData.isRequired : false;\n\n\t\t\t// Get the column description\n\t\t\tconst description = isDefined( fieldData.description ) ? fieldData.description : '';\n\n\t\t\t// Add heading column\n\t\t\theading.push({\n\t\t\t\ttitle:       title,\n\t\t\t\tdescription: description,\n\t\t\t\tisRequired:  isRequired\n\t\t\t});\n\t\t});\n\n\t\t// Create HTML of the heading\n\t\tconst $heading = $( `<tr></tr>` );\n\n\t\t// Add the column with for the row number\n\t\t$heading.append( $( `<th class=\"form-repeater-fields__table-heading-cell form-repeater-fields__table-heading-cell--number\">#</th>` ) );\n\n\t\t// Iterate heading columns\n\t\theading.forEach(( headingColumn, index ) => {\n\t\t\t// Create column\n\t\t\tlet $headingColumn = $( `<th class=\"form-repeater-fields__table-heading-cell\"></th>` );\n\n\t\t\t// Add the title\n\t\t\tif ( ! isEmpty( headingColumn.title ) ){\n\t\t\t\t$headingColumn.append( $( `\n\t\t\t\t\t<div class=\"form-repeater-fields__table-heading-cell-title\">\n\t\t\t\t\t\t${ headingColumn.title }\n\t\t\t\t\t\t${ headingColumn.isRequired ? `<span class=\"form-repeater-fields__table-heading-cell-required\"></span>` : `` }\n\t\t\t\t\t</div>\n\t\t\t\t` ) );\n\t\t\t}\n\n\t\t\t// Add the description\n\t\t\tif ( ! isEmpty( headingColumn.description ) ){\n\t\t\t\t$headingColumn.append( $( `\n\t\t\t\t\t<div class=\"form-repeater-fields__table-heading-cell-description\">\n\t\t\t\t\t\t${ headingColumn.description }\n\t\t\t\t\t</div>\n\t\t\t\t` ) );\n\t\t\t}\n\n\t\t\t// Add heading column\n\t\t\t$heading.append( $headingColumn );\n\t\t});\n\n\t\t// Add the column with for the actions\n\t\t$heading.append( $( `<th class=\"form-repeater-fields__table-heading-cell form-repeater-fields__table-heading-cell--actions\"></th>` ) );\n\n\t\t// Append heading\n\t\tconst $headingContainer = $table.find( '.form-repeater-fields__table-heading' );\n\t\t$headingContainer.append( $heading );\n\n\t\t// Create HTML of the rows\n\t\tconst $rows = $table.find( '.form-repeater-fields__table-rows' );\n\n\t\t// Get number of rows\n\t\tconst numberOfRows = this.fieldRows.length;\n\n\t\t// Iterate rows of fields\n\t\tthis.fieldRows.forEach(( row, index ) => {\n\t\t\t// Create container for the row\n\t\t\tconst $row = $( `<tr data-order=\"${ index }\"></tr>` );\n\n\t\t\t// Add the column with for the row number\n\t\t\t$row.append( $( `<td class=\"form-repeater-fields__table-rows-cell form-repeater-fields__table-rows-cell--number\">${ ( index + 1 ) }</td>` ) );\n\n\t\t\t// Add fields\n\t\t\trow.forEach(( Field, index ) => {\n\t\t\t\t// Create container\n\t\t\t\tconst $fieldCell = $( `<td class=\"form-repeater-fields__table-rows-cell\"></td>` );\n\n\t\t\t\t// Get field's DOM element\n\t\t\t\tconst $field = Field.getFormElement();\n\t\t\t\t// Make sure all the libraries had been initialized\n\t\t\t\tField.initLibraries();\n\n\t\t\t\t// Add field container\n\t\t\t\t$fieldCell.append( $field );\n\n\t\t\t\t// Append field cell to the row\n\t\t\t\t$row.append( $fieldCell );\n\t\t\t});\n\n\t\t\t// Add the column for the actions, and add the delete button\n\t\t\tconst $actions = $( `<td class=\"form-repeater-fields__table-rows-cell form-repeater-fields__table-rows-cell--actions\"></td>` );\n\t\t\t$row.append( $actions );\n\n\t\t\tlet fieldAtts = this.getAttributes();\n\n\t\t\t// Check if the field requires at least on row and if this is the first row\n\t\t\tif ( index != 0 || ( index == 0 && ( ! this.attributes.isRequired || numberOfRows > 1 ) ) ){\n\t\t\t\t// Check if there is a custom \"Remove row\" label. If there is one,\n\t\t\t\t// use that, otherwise use the default one\n\t\t\t\tlet removeRowLabel = isDefined( this.attributes.removeRowButtonLabel ) ? this.attributes.removeRowButtonLabel : UncannyAutomator.i18n.removeRow;\n\n\t\t\t\t// Create delete button\n\t\t\t\tconst $removeRowButton = $( `<div class=\"form-repeater-fields__table-rows-cell-remove\" uap-tooltip=\"${ removeRowLabel }\"><span></span></div>` );\n\n\t\t\t\t// Listen clicks to the remove button\n\t\t\t\t$removeRowButton.on( 'click', () => {\n\t\t\t\t\t// Remove the row by index\n\t\t\t\t\tthis.deleteRow( index );\n\t\t\t\t});\n\n\t\t\t\t// if hideActions is false, Add Remove row button\n\t\t\t\tif( ! fieldAtts.hideActions ) {\n\t\t\t\t\t// Add remove button to the actions cell\n\t\t\t\t\t$actions.append($removeRowButton);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add $row to the $rows element\n\t\t\t$rows.append( $row );\n\t\t});\n\n\t\t// Create \"Add row\" button\n\t\tlet fieldAtts = this.getAttributes();\n\t\t// if hideActions is false, Add Pair button\n\t\tif( ! fieldAtts.hideActions ) {\n\t\t\tconst $addRowButton = $( `\n\t\t\t\t<div class=\"uap-btn uap-btn--primary uap-btn--small\">\n\t\t\t\t\t${ UncannyAutomator.i18n.addRow }\n\t\t\t\t</div>\n\t\t\t` );\n\n\t\t\t// Check if we have to change label of the button\n\t\t\tif ( isDefined( this.attributes.addRowButtonLabel ) ){\n\t\t\t\t$addRowButton.text( this.attributes.addRowButtonLabel );\n\t\t\t}\n\n\t\t\t// Listen clicks\n\t\t\t$addRowButton.on( 'click', () => {\n\t\t\t\t// Show loading animation\n\t\t\t\t$addRowButton.addClass( 'uap-btn--loading' );\n\n\t\t\t\t// Add another row\n\t\t\t\tthis.addRow();\n\t\t\t});\n\n\t\t\t// Add actions\n\t\t\tconst $actionsContainer = $table.find( '.form-repeater-fields__actions' );\n\t\t\t$actionsContainer.append($addRowButton);\n\t\t}\n\t\treturn $table;\n\t}\n\n\t/**\n\t * Get value\n\t *\n\t * @since  2.0\n\t *\n\t * @return {object} Object where the key is the field ID and the value is the field's value\n\t */\n\t\n\tgetValue(){\n\t\t// Create object where we're going to save the values\n\t\tlet value = [];\n\n\t\t// Iterate rows\n\t\tthis.fieldRows.forEach(( row, index ) => {\n\t\t\t// Get the value of the fields\n\t\t\tlet fieldsValue = {}\n\n\t\t\t// Iterate fields\n\t\t\trow.forEach(( Field, index ) => {\n\t\t\t\t// Add it to the fieldsValue object\n\t\t\t\tfieldsValue[ Field.getFieldID() ] = Field.getValue();\n\t\t\t});\n\n\t\t\t// Add fields value to the main array\n\t\t\tvalue.push( fieldsValue );\n\t\t});\n\n\t\t// Return value\n\t\treturn value;\n\t}\n\n\t/**\n\t * Add row\n\t *\n\t * @since  2.0\n\t */\n\t\n\taddRow( fieldsData = {}, reRender = true ){\n\t\t// Create an empty row\n\t\tlet emptyRow = JSON.parse( JSON.stringify( this.attributes.fields ) );\n\n\t\t// Remove undefined current value\n\t\temptyRow.currentValue = '';\n\n\t\t// Now iterate the fields\n\t\temptyRow = emptyRow.map(( fieldObject, index ) => {\n\t\t\t// Remove the label\n\t\t\tfieldObject.label = '';\n\n\t\t\t// Remove the description\n\t\t\tfieldObject.description = '';\n\n\t\t\t// Check if there is a default value for this field\n\t\t\tif ( isDefined( fieldsData[ fieldObject.optionCode ] ) ){\n\t\t\t\t// And if there is, use that data\n\t\t\t\tfieldObject.currentValue = fieldsData[ fieldObject.optionCode ];\n\t\t\t}\n\n\t\t\t// Create field\n\t\t\tlet field = new Field( fieldObject.fieldType, fieldObject );\n\n\t\t\t// Return field instance\n\t\t\treturn field;\n\t\t});\n\n\t\t// Add it to the rows of fields\n\t\tthis.fieldRows.push( emptyRow );\n\n\t\t// Render form element again\n\t\tif ( reRender ){\n\t\t\tthis.reRender( true );\n\t\t}\n\t}\n\n\t/**\n\t * Rerender the field again\n\t */\n\n\treRender( focusFirstFieldOfLastRow = false ){\n\t\t// Destroy CodeMirror instances\n\t\tthis.destroyCodeMirror();\n\t\t// Destroy the token selector\n\t\tthis.destroyTokenSelector();\n\n\t\t// Create the form element again\n\t\tconst $currentFormElement = this.formElement;\n\t\tconst $newFormElement = this.createFormElement( false );\n\t\t$currentFormElement.replaceWith( $newFormElement );\n\n\t\t// Create the token selector\n\t\tthis.initTokenSelector();\n\t\t// Create the CodeMirror instances\n\t\tthis.initCodeMirror();\n\n\t\t// Check if we have to focus the first field of the last row\n\t\tif ( focusFirstFieldOfLastRow ){\n\t\t\t// Get the last row\n\t\t\tconst lastRow = this.fieldRows[ this.fieldRows.length - 1 ];\n\n\t\t\tif ( isDefined( lastRow ) ){\n\t\t\t\t// Get the first field\n\t\t\t\tconst firstField = lastRow[0];\n\n\t\t\t\tif ( isDefined( firstField ) ){\n\t\t\t\t\tfirstField.focus();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Delete row\n\t *\n\t * @since  2.0\n\t */\n\t\n\tdeleteRow( index ){\n\t\t// Check if there is a row with that index\n\t\tif ( isDefined( this.fieldRows[ index ] ) ){\n\t\t\t// Remove element\n\t\t\tthis.fieldRows.splice( index, 1 );\n\t\t}\n\n\t\t// Render form element again\n\t\tthis.formElement.replaceWith( this.createFormElement() );\n\t}\n\n\t/**\n\t * Get form element\n\t * \n\t * @since 2.0\n\t *\n\t * @return {object} jQuery object of the field's container\n\t */\n\n\tgetFormElement(){\n\t\t// Return form element\n\t\treturn this.formElement;\n\t}\n\n\t/**\n\t * Get attributes\n\t * \n\t * @since 2.0\n\t *\n\t * @return {object} Field attributes\n\t */\n\n\tgetAttributes(){\n\t\treturn this.attributes;\n\t}\n\n\t/**\n\t * Get field ID\n\t * \n\t * @since 2.0\n\t *\n\t * @return {string} The field ID\n\t */\n\n\tgetFieldID(){\n\t\treturn this.attributes.optionCode;\n\t}\n\n\t/**\n\t * Validate the fields\n\t * \n\t * @since 2.0\n\t *\n\t * @param  {boolean} renderError - TRUE if you want to render the field errors, FALSE if you only want to return the response object\n\t *\n\t * @return {object} Object where the key is the field ID and the value is a validateField object\n\t */\n\t\n\tvalidate( renderError = true ){\n\t\t// Create validation object\n\t\tlet validation = {\n\t\t\tisValid: true,\n\t\t\tmessage: ''\n\t\t}\n\n\t\t// Create array to save the validation of the rows\n\t\tlet rowsValidation = [];\n\n\t\t// Iterate fields\n\t\tthis.fieldRows.forEach(( row, index ) => {\n\t\t\t// Create object to save the row validation\n\t\t\tlet rowValidation = {}\n\n\t\t\t// Iterate each field\n\t\t\trow.forEach(( Field, index ) => {\n\t\t\t\t// Validate and add response to the validation object\n\t\t\t\trowValidation[ Field.getFieldID() ] = Field.validate( renderError );\n\n\t\t\t\t// Update global validation\n\t\t\t\tvalidation.isValid = validation.isValid && rowValidation[ Field.getFieldID() ].isValid;\n\t\t\t});\n\n\t\t\t// Add row validation to the main validation array\n\t\t\trowsValidation.push( rowValidation );\n\t\t});\n\n\t\t// Return validation object\n\t\treturn validation;\n\t}\n\n\tinitTokenSelector(){\n\t\tthis.fieldRows.forEach(( rowFields ) => {\n\t\t\t// Iterate row fields\n\t\t\trowFields.forEach(( Field ) => {\n\t\t\t\t// Add field\n\t\t\t\tField.initTokenSelector();\n\t\t\t});\n\t\t});\n\t}\n\n\tdestroyTokenSelector(){\n\t\tthis.fieldRows.forEach(( rowFields ) => {\n\t\t\t// Iterate row fields\n\t\t\trowFields.forEach(( Field ) => {\n\t\t\t\t// Add field\n\t\t\t\tField.destroyTokenSelector();\n\t\t\t});\n\t\t});\n\t}\n\n\tinitCodeMirror(){\n\t\tthis.fieldRows.forEach(( rowFields ) => {\n\t\t\t// Iterate row fields\n\t\t\trowFields.forEach(( Field ) => {\n\t\t\t\t// Add field\n\t\t\t\tField.initCodeMirror();\n\t\t\t});\n\t\t});\n\t}\n\n\tdestroyCodeMirror(){\n\t\tthis.fieldRows.forEach(( rowFields ) => {\n\t\t\t// Iterate row fields\n\t\t\trowFields.forEach(( Field ) => {\n\t\t\t\t// Add field\n\t\t\t\tField.destroyCodeMirror();\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport default FieldsRepeater;","import $ from 'jquery';\n\nimport {\n    validateField\n} from './Validation';\n\nimport RecipeTypeSelector from './RecipeTypeSelector';\nimport Field              from './Field';\nimport FieldsGroup        from './FieldsGroup';\nimport FieldsRepeater     from './FieldsRepeater';\nimport Modal              from './Modal';\n\nimport Tokens from './tokens/tokens';\n\n/**\n * Create the data required for Automator to render\n *\n * @since 2.1.6\n *\n * @param  {Function} callback The function to invoke after the data is ready\n * @return undefined\n */\nexport function createDataOnLoad( callback = '' ){\n\tconsoleLogLabel( 'Start creating the main object' );\n\n\t// Check if there is a callback defined\n\tcallback = ! isEmpty( callback ) ? callback : () => {};\n\n\t// Create a function to continue with the process once we know what's\n\t// the recipe type\n\tconst completeProcess = () => {\n\t\t// Filter Automator items\n\t\tfilterAutomatorItemsByRecipeType();\n\t\t// Group the triggers and actions by integration\n\t\tgroupItemsByIntegration();\n\n\t\t// Get recipe items on page load\n\t\trecipeObject( 'create', {\n\t\t\tallRecipes: UncannyAutomator.recipes_object\n\t\t});\n\n\t\t// Remove unnecessary data\n\t\t// delete UncannyAutomator.recipes_object;\n\t    delete UncannyAutomator.triggers;\n\t    delete UncannyAutomator.actions;\n\n\t    consoleLogLabel( 'Ended creating the main object' );\n\n\t    // Invoke the callback\n\t    callback();\n\t}\n\n\t// Check if WP is ready\n\tif ( ! isEmpty( UncannyAutomator.recipe.type ) ){\n        // Complete the process\n        completeProcess();\n    }\n    else {\n        // Call to Recipe Type Selector\n        new RecipeTypeSelector(() => {\n            // Complete the process\n            completeProcess();\n        });\n    }\n}\n\n/**\n * Update all the objects used for the UI using the recipes_object object\n *\n * @since 0.5\n *\n * @param {string}   action - Action to perform. Valid actions: 'create', 'delete',\n * @param {object}   attributes - Data, check each switch to see the required data\n *\n * @return {boolean} TRUE if the action was made successfully\n */\n\nexport function recipeObject( action = null, attributes = {} ){\n    // Create response variable and set default value\n    let response     = false;\n\n    // Define valid actions\n    let validActions = [ 'create', 'validate' ];\n\n    // Check if the action is not undefined and if it's a valid action\n    if ( isDefined( action ) && inArray( action, validActions ) ){\n        switch ( action ){\n            case 'create':\n                // Define required attributes properties\n                let requiredData = [ 'allRecipes' ];\n\n                // Check if the attributes object has all the required properties\n                if ( inArray( requiredData, Object.keys( attributes ) ) ){\n                    // Get this recipe in the allRecipes object\n                    let recipe;\n\n                    // Create allRecipes variable\n                    let allRecipes = attributes.allRecipes;\n\n                    $.each( allRecipes, function( index, theRecipe ){\n                        if ( theRecipe.ID == UncannyAutomator.recipe.id ){\n                            recipe = theRecipe;\n                        }\n                    });\n\n                    // Add element to all triggers, actions and closures to define the itemType. We're going to need this later\n                    $.each( recipe.triggers, ( index, trigger ) => trigger.itemType = 'trigger' );\n                    $.each( recipe.actions,  ( index, action  ) => action.itemType  = 'action'  );\n                    $.each( recipe.closures, ( index, closure ) => closure.itemType = 'closure' );\n\n                    // Merge all the recipe triggers, actions and closures into one array\n                    let items = [].concat.apply( [], [ recipe.triggers, recipe.actions, recipe.closures ] );\n\n                    // Reset items object\n                    itemsObject( 'reset' );\n\n                    // Check if the recipe is anonymous\n                    const recipeIsAnonymous = UncannyAutomator.recipe.type == 'anonymous';\n\n                    // Iterate each item and add it to the itemsObject\n                    $.each( items, function( index, item ){\n                        // We're going to get all the required information to before adding the item to the items object\n                        let itemToAdd;\n\n                        // Get the data from the global item\n                        let globalItem = getGlobalItem( item.meta.integration, item.itemType, item.meta.code );\n\n                        // Get the item code in this variable\n                        let itemCode = item.meta.code;\n\n                        // Check if the required PHP code for this item exists\n                        if ( isDefined( globalItem ) ){\n                            // Create variable to save all the options\n                            let options = {};\n\n                            // Check if it has simple options (options that aren't part of a group of options)\n                            if ( isDefined( globalItem.options ) ){\n                                $.each( globalItem.options, function( index, option ){\n                                    options[ option.option_code ] = [ option ];\n                                });\n                            }\n\n                            // Add group of options\n                            if ( isDefined( globalItem.options_group ) ){\n                                $.extend( true, options, globalItem.options_group );\n                            }\n\n                            // We're going to create another options variable to create the options object as we're going to add it to the item object\n                            let groupsOfOptions = {}\n\n                            $.each( options, function( groupKey, fields ){\n                                let allFieldsOnThisGroup = [];\n\n                                // Check if it has more this group of fields has more than one option\n                                let hasMoreThanOneOption = fields.length > 1;\n\n                                $.each( fields, function( index, field ){\n                                    // Check if value is undefined but has a default value\n                                    /*\n                                    if ( ! isDefined( item.meta[ field.option_code ] ) && isDefined( item.meta.default_value ) ){\n                                        item.meta[ field.option_code ] = field.default_value;\n                                    }\n                                    */\n\n                                    // Sanitize field data\n                                    const sanitizeFieldData = ( field ) => {\n                                        // Create field object\n                                        let fieldObject = {\n                                            isGroup:            hasMoreThanOneOption,\n                                            itemId:             item.ID,\n                                            itemType:           item.itemType,\n\n                                            isRequired:         isDefined( field.required ) ? field.required : false,\n                                            isReadOnly:         isDefined( field.read_only ) ? field.read_only : false,\n                                            supportsTinyMCE:    isDefined( field.supports_tinymce ) ? field.supports_tinymce : false,\n                                            supportsCopyToClipboard: isDefined( field.copy_to_clipboard ) ? field.copy_to_clipboard : false,\n\n                                            isAjax:             isDefined( field.is_ajax ) ? field.is_ajax : false,\n\n                                            groupId:            groupKey,\n                                            optionCode:         field.option_code,\n                                            fieldType:          field.input_type,\n\n                                            label:              field.label,\n                                            description:        field.description,\n                                            placeholder:        field.placeholder,\n                                            isHidden:           isDefined( field.is_hidden ) ? field.is_hidden : false,\n                                            tokenName:          isDefined( field.token_name ) ? field.token_name : field.label,\n\n                                            defaultValue:       field.default_value,\n                                            currentValue:       isDefined( item.meta[ field.option_code ] ) ? item.meta[ field.option_code ] : field.default_value,\n                                            customFieldTokens:    isDefined( field.relevant_tokens ) ? field.relevant_tokens : false,\n                                            relevant_tokens:    isDefined( field.relevant_tokens ) ? field.relevant_tokens : false,\n\n                                            maxLength:          isDefined( field.max_length ) ? field.max_length : null,\n                                        }\n\n                                        /**\n                                         * Check for type-specific options\n                                         */\n                                        if ( fieldObject.fieldType == 'date' ){\n                                            fieldObject.dateFormat    = isDefined( field.date_format ) ? field.date_format : 'Y-m-d';\n                                            fieldObject.dateAltFormat = isDefined( field.date_alt_format ) ? field.date_alt_format : UncannyAutomator.format.date;\n\n                                            // Check if it supports a range\n                                            fieldObject.supportsRange = isDefined( field.supports_range ) ? field.supports_range : false;\n\n                                            // Check if it has min date defined\n                                            if ( isDefined( field.min_date ) ){\n                                                fieldObject.minDate = field.min_date;\n                                            }\n\n                                            // Check if it has max date defined\n                                            if ( isDefined( field.max_date ) ){\n                                                fieldObject.maxDate = field.max_date;\n                                            }\n                                        }\n\n                                        if ( fieldObject.fieldType == 'time' ){\n                                            fieldObject.timeFormat    = isDefined( field.time_format ) ? field.time_format : 'h:i K';\n                                            fieldObject.timeAltFormat = isDefined( field.time_alt_format ) ? field.time_alt_format : 'h:i K';\n\n                                            // Check if it has min time defined\n                                            if ( isDefined( field.min_time ) ){\n                                                fieldObject.minTime = field.min_time;\n                                            }\n\n                                            // Check if it has max date defined\n                                            if ( isDefined( field.max_date ) ){\n                                                fieldObject.maxTime = field.max_time;\n                                            }\n                                        }\n\n                                        /**\n                                         * We want to make supportsTokens true by\n                                         * default, but we have to check if the field\n                                         * should support tokens first.\n                                         *\n                                         * - Field type: For now, the token selector\n                                         * only supports text, textarea, integer, float,\n                                         * email, and URL fields. Check if this field\n                                         * is one of those.\n                                         *\n                                         * - Item type: The tokens are rendered only in\n                                         * the user selector, actions and closures.\n                                         * Check if the item type if one of those.\n                                         *\n                                         * - Read-only property: Check if the field is\n                                         * not read-only. Even if the field meets the\n                                         * previous conditions, it doesn't make sense\n                                         * to render the token selector on a field\n                                         * which value is supposed to be unmodifiable.\n                                         *\n                                         * If the field meets all the previous\n                                         * conditions, check if it has a defined value\n                                         * for the supportsTokens property. Otherwise,\n                                         * set it true. If it doesn't meet at least\n                                         * one of the conditions, make it false.\n                                         */\n\n                                        if (\n                                            [ 'text', 'textarea', 'int', 'float', 'email', 'url', 'select', 'date', 'time' ].includes( fieldObject.fieldType ) &&\n                                            [ 'action', 'closure' ].includes( fieldObject.itemType ) &&\n                                            ! fieldObject.isReadOnly\n                                        ){\n                                            fieldObject.supportsTokens = isDefined( field.supports_tokens ) ? field.supports_tokens : true;\n                                        }\n                                        else {\n                                            fieldObject.supportsTokens = false;\n                                        }\n\n                                        // If it's a select, check if it support custom values\n                                        if ( fieldObject.fieldType == 'select' ){\n                                            // Check if the supportsCustomValue parameter is defined. If it's not,\n                                            // then check if the field is being used on an action or closure. If so, make it true\n                                            // by default, or false otherwise. Then, on \"Field\", set the default value to false.\n                                            // We're doing this because, for now, we're supporting custom values on dropdowns\n                                            // only on actions and closures, nowhere else. So if someone tries to use a dropdown\n                                            // outside an action or closure, it shouldn't render the \"custom value\" option by default\n                                            fieldObject.supportsCustomValue = isDefined( field.supports_custom_value ) ? field.supports_custom_value : ( [ 'action', 'closure' ].includes( fieldObject.itemType ) ? true : false );\n                                            // ⚠️ Disable functionality\n                                            // fieldObject.supportsCustomValue = false;\n\n                                            // Check if it supports custom values and it also supports tokens\n                                            if ( fieldObject.supportsCustomValue ){\n                                                // Add custom value\n                                                fieldObject.customValue = isDefined( item.meta[ `${ fieldObject.optionCode }_custom` ] ) ? item.meta[ `${ fieldObject.optionCode }_custom` ] : '';\n                                            }\n\n                                            // Check if it has a description for the custom value field\n                                            if ( isDefined( field.custom_value_description ) ){\n                                                fieldObject.customValueDescription = field.custom_value_description;\n                                            }\n\n                                            // Check if it supports multiple values\n                                            if ( isDefined( field.supports_multiple_values ) ){\n                                                 fieldObject.supportsMultipleValues = field.supports_multiple_values;\n                                            }\n                                        }\n\n                                        // Check if it an AJAX field\n                                        if ( fieldObject.isAjax ){\n                                            fieldObject.targetField   = isDefined( field.fill_values_in ) ? field.fill_values_in : '';\n                                            fieldObject.endpoint      = isDefined( field.endpoint ) ? field.endpoint : '';\n                                            fieldObject.integrationId = globalItem.integration;\n\n                                            // Check if it's an ajax field without target field\n                                            // This means no other field will change when this one changes\n                                            // and that we have to do an AJAX request when rendering the field, on page load\n                                            if ( isEmpty( fieldObject.targetField ) ){\n                                                fieldObject.targetField = field.option_code;\n                                            }\n                                        }\n\n                                        // Check if it's select or radio. In that case, add the options\n                                        if ( [ 'select', 'radio' ].includes( fieldObject.fieldType ) ){\n                                            fieldObject.options = isDefined( field.options ) ? field.options : [];\n                                        }\n\n                                        // Return field object\n                                        return fieldObject;\n                                    }\n\n                                    let fieldObject, fieldInstance;\n\n                                    // Check if it's a group of fields\n                                    if ( field.input_type == 'group' ){\n                                        // Get the field data\n                                        fieldObject = {\n                                            groupId:          groupKey,\n                                            optionCode:       field.option_code,\n                                            fieldType:        field.input_type,\n\n                                            isGroup:          hasMoreThanOneOption,\n                                            itemId:           item.ID,\n                                            itemType:         item.itemType,\n\n                                            label:            field.label,\n                                            description:      field.description,\n\n                                            tokenName:        isDefined( field.token_name ) ? field.token_name : field.label,\n\n                                            isRequired:       isDefined( field.required ) ? field.required : false,\n\n                                            fields: field.fields.map(( fieldData ) => {\n                                                return sanitizeFieldData( fieldData );\n                                            })\n                                        }\n\n                                        // Create field instance\n                                        fieldInstance = new FieldsGroup( fieldObject );\n                                    }\n                                    else if ( field.input_type == 'repeater' ){\n                                        // Try to parse the value of the repeater\n                                        try {\n                                            item.meta[ field.option_code ] = JSON.parse( item.meta[ field.option_code ] );\n                                        } catch ( e ){}\n\n                                        // Get field data\n                                        fieldObject = {\n                                            groupId:          groupKey,\n                                            optionCode:       field.option_code,\n                                            fieldType:        field.input_type,\n\n                                            isGroup:          hasMoreThanOneOption,\n                                            itemId:           item.ID,\n                                            itemType:         item.itemType,\n\n                                            label:            field.label,\n                                            description:      field.description,\n\n                                            tokenName:        isDefined( field.token_name ) ? field.token_name : field.label,\n\n                                            defaultValue:     field.default_value,\n                                            currentValue:     isDefined( item.meta[ field.option_code ] ) ? item.meta[ field.option_code ] : field.default_value,\n\n                                            isRequired:       isDefined( field.required ) ? field.required : false,\n\n                                            hideActions:       isDefined( field.hide_actions ) ? field.hide_actions : false,\n\n                                            fields: field.fields.map(( fieldData ) => {\n                                                return sanitizeFieldData( fieldData );\n                                            })\n                                        }\n\n                                        // Check if this one has a custom \"Add row\" label\n                                        if ( isDefined( field.add_row_button ) ){\n                                            fieldObject.addRowButtonLabel = field.add_row_button;\n                                        }\n\n                                        // Check if this one has a custom \"Remove row\" label\n                                        if ( isDefined( field.remove_row_button ) ){\n                                            fieldObject.removeRowButtonLabel = field.remove_row_button;\n                                        }\n\n                                        // Create field instance\n                                        fieldInstance = new FieldsRepeater( fieldObject );\n                                    }\n                                    // Otherwise, treat it as a normal field\n                                    else {\n                                        // Get the field data\n                                        fieldObject = sanitizeFieldData( field );\n\n                                        // Create the field instance\n                                        fieldInstance = new Field( fieldObject.fieldType, fieldObject, false );\n                                    }\n\n                                    // Add field to the group of fields\n                                    allFieldsOnThisGroup.push( fieldInstance );\n                                });\n\n                                // Array where we're going to save the buttons of this item\n                                let buttons = [];\n\n                                // Check if this group of options has buttons\n                                if ( isDefined( globalItem.buttons ) ){\n                                    // Iterate buttons\n                                    $.each( globalItem.buttons, ( index, button ) => {\n                                        // Check if we have to add the button to this group\n                                        if ( button.show_in == groupKey ){\n                                            buttons.push( button );\n                                        }\n                                    });\n                                }\n\n                                // Push fields to the groupsOfOptions object\n                                groupsOfOptions[ groupKey ] = {\n                                    fields:  allFieldsOnThisGroup,\n                                    isValid: false, // FALSE by default, but we're going to do a validation later\n                                    buttons: buttons\n                                }\n                            });\n\n                            // Create object with the item data\n                            itemToAdd = {\n                                id:              item.ID,\n                                itemType:        item.itemType,\n                                itemCode:        itemCode,\n                                integrationCode: globalItem.integration,\n                                isLive:          item.post_status == 'publish' ? true : false,\n                                options:         groupsOfOptions,\n                                meta:            item.meta,\n                                isMissing:       false,\n                                tokens:          isDefined( item.tokens ) ? item.tokens : [],\n                                inlineCss:       isDefined( globalItem.inline_css ) ? globalItem.inline_css : '',\n                                filterTokens:    isDefined( globalItem.filter_tokens ) ? globalItem.filter_tokens : '',\n                            }\n\n                            // Check if the support link is defined\n                            if ( isDefined( globalItem.support ) ){\n                                itemToAdd.support = globalItem.support;\n                            }\n\n                            // Create meta for those field that don't have a value saved in the database but have a default value\n\n                            // Get all fields\n                            let fields = {};\n\n                            // Create an object with all the options from the field\n                            $.each( groupsOfOptions, function( optionKey, options ){\n                                $.each( options.fields, function( index, field ){\n                                    fields[ field.getAttributes().optionCode ] = field;\n                                });\n                            });\n\n                            $.each( fields, ( index, field ) => {\n                                let fieldAttributes = field.getAttributes();\n                                if ( ( ! isDefined( itemToAdd.meta[ fieldAttributes.optionCode ] ) || isEmpty( itemToAdd.meta[ fieldAttributes.optionCode ] ) ) && ! isEmpty( fieldAttributes.currentValue ) ){\n                                    itemToAdd.meta[ fieldAttributes.optionCode ] = fieldAttributes.currentValue;\n                                }\n                            });\n\n                            // If it's anonymous, add the \"canLogUserIn\" property\n                            // Also set the default value\n                            if ( recipeIsAnonymous ){\n                                itemToAdd.canLogNewUserIn = isDefined( globalItem.can_log_in_new_user ) ? globalItem.can_log_in_new_user : true;\n                            }\n\n                            /*\n\n                            // Create readable meta\n                            itemToAdd.metaReadable = jQuery.extend( true, {}, itemToAdd.meta );\n\n                            // Iterate each meta and search for a readable value\n                            $.each( itemToAdd.metaReadable, ( metaKey, metaValue ) => {\n                                let field = fields[ metaKey ];\n\n                                // Check if there is a field with that ID\n                                if ( isDefined( field ) ){\n                                    field = field.getAttributes();\n\n                                    // Check if it's a select\n                                    if ( field.fieldType == 'select' ){\n                                        let value;\n\n                                        // Iterate each option of the select and search for the text instead of the value\n                                        $.each( field.options, function( index, selectOption ){\n                                            // Compare the value with the metaValue\n                                            if ( selectOption.value == metaValue ){\n                                                // Set new metaValue\n                                                itemToAdd.metaReadable[ metaKey ] = selectOption.text;\n                                            }\n                                        });\n                                    }\n                                }\n                            });\n\n                            // Check if we have to add default values\n                            $.each( fields, function( index, field ){\n                                if ( ! isDefined( itemToAdd.metaReadable[ field.optionCode ] ) && ! isEmpty( field.defaultValue ) ){\n                                    if ( field.fieldType == 'select' ){\n\n                                        // Iterate each option of the select and search for the text instead of the value\n                                        $.each( field.options, function( index, selectOption ){\n                                            // Compare the value with the metaValue\n                                            if ( selectOption.value == metaValue ){\n                                                // Set new metaValue\n                                                itemToAdd.metaReadable[ field.optionCode ] = selectOption.text;\n                                            }\n                                        });\n                                    }\n                                    else {\n                                        itemToAdd.metaReadable[ field.optionCode ] = field.defaultValue;\n                                    }\n                                }\n                            });\n\n                            */\n                        }\n                        else {\n                            // Create object with the item data\n                            itemToAdd = {\n                                id:              item.ID,\n                                itemType:        item.itemType,\n                                itemCode:        item.meta.code,\n                                integrationCode: item.meta.integration,\n                                integrationName: item.meta.integration_name,\n                                sentence:        item.meta.sentence,\n                                isLive:          item.post_status == 'publish' ? true : false,\n                                tokens:          [],\n                                options:         {},\n                                meta:            item.meta,\n                                isMissing:       true,\n                            }\n\n                            // If it's anonymous, add the \"canLogUserIn\" property\n                            // Also set the default value\n                            if ( recipeIsAnonymous ){\n                                itemToAdd.canLogNewUserIn = isDefined( item.meta.can_log_in_new_user ) ? ( item.meta.can_log_in_new_user == 'true' ) : true;\n                            }\n                        }\n\n                        // We have to add it\n                        itemsObject( 'add', itemToAdd );\n                    });\n\n                    // Check if the recipe is anonymous and can log the new user in\n                    if ( recipeIsAnonymous ){\n                        // Set the default value\n                        UncannyAutomator.recipe.canLogNewUserIn = false;\n\n                        // Get the recipe items\n                        const recipeTriggers = itemsObject( 'get', {\n                            filter: {\n                                itemType: 'trigger'\n                            }\n                        });\n\n                        // Check if it has items\n                        if ( Object.keys( recipeTriggers ) > 0 ){\n                            // Change the default value\n                            UncannyAutomator.recipe.canLogNewUserIn = true;\n\n                            // Iterate the triggers\n                            $.each( recipeTriggers, ( index, trigger ) => {\n                                // Check if this trigger allows the recipe\n                                // to log the new user in\n                                UncannyAutomator.recipe.canLogNewUserIn = UncannyAutomator.recipe.canLogNewUserIn && trigger.canLogNewUserIn;\n                            });\n                        }\n                    }\n\n\t\t\t\t\t// Check if we should validate the data\n\t\t\t\t\tif ( ! isDefined( attributes.validate ) || ( isDefined( attributes.validate ) && attributes.validate ) ){\n\t\t\t\t\t\t// Validate the recipe to update the isValid elements\n                    \trecipeObject( 'validate' );\n\t\t\t\t\t}\n                }\n                else {\n                    // Show to the developer what attributes are missing\n                    let missingAttributes = JSON.stringify( arrayDifference( attributes, requiredData ) );\n                    console.error( vsprintf( '%s: Some attributes are missing: %s', [ 'recipeObject', missingAttributes ] ) );\n                }\n\n                break;\n\n            case 'validate':\n                // Valid by default, will be changed to false if we find an error\n                let isRecipeValid = true;\n\n                // Check if the recipe has triggers, actions and/or closures\n                // Update UncannyAutomator.recipe.hasLive\n                $.each( UncannyAutomator.recipe.hasLive, function( itemType, has ){\n                    // All false\n                    UncannyAutomator.recipe.hasLive[ itemType ] = false;\n                });\n\n                // Check if there is at least one item of that type in the main object\n                $.each( UncannyAutomator.recipe.items, function( itemID, itemData ){\n                    // If at least one live item, then set TRUE\n                    if ( itemData.isLive ){\n                        UncannyAutomator.recipe.hasLive[ itemData.itemType ] = true;\n                    }\n                });\n\n                // Iterate each item\n                $.each( UncannyAutomator.recipe.items, function( itemID, itemData ){\n\n                    // We will use this variable to decide if the item is valid or not\n                    let itemIsValid = true;\n\n                    // Iterate each group of fields\n                    $.each( itemData.options, function( optionsGroupID, optionsGroupData ){\n\n                        // We will use this variable to decide if the group of fields is valid or not\n                        let groupIsValid = true;\n\n                        // Iterate each field\n                        $.each( optionsGroupData.fields, function( index, field ){\n                            // Validate the field. Read validateField comments to learn more.\n                            let fieldValidation = field.validate( false );\n\n                            // Check if the option is invalid, if at least one field is invalid make all the group invalid\n                            if ( ! fieldValidation.isValid ){\n                                groupIsValid = false;\n                            }\n                        });\n\n                        // Set result\n                        UncannyAutomator.recipe.items[ itemID ].options[ optionsGroupID ].isValid = groupIsValid;\n\n                        // Check if the group is invalid, if at least on group of fields is invalid make all the item invalid\n                        if ( ! groupIsValid ){\n                            itemIsValid = false;\n                        }\n                    });\n\n                    UncannyAutomator.recipe.items[ itemID ].isValid = itemIsValid;\n\n                    // Check if the item is invalid. If at least one item is invalid make all the recipe invalid\n                    if ( itemData.isLive && ! itemIsValid ){\n                        isRecipeValid = false;\n                    }\n                });\n\n                // Now check what items we have in the object\n                // We must have at least one trigger and an action or closure\n                // Check if it has at least one trigger\n                if ( ! UncannyAutomator.recipe.hasLive.trigger ){\n                    isRecipeValid = false;\n\n                    // Set error message\n                    UncannyAutomator.recipe.message.error = UncannyAutomator.i18n.validation.recipe.oneTrigger;\n                }\n                else {\n                    // Validate user selector\n                    if (\n                        // Check if it's an anonymous recipe\n                        UncannyAutomator.recipe.type == 'anonymous'\n                        // if it requires user data (thus it needs the user selector)\n                        && UncannyAutomator.recipe.requiresUserData\n                        // and if the user selector is not valid (doesn't have required data)\n                        && ! UncannyAutomator.recipe.userSelector.isValid\n                    ){\n                        // Then the recipe is not valid\n                        isRecipeValid = false;\n\n                        // Add message\n                        UncannyAutomator.recipe.message.error = UncannyAutomator.i18n.validation.recipe.userSelector;\n                    }\n                    else {\n                        // Check if it has at least one action or closure\n                        if ( ! UncannyAutomator.recipe.hasLive.action && ! UncannyAutomator.recipe.hasLive.closure ){\n                            isRecipeValid = false;\n\n                            // Set error message\n                            UncannyAutomator.recipe.message.error = UncannyAutomator.i18n.validation.recipe.oneAction;\n                        }\n                        else {\n                            // Check if the message has to be more generic\n                            if ( ! UncannyAutomator.recipe.hasLive.trigger && ( ! UncannyAutomator.recipe.hasLive.action && ! UncannyAutomator.recipe.hasLive.closure ) ){\n                                // Set error message\n                                UncannyAutomator.recipe.message.error = UncannyAutomator.i18n.validation.recipe.liveItems;\n                            }\n                        }\n                    }\n                }\n\n                UncannyAutomator.recipe.isValid = isRecipeValid;\n\n                // Reset message if recipe is valid\n                if ( isRecipeValid ){\n                    // Reset message, we don't need it\n                    UncannyAutomator.recipe.message.error = '';\n                }\n\n                // Everything is ok, return true\n                response = true;\n\n                break;\n        }\n    }\n    else {\n        // Has to add error code\n        console.error( vsprintf( '%s: The action \"%s\" isn\\'t defined', [ 'recipeObject', action ] ) );\n    }\n\n    return response;\n}\n\n/**\n * Add, update, delete, update, validate and clean the main recipe object\n *\n * @since 0.2\n *\n * @param {string}   action - Action to perform. Valid actions: 'add', 'update', 'delete', 'reset', 'get', and 'clean'.\n * @param {object}   attributes\n * The required properties depend of the requested action.\n * For the 'update' action it have to include the properties that need to be updated in the items object.\n * For the 'add' action:\n * @param {int}      attributes.id        Item ID\n * @param {string}   attributes.itemType  The item type. The valid types are 'trigger', 'action' and 'closure'\n *\n * @return {boolean} TRUE if the action was made successfully\n */\n\nexport function itemsObject( action = null, attributes = {} ){\n    // Create response variable and set default value\n    let response     = false;\n\n    // Define valid actions\n    let validActions = [ 'add', 'delete', 'clean', 'reset', 'update', 'get' ];\n\n    // Check if the action is not undefined and if it's a valid action\n    if ( isDefined( action ) && inArray( action, validActions ) ){\n\n        switch ( action ){\n            case 'add':\n                // Extend default attributes object with default values\n                attributes = $.extend({\n                    isValid: false, // Because it's going to be empty\n                    isLive: false, // Draft by default\n                }, attributes );\n\n                // Define required attributes properties\n                let requiredData = [ 'id', 'itemType' ];\n\n                // Check if the attributes object has all the required properties\n                if ( inArray( requiredData, Object.keys( attributes ) ) ){\n\n                    // Has ID, check if it wasn't added\n                    if ( ! isDefined( UncannyAutomator.recipe.items[ attributes.id ] ) ){\n\n                        // Create property\n                        UncannyAutomator.recipe.items[ attributes.id ] = attributes;\n\n                        // Clean undefined properties\n                        itemsObject( 'clean', {} );\n\n                        // Everything is ok, return true\n                        response = true;\n                    }\n                }\n                else {\n                    // Show to the developer what attributes are missing\n                    let missingAttributes = JSON.stringify( arrayDifference( attributes, requiredData ) );\n                    console.error( vsprintf( '%s: Some attributes are missing: %s', [ 'itemsObject', missingAttributes ] ) );\n                }\n\n                break;\n\n            case 'delete':\n                attributes = $.extend({\n                    isValid: false,\n                }, attributes );\n\n                if ( ! isEmpty( attributes.id ) ){\n\n                    if ( isDefined( UncannyAutomator.recipe.items[ attributes.id ] ) ){\n                        delete UncannyAutomator.recipe.items[ attributes.id ];\n\n                        // Everything is ok, return true\n                        response = true;\n                    }\n                    else {\n                        console.error( vsprintf( '%s: We didn\\'t find an item with this the ID %s', [ 'itemsObject', attributes.id ] ) );\n                    }\n\n                }\n                else {\n                    console.error( vsprintf( '%s: Invalid item ID', [ 'itemsObject' ] ) );\n                }\n\n                break;\n\n            case 'clean':\n                // Delete undefined and null properties\n\n                let items = {};\n\n                $.each( UncannyAutomator.recipe.items, function( index, value ){\n                    if ( isDefined( value ) ){\n                        items[ index ] = value;\n                    }\n                });\n\n                UncannyAutomator.recipe.items = items;\n\n                // Everything is ok, return true\n                response = true;\n\n                break;\n\n            case 'update':\n                // Update item attributes\n\n                if ( ! isEmpty( attributes.id ) ){\n\n                    if ( isDefined( UncannyAutomator.recipe.items[ attributes.id ] ) ){\n\n                        // Extend item object properties with new ones\n                        UncannyAutomator.recipe.items[ attributes.id ] = $.extend( {}, UncannyAutomator.recipe.items[ attributes.id ], attributes );\n\n                        // Everything is ok, return true\n                        response = true;\n\n                    }\n                    else {\n                        console.error( vsprintf( '%s: We didn\\'t find an item with this the ID %s', [ 'itemsObject', attributes.id ] ) );\n                    }\n\n                }\n                else {\n                    console.error( vsprintf( '%s: Invalid item ID', [ 'itemsObject' ] ) );\n                }\n\n                break;\n\n            case 'reset':\n                // Delete all the items in the items object\n                UncannyAutomator.recipe.items = {}\n\n                // Return true\n                response = true;\n                break;\n\n            case 'get':\n                // Check if we have to filter items\n                if ( ! isEmpty( attributes.filter ) ){\n                    // Create a new items object. We're going to add items to this one if the filters match\n                    let items = {}\n                    // Iterate all current items\n                    $.each( UncannyAutomator.recipe.items, function( itemId, item ){\n                        let matchFilters = true;\n\n                        $.each( attributes.filter, function( key, value ){\n                            if ( item[ key ] != value ){\n                                matchFilters = false;\n                            }\n                        });\n\n                        // Check if we have to add this item\n                        if ( matchFilters ){\n                            items[ itemId ] = item;\n                        }\n                    });\n\n                    // Return the new items object\n                    response = items;\n                }\n                else {\n                    response = UncannyAutomator.recipe.items;\n                }\n\n                break;\n        }\n    }\n    else {\n        // Has to add error code\n        console.error( vsprintf( '%s: The action \"%s\" isn\\'t defined', [ 'itemsObject', action ] ) );\n    }\n\n    return response;\n}\n\n/**\n * Add the triggers and actions to each integration.\n * Change the data structure so it's possible to know\n * what items and integrations are pro\n *\n * @since 2.1.4\n */\nexport function groupItemsByIntegration(){\n    // Iterate the integrations\n    Object.entries( UncannyAutomator.integrations ).forEach(([ integrationID, integration ]) => {\n        // Get the list of available triggers and actions\n        // Sort them alphabetically\n        let triggers = {\n                available:   sortArrayOfObjectsAlphabetically( UncannyAutomator.triggers.filter( item => item.integration == integrationID ), 'select_option_name', sentence => replaceCurlyBraces( sentence ) ),\n                unavailable: [],\n            },\n            actions  = {\n                available:   sortArrayOfObjectsAlphabetically( UncannyAutomator.actions.filter( item => item.integration == integrationID ), 'select_option_name', sentence => replaceCurlyBraces( sentence ) ),\n                unavailable: []\n            };\n\n        if ( ! isDefined( UncannyAutomator.wp ) || ! UncannyAutomator.wp ){\n            // Check if there are PRO items for this integration\n            if (\n                isDefined( UncannyAutomator.proFeatures ) &&\n                isDefined( UncannyAutomator.proFeatures[ integrationID ] )\n            ){\n                // Get the recipe type\n                let recipeType = UncannyAutomator.recipe.type;\n                // Just for filtering the triggers, change \"user\" to \"logged-in\"\n                recipeType = recipeType == 'user' ? 'logged-in' : recipeType;\n\n                // Push the pro triggers to the unavailable triggers array\n                // Sort them alphabetically\n                triggers.unavailable = sortArrayOfObjectsAlphabetically(\n                    // Elements to sort alphabetically\n                    UncannyAutomator.proFeatures[ integrationID ].triggers\n                        // Filter by recipe type\n                        // trigger.type is the trigger time\n                        .filter(\n                            trigger => trigger.type == recipeType\n                        ),\n                    // Sort them by name\n                    'name',\n                    // Remove the curly braces before comparing the names\n                    sentence => replaceCurlyBraces( sentence )\n                );\n\n                // Push the pro actions to the unavailable actions array\n                // Sort them alphabetically\n                actions.unavailable  = sortArrayOfObjectsAlphabetically(\n                    UncannyAutomator.proFeatures[ integrationID ].actions,\n                    'name',\n                    sentence => replaceCurlyBraces( sentence )\n                );\n            }\n        }\n\n        // Evaluate if all the available items are pro\n        // To do that, iterate every element using the method every\n        // and return the value of \"is_pro\"\n        triggers.allItemsArePro     = triggers.available.every( item => isDefined( item.is_pro ) ? item.is_pro : false );\n        actions.allItemsArePro      = actions.available.every( item => isDefined( item.is_pro ) ? item.is_pro : false );\n\n        // Check if the integration has available triggers and actions\n        triggers.hasAvailableItems  = triggers.available.length > 0;\n        actions.hasAvailableItems   = actions.available.length > 0;\n\n        // Check if the integration has unavailable triggers and actions\n        triggers.hasUnavailableItems = triggers.unavailable.length > 0;\n        actions.hasUnavailableItems  = actions.unavailable.length > 0;\n\n        // Check if it has any kind of items\n        triggers.hasTriggers = triggers.hasAvailableItems || triggers.unavailable.length > 0;\n        actions.hasActions   = actions.hasAvailableItems || actions.unavailable.length > 0;\n\n        // Add the items to the integration\n        UncannyAutomator.integrations[ integrationID ].items = {\n            triggers: triggers,\n            actions:  actions\n        }\n    });\n}\n\n/**\n * Sort an array of objects using one of the properties\n *\n * @since  2.1.4\n * @param  {Array}  items             The array\n * @param  {String} propertyToCompare The property used to compare the elements\n * @return {Array}                    The array, sorted\n */\nexport function sortArrayOfObjectsAlphabetically( items = [], propertyToCompare = '', filter ){\n    // Check if there isn't a filter defined\n    if ( ! isDefined( filter ) ){\n        filter = value => value;\n    }\n\n    // Check if it's an array and it's not empty\n    if ( Array.isArray( items ) && ! isEmpty( items ) ){\n        // Sort the array of integrations using the integration name\n        items = items.sort(( a, b ) => {\n            // Define the default value\n            let compare = 0;\n\n            // Check if the elements have the properties we're going to use to compare\n            if ( isDefined( a[ propertyToCompare ] ) && isDefined( b[ propertyToCompare ] ) ){\n                // Filter the values\n                let valueA = filter( a[ propertyToCompare ] ),\n                    valueB = filter( b[ propertyToCompare ] );\n\n                // Check which integration name should go first\n                compare = valueA.localeCompare( valueB );\n\n                // Validate the value\n                // Do NOT rely on exact return values of -1 or 1\n                // Negative and positive integer results vary between browsers (as well as between browser versions) because the W3C specification only mandates negative and positive values. Some browsers may return -2 or 2, or even some other negative or positive value.\n                compare = compare > 0 ? 1 : compare;\n                compare = compare < 0 ? -1 : compare;\n            }\n\n            // Return result\n            return compare;\n        });\n    }\n\n    // Return the new array\n    return items;\n}\n\n/**\n * Get a list of triggers or actions by integration\n * @param  {String} integrationID The integration ID\n * @param  {String} itemType      The item type. Valid values: \"trigger\", \"triggers\", \"action\" and \"actions\"\n * @return {Object}               And object with the available and unavailable items\n *\n * @since 2.1.4\n */\nexport function getItemsByIntegration( integrationID = '', itemType = 'triggers', options ){\n    // Extend the options\n    options = Object.assign({\n        addDeprecatedItems: false,\n    }, options );\n\n    // Create the array where we're going to save the items\n    let items = {\n        available: {},\n        unavailable: {}\n    };\n\n    // Convert itemType \"trigger\" to \"triggers\"\n    itemType = itemType == 'trigger' ? 'triggers' : itemType;\n    // Convert itemType \"action\" to \"actions\"\n    itemType = itemType == 'action' ? 'actions' : itemType;\n\n    // Validate the parameter itemType\n    if ( [ 'triggers', 'actions' ].includes( itemType ) ){\n        // Check if the integration ID is defined\n        if ( ! isEmpty( integrationID ) ){\n            // Check if the integration exists\n            if ( isDefined( UncannyAutomator.integrations[ integrationID ] ) ){\n                // Get the requested items\n                items = $.extend( true, {}, UncannyAutomator.integrations[ integrationID ].items[ itemType ] );\n\n                // Check if we have to remove the deprecated items\n                if ( ! options.addDeprecatedItems ){\n                    // Remove deprecated items\n                    items = filterDeprecatedItems( items );\n                }\n            }\n        }\n    }\n\n    // Return the triggers\n    return items;\n}\n\n/**\n * Get data about a trigger or action using the item code\n *\n * @since 3.1.0\n * \n * @param  {String} integrationID The integration ID\n * @param  {String} itemType      The item type. Vlaid values: \"trigger\", \"triggers\", \"action\" and \"actions\"\n * @param  {String} itemCode      The item code\n * @param  {Object} options       Options\n * @return {Object}               Data about the item\n */\nexport function getItemByCode( integrationID = '', itemType = 'triggers', itemCode = '', options = {} ){\n    // Default response\n    let item;\n\n    // Extend the options\n    options = Object.assign({\n        addDeprecatedItems:  false\n    }, options );\n\n    // Convert itemType \"trigger\" to \"triggers\"\n    itemType = itemType == 'trigger' ? 'triggers' : itemType;\n    // Convert itemType \"action\" to \"actions\"\n    itemType = itemType == 'action' ? 'actions' : itemType;\n\n    // Validate the parameter itemType\n    if ( [ 'triggers', 'actions' ].includes( itemType ) ){\n        // Check if the integration ID is defined\n        if ( ! isEmpty( integrationID ) ){\n            // Get the integration items\n            const integrationItems = getItemsByIntegration( integrationID, itemType, {\n                addDeprecatedItems: options.addDeprecatedItems\n            });\n\n            // Get the available items\n            let items = integrationItems.available;\n\n            // Search the item\n            items.forEach(( integrationItem ) => {\n                // Check the item code\n                if ( integrationItem.code == itemCode ){\n                    // Save it\n                    item = integrationItem;\n                }\n            });\n        }\n    }\n\n    return item;\n}\n\n/**\n * Removes deprecated items from an items object\n *\n * @param  Object   items  Items object\n * @return Object          Items object, without deprecated items\n */\nexport function filterDeprecatedItems( items ){\n    // Remove deprecated items\n    items.available = items.available.filter( item => ! item.is_deprecated );\n\n    // Check if there are still available items\n    items.hasAvailableItems = items.available.length > 0;\n\n    // Check if it still has triggers or actions\n    if ( isDefined( items.hasTriggers ) ){\n        items.hasTriggers = items.hasAvailableItems || items.unavailable.length > 0;\n    }\n    else if ( isDefined( items.hasActions ) ){\n        items.hasActions  = items.hasAvailableItems || items.unavailable.length > 0;\n    }\n\n    // Check if all the available items are pro now\n    items.allItemsArePro = items.available.every( item => isDefined( item.is_pro ) ? item.is_pro : false );\n\n    return items;\n}\n\n/**\n * Update user selector data\n *\n * @since  2.0\n */\n\nexport function userSelectorObject( action = null, attributes = {} ){\n    // Create response variable and set default value\n    let response     = false;\n\n    // Define valid actions\n    let validActions = [ 'set-step', 'get-step', 'set-source', 'update-fields', 'reset-fields' ];\n\n    // Create shortcut of the user selector object\n    const userSelector = UncannyAutomator.recipe.userSelector;\n\n    // Check if the action is not undefined and if it's a valid action\n    if ( isDefined( action ) && inArray( action, validActions ) ){\n        // Create empty array to check if the actions have the required data\n        let requiredData = [];\n\n        switch ( action ){\n            /**\n             * Get the current step so we know what we have to render\n             * There are 4 steps:\n             *\n             * 1. select-source: Where the recipe creator select the source of the user.\n             *                   The options are \"Existing user\" and \"New user\".\n             * 2. set-options: Where the recipe creator defines values of the fields.\n             * 3. show-sentence: When the data is complete and valid.\n             */\n\n            case 'set-step':\n                // Define required attributes properties\n                requiredData = [ 'step' ];\n\n                // Check if the attributes object has all the required properties\n                if ( inArray( requiredData, Object.keys( attributes ) ) ){\n                    // Set status\n                    UncannyAutomator.recipe.userSelector.step = attributes.step;\n                }\n                else {\n                    // Show to the developer what attributes are missing\n                    let missingAttributes = JSON.stringify( arrayDifference( attributes, requiredData ) );\n                    console.error( vsprintf( '%s: Some attributes are missing: %s', [ 'userSelectorObject', missingAttributes ] ) );\n                }\n\n                break;\n\n            case 'get-step':\n                // Create the variable we're going to return\n                // Set default value\n                let step = 'select-source';\n\n                // Check if the step property is defined\n                if ( isDefined( UncannyAutomator.recipe.userSelector.step ) ){\n                    // If it is, then return that value\n                    step = UncannyAutomator.recipe.userSelector.step;\n                }\n                else {\n                    // Try to get step\n                    // Check if there are fields saved\n                    if ( ! isEmpty( UncannyAutomator.recipe.userSelector.data[ UncannyAutomator.recipe.userSelector.source ] ) ){\n                        // Show sentence\n                        step = 'show-sentence';\n\n                        // If we have fields it's because we already valid them before,\n                        // thus the user selector is valid\n                        UncannyAutomator.recipe.userSelector.isValid = true;\n                    }\n                }\n\n                // Return step\n                response = step;\n\n                break;\n\n            case 'set-source':\n                // Define required attributes properties\n                requiredData = [ 'source' ];\n\n                // Check if the attributes object has all the required properties\n                if ( inArray( requiredData, Object.keys( attributes ) ) ){\n                    // Set status\n                    UncannyAutomator.recipe.userSelector.source = attributes.source;\n                }\n                else {\n                    // Show to the developer what attributes are missing\n                    let missingAttributes = JSON.stringify( arrayDifference( attributes, requiredData ) );\n                    console.error( vsprintf( '%s: Some attributes are missing: %s', [ 'userSelectorObject', missingAttributes ] ) );\n                }\n\n                break;\n\n            case 'update-fields':\n                // Define required attributes properties\n                requiredData = [ 'source', 'data' ];\n\n                // Check if the attributes object has all the required properties\n                if ( inArray( requiredData, Object.keys( attributes ) ) ){\n                    // Check if the source parameter is valid\n                    if ( [ 'existingUser', 'newUser' ].includes( attributes.source ) ){\n                        // Check if we already have fields\n                        if ( isEmpty( UncannyAutomator.recipe.userSelector.data ) ){\n                            UncannyAutomator.recipe.userSelector.data = {\n                                existingUser: {},\n                                newUser: {}\n                            }\n                        }\n\n                        // Update fields\n                        UncannyAutomator.recipe.userSelector.data[ attributes.source ] = $.extend( {}, UncannyAutomator.recipe.userSelector.data[ attributes.source ], attributes.data );\n                    }\n                    else {\n                        // Show to the developer what's wrong\n                        console.error( vsprintf( '%s: The source parameter is invalid. Valid values are: %s', [ 'userSelectorObject', [ 'existingUser', 'newUser' ] ] ) );\n                    }\n                }\n                else {\n                    // Show to the developer what attributes are missing\n                    let missingAttributes = JSON.stringify( arrayDifference( attributes, requiredData ) );\n                    console.error( vsprintf( '%s: Some attributes are missing: %s', [ 'userSelectorObject', missingAttributes ] ) );\n                }\n\n                break;\n\n            case 'reset-fields':\n                // Return boolean\n                UncannyAutomator.recipe.userSelector.data = {\n                    existingUser: {},\n                    newUser: {}\n                }\n                break;\n        }\n    }\n    else {\n        // Has to add error code\n        console.error( vsprintf( '%s: The action \"%s\" isn\\'t defined', [ 'userSelectorObject', action ] ) );\n    }\n\n    return response;\n}\n\n/**\n * Filter triggers, actions and closures by recipe type.\n * This won't filter the items of a recipe, but the available\n * items in Automator\n *\n * @since 2.0\n *\n * @return null\n */\n\nexport function filterAutomatorItemsByRecipeType(){\n    // Check if the type attribute has a valid value\n    if ( [ 'user', 'anonymous' ].includes( UncannyAutomator.recipe.type ) ){\n        // Check if debug mode is enabled\n        if ( UncannyAutomator.dev.debugMode ){\n            // Start group\n            consoleLogLabel( 'Filter Automator items', true, {\n                collapseGroup: true\n            });\n\n            // Show current recipe type\n            console.log( vsprintf( 'Current recipe type: %s', [ UncannyAutomator.recipe.type ] ) );\n        }\n\n        // Filter triggers\n        UncannyAutomator.triggers = UncannyAutomator.triggers.filter(( trigger ) => {\n            // Check if debug mode is enabled\n            if ( UncannyAutomator.dev.debugMode ){\n                // Show trigger\n                console.log( trigger );\n\n                // Show decision\n                if ( trigger.type == UncannyAutomator.recipe.type ){\n                    consoleLogResult( 'success', 'Keep' );\n                }\n                else {\n                    consoleLogResult( 'error', 'Remove' );\n                }\n            }\n\n            // Check if it matches the recipe type\n            return trigger.type == UncannyAutomator.recipe.type;\n        });\n\n        // Check if debug mode is enabled\n        if ( UncannyAutomator.dev.debugMode ){\n            // Start group\n            console.groupEnd();\n        }\n    }\n}\n\n/**\n * Performs a REST Call\n *\n * @since     0.1\n * @modified  0.5\n *\n * @param {string}    endPoint - Endpoint of the REST call\n * @param {object}    data - Data to be sent in the call\n * @param {callback}  [onSuccess] - Function to be invoked if the call is successful\n * @param {callback}  [onFail] - Function to be invoked if the call fails\n *\n * @return null\n */\n\nexport function restCall( endPoint = null, data = null, onSuccess = null, onFail = null, options = {} ){\n    // Define the valid endpoints\n    let validEndpoints = [ 'add', 'delete', 'update', 'change_post_status', 'recipe_completions_allowed', 'recipe_max_completions_allowed', 'change_post_title', 'change_post_recipe_type', 'user-selector', 'set_recipe_terms', 'schedule_action', 'remove_schedule', 'set_recipe_requires_user' ];\n\n    // Check custom options\n    options = $.extend({}, {\n        'requiresRecipesObject': true,\n        'renderUI':              true\n    }, options );\n\n    // Check if the endPoint parameter is a valid endpoint\n    if ( inArray( endPoint, validEndpoints ) ){\n\n        // Do AJAX\n        $.ajax({\n            method:   'POST',\n            url:      `${ UncannyAutomator.restURL }/${endPoint}/`,\n            data:     $.param( data ) + '&' + $.param({ doing_rest: 1 }),\n            dataType: 'json',\n\n            // Attach Nonce the the header of the request\n            beforeSend: function( xhr ){\n                xhr.setRequestHeader( 'X-WP-Nonce', UncannyAutomator.nonce );\n            },\n\n            success: function( response ){\n                // Show console messages if debug is enabled\n                if ( UncannyAutomator.dev.debugMode ){\n                    consoleLogLabel( 'REST call ✅', true, {\n                        collapseGroup: true\n                    });\n                    console.log( `Endpoint: ${ endPoint }` );\n                    console.log( 'Data:' );\n                    console.log( data );\n                    console.log( 'Response:' );\n                    console.log( response );\n                    console.groupEnd();\n                }\n\n                // Check if the request succeeded\n                if ( response.success ){\n                    // Check if we have the new recipes_object, otherwise the data will change on the server but not in the UI\n                    if ( isDefined( response.recipes_object ) || ! options.requiresRecipesObject ){\n                        // Check if onSuccess\n                        if ( isDefined( onSuccess ) ){\n                            // Check if we have to render the UI again\n                            if ( options.renderUI ){\n                                recipeObject( 'create', {\n                                    allRecipes: response.recipes_object\n                                });\n                            }\n\n                            // Invoke callback\n                            onSuccess( response );\n                        }\n                    }\n                    else {\n                        // The call was successful, but the new recipes_object is missing\n                        console.error( 'The call was successful, but the new recipes_object is missing.' );\n\n                        // Check if the onFail callback is defined\n                        if ( isDefined( onFail ) ){\n                            // Invoke callback\n                            onFail( response );\n                        }\n                    }\n                }\n                else {\n                    // The call was successful, but there were errors,\n                    console.error( 'The call was successful, but there were errors.' );\n                    // console.log( response );\n\n                    // Check if the onFail callback is defined\n                    if ( isDefined( onFail ) ){\n                        // Invoke callback\n                        onFail( response );\n                    }\n                }\n            },\n\n            statusCode: {\n                403: function( response ){\n                    // Show console messages if debug is enabled\n                    if ( UncannyAutomator.dev.debugMode ){\n                        consoleLogLabel( 'REST call 🔴', true, {\n                            collapseGroup: true\n                        });\n                        console.log( 'Data:' );\n                        console.log( data );\n                        console.log( 'Response' );\n                        console.log( '%c403: Access denied', 'color: red' );\n                        console.groupEnd();\n                    }\n\n                    if ( isDefined( onFail ) ){\n                        onFail( response );\n                    }\n                }\n            },\n\n            error: function( jqXHR, textStatus, errorThrown ){\n                // console.log( jqXHR );\n                // console.log( textStatus );\n                // console.log( errorThrown );\n\n                // Show console messages if debug is enabled\n                if ( UncannyAutomator.dev.debugMode ){\n                    consoleLogLabel( 'REST call 🔴', true, {\n                        collapseGroup: true\n                    });\n                    console.log( 'Data:' );\n                    console.log( data );\n                    console.log( 'Response' );\n                    console.log( '%cUnknown error', 'color: red' );\n                    console.groupEnd();\n                }\n\n                if ( isDefined( onFail ) ){\n                    onFail({\n                        success: false,\n                    });\n                }\n            },\n\n            fail: function ( response ){\n                // Show console messages if debug is enabled\n                if ( UncannyAutomator.dev.debugMode ){\n                    consoleLogLabel( 'REST call 🔴', true, {\n                        collapseGroup: true\n                    });\n                    console.log( 'Data:' );\n                    console.log( data );\n                    console.log( 'Response' );\n                    console.log( '%cUnknown error', 'color: red' );\n                    console.groupEnd();\n                }\n\n                if ( isDefined( onFail ) ){\n                    onFail( response );\n                }\n            },\n        });\n    }\n    else {\n        console.error( vsprintf( 'The %s endPoint does not exists. The valid endpoints are %s', [ endPoint, validEndpoints.join( ', ' ) ] ) );\n    }\n}\n\n/**\n * Performs an AJAX request\n *\n * @since 0.5\n *\n * @param {object}    data - Data to be sent in the request\n * @param {callback}  [onSuccess] - Function to be invoked if the request is successful\n * @param {callback}  [onFail] - Function to be invoked if the request fails\n *\n * @return null\n */\n\nexport function AJAXRequest( action = null, data = null, onSuccess = null, onFail = null ){\n\n    // Check that {action} is defined\n    if ( isDefined( action ) ){\n        // Add {action} to the data object\n        data = $.extend( true, data, {\n            action: action,\n            nonce: UncannyAutomator.nonce\n        });\n\n        // Do AJAX\n        $.ajax({\n            method:   'POST',\n            dataType: 'json',\n            url:      ajaxurl,\n            data:     data,\n\n            success: function( response  ){\n                // Show console messages if debug is enabled\n                if ( UncannyAutomator.dev.debugMode ){\n                    consoleLogLabel( 'AJAX call ✅', true, {\n                        collapseGroup: true\n                    });\n                    console.log( 'Data:' );\n                    console.log( data );\n                    console.log( 'Response' );\n                    console.log( response );\n                    console.groupEnd();\n                }\n\n                // Reload page if user authentication fails\n                if ( isDefined( response.status ) && response.status == 'auth-failed' ){\n                    location.reload();\n                }\n                else {\n                    // Check if onSuccess is defined\n                    if ( isDefined( onSuccess ) ){\n                        // Invoke callback\n                        onSuccess( response, data );\n                    }\n                }\n            },\n\n            statusCode: {\n                403: function(){\n                    // Show console messages if debug is enabled\n                    if ( UncannyAutomator.dev.debugMode ){\n                        consoleLogLabel( 'AJAX call 🔴', true, {\n                            collapseGroup: true\n                        });\n                        console.log( 'Data:' );\n                        console.log( data );\n                        console.log( 'Response' );\n                        consoleLogLabel( '403: Access denied', false, { bgColor: '#ff0000' });\n                        console.groupEnd();\n                    }\n\n                    if ( isDefined( onFail ) ){\n                        onFail( response );\n                    }\n\n                    // Check if the onFail callback is defined\n                    if ( isDefined( onFail ) ){\n                        // Invoke callback\n                        onFail( response );\n                    }\n                }\n            },\n\n            fail: function ( response ){\n                // Show console messages if debug is enabled\n                if ( UncannyAutomator.dev.debugMode ){\n                    consoleLogLabel( 'AJAX call 🔴', true, {\n                        collapseGroup: true\n                    });\n                    console.log( 'Data:' );\n                    console.log( data );\n                    console.log( 'Response' );\n                    console.log( '%cUnknown error', 'color: red' );\n                    console.groupEnd();\n                }\n\n                if ( isDefined( onFail ) ){\n                    onFail( response );\n                }\n\n                // console.log( '%c Failed ', 'background: #ba3535; padding: 2px; color: #fff' );\n                // console.log( response );\n            }\n        });\n    }\n    else {\n        console.error( 'We cannot do this AJAX request. {action} is not defined.' );\n    }\n}\n\n/**\n * This will return all the current value of the field, even if they aren't saved on the database\n * This will use .val() to get the values\n *\n * @since  1.0\n *\n * @param {int} itemId - The ID of the item\n */\n\nexport function getCurrentFieldsValues( itemId ){\n    let values = {};\n\n    // Iterate the items' group of fields\n    $.each( UncannyAutomator.recipe.items[ itemId ].options, ( index, groupOfFields) => {\n        // Iterate each field\n        $.each( groupOfFields.fields, ( index, field ) => {\n            // Get value\n            let fieldId    = field.getFieldID(),\n                fieldValue = field.getValue();\n\n            // Check if it isn't defined. In that case get the current value from the currentValue attribute\n            if ( ! isDefined( fieldValue ) ){\n                fieldValue = field.getAttributes().currentValue;\n            }\n\n            // Check if the field is a select with custom value\n            if ( field.getAttributes().fieldType == 'select' && fieldValue == 'automator_custom_value' ){\n                values[ `${ fieldId }_custom` ] = field.getSelectCustomValue();\n            }\n\n            // Save value\n            values[ fieldId ] = fieldValue;\n\n            // Check if it's a select and also get the readable value\n            if ( ! isEmpty( fieldValue ) && field.getAttributes().fieldType == 'select' ){\n                // Get and save the readable value\n                values[ `${ fieldId }_readable` ] = field.getReadableValue();\n            }\n        });\n    });\n\n    return values;\n}\n\n/**\n * Get a Field instance\n *\n * @since 0.5\n *\n * @param {int}     itemId - The item ID\n * @param {string}  fieldId - The field ID\n *\n * @return {Field}  a Field instance\n */\n\nexport function getField( itemId, fieldId ){\n    let field;\n\n    $.each( UncannyAutomator.recipe.items[ itemId ].options, function( optionsGroupId, optionsGroup ){\n        $.each( optionsGroup.fields, function( index, fieldInstance ){\n            if ( fieldId == fieldInstance.getFieldID() ){\n                field = fieldInstance;\n            }\n        });\n    });\n\n    return field;\n}\n\n/**\n * Get data about a trigger, action or closure\n *\n * @since 0.5\n *\n * @param {string}   itemType - The item type. Valid values are trigger, action and closure\n * @param {string}   itemCode - The item code\n *\n * @return {object}  Item's data\n */\n\nexport function getGlobalItem( integrationID = '', itemType = '', itemCode = '' ){\n\tlet theItem;\n\n\t// Check if all are defined\n\tif ( ! isEmpty( integrationID ) && ! isEmpty( itemType ) && ! isEmpty( itemCode ) ){\n\t\tlet integrationItems = {};\n\n\t\t// Check if the we're trying to get a trigger or action\n\t\tif ( itemType == 'trigger' || itemType == 'action' ){\n\t\t\t// Check if the integration exists\n\t\t\tif ( isDefined( UncannyAutomator.integrations[ integrationID ] ) ){\n\t\t\t\t// Create a reference to the integration\n\t\t\t\tlet integration = UncannyAutomator.integrations[ integrationID ];\n\n\t\t\t\t// Check if the items are defined\n\t\t\t\tif ( isDefined( integration.items ) ){\n\t\t\t\t\t// Set integrationItems\n\t\t\t\t\tintegrationItems = itemType == 'trigger' ? integration.items.triggers.available : integration.items.actions.available;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log( '%cNot ready, who is calling this?', 'background: red; color: #fff; font-weight: 500; padding: 2px 6px;' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if ( itemType == 'closure' ){\n\t\t\tintegrationItems = UncannyAutomator.closures;\n\t\t}\n\n\t\t// Search for the item\n\t\t$.each( integrationItems, function( index, item ){\n\t\t\tif ( item.code == itemCode ){\n\t\t\t\t// Save the item\n\t\t\t\ttheItem = item;\n\n\t\t\t\t// Return false in the loop callback to break the loop\n\t\t \t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\n\t// Return the item\n\treturn theItem;\n}\n\n/**\n * Set the recipe requires user value\n *\n * @since  3.1.0\n * \n * @param  {Boolean} requires  TRUE if the recipe requires a user\n * @param  {Function}  onSuccess Callback, on success\n * @param  {Function}  onFail    Callback, on fail\n */\nexport function recipeSetRequiresUser( requires = false, onSuccess, onFail ){\n    restCall( 'set_recipe_requires_user', {\n        recipePostID: UncannyAutomator.recipe.id,\n        requiresUser: requires\n    }, ( response ) => {\n        // Check if the call was successful\n        if ( response.success ){\n            // Check if the onSuccess callback is defined\n            if ( isDefined( onSuccess ) ){\n                // Update the global \"requiresData\"\n                UncannyAutomator.recipe.requiresUserData = requires;\n\n                // Get the User Selector\n                const $userSelector = getDOMElements( 'user-selector' );\n                // Show it\n                $userSelector.addClass( 'user-selector--show' );\n\n                onSuccess( response );\n            }\n        }  \n    }, ( response ) => {\n        console.log( 'ERROR-TODO. Couldn\\'t set the recipe requires user status' );\n\n        // Check if the onFail callback is defined\n        if ( isDefined( onFail ) ){\n            onFail( response );\n        }\n    });\n}\n\n/**\n * In Automator DOM elements are deleted and created in each step, so the reference to a DOM element change.\n * Use this method to get a metabox, item of optionGroup\n *\n * @since 0.2\n *\n * @param {string}   element - Code of the element that you want to get\n * @param {object}   attributes - Contains required data to get the elements. Depends of the \"element\" value. Check the variable requiredData in each case.\n *\n * @return {object}  Object with DOM elements. The properties depend of \"element\"\n */\n\nexport function getDOMElements( element, attributes = {} ){\n    // Create response object\n    let response = {}\n\n    // Define valid actions\n    let validElements = [ 'metabox', 'items', 'item', 'optionGroup', 'lastItem', 'user-selector' ];\n\n    // Check if the action is not undefined and if it's a valid action\n    if ( isDefined( element ) && inArray( element, validElements ) ){\n        // Create array that will store all the requires attributes properties based on the requested element\n        let requiredData = [];\n\n        switch ( element ){\n            case 'metabox':\n                // Extend default attributes object with default values\n                attributes = $.extend({}, attributes );\n\n                // Define required attributes properties\n                requiredData = [ 'type' ];\n\n                // Check if the attributes object has all the required properties\n                if ( inArray( requiredData, Object.keys( attributes ) ) ){\n                    attributes.cssSelector__metabox;\n\n                    // Check the itemType\n                    if ( attributes.type == 'trigger' ){\n                        attributes.cssSelector__metabox = '#recipe-triggers-ui';\n                    }\n                    else if ( attributes.type == 'action' ){\n                        attributes.cssSelector__metabox = '#recipe-actions-ui';\n                    }\n\n                    let $metabox = $( attributes.cssSelector__metabox )\n\n                    response = $metabox;\n                }\n                else {\n                    // Show to the developer what attributes are missing\n                    let missingAttributes = JSON.stringify( arrayDifference( attributes, requiredData ) );\n                    console.error( vsprintf( '%s: Some attributes are missing: %s', [ 'itemsObject', missingAttributes ] ) );\n                }\n\n                break;\n\n            case 'items':\n                // Extend default attributes object with default values\n                attributes = $.extend({}, attributes );\n\n                // Define required attributes properties\n                requiredData = [ 'type' ];\n\n                // Check if the attributes object has all the required properties\n                if ( inArray( requiredData, Object.keys( attributes ) ) ){\n                    let metabox = getDOMElements( 'metabox', {\n                        type: attributes.type\n                    });\n\n                    // Get jQuery DOM element\n                    let $items = metabox.find( '.item:not(.item--user-selector):not(.item--start):not(.item--closure)' );\n\n                    // Add element to the response\n                    response = $items;\n                }\n                else {\n                    // Show to the developer what attributes are missing\n                    let missingAttributes = JSON.stringify( arrayDifference( attributes, requiredData ) );\n                    console.error( vsprintf( '%s: Some attributes are missing: %s', [ 'itemsObject', missingAttributes ] ) );\n                }\n\n                break;\n\n            case 'item':\n                // Extend default attributes object with default values\n                attributes = $.extend({}, attributes );\n\n                // Define required attributes properties\n                requiredData = [ 'id' ];\n\n                // Check if the attributes object has all the required properties\n                if ( inArray( requiredData, Object.keys( attributes ) ) ){\n                    // Define CSS Selector\n                    attributes.cssSelector = '.uap .item[data-id=\"' + attributes.id + '\"]';\n\n                    // Get jQuery DOM element\n                    let $item = $( attributes.cssSelector ),\n                        $contentContainer = $item.find( '.item__content' );\n\n                    // Add element to the response\n                    response.item = $item;\n                    response.contentContainer = $contentContainer;\n                }\n                else {\n                    // Show to the developer what attributes are missing\n                    let missingAttributes = JSON.stringify( arrayDifference( attributes, requiredData ) );\n                    console.error( vsprintf( '%s: Some attributes are missing: %s', [ 'itemsObject', missingAttributes ] ) );\n                }\n\n                break;\n\n            case 'optionGroup':\n                // Extend default attributes object with default values\n                attributes = $.extend({}, attributes );\n\n                // Define required attributes properties\n                requiredData = [ 'itemID', 'groupID' ];\n\n                // Check if the attributes object has all the required properties\n                if ( inArray( requiredData, Object.keys( attributes ) ) ){\n                    // Get main object\n                    let item = getDOMElements( 'item', { id: attributes.itemID } ).item;\n\n                    // Define CSS Selector\n                    attributes.cssSelector__tokenInSentence = '.item-title__token[data-token-id=\"' + attributes.groupID + '\"]';\n                    attributes.cssSelector__fieldsContainer = '.item-options__group[data-optiongroup=\"' + attributes.groupID + '\"]';\n\n                    let $tokenInSentence  = item.find( attributes.cssSelector__tokenInSentence ),\n                        $fieldsContainer  = item.find( attributes.cssSelector__fieldsContainer ),\n                        $optionsContainer = item.find( '.item-options' );\n\n                    response.tokenInSentence  = $tokenInSentence;\n                    response.fieldsContainer  = $fieldsContainer;\n                    response.optionsContainer = $optionsContainer;\n                }\n                else {\n                    // Show to the developer what attributes are missing\n                    let missingAttributes = JSON.stringify( arrayDifference( attributes, requiredData ) );\n                    console.error( vsprintf( '%s: Some attributes are missing: %s', [ 'itemsObject', missingAttributes ] ) );\n                }\n\n                break;\n\n            case 'lastItem':\n                // Extend default attributes object with default values\n                attributes = $.extend({}, attributes );\n\n                // Define required attributes properties\n                requiredData = [ 'type' ];\n\n                // Check if the attributes object has all the required properties\n                if ( inArray( requiredData, Object.keys( attributes ) ) ){\n                    // Get metabox\n                    let metabox = getDOMElements( 'metabox', {\n                        type: attributes.type\n                    });\n\n                    // Get last item\n                    let lastItem = metabox.find( '.item:not(.item--user-selector):not(.item--start):not(.item--closure)' ).last();\n\n                    response = lastItem;\n                }\n                else {\n                    // Show to the developer what attributes are missing\n                    let missingAttributes = JSON.stringify( arrayDifference( attributes, requiredData ) );\n                    console.error( vsprintf( '%s: Some attributes are missing: %s', [ 'itemsObject', missingAttributes ] ) );\n                }\n\n                break;\n\n            case 'user-selector':\n                // Get user selector container\n                response = $( '.user-selector' );\n\n                break;\n        }\n    }\n    else {\n         // Has to add error code\n        console.error( vsprintf( '%s: The element \"%s\" isn\\'t defined', [ 'getDOMElements', element ] ) );\n    }\n\n    return response;\n}\n\n/**\n * Get the integration icon, both URL and node\n *\n * @since 3.1\n * \n * @param  {String} integrationID The integration ID\n * @return {Object}               Object with the image URL and node\n */\nexport function getIntegrationIcon( integrationID = '' ){\n    // Default response\n    let response = {\n        url:  '',\n        node: null\n    }\n\n    // Get the integration data\n    const integration = UncannyAutomator.integrations[ integrationID ];\n\n    // Check if the integration exists\n    if ( isDefined( integration ) ){\n        // Create img element\n        response.node = document.createElement( 'img' );\n\n        // Check if it has a svg image\n        if ( isDefined( integration.icon_svg ) ){\n            // Get the URL\n            response.url = integration.icon_svg;\n\n            // Add source to the img element\n            response.node\n                .setAttribute( 'src', integration.icon_svg );\n\n            // Add alt\n            response.node\n                .setAttribute( 'alt', integration.name );\n        }\n        // Check if it has a png image\n        else if ( isDefined( integration.icon_32 ) && isDefined( integration.icon_64 ) ){\n            // Get the URLs\n            response.url = {\n                'icon_16': integration.icon_16,\n                'icon_32': integration.icon_32,\n                'icon_64': integration.icon_64\n            }\n\n            // Add source to the img element\n            response.node\n                .setAttribute( 'src', integration.icon_32 );\n\n            response.node\n                .setAttribute( 'srcset', vsprintf( '%s 1x, %s 2x', [ integration.icon_32, integration.icon_64 ]) );\n\n            // Add alt\n            response.node\n                .setAttribute( 'alt', integration.name );\n        }\n    }\n\n    return response;\n}\n\n/**\n * Get all valid field types.\n * Used for validation\n *\n * @since 0.4\n *\n * @return {array} All the valid field types\n */\n\nexport function getFieldTypes(){\n    // Set valid field types\n    let validFieldTypes = [ 'select', 'textarea', 'text', 'url', 'email', 'int', 'float', 'checkbox', 'radio', 'group', 'date', 'time', 'repeater' ];\n\n    return validFieldTypes;\n}\n\n/**\n * Parse string with SENTENCE tokens\n *\n * @since 0.5\n *\n * @param {object}   item - The item\n * @param {string}   string - The string with the tokens\n * @param {object}   data - Object with the data to replace the text in the tokens.\n *\n * @return {object}  Object with information about the string\n *         {string}  response.plain - The string with the tokens replaced with the data\n *         {string}  response.html - The string with the tokens replaced with the data and enclosed in HTML tags\n *         {object}  response.elements\n *         {array}   response.elements.normal - Array of jQuery object. All the non-tokens part of the sentence\n *         {array}   response.elements.tokens - Array of jQuery object. All the tokens part of the sentence\n *         {array}   response.parts\n *         {object}  response.parts[ n ] - Object with information about each part of the sentence\n */\n\nexport function parseStringWithTokens( item = null, string = '', data = {}, forceReDo = true ){\n    let response = null;\n\n    if (\n        /* isDefined( UncannyAutomator.recipe.items[ item.id ].itemSentence )\n        && forceReDo == false */\n        false\n    ){\n        response = UncannyAutomator.recipe.items[ item.id ].itemSentence;\n    }\n    else {\n        // Create response object\n        response = {\n            plain:      '',\n            brackets:   '',\n            html:       $( '<div/>' ),\n            elements:   {\n                normal: [],\n                token: []\n            },\n            parts: []\n        }\n\n        // Trim string\n        string = string.trim();\n\n        // Check if the string isn't empty\n        if ( ! isEmpty( string ) ){\n            // Create regex\n            let tokensRegex  = new RegExp( /\\{\\{(.*?)\\}\\}/gm ),\n                normals      = [],\n                tokens       = [],\n                mappedString = string;\n\n            // Get tokens\n            let tokenNumber = 0,\n                token;\n\n            string = string.replace( tokensRegex, function( full_match, token ){\n                let tokenParts = token.split( ':' );\n\n                // Get the token placeholder text\n                const tokenPlaceholderText = tokenParts[ 0 ];\n\n                // Get the token value ID\n                const tokenValueID = tokenParts[ 1 ];\n\n                // Get the ID of the group of fields this token has to open\n                // Check if the token should open a different group of options\n                const optionsID = isDefined( tokenParts[ 2 ] ) ? tokenParts[ 2 ] : tokenValueID;\n\n                token = {\n                    type:      'token',\n                    id:        tokenValueID,\n                    text:      tokenPlaceholderText,\n                    optionsID: optionsID,\n                    hasFields: isDefined( item.options[ optionsID ] )\n                }\n\n                // Check if we have data for the token\n                if ( isDefined( data[ token.id ] ) ){\n                    let readableText;\n\n                    if ( data[ token.id ] == 'automator_custom_value' && isDefined( data[ vsprintf( '%s_custom', [ token.id ] ) ] ) ){\n                        readableText = data[ vsprintf( '%s_custom', [ token.id ] ) ];\n                    }\n                    else if ( isDefined( data[ vsprintf( '%s_readable', [ token.id ] ) ] ) ){\n                        readableText    = data[ vsprintf( '%s_readable', [ token.id ] ) ];\n                    }\n\n                    token.originalText  = token.text;\n                    token.text          = isDefined( readableText ) ? readableText : data[ token.id ];\n                }\n\n                // Add token\n                tokens.push( token );\n\n                // Add token to the mapped string\n                mappedString = mappedString.replace( full_match, '{{token:' + tokenNumber + '}}' );\n                tokenNumber++;\n\n                return '{{v}}';\n            });\n\n            let stringParts = string.split( '{{v}}' );\n\n            // Get normals\n            let normalNumber = 0;\n            $.each( stringParts, function( key, sentenceSection ){\n                if ( sentenceSection != '' ){\n                    // Create normal part\n                    let normal = {\n                        type: 'normal',\n                        text: sentenceSection\n                    }\n\n                    // Add normal text\n                    normals.push( normal );\n\n                    // Add \"normal\" part to the mapped string\n                    mappedString = mappedString.replace( sentenceSection, '{{normal:' + normalNumber + '}}' );\n                    normalNumber++;\n                }\n            });\n\n            // Create response.parts\n            let match;\n\n            while ( ( match = tokensRegex.exec( mappedString ) ) !== null ){\n                // Get info\n                let part = match[ 1 ].split( ':' );\n\n                part = {\n                    type:  part[ 0 ],\n                    index: part[ 1 ]\n                }\n\n                // Get part object and add to parts\n                if ( part.type == 'normal' ){\n                    response.parts.push( normals[ part.index ] );\n                }\n                else {\n                    response.parts.push( tokens[ part.index ] );\n                }\n            }\n\n            // Check if the sentence has tokens\n            let itemTokens = null;\n\n            // Create plain text and HTML versions\n            $.each( response.parts, function( index, part ){\n                // Plain text\n                response.plain += part.text;\n\n                // HTML\n                if ( part.text != ' ' ){\n                    let elementAttributes,\n                        text = part.text;\n\n                    let contentIsNode  = false,\n                        tagNodeContent = null;\n\n                    // Check if first character is a space\n                    let startsWithSpace = text[ 0 ] == ' ';\n                    if ( startsWithSpace ){\n                        text = text.slice( 1 );\n                    }\n\n                    // Check if last character is a space\n                    let endsWithSpace   = text[ text.length - 1 ] == ' ';\n                    if ( endsWithSpace ){\n                        text = text.slice( 0, -1 );\n                    }\n\n                    if ( ( part.type == 'normal' ) || ( part.type == 'token' && ! part.hasFields && ! item.isMissing ) ){\n                        elementAttributes = {\n                            'class': 'item-title__normal'\n                        }\n\n                        // Add normal-text part to the brackets version\n                        response.brackets += part.text;\n                    }\n                    else {\n                        let CSSClass = 'item-title__token';\n\n                        elementAttributes = {\n                            'class':           CSSClass,\n                            'data-token-id':   part.id,\n                            'data-options-id': part.optionsID\n                        }\n\n                        // Check if it's using a valid ID\n                        if ( isDefined( item.options[ part.optionsID ] ) ){\n                            // Check if the section is valid\n                            if ( item.options[ part.optionsID ].isValid ){\n                                // Add filled class\n                                elementAttributes[ 'class' ] += ' item-title__token--filled';\n                            }\n                        }\n\n                        // Check if it's filled\n                        if ( isDefined( part.originalText ) ){\n                            // Add filled class\n                            // elementAttributes[ 'class' ] += ' item-title__token--filled';\n\n                            // Check if the text is a token\n                            let isValidToken = false;\n\n                            if ( tokensRegex.test( text ) ){\n                                // Check if we already have the tokens data\n                                if ( ! isDefined( itemTokens ) ){\n                                    itemTokens = new Tokens(\n                                        item.itemType,\n                                        'text',\n                                        {\n                                            includeGroupName: false\n                                        }\n                                    );\n                                }\n\n                                // Check if it's a valid token\n                                let token = itemTokens.renderTextWithTokens( text );\n\n                                if ( isDefined( token ) ){\n                                    // Change the validity of the token\n                                    isValidToken   = true;\n                                    contentIsNode  = true;\n                                    tagNodeContent = token;\n                                }\n                            }\n\n                            if ( ! contentIsNode ){\n                                // Define text of the token\n                                let abbreviatedText = abbreviateText( text, 30 );\n\n                                // Check if the text was long enough to abbreviate it\n                                if ( abbreviatedText.isAbbreviated ){\n                                    // Add tooltip with the complete text\n                                    elementAttributes[ 'uap-tooltip' ] = text;\n\n                                    // Replace original text\n                                    text = abbreviatedText.text;\n                                }\n                            }\n                        }\n\n                        // Add token to the brackets version\n                        response.brackets += `{{${ decodeEntities( text ) }}}`;\n                    }\n\n                    let element = $( '<span/>', elementAttributes );\n\n                    if ( contentIsNode ){\n                        element\n                            .append( tagNodeContent );\n                    }\n                    else {\n                        element\n                            .text( decodeEntities( text ) );\n                    }\n\n                    // Add to the elements array\n                    response.elements[ part.type ].push( element );\n\n                    // Check if we have to preppend a space\n                    if ( startsWithSpace ){\n                        // response.html.append( ' ' );\n                    }\n\n                    // Append HTML\n                    response.html.append( element );\n\n                    /*\n\n                    // Append to the HTML\n                    // 2.0, remove \"item-title__normal\"\n                    // If it's a token, add the element\n                    if ( part.type == 'token' ){\n                        response.html.append( element );\n                    }\n                    // Otherwise, add the text\n                    else {\n                        response.html.append( text );\n                    }\n\n                    */\n\n                    // Check if we have to append a space\n                    if ( endsWithSpace ){\n                        // response.html.append( ' ' );\n                    }\n                }\n                else {\n                    // response.html.append( ' ' );\n\n                    // Add white spaces to the brackets version\n                    response.brackets += part.text;\n                }\n            });\n\n            // Convert array of jQuery elements into wrapped set of elements\n            response.elements.normal = $( response.elements.normal ).map( function(){ return this.get() });\n            response.elements.token  = $( response.elements.token ).map( function(){ return this.get() }).filter( ':not(.item-title__normal)' );\n        }\n\n        UncannyAutomator.recipe.items[ item.id ].itemSentence = response;\n    }\n\n    return response;\n}\n\n/**\n * Open URL on a new window (centered)\n *\n * @since 3.1\n */\n\nexport function openCenteredWindow({ url, title, w, h, onClose }){\n    // Fixes dual-screen position\n    const dualScreenLeft = window.screenLeft !==  undefined ? window.screenLeft : window.screenX;\n    const dualScreenTop  = window.screenTop  !==  undefined ? window.screenTop  : window.screenY;\n\n    const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;\n    const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;\n\n    const systemZoom = width / window.screen.availWidth;\n    const left = ( width - w ) / 2 / systemZoom + dualScreenLeft;\n    const top = ( height - h ) / 2 / systemZoom + dualScreenTop;\n    const newWindow = window.open( url, title, \n        `\n        scrollbars=yes,\n        width=${w / systemZoom}, \n        height=${h / systemZoom}, \n        top=${top}, \n        left=${left}\n        `\n    )\n\n    if ( window.focus ){\n        newWindow.focus();\n    }\n\n    // Check if there is an onClose event defined\n    if ( isDefined( onClose ) ){\n        // Create function that will check if the window was closed\n        const wasWindowClosed = () => {\n            if ( newWindow.closed ){\n                onClose();\n            }\n            else {\n                // Check in .5 seconds again\n                setTimeout(() => {\n                    wasWindowClosed();\n                }, 500 );\n            }\n        }\n\n        wasWindowClosed();\n    }\n\n    return newWindow;\n}\n\n/**\n * Determine if a variable is set and is not NULL\n *\n * @since 0.2\n *\n * @param  {mixed}      variable - The variable being evaluated\n * @return {boolean}    TRUE if the variable is defined\n */\n\nexport function isDefined( variable ){\n    // Returns true if the variable is undefined\n    return typeof variable !== 'undefined' && variable !== null;\n}\n\n/**\n * Determine whether a variable is empty\n *\n * @since 0.2\n *\n * @param   {mixed}     variable - The variable being evaluated\n * @return  {boolean}   TRUE if the variable is empty\n */\n\nexport function isEmpty( variable ){\n    let response = true;\n\n    // Check if the variable is defined, otherwise is empty\n    if ( isDefined( variable ) ){\n        // Check if it's array\n        if ( $.isArray( variable ) ){\n            response = variable.length == 0;\n        }\n        else if ( isObject( variable ) ){\n            response = $.isEmptyObject( variable );\n        }\n        else {\n            response = variable == '';\n        }\n    }\n\n    return response;\n}\n\n/**\n * Check if two strings are equal\n *\n * @since 0.2\n *\n * @param   {string}    string1 - String to be compared\n * @param   {string}    string2 - String to be compared\n * @param   {object}    settings - Object with settings\n * @param   {boolean}   settings.caseSensitive=true - If true, uppercase and lowercase chars will be treated as distinct\n *\n * @return  {boolean} TRUE if both strings are equal\n */\n\nexport function compareStrings( string1, string2, settings = { caseSensitive: true } ){\n    // Create response variable\n    let response = false;\n\n    // Check if it's case sensitive\n    if ( ! settings.caseSensitive ){\n        response = string1.toString().toLowerCase() == string2.toString().toLowerCase();\n    }\n    else {\n        response = string1.toString() == string2.toString();\n    }\n\n    return response;\n}\n\n/**\n * Check if a value exists in an array\n * If the needle is an array then it will check if all his elements exists in the haystack\n *\n * @since 0.2\n *\n * @param   {mixed}     needle - The searched value. The comparison between values is strict. If the needle is an array then it will check if all his elements exists in the haystack\n * @param   {array}     haystack - An array through which to search.\n *\n * @return  {boolean} TRUE if needle is found in the array or if needle is an array, TRUE if all the elements from the needle are in haystack\n */\n\nexport function inArray( needle, haystack ){\n    let response = false;\n\n    if ( Array.isArray( needle ) ){\n        // Check that all the elements from the array \"value\" are in the array \"array\"\n        response = arrayDifference( needle, haystack ).length == 0;\n    }\n    else {\n        // Check if one element is in an array\n        response = $.inArray( needle, haystack ) !== -1;\n    }\n\n    return response;\n}\n\n/**\n * Compare the values of two arrays and get the difference\n * Compares array1 against one array and returns the values in array1 that are not present in array2.\n * Examples:\n * +-------------------+-------------+--------------+\n * |      array1       |   array2    |    return    |\n * +-------------------+-------------+--------------+\n * | [ 1, 2, 3, 4, 5 ] | [ 1, 3, 4 ] | [ 2, 5]      |\n * | [ 1, 2, 3 ]       | [ 2, 3 ]    | [ 1 ]        |\n * | [ 2, 3 ]          | [ 1, 2, 3 ] | []           |\n * | [ 1, 2 ]          | [ 1, 2 ]    | []           |\n * | [ '1', '2' ]      | [ 1, 2 ]    | [ '1', '2' ] |\n * +-------------------+-------------+--------------+\n *\n * @since 0.2\n *\n * @param   {array} array1 - The array to compare from\n * @param   {array} array2 - An array to compare against\n *\n * @return  {array} Array containing all the entries from array1 that are not present in array2\n */\n\nexport function arrayDifference( array1, array2 ){\n    return $( array1 ).not( array2 ).get();\n}\n\n/**\n * JavaScript vsprintf implementation\n * Return a formatted string\n *\n * @requires sprintf-js\n *\n * @since 0.2\n *\n * @param {string}  format - The placeholders in the format string are marked by % and are followed by one or more of these elements, in this order:\n *    1. An optional number followed by a $ sign that selects which argument index to use for the value.\n *       If not specified, arguments will be placed in the same order as the placeholders in the input string.\n *    2. An optional + sign that forces to preceed the result with a plus or minus sign on numeric values. By default, only the - sign is used on negative numbers.\n *    3. An optional padding specifier that says what character to use for padding (if specified).\n *       Possible values are 0 or any other character precedeed by a ' (single quote). The default is to pad with spaces.\n *    4. An optional - sign, that causes sprintf to left-align the result of this placeholder. The default is to right-align the result.\n *    5. An optional number, that says how many characters the result should have.\n *       If the value to be returned is shorter than this number, the result will be padded.\n *       When used with the j (JSON) type specifier, the padding length specifies the tab size used for indentation.\n *    6. An optional precision modifier, consisting of a . (dot) followed by a number, that says how many digits should be displayed for floating point numbers.\n *       When used with the g type specifier, it specifies the number of significant digits. When used on a string, it causes the result to be truncated.\n *    7. A type specifier that can be any of:\n *    7.1  % — yields a literal % character\n *    7.2  b — yields an integer as a binary number\n *    7.3  c — yields an integer as the character with that ASCII value\n *    7.4  d or i — yields an integer as a signed decimal number\n *    7.5  e — yields a float using scientific notation\n *    7.6  u — yields an integer as an unsigned decimal number\n *    7.7  f — yields a float as is; see notes on precision above\n *    7.8  g — yields a float as is; see notes on precision above\n *    7.9  o — yields an integer as an octal number\n *    7.10 s — yields a string as is\n *    7.11 t — yields true or false\n *    7.12 T — yields the type of the argument1\n *    7.13 v — yields the primitive value of the specified argument\n *    7.14 x — yields an integer as a hexadecimal number (lower-case)\n *    7.15 X — yields an integer as a hexadecimal number (upper-case)\n *    7.16 j — yields a JavaScript object or array as a JSON encoded string\n * @param {array}  arguments_array - array of arguments\n *\n * @return {string} Return array values as a formatted string according to format.\n */\n\nexport function vsprintf( format, arguments_array ){\n    var vsprintf = require('sprintf-js').vsprintf;\n    return vsprintf( format, arguments_array );\n}\n\n/**\n * Find whether a variable is a string\n *\n * @since 0.2\n *\n * @param   {mixed}     variable - The variable being evaluated\n * @return  {boolean}   TRUE if the variable is an string\n */\n\nexport function isString( string ){\n    return typeof string === 'string';\n}\n\n/**\n * Find whether a variable is an object\n *\n * @since 0.2\n *\n * @param   {mixed}     variable - The variable being evaluated\n * @return  {boolean}   TRUE if the variable is an object\n */\n\nexport function isObject( variable ){\n    return variable !== null && typeof variable === 'object';\n}\n\n/**\n * Remove all spaces from a string\n *\n * @since 0.3\n *\n * @param   {string}    String\n * @return  {string}    String without spaces\n */\n\nexport function removeSpaces( string ){\n    return string.replace( /\\s/g, '' );\n}\n\n/**\n * Replace curly braces\n *\n * @since 0.5\n *\n * @param {string} string - The string to be searched\n * @param {string} start - The value to replace the for {{\n * @param {string} end - The value to replace the for }}\n *\n * @return {string} The value with the replaced values\n */\n\nexport function replaceCurlyBraces( string = '', start = '', end = '' ){\n    string = string.replace( /{{/g, start );\n    string = string.replace( /}}/g, end );\n    return string;\n}\n\n/**\n * Creates a console log label\n *\n * @since  1.1\n *\n * @param  {String} text - Text to show after the label\n * @param  {Boolean} isGroup - Define if we have to do a console.group instead of console.log\n */\n\nexport function consoleLogLabel( text = '', isGroup = false, options = {} ){\n\t// Check if the user defined a custom background color\n\tif ( ! isDefined( options.bgColor ) ){\n\t\toptions.bgColor = '#0790e8';\n\t}\n\n    // Define console log Automator style\n    let labelStyle = `background: ${ options.bgColor }; color: #fff; font-weight: 500; padding: 2px 6px; font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif;`;\n\n    // Do console log\n    if ( isGroup ){\n        if ( isDefined( options.collapseGroup ) && options.collapseGroup ){\n            console.groupCollapsed( '%c🤖Automator', labelStyle, text );\n        }\n        else {\n            console.group( '%c🤖Automator', labelStyle, text );\n        }\n    }\n    else {\n        console.log( '%c🤖Automator', labelStyle, text );\n    }\n}\n\n/**\n * Creates a custom console log with colors to\n * represent success and failure\n *\n * @since  2.0\n *\n * @param  {String} status - Message type. Use 'success' or 'error'\n * @param  {String} text - Text to show after the label\n */\n\nexport function consoleLogResult( status = 'error', text = '' ){\n    // Define console log Automator style\n    let labelStyle = 'color: #fff; padding: 2px 7px; font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif; font-weight: normal';\n\n    // Add error or success colors\n    if ( status == 'error' ){\n        labelStyle = `background: #f13c3c; ${ labelStyle }`;\n    }\n\n    if ( status == 'success' ){\n        labelStyle = `background: #40b528; ${ labelStyle }`;\n    }\n\n    // Do console log\n    console.log( `%c${ text }`, labelStyle );\n}\n\n/**\n * Escape HTML characters\n *\n * @since  1.1\n * @param  {String} html The HTML\n * @return {String}      Scaped HTML\n */\n\nexport function escapeHTML( html = '' ){\n    let tagsToReplace = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;'\n    };\n\n    let replaceTag = function( tag ){\n        return tagsToReplace[ tag ] || tag;\n    }\n\n    return html.replace( /[&<>]/g, replaceTag );\n}\n\n/**\n * Abbreviate long texts. This function will convert a string\n * like \"123456789\" to \"123...789\"\n *\n * @param  {String} text    The string\n * @param  {Int}    length  The max length of the string\n * @return {Object}         Response two properties, isAbbreviated and text\n */\n\nexport function abbreviateText( text = '', length = 10 ){\n    // Default response\n    let response = {\n        isAbbreviated: false,\n        text: text\n    }\n\n    // Only abbreviate the text if the text is longer than the length\n    if ( text.length > length ){\n        // Get length of each parts (start and end)\n        let partLengths = Math.floor( length / 2 );\n\n        // Get parts\n        let textParts = {\n            start: text.substring( 0, partLengths ),\n            end:   text.slice( -partLengths )\n        }\n\n        // Create abbrevited text\n        response.text = `${ textParts.start } ... ${ textParts.end }`;\n        response.isAbbreviated = true;\n    }\n\n    // Return response\n    return response;\n}\n\n/**\n * Get an unique ID\n */\n\nexport function getUniqueId(){\n    // Math.random should be unique because of its seeding algorithm.\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n    // after the decimal.\n    return '_' + Math.random().toString( 36 ).substr( 2, 9 );\n}\n\n/**\n * Insert parameter to an URL.\n * If the parameter already exists it will update it\n *\n * @param  {String} url        The URL\n * @param  {Object} parameters The parameters\n * @param  {Object} options    The options. It supports two properties, \"setAsURL\" and \"refresh\"\n * @return {String}            The URL with the parameters\n */\nexport function addParametersToURL( url = '', parameters = {}, options = {} ){\n    // If the URL is empty, use the site URL\n    if ( isEmpty( url ) ){\n        url = window.location.href;\n    }\n\n    // Try to get an URL object\n    try {\n        url = new URL( url );\n    } catch ( e ){\n        // If something goes wrong, just return the original URL\n        return url;\n    }\n\n    // Get the current parameters in the URL\n    let urlParameters = url.search.substr( 1 ).split( '&' );\n\n    // Iterate the parameters\n    for ( let [ key, value ] of Object.entries( parameters ) ){\n        key   = encodeURI( key );\n        value = encodeURI( value );\n\n        let i = urlParameters.length;\n        let x;\n\n        while ( i-- ){\n            x = urlParameters[ i ].split( '=' );\n\n            if ( x[ 0 ] == key ){\n                x[ 1 ] = value;\n                urlParameters[i] = x.join( '=' );\n                break;\n            }\n        }\n\n        if ( i < 0 ){\n            urlParameters[ urlParameters.length ] = [ key, value ].join( '=' );\n        }\n    }\n\n    // Remove empty parameters\n    urlParameters = urlParameters.filter(( parameter ) => {\n        // Remove parameters without values\n        let parameterParts = parameter.split( '=' );\n\n        return ! ( isEmpty( parameter ) || isEmpty( parameterParts[1] ) );\n    });\n\n    // Add parameters to the URL\n    url.search = urlParameters.join( '&' );\n\n    // Set default options\n    options = $.extend({}, {\n        setAsURL: false,\n        refresh:  false\n    }, options );\n\n    // Check if we have to set it as the current URL\n    if ( options.setAsURL ){\n        // Check if we have to reload\n        if ( options.refresh ){\n            // This will reload the page, it's likely better to store this until finished\n            window.location.href = url.href;\n        }\n        else {\n            // Get title of the current page\n            let pageTitle = document.title;\n\n            // Push history and update URL\n            window.history.pushState({}, pageTitle, url.href );\n        }\n    }\n\n    // Return URL\n    return url.href;\n}\n\nexport function getURLParameter( url = '', parameter = '' ){\n    // If the URL is empty, use the site URL\n    if ( isEmpty( url ) ){\n        url = window.location.href;\n    }\n\n    // Convert it to an URL object\n    url = new URL( url );\n\n    // Get parameter\n    return url.searchParams.get( parameter );\n}\n\n/**\n * Decodes HTML entities\n *\n * @since  2.1.4\n * @param  {String} encodedString The string with encoded entities\n * @return {String}               The same string, with the entities decoded\n */\nexport function decodeEntities( encodedString = '' ){\n    const $textarea = document.createElement( 'textarea' );\n    $textarea.innerHTML = encodedString;\n    return $textarea.value;\n}\n\nexport function throttle( func, interval ){\n    var lastCall = 0;\n\n    return function(){\n        var now = Date.now();\n        if ( lastCall + interval < now ){\n            lastCall = now;\n            return func.apply( this, arguments );\n        }\n    };\n};\n\nexport function debounce( func, interval ){\n    var lastCall = -1;\n\n    return function(){\n        clearTimeout( lastCall );\n        var args = arguments;\n        var self = this;\n        lastCall = setTimeout( function(){\n            func.apply( self, args );\n        }, interval );\n    };\n};\n\nexport function copyToClipboard( string ){\n    // Create temporal textarea\n    const $tempTextarea = document.createElement( 'textarea' );\n\n    // Make the textarea really small\n    $tempTextarea.style.width  = '0px';\n    $tempTextarea.style.height = '0px';\n\n    // Set the string as the textarea value\n    $tempTextarea.value = string;\n\n    // Add the textarea to the body\n    document.body.appendChild( $tempTextarea );\n\n    // Select all the text from the textarea\n    $tempTextarea.select();\n\n    // Copy content\n    document.execCommand( 'copy' );\n\n    // Remove the element from the body\n    document.body.removeChild( $tempTextarea );\n}\n\n/**\n * Creates a Modal with information about a Fatal error\n *\n * @since 3.0\n * @param {Error}\n */\n\nexport function handleFatalError( settings = {} ){\n    settings = $.extend( true, {\n        title:   UncannyAutomator.i18n.debugging.fatalErrorHandler.title,\n        warning: '',\n        content: UncannyAutomator.i18n.debugging.fatalErrorHandler.content,\n        console: null,\n        buttons: {\n            confirm: {\n                label: UncannyAutomator.i18n.debugging.learnMore,\n                onClick: () => {\n                    // Learn more\n                    window.open( UncannyAutomator.dev.debuggingURL, '_blank' );\n                }\n            },\n            cancel: {\n                label: UncannyAutomator.i18n.debugging.buttonGoBack,\n                onClick: () => {\n                    // Go back to the recipes page\n                    window.location.replace( UncannyAutomator.dev.recipesUrl );\n                }\n            }\n        }\n    }, settings );\n\n    // Create report log\n    let reportLog = '';\n\n    let recipeData;\n    try {\n        // Get the recipe data\n        $.each( UncannyAutomator.recipes_object, function( index, theRecipe ){\n            if ( theRecipe.ID == UncannyAutomator.recipe.id ){\n                recipeData = theRecipe;\n            }\n        });\n    } catch ( e ){\n        console.log( e );\n    }\n\n    // Get general information about the recipe\n    try {\n        let logRecipe = `====== ${ UncannyAutomator.i18n.debugging.recipeTitle } ====== \\n`;\n\n        // Add recipe type\n        let recipeType = recipeData.recipe_type == 'user' ? UncannyAutomator.i18n.debugging.recipeTypeUser : ( recipeData.recipe_type == 'anonymous' ? UncannyAutomator.i18n.debugging.recipeTypeAnonymous : '' );\n        logRecipe += `${ UncannyAutomator.i18n.debugging.recipeType }: ${ recipeType }`;\n\n        // Add recipe status\n        let recipeStatus = recipeData.post_status == 'draft' ? UncannyAutomator.i18n.debugging.recipeStatusDraft : ( recipeData.post_status == 'publish' ? UncannyAutomator.i18n.debugging.recipeStatusLive : '' );\n        logRecipe += `\\n${ UncannyAutomator.i18n.debugging.recipeStatus }: ${ recipeStatus }`;\n\n        reportLog = logRecipe;\n    }\n    catch ( e ){\n        console.log( e );\n    }\n\n    // Get information about the recipe items\n    try {\n        let logRecipeItems = `=== ${ UncannyAutomator.i18n.debugging.recipeItemsTitle } === \\n`;\n\n        // Create function to clean extra data and leave on relevant data\n        // from the recipe items array\n        const cleanItemData = ( item ) => {\n            // Get status\n            const recipeStatus = item.post_status == 'publish' ? UncannyAutomator.i18n.debugging.itemStatusLive : UncannyAutomator.i18n.debugging.itemStatusDraft;\n\n            return `> ${ item.meta.integration } - ${ item.meta.code } - ${ recipeStatus }\\n  <span style=\"font-size: 13px; font-weight: 600\">(${ item.meta.sentence.replace( /\\{\\{|\\:[a-zA-Z0-9]*\\}\\}/g, '' ) })</span>\\n  <span style=\"font-size: 10px\">${ JSON.stringify( item ).replaceAll( '<', '&lt;' ).replaceAll( '>', '&gt;' ) }</span>\\n`;\n        }\n\n        // Get triggers\n        const triggers    = recipeData.triggers.map( cleanItemData );\n        const hasTriggers = triggers.length > 0;\n\n        // Get actions\n        const actions     = recipeData.actions.map( cleanItemData );\n        const hasActions  = actions.length > 0;\n\n        // Get closures\n        const closures    = recipeData.closures.map( cleanItemData );\n        const hasClosures = closures.length > 0;\n\n        // Check if it has recipe items\n        if ( hasTriggers || hasActions || hasClosures ){\n            // Add triggers\n            logRecipeItems += `${ UncannyAutomator.i18n.debugging.triggersTitle }\\n\\n`;\n\n            // Check if it has triggers\n            if ( hasTriggers ){\n                logRecipeItems += triggers.join( '\\n' );\n            }\n            else {\n                logRecipeItems += `> ${ UncannyAutomator.i18n.debugging.noTriggers }`;\n            }\n\n            // Add actions\n            logRecipeItems += `\\n${ UncannyAutomator.i18n.debugging.actionsTitle }\\n\\n`;\n\n            // Check if it has actions\n            if ( hasActions ){\n                logRecipeItems += actions.join( '\\n' );\n            }\n            else {\n                logRecipeItems += `> ${ UncannyAutomator.i18n.debugging.noActions }`;\n            }\n\n            // Add closures\n            logRecipeItems += `\\n${ UncannyAutomator.i18n.debugging.closuresTitle }\\n\\n`;\n\n            // Check if it has closures\n            if ( hasClosures ){\n                logRecipeItems += closures.join( '\\n' );\n            }\n            else {\n                logRecipeItems += `> ${ UncannyAutomator.i18n.debugging.noClosures }`;\n            }\n        }\n        else {\n            logRecipeItems += `${ UncannyAutomator.i18n.debugging.noRecipeItemsFound }`;\n        }\n\n        reportLog = ( reportLog !== '' ) ? `${ reportLog }\\n\\n${ logRecipeItems }` : reportLog;\n    }\n    catch ( e ){\n        console.log( e );\n    }\n\n    // Add JS console\n    try {\n        // Check if we have content to add\n        if ( isDefined( settings.console ) ){\n            console.log( settings.console );\n\n            let jsConsole = `====== ${ UncannyAutomator.i18n.debugging.jsConsole } ====== \\n`;\n\n            // Add JS console\n            jsConsole += `${ settings.console.stack.replaceAll( UncannyAutomator.siteURL, '{site_url}' ) }`;\n\n            reportLog = reportLog !== '' ? `${ reportLog }\\n\\n${ jsConsole }` : reportLog;\n        }\n    }\n    catch ( e ){\n        console.log( e );\n    }\n\n    const $modal = new Modal({\n        title:   `<span class=\"modal__title-icon uo-icon uo-icon--exclamation-triangle\"></span> ${ settings.title }`,\n        warning: `${ settings.warning }`,\n        content: `\n            <div>\n                ${ ! isEmpty( settings.content ) ? settings.content : '' }\n                <div class=\"modal__content-code\">\n                    <pre id=\"uap-debugging\">${ reportLog }</pre>\n                </div>\n            </div>\n        `,\n        buttons: {\n            cancel:  UncannyAutomator.i18n.debugging.buttonGoBack,\n            confirm: UncannyAutomator.i18n.debugging.learnMore,\n        },\n    }, {\n        size: 'extra-large',\n        warningFirst: true\n    });\n\n    $modal.setEvents({\n        onConfirm: () => {\n            settings.buttons.confirm.onClick();\n        },\n        onCancel: () => {\n            settings.buttons.cancel.onClick();\n        },\n        afterSetEvents: () => {\n            // Get the element with the debugging\n            const $debuggingConsole = $( '#uap-debugging' );\n\n            // On click, copy the content\n            $debuggingConsole.on( 'click', () => {\n                // Get the content\n                const debugContent = $debuggingConsole.text();\n\n                // Copy the content to the console\n                // const el = document.createElement( 'textarea' );\n                // el.value = debugContent;\n                // document.body.appendChild( el );\n                // el.select();\n                // document.execCommand( 'copy' );\n                // document.body.removeChild( el );\n\n                // Select the content of the container\n                // This is just to improve the UX\n                var range = document.createRange();\n                range.selectNodeContents( $debuggingConsole[0] );\n                window.getSelection().removeAllRanges();\n                window.getSelection().addRange( range );\n            });\n        }\n    });\n}\n\n/**\n * Filters items with specific post meta value\n *\n * @since 3.0\n * @param {array}   items The array of items to filter\n * @param {String}  meta Meta key\n * @param {String}  value Meta value\n *\n * @return {array} Array of filtered items\n *\n */\n export function filterMetaValue( items, meta, value ) {\n\n    let itemsWithMeta = {};\n\n    $.each( items, ( itemId, item ) => {\n        if ( item.meta[meta] && item.meta[meta] == value ) {\n            itemsWithMeta[itemId] = item;\n        }\n    });\n\n    return itemsWithMeta;\n};\n\n/**\n * Filters items without specific post meta\n *\n * @since 3.0\n * @param {array}   items The array of items to filter\n * @param {String}  meta Meta key\n * @param {String}  value Meta value\n *\n * @return {array} Array of filtered items\n *\n */\n export function filterMeta( items, meta, exist = true ) {\n\n    let filteredItems = {};\n\n    $.each( items, ( itemId, item ) => {\n        if ( ( meta in item.meta ) === exist ) {\n            filteredItems[itemId] = item;\n        }\n    });\n\n    return filteredItems;\n};\n\nexport function openInNewTab( href ){\n    Object.assign( document.createElement( 'a' ), {\n        target: '_blank',\n        href: href,\n    }).click();\n}","import $ from 'jquery';\n\nimport {\n\titemsObject,\n\tisString,\n\tisEmpty,\n\tisDefined,\n\tinArray,\n\tgetDOMElements,\n\tgetFieldTypes,\n\trestCall,\n\tvsprintf\n} from './Utilities.js';\n\nimport Publish from './Publish.js';\n\nimport Tokens from './tokens/tokens';\n\n/**\n * Validate form using the global object UncannyAutomator.recipe, which contains\n * all the recipe items \n *\n * @since 0.3\n *\n * @return {object}\n * @return {boolean}  response.canSubmit - TRUE if the recipe is valid\n */\n\nexport function validateRecipe(){\n\t// Set response object\n\tlet response = {\n\t\tcanSubmit: UncannyAutomator.recipe.isValid\n\t}\n\t\n\t// Check if the recipe is not valid\n\tif ( ! UncannyAutomator.recipe.isValid ){\n\n\t\t// Enable error mode\n\t\t// UncannyAutomator.recipe.errorMode = true;\n\n\t\t// Iterate each item\n\t\t$.each( UncannyAutomator.recipe.items, function( itemID, itemData ){\n\n\t\t\t// Validate each item\n\t\t\tvalidateItem( itemID );\n\t\t});\n\t}\n\n\treturn response;\n}\n\n/**\n * Validate item using the itemID\n *\n * @since 0.4\n *\n * @param  {int} \t  itemID - ID of the item\n * @param  {object}   [$item] - jQuery object of the item. Necessary only if itemID is undefined\n *\n * @return {object}\n * @return {boolean}  response.isValid - TRUE if the item is valid\n */\n\nexport function validateItem( itemID, $item = null ){\n\t// Create response object\n\tlet response = {\n\t\tisValid: false\n\t}\n\n\t// Check if the itemID is defined\n\tif ( isDefined( itemID ) ){\n\t\t// Get item\n\t\tlet item = UncannyAutomator.recipe.items[ itemID ];\n\n\t\t// Check if the item exists, otherwise do nothing, isValid will be false (because of the default value)\n\t\tif ( ! item.isMissing && ! isEmpty( item ) ){\n\t\t\t// Save result\n\t\t\tresponse.isValid = item.isValid;\n\n\t\t\t// Check if this item is invalid\n\t\t\tif ( ! item.isValid ){\n\n\t\t\t\t// Get DOM element of the item\n\t\t\t\tlet itemElement = getDOMElements( 'item', {\n\t\t\t\t\tid: itemID\n\t\t\t\t}).item;\n\n\t\t\t\t// Add CSS class to it\n\t\t\t\titemElement.addClass( 'item--error' );\n\n\t\t\t\t// Iterate each group of fields\n\t\t\t\t$.each( item.options, function( optionsGroupID, optionsGroupData ){\n\n\t\t\t\t\t// Check if a group of fields is invalid\n\t\t\t\t\tif ( ! optionsGroupData.isValid ){\n\n\t\t\t\t\t\t// Get DOM elements of the container with all the fields\n\t\t\t\t\t\tlet optionsGroupElements = getDOMElements( 'optionGroup', {\n\t\t\t\t\t\t\titemID: \titemID,\n\t\t\t\t\t\t\tgroupID: \toptionsGroupID\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Add error classes\n\t\t\t\t\t\toptionsGroupElements.tokenInSentence.addClass( 'item-title__token--error item-title__token--error-shake' );\n\t\t\t\t\t\toptionsGroupElements.fieldsContainer.addClass( 'item-options__group--error' );\n\t\t\t\t\t\toptionsGroupElements.optionsContainer.addClass( 'item-options--error' );\n\n\t\t\t\t\t\t// Remove \"shake\" class from tokenInSentence so the element can shake if the user clicks again\n\t\t\t\t\t\tsetTimeout( function(){\n\t\t\t\t\t\t\toptionsGroupElements.tokenInSentence.removeClass( 'item-title__variable--error-shake' );\n\t\t\t\t\t\t}, 1000 );\n\n\t\t\t\t\t\t// Show errors in the UI for each invalid field\n\t\t\t\t\t\tif ( isDefined( optionsGroupElements.optionsContainer ) ){\n\n\t\t\t\t\t\t\t// Validate the form of the group of fields. Check validateItemFields comments for more information.\n\t\t\t\t\t\t\tvalidateItemFields( optionsGroupElements.optionsContainer );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// ID is not defined, the item doesn't have an ID yet\n\t\tresponse.isValid = false;\n\n\t\t// Check if $item is defined \n\t\tif ( ! isEmpty( $item ) ){\n\t\t\t\n\t\t}\n\t\telse {\n\t\t\tconsole.error( 'Neither itemID nor the $item are defined. One of them must be defined.' );\t\n\t\t}\n\t}\n\n\t// Return response\n\treturn response;\n}\n\n/**\n * Validate form using a DOM element that contains the fields\n * \n * @since 0.1\n *\n * @param {object}\t form - jQuery DOM element that contains the fields\n *\n * @return {object}\n * @return {boolean}  response.isValid - TRUE if the form is valid\n */\n\nexport function validateItemFields( form, validateChildren = false ){\n\t// Create response object\n\tlet response = {\n\t\tisValid: false\n\t}\n\n\t// Get all fields, input, textareas and selects\n\tlet fields = form.find( `\n\t\tinput.form-element__input[data-is-child-field=\"${ validateChildren ? 'true' : 'false' }\"],\n\t\ttextarea.form-element__textarea[data-is-child-field=\"${ validateChildren ? 'true' : 'false' }\"],\n\t\tselect.form-element__select[data-is-child-field=\"${ validateChildren ? 'true' : 'false' }\"],\n\t\t.form-checkbox input,\n\t\t.form-radio` );\n\n\t// Set the variable that will be used to decide if the form is valid or not\n\t// It's true by default, but it will changed to false if at least one field has an error\n\tlet isFormValid = true;\n\n\t// Go through all fields\n\tfields.each(function(){\n\t\t// Save $(this) jQuery element (from the each loop) in the field variable\n\t\t// form-element__input, form-element__textarea or form-element__select\n\t\tlet field = $( this );\n\n\t\t// Get field type\n\t\tlet fieldType = field.data( 'type' );\n\n\t\t// Define field data\n\t\tlet fieldData = {}\n\n\t\t// Check if it's a radio\n\t\tif ( field.hasClass( 'form-radio' ) ){\n\t\t\t// Overwrite field type\n\t\t\tfieldType = 'radio';\n\n\t\t\t// Get one of the radios\n\t\t\tlet radioInput     = field.find( 'input' ).first();\n\n\t\t\t// Get value of the selected radio (if there is any)\n\t\t\tlet selectedRadio  = field.find( 'input:checked' ),\n\t\t\t    radioValue     = selectedRadio.length > 0 ? selectedRadio.val() : '';\n\n\t\t\t// Create object with the data that will be used in the verification process\n\t\t\tfieldData = {\n\t\t\t\tfield_type: \t\t 'radio',\n\t\t\t\tvalue: \t\t\t\t radioValue,\n\t\t\t\tattributes: {\n\t\t\t\t\tsupportsTokens:  radioInput.data( 'supportstokens' ),\n\t\t\t\t\trequired: \t\t radioInput.data( 'required' ),\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Check if it's a select\n\t\telse if ( field.hasClass( 'form-element__select' ) ){\n\t\t\tfieldData = {\n\t\t\t\tfield_type: \t\t 'select',\n\t\t\t\tvalue: \t\t\t\t field.val(),\n\t\t\t\tattributes: {\n\t\t\t\t\tsupportsTokens:      field.data( 'supportstokens' ),\n\t\t\t\t\trequired: \t\t     field.data( 'required' ),\n\t\t\t\t\tsupportsCustomValue: field.data( 'supports-custom-value' ),\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Create object with the data that will be used in the verification process\n\t\t\tfieldData = {\n\t\t\t\tfield_type: \t\t field.data( 'type' ),\n\t\t\t\tvalue: \t\t\t\t field.val(),\n\t\t\t\tattributes: {\n\t\t\t\t\tsupportsTokens:  field.data( 'supportstokens' ),\n\t\t\t\t\trequired: \t\t field.data( 'required' ),\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check if it's a checkbox and overwrite the value\n\t\tif ( fieldData.field_type == 'checkbox' ){\n\t\t\tfieldData.value = field.is( ':checked' );\n\t\t}\n\n\t\t// Check if the field is required, the value is undefined but has a default value in the settings\n\t\t/*\n\t\tif ( fieldData.attributes.required && ! isDefined( fieldData.value ) && isDefined( fieldData.defaultValue ) ){\n\t\t\t// Set default value as value\n\t\t\tfieldData.value = fieldData.attributes.defaultValue;\n\t\t}\n\t\t*/\n\n\t\t// Validate form. Read validateField comments for more information\n\t\tlet fieldValidation = validateField( field, fieldData.field_type, fieldData.value, fieldData.attributes );\n\n\t\t// Check if the field is invalid\n\t\tif ( ! fieldValidation.isValid ){\n\t\t\tisFormValid = false;\n\n\t\t\t// Add error class to form container\n\t\t\tform.addClass( 'item-options--error' );\n\t\t}\n\t});\n\n\tresponse.isValid = isFormValid;\n\n\treturn response;\n}\n\n/**\n * Validates the value of a field.\n * Supports all field types\n *\n * Only supports one token. The object is prepared to support more than one, we only have to remove the if statement\n * that checks the number of tokens per string. This functionality will be change in another version\n *\n * @since 0.1\n *\n * @param {object} \t\tfield - jQuery object of the field used to add CSS classes. Use null if you just want to get the validation response\n * @param {string} \t\tfieldType - A valid field type\n * @param {string} \t\tvalue - The value of the field.\n * @param {object}   \tattributes - Object with some of the field attributes\n * @param {boolean} \tattributes.supportsTokens - TRUE if the field should support tokens\n * @param {boolean} \tattributes.required - TRUE if the field is required\n * @param {object} \t\t[customValidationFunction] Just in case you want to add a custom validation function. Must return an object with two properties { isValid: {boolean}, message: {string} }\n *\n * @return {object}\n * @return {boolean} \tresponse.isValid - TRUE if the field is valid\n * @return {string}  \tresponse.message - Message showing the reason the field is invalid\n */\n\nexport function validateField( field, fieldType, value, attributes = { supportsTokens: false, required: false }, customValidationFunction ){\n\t// Create response object\n\tlet response = {\n\t\tisValid: false,\n\t\tmessage: '',\n\t}\n\n\t// Define valid field types\n\tlet fieldTypes = getFieldTypes();\n\n\t// Set messages\n\tlet messages = {\n\t\tselect: {\n\t\t\tempty: \t UncannyAutomator.i18n.validation.field.select.empty,\n\t\t\tinvalid: UncannyAutomator.i18n.validation.field.select.invalid,\n\t\t},\n\t\ttext: {\n\t\t\tempty:   UncannyAutomator.i18n.validation.field.text.empty,\n\t\t\tinvalid: UncannyAutomator.i18n.validation.field.text.invalid,\n\t\t},\n\t\ttextarea: {\n\t\t\tempty:   UncannyAutomator.i18n.validation.field.textarea.empty,\n\t\t\tinvalid: UncannyAutomator.i18n.validation.field.textarea.invalid,\n\t\t},\n\t\tint: {\n\t\t\tempty: \t UncannyAutomator.i18n.validation.field.int.empty,\n\t\t\tinvalid: UncannyAutomator.i18n.validation.field.int.invalid,\n\t\t\tmultipleTokens: UncannyAutomator.i18n.validation.field.int.multipleTokens,\n\t\t},\n\t\tfloat: {\n\t\t\tempty: \t UncannyAutomator.i18n.validation.field.float.empty,\n\t\t\tinvalid: UncannyAutomator.i18n.validation.field.float.invalid,\n\t\t\tmultipleTokens: UncannyAutomator.i18n.validation.field.float.multipleTokens,\n\t\t},\n\t\temail: {\n\t\t\tempty:   UncannyAutomator.i18n.validation.field.email.empty,\n\t\t\tsingle:  {\n\t\t\t\tinvalid: UncannyAutomator.i18n.validation.field.email.single.invalid,\n\t\t\t\tmultipleTokens: UncannyAutomator.i18n.validation.field.email.single.multipleTokens,\n\t\t\t},\n\t\t\tmultiple: {\n\t\t\t\tinvalid: UncannyAutomator.i18n.validation.field.email.multiple.invalid,\n\t\t\t\tmultipleTokens: UncannyAutomator.i18n.validation.field.email.multiple.multipleTokens,\n\t\t\t}\t\n\t\t},\n\t\turl: {\n\t\t\tempty: \t UncannyAutomator.i18n.validation.field.url.empty,\n\t\t\tinvalid: UncannyAutomator.i18n.validation.field.url.invalid,\n\t\t},\n\t\tcheckbox: {\n\t\t\tempty: \t UncannyAutomator.i18n.validation.field.checkbox.empty,\n\t\t\tinvalid: UncannyAutomator.i18n.validation.field.checkbox.invalid,\n\t\t},\n\t\tradio: {\n\t\t\tempty: \t UncannyAutomator.i18n.validation.field.radio.empty,\n\t\t\tinvalid: UncannyAutomator.i18n.validation.field.radio.invalid,\n\t\t},\n\t\tdate: {\n\t\t\tempty: \t UncannyAutomator.i18n.validation.field.date.empty,\n\t\t\tinvalid: UncannyAutomator.i18n.validation.field.date.invalid,\n\t\t},\n\t\ttime: {\n\t\t\tempty: \t UncannyAutomator.i18n.validation.field.time.empty,\n\t\t\tinvalid: UncannyAutomator.i18n.validation.field.time.invalid,\n\t\t},\n\t\tinvalidType: UncannyAutomator.i18n.validation.field.invalidType,\n\t}\n\n\t// Fix TinyMCE issue, where adding content dynamically doesn't update the textarea value\n\ttry {\n\t\tif ( fieldType == 'textarea' && ! isEmpty( field ) && field.is( ':not(:visible)' ) ){\n\t\t\tlet $formElement = field.closest( '.form-element' );\n\n            $formElement.find( '.switch-html' )\n                .trigger( 'click' );\n\n            value = field.val();\n\n            $formElement.find( '.switch-tmce' )\n                .trigger( 'click' );\n\n\t\t}\n\t} catch ( e ){\n\t\tconsole.log( e );\n\t}\n\n\t// Check if it's a valid field type\n\tif ( inArray( fieldType, fieldTypes ) ){\n\t\t// Check if it's a checkbox and sanitaze the current value\n\t\tif ( fieldType == 'checkbox' && ! isEmpty( value ) ){\n\t\t\t// Check if the value is \"true\" or \"false\"\n\t\t\tif ( [ 'true', 'false' ].includes( value ) ){\n\t\t\t\t// Make it a boolean\n\t\t\t\tvalue = value == 'true' ? true : false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if it's a required field and it's empty.\n\t\t// Show \"empty\" error\n\t\tif ( attributes.required && ( isEmpty( value ) || fieldType == 'checkbox' && value === false ) ){\n\t\t\tresponse.message = messages[ fieldType ].empty;\n\t\t}\n\t\t// Check if it isn't a required field and it's empty.\n\t\t// We don't have to validate it\n\t\telse if ( ! attributes.required && isEmpty( value ) ){\n\t\t\tresponse.isValid = true;\n\t\t}\n\t\t// The field has a value\n\t\telse if ( value != '' ){\n\t\t\t// This variable will be used multiple times in the following code. Let's define it here.\n\t\t\tlet tokensInString;\n\n\t\t\t// Check what's our field type.\n\t\t\tswitch ( fieldType ){\n\n\t\t\t\tcase 'select':\n\t\t\t\t\tresponse.isValid = true; \n\n\t\t\t\t\t// Check if the value is a custom value, if so, validate it\n\t\t\t\t\tif ( attributes.supportsCustomValue && value == 'automator_custom_value' ){\n\t\t\t\t\t\t// Get the child field\n\t\t\t\t\t\tconst $childrenFields = field.closest( '.form-element' ).find( '.form-element-children' );\n\n\t\t\t\t\t\t// Check if we found it\n\t\t\t\t\t\tif ( $childrenFields.length == 1 ){\n\t\t\t\t\t\t\t// Validate it and pass the result to the parent\n\t\t\t\t\t\t\tresponse.isValid = validateItemFields( $childrenFields, true ).isValid;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if we have to do a custom validation\n\t\t\t\t\tif ( response.isValid && isDefined( customValidationFunction ) ){\n\t\t\t\t\t\t// Do custom validation\n\t\t\t\t\t\tlet customValidation = customValidationFunction( value );\n\t\t\t\t\t\t// Check if it's valid\n\t\t\t\t\t\tresponse.isValid = customValidation.isValid;\n\n\t\t\t\t\t\t// If it isn't then add message\n\t\t\t\t\t\tif ( ! customValidation.isValid ){\n\t\t\t\t\t\t\tresponse.message = customValidation.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'text':\n\t\t\t\tcase 'textarea':\n\t\t\t\t\tresponse.isValid = true;\n\n\t\t\t\t\t// Check if we have to do a custom validation\n\t\t\t\t\tif ( isDefined( customValidationFunction ) ){\n\t\t\t\t\t\t// Do custom validation\n\t\t\t\t\t\tlet customValidation = customValidationFunction( value );\n\t\t\t\t\t\t// Check if it's valid\n\t\t\t\t\t\tresponse.isValid = customValidation.isValid;\n\n\t\t\t\t\t\t// If it isn't then add message\n\t\t\t\t\t\tif ( ! customValidation.isValid ){\n\t\t\t\t\t\t\tresponse.message = customValidation.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'int':\n\t\t\t\t\t// Regular expression to check if it's a valid int number\n\t\t\t\t\t// https://regex101.com/r/Gz3RvN/4\n\t\t\t\t\tlet int_regex = new RegExp(/^([+-]?[1-9]\\d*|0)$/gm);\n\n\t\t\t\t\t// Get tokens. Read getTokensFromString comments for more information\n\t\t\t\t\ttokensInString = getTokensFromString( value );\n\n\t\t\t\t\t// Create variable to simulate int (replace tokens)\n\t\t\t\t\tlet simulate_int;\n\n\t\t\t\t\t// Check if the string has tokens (and if it should support them)\n\t\t\t\t\tif ( attributes.supportsTokens && tokensInString.hasTokens ){\n\t\t\t\t\t\t// Check if the string has only one token. As we said before, this can be easily changed in future versions\n\t\t\t\t\t\tif ( tokensInString.tokens.length == 1 ){\n\t\t\t\t\t\t\t// If it has ONE token, and the field support it, then let's just make the data valid\n\t\t\t\t\t\t\tresponse.isValid = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// We only support one token for now. Show multiple tokens error.\n\t\t\t\t\t\t\tresponse.message = messages.int.multipleTokens;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Doesn't have tokens, so we only have to perform the regular expression test\n\t\t\t\t\t\tif ( int_regex.test( value ) ){\n\t\t\t\t\t\t\tresponse.isValid = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Show \"invalid\" message\n\t\t\t\t\t\t\tresponse.message = messages.int.invalid;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Custom validation. Check if it's valid, if it isn't then do nothing\n\t\t\t\t\t// Check if we have to do a custom validation\n\t\t\t\t\tif ( response.isValid && isDefined( customValidationFunction ) ){\n\t\t\t\t\t\t// Do custom validation\n\t\t\t\t\t\tlet customValidation = customValidationFunction( value, simulate_int );\n\t\t\t\t\t\t// Check if it's valid\n\t\t\t\t\t\tresponse.isValid = customValidation.isValid;\n\n\t\t\t\t\t\t// If it isn't then add message\n\t\t\t\t\t\tif ( ! customValidation.isValid ){\n\t\t\t\t\t\t\tresponse.message = customValidation.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'float':\n\t\t\t\t\t// Regular expression to check if it's a valid float number\n\t\t\t\t\t// https://regex101.com/r/KDLmre/2/\n\t\t\t\t\tlet float_regex = new RegExp(/^[+-]?((\\d+(\\.|\\,)?\\d*)|(\\.\\d+))$/gm);\n\n\t\t\t\t\t// Get tokens. Read getTokensFromString comments for more information\n\t\t\t\t\ttokensInString = getTokensFromString( value );\n\n\t\t\t\t\t// Create variable to simulate the float (replace tokens)\n\t\t\t\t\tlet simulate_float;\n\n\t\t\t\t\t// Check if the string has tokens (and if it should support them)\n\t\t\t\t\tif ( attributes.supportsTokens && tokensInString.hasTokens ){\n\t\t\t\t\t\t// Check if the string has only one token. As we said before, this can be easily changed in future versions\n\t\t\t\t\t\tif ( tokensInString.tokens.length == 1 ){\n\t\t\t\t\t\t\t// If it has ONE token, and the field support it, then let's just make the data valid\n\t\t\t\t\t\t\tresponse.isValid = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// We only support one token for now. Show multiple tokens error.\n\t\t\t\t\t\t\tresponse.message = messages.float.multipleTokens;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Doesn't have tokens, so we only have to perform the regular expression test\n\t\t\t\t\t\tif ( float_regex.test( value ) ){\n\t\t\t\t\t\t\tresponse.isValid = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Show \"invalid\" message\n\t\t\t\t\t\t\tresponse.message = messages.float.invalid;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Custom validation. Check if it's valid, if it isn't then do nothing\n\t\t\t\t\t// Check if we have to do a custom validation\n\t\t\t\t\tif ( response.isValid && isDefined( customValidationFunction ) ){\n\t\t\t\t\t\t// Do custom validation\n\t\t\t\t\t\tlet customValidation = customValidationFunction( value, simulate_float );\n\t\t\t\t\t\t// Check if it's valid\n\t\t\t\t\t\tresponse.isValid = customValidation.isValid;\n\n\t\t\t\t\t\t// If it isn't then add message\n\t\t\t\t\t\tif ( ! customValidation.isValid ){\n\t\t\t\t\t\t\tresponse.message = customValidation.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'email':\n\t\t\t\t\t// Regular expression to check if it's a valid email address\n\t\t\t\t\t// https://regex101.com/r/ThUWEz/1/\n\t\t\t\t\tlet email_regex = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n\n\t\t\t\t\t// Create array with all the emails we have to validate\n\t\t\t\t\t// We're going to check if the user is trying to validate more than one searching for a comma in the input value\n\t\t\t\t\t// In that case, we're going to split the value and get an array with emails, otherwise we're going to create an array with one element: the input value\n\t\t\t\t\t// Doing that we can use the same code for both cases\n\t\t\t\t\tlet emails = [];\n\n\t\t\t\t\t// Check if the user wants to validate multiple emails\n\t\t\t\t\tif ( value.includes( ',' ) ){\n\t\t\t\t\t\temails = value.split( ',' );\n\n\t\t\t\t\t\t// Remove whitespace from both sides of each email, just in case the user wrote \", \" or \" ,\" instead of \",\"\n\t\t\t\t\t\t$.each( emails, function( index, email ){\n\t\t\t\t\t\t\temails[ index ] = email.trim();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Add value, but remove whitespace from both sides before\n\t\t\t\t\t\temails.push( value.trim() );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get tokens. Read getTokensFromString comments for more information\n\t\t\t\t\ttokensInString = getTokensFromString( value );\n\n\t\t\t\t\t// Create variable to simulate the email (replace tokens)\n\t\t\t\t\tlet simulate_email;\n\t\t\t\t\t\n\t\t\t\t\t// We're going to use this variable to validate all the emails in a loop. TRUE by default, FALSE if at least one of them fails.\n\t\t\t\t\tlet allEmailsAreValid = true;\n\n\t\t\t\t\t// Create variable used to know if there is more than one email\n\t\t\t\t\tlet hasMultipleEmails = emails.length > 1;\n\n\t\t\t\t\t// Check if the string has tokens\n\t\t\t\t\tif ( attributes.supportsTokens && tokensInString.hasTokens ){\n\t\t\t\t\t\t// Create variable to check if the error was due to multiple variables\n\t\t\t\t\t\tlet hasMultipleVariables = false;\n\n\t\t\t\t\t\t// Iterate each email\n\t\t\t\t\t\t$.each( emails, function( index, email ){\n\t\t\t\t\t\t\t// Get tokens from this specific email\n\t\t\t\t\t\t\ttokensInString = getTokensFromString( email );\n\n\t\t\t\t\t\t\t// Check if the string has only one token. As we said before, this can be easily changed in future versions\n\t\t\t\t\t\t\tif ( tokensInString.tokens.length <= 1 ){\n\t\t\t\t\t\t\t\t// If it has ONE token, and the field support it, then let's just make the data valid\n\t\t\t\t\t\t\t\t// In this case, we have to do nothing\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// Change value of hasMultipleVariables. We're going to use this to show a \"Multiple Tokens\" error\n\t\t\t\t\t\t\t\thasMultipleVariables = true;\n\n\t\t\t\t\t\t\t\t// Return false, we don't have to continue checking\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Check result of iteration\n\t\t\t\t\t\tif ( allEmailsAreValid && ! hasMultipleVariables ){\n\t\t\t\t\t\t\tresponse.isValid = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif ( hasMultipleVariables ){\n\t\t\t\t\t\t\t\t// We only support one token for now. Show multiple tokens error.\n\t\t\t\t\t\t\t\tif ( hasMultipleEmails ){\n\t\t\t\t\t\t\t\t\tresponse.message = messages.email.multiple.multipleTokens;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tresponse.message = messages.email.single.multipleTokens;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// Show \"invalid\" message\n\t\t\t\t\t\t\t\tif ( hasMultipleEmails ){\n\t\t\t\t\t\t\t\t\tresponse.message = messages.email.multiple.invalid;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tresponse.message = messages.email.single.invalid;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Doesn't have tokens, so we only have to perform the regular expression test in each email\n\t\t\t\t\t\t$.each( emails, function( index, email ){\n\t\t\t\t\t\t\t// Do regex\n\t\t\t\t\t\t\tif ( ! email_regex.test( email ) ){\n\t\t\t\t\t\t\t\t// If one is valid, all are invalid\n\t\t\t\t\t\t\t\tallEmailsAreValid = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Check result of iteration\n\t\t\t\t\t\tif ( allEmailsAreValid ){\n\t\t\t\t\t\t\tresponse.isValid = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Show \"invalid\" message\n\t\t\t\t\t\t\tif ( hasMultipleEmails ){\n\t\t\t\t\t\t\t\tresponse.message = messages.email.multiple.invalid;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tresponse.message = messages.email.single.invalid;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Custom validation. Check if it's valid, if it isn't then do nothing\n\t\t\t\t\t// Check if we have to do a custom validation\n\t\t\t\t\tif ( response.isValid && isDefined( customValidationFunction ) ){\n\t\t\t\t\t\t// Do custom validation\n\t\t\t\t\t\tlet customValidation = customValidationFunction( value, simulate_email );\n\t\t\t\t\t\t// Check if it's valid\n\t\t\t\t\t\tresponse.isValid = customValidation.isValid;\n\n\t\t\t\t\t\t// If it isn't then add message\n\t\t\t\t\t\tif ( ! customValidation.isValid ){\n\t\t\t\t\t\t\tresponse.message = customValidation.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'url':\n\t\t\t\t\t// This will try to return a valid URL, but can fail, so we have to verify. Read parseURL comments for more information\n\t\t\t\t\tlet validateURL = parseURL( value, attributes );\n\n\t\t\t\t\t// Check if the URL is valid\n\t\t\t\t\tif ( validateURL.isValid ){\n\t\t\t\t\t\tresponse.isValid = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Show \"invalid\" message\n\t\t\t\t\t\tresponse.message = messages.invalidType;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Custom validation. Check if it's valid, if it isn't then do nothing\n\t\t\t\t\t// Check if we have to do a custom validation\n\t\t\t\t\tif ( response.isValid && isDefined( customValidationFunction ) ){\n\t\t\t\t\t\t// Do custom validation\n\t\t\t\t\t\tlet customValidation = customValidationFunction( value, validateURL.simulatedURL );\n\t\t\t\t\t\t// Check if it's valid\n\t\t\t\t\t\tresponse.isValid = customValidation.isValid;\n\n\t\t\t\t\t\t// If it isn't then add message\n\t\t\t\t\t\tif ( ! customValidation.isValid ){\n\t\t\t\t\t\t\tresponse.message = customValidation.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\tresponse.isValid = true;\n\n\t\t\t\t\t// Check if we have to do a custom validation\n\t\t\t\t\tif ( isDefined( customValidationFunction ) ){\n\t\t\t\t\t\t// Do custom validation\n\t\t\t\t\t\tlet customValidation = customValidationFunction( value );\n\t\t\t\t\t\t// Check if it's valid\n\t\t\t\t\t\tresponse.isValid = customValidation.isValid;\n\n\t\t\t\t\t\t// If it isn't then add message\n\t\t\t\t\t\tif ( ! customValidation.isValid ){\n\t\t\t\t\t\t\tresponse.message = customValidation.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'radio':\n\t\t\t\t\tresponse.isValid = true;\n\n\t\t\t\t\t// Check if we have to do a custom validation\n\t\t\t\t\tif ( isDefined( customValidationFunction ) ){\n\t\t\t\t\t\t// Do custom validation\n\t\t\t\t\t\tlet customValidation = customValidationFunction( value );\n\t\t\t\t\t\t// Check if it's valid\n\t\t\t\t\t\tresponse.isValid = customValidation.isValid;\n\n\t\t\t\t\t\t// If it isn't then add message\n\t\t\t\t\t\tif ( ! customValidation.isValid ){\n\t\t\t\t\t\t\tresponse.message = customValidation.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t\t// TODO validation\n\t\t\t\tcase 'date':\n\t\t\t\t\tresponse.isValid = true;\n\n\t\t\t\t\t// Check if we have to do a custom validation\n\t\t\t\t\tif ( isDefined( customValidationFunction ) ){\n\t\t\t\t\t\t// Do custom validation\n\t\t\t\t\t\tlet customValidation = customValidationFunction( value );\n\t\t\t\t\t\t// Check if it's valid\n\t\t\t\t\t\tresponse.isValid = customValidation.isValid;\n\n\t\t\t\t\t\t// If it isn't then add message\n\t\t\t\t\t\tif ( ! customValidation.isValid ){\n\t\t\t\t\t\t\tresponse.message = customValidation.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO validation\n\t\t\t\tcase 'time':\n\t\t\t\t\tresponse.isValid = true;\n\n\t\t\t\t\t// Check if we have to do a custom validation\n\t\t\t\t\tif ( isDefined( customValidationFunction ) ){\n\t\t\t\t\t\t// Do custom validation\n\t\t\t\t\t\tlet customValidation = customValidationFunction( value );\n\t\t\t\t\t\t// Check if it's valid\n\t\t\t\t\t\tresponse.isValid = customValidation.isValid;\n\n\t\t\t\t\t\t// If it isn't then add message\n\t\t\t\t\t\tif ( ! customValidation.isValid ){\n\t\t\t\t\t\t\tresponse.message = customValidation.message;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t// The field type doesn't match\n\t\t\t\t\tresponse.isValid = false;\n\t\t\t\t\tresponse.message = '';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tresponse.message = messages[ 'invalidType' ];\n\t}\n\n\t// Add CSS classes to elements showing or hiding the error state\n\t// .form-element will have form-element--success or form-element--error classes\n\t// The message will be shown in the .form-element__error element\n\tif ( ! isEmpty( field ) ){\n\t\tlet $container = field.closest( '.form-element' );\n\t\tlet $error_container = $container.find( '.form-element__error' ).filter(function(){\n\t\t\treturn $( this ).closest( '.form-element' ).is( $container );\n\t\t});\n\n\t\tif ( ! response.isValid ){\n\t\t\t$container.removeClass( 'form-element--success' );\n\t\t\t$container.addClass( 'form-element--error' );\n\t\t}\n\t\telse {\n\t\t\t$container.removeClass( 'form-element--error' );\n\t\t\t$container.addClass( 'form-element--success' );\n\t\t}\n\n\t\tif ( response.message != '' ){\n\t\t\t$error_container.addClass( 'form-element__error--show' );\n\t\t\t$error_container.text( response.message );\n\t\t}\n\t\telse {\n\t\t\t$error_container.removeClass( 'form-element__error--show' );\n\t\t\t$error_container.text('');\n\t\t}\n\n\t}\n\n\treturn response;\n}\n\n/**\n * Get all the valid tokens from a string.\n * It compares the tokens in the string with the valid tokens in the system and only returns the valid ones.\n * Ex: \"Lorem ipsum {{valid_token}} dolor {{invalid_token}}\" returns tokens = [ 'valid_token' ]\n *\n * @since 0.1\n *\n * @param  {string} \tstring - A normal string with tokens (or not, response.tokens will return an empty array, that's all)\n *\n * @return {object}\n * @return {boolean} \tresponse.hasTokens - TRUE if there is at least one token\n * @return {array} \t\tresponse.tokens - Array with all the tokens on the string\n */\n\nexport function getTokensFromString( string ){\n\t// Create response object\n\tlet response = {\n\t\thasTokens: false,\n\t\ttokens: [],\n\t};\n\n\t// Regex to find text between double curly brackets\n\t// https://regex101.com/r/TecqPq/1\n\tlet regex = new RegExp(/\\{\\{(.*?)\\}\\}/gm);\n\t\n\t// Get all valid tokens. Read getTokens comments for more information\n\tlet allTokens = new Tokens( null, null, {\n\t\tincludeGroupName: false,\n\t\tincludeGroupIcon: false,\n\t}).tokens;\n\n\t// Check if the string attribute is defined\n\tif ( isDefined( string ) ){\n\t\t// Check if the string attribute is empty, in that case just ignore it\n\t\tif ( ! isEmpty( string ) ){\n\t\t\t// Check if the token is a string, if not, convert it\n\t\t\tif ( ! isString( string ) ){\n\t\t\t\tstring = string.toString();\n\t\t\t}\n\n\t\t\t// Create array that will store the tokens\n\t\t\tlet tokens = [];\n\n\t\t\t// Perform the regex check.\n\t\t\tlet match;\n\t\t\twhile ( ( match = regex.exec( string ) ) !== null ){\n\t\t\t\tlet matchedToken = match[ 1 ];\n\n\t\t\t\t// Check if it's an \"smart\" token. Those where you can modify the ID of it and get different data.\n\t\t\t\tif ( \n\t\t\t\t\tmatchedToken.startsWith( 'USERMETA:' )\n\t\t\t\t\t|| matchedToken.startsWith( 'POSTMETA:' )\n\t\t\t\t){\n\t\t\t\t\t// Push the token as valid\n\t\t\t\t\ttokens.push( matchedToken );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Check if the token is defined in the main tokens object, if it's is then it's a valid token and we have to add it to the tokens array\n\t\t\t\t\t$.each( allTokens, ( index, tokenGroup ) => {\n\t\t\t\t\t\t$.each( tokenGroup.tokens, ( index, token ) => {\n\t\t\t\t\t\t\tif ( matchedToken == token.id ){\n\t\t\t\t\t\t\t\ttokens.push( token );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresponse.tokens = tokens;\n\n\t\t\t// Check if the string has at least one token\n\t\t\tif ( response.tokens.length > 0 ){\n\t\t\t\tresponse.hasTokens = true;\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// Show error in the console\n\t\tconsole.error( 'Undefined string attribute' );\n\t}\n\n\treturn response;\n}\n\n/**\n * Replace tokens in a string with dummy valid values to check if it's valid.\n * This is a simple way to validate if strings like {{site_url}} is a valid URL.\n * There is going to be another validation in the backend before doing actions\n * Ex: {{site_url}}/relative_path gets converted to https://example.com/relative_path\n *\n * @since 0.1\n *\n * @param  {string} string - A normal string with tokens (or not, the returned string will be the same, that's all)\n *\n * @return {string}\tThe new string with dummy data\n */\n\nexport function replaceTokensInString( string ){\n\t// Create variable that will hold the new string\n\t// The default value is the original string. We are going to check if the string has tokens,\n\t// and if it doesn't then we just return the same original string\n\tlet output = string;\n\n\t// Get tokens. Read getTokensFromString comments for more information\n\tlet tokensInString = getTokensFromString( string );\n\n\t// Check if this string has tokens\n\tif ( tokensInString.hasTokens ){\n\n\t\t// Iterate through each token\n\t\t$.each( tokensInString.tokens, function( index, token ){\n\t\t\t// Remember that each token has a token group id and a token id\n\t\t\t// For example, in {{WORDPRESS_1:order_id}} WORDPRESS_1 is the token group id and order_id is the token id\n\t\t\t// We have the token group id and the token id in different object properties, and we need to create the original (complete) token string again\n\n\t\t\t// Escape regex characters\n\t\t\tlet regexCondition = token.id.replace( /[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&' );\n\n\t\t\t// Create tokenCode variable, this will store the first part (token group id)\n\t\t\tregexCondition = vsprintf( '{{%s}}', [ regexCondition ] );\n\n\t\t\t// Create regular expression to find all appearances of the token in the string\n\t\t\t// https://regex101.com/r/AWKmKp/1\n\t\t\tlet regex = new RegExp( regexCondition, 'g' );\n\n\t\t\t// Use regex to replace all appaerences with a dummy value\n\t\t\toutput = output.replace( regex, function( full_match, group ){\n\t\t\t\t// Get dummy value using the fieldType. Read getExampleValueByFieldType comments for more information\n\n\t\t\t\treturn getExampleValueByFieldType( token.type );\n\t\t\t});\n\t\t});\n\t}\n\n\treturn output;\n}\n\n/**\n * Get a dummy value given a fieldType\n * This function is useful for validation functions. We don't know in the recipe creating process if a token will store a correct value,\n * but we can use the token type to check if an email, url, int, float or other field type values are valid when they include a token.\n * For example, using this function we can know that {{site_url}}/profile/?user_id={{user_id}} is a valid url\n * \n * @since 0.1\n * \n * @param {string} \tfieldType - A valid field type\n *\n * @return {string} A valid dummy value for that field type\n */\n\nexport function getExampleValueByFieldType( fieldType ){\n\tlet value = '';\n\n\tswitch( fieldType ){\n\n\t\tcase 'select':\n\t\t\tvalue = 'option';\n\t\t\tbreak;\n\n\t\tcase 'text':\n\t\t\tvalue = 'lorem-ipsum';\n\t\t\tbreak;\n\n\t\tcase 'textarea':\n\t\t\tvalue = '<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum finibus eros nunc, et posuere libero posuere a. Nam viverra mattis finibus. Aenean purus lorem, mollis vel ullamcorper ac</p>';\n\t\t\tbreak;\n\n\t\tcase 'int':\n\t\t\tvalue = 1;\n\t\t\tbreak;\n\n\t\tcase 'float':\n\t\t\tvalue = 1.1;\n\t\t\tbreak;\n\n\t\tcase 'url':\n\t\t\tvalue = 'https://example.com';\n\t\t\tbreak;\n\n\t\tcase 'email':\n\t\t\tvalue = 'example@example.com';\n\t\t\tbreak;\n\n\t\tcase 'checkbox':\n\t\t\tvalue = true;\n\t\t\tbreak;\n\n\t\tcase 'radio':\n\t\t\tvalue = 'option';\n\t\t\tbreak;\n\n\t\tcase 'date':\n\t\t\tvalue = '2021-12-31';\n\t\t\tbreak;\n\n\t\tcase '':\n\t\t\tvalue = '01:00 PM';\n\t\t\tbreak;\n\t}\n\n\treturn value;\n}\n\n/**\n * Convert an invalid url into a valid one.\n * This function checks if the url is valid, if it is then it returns the url without modifying it, but if it is not then adds\n * the {{site_url}} before the string. It also checks if the string starts with / or not to recognize relative paths\n * Examples:\n * string \t\t\t\t=> {{site_url}}/string\n * /string \t\t\t\t=> {{site_url}}/string\n * https://google.com \t=> https://google.com\n * {{non_url_token}} \t=> {{site_url}}/{{non_url_token}}\n * /?id={{id}} \t\t\t=> {{site_url}}/?id={{id}}\n * \n * @since 0.1\n *\n * @param {string} \t\turl - The url\n * @param {object} \t\tattributes - URL attributes\n * @param {boolean} \tattributes.supportsTokens - TRUE if the URL should support tokens\n *\n * @return {object}\n * @return {boolean} \tresponse.changed - TRUE if the returned URL is different from the original one\n * @return {boolean} \tresponse.isValid - TRUE if the URL is valid\n * @return {string} \tresponse.newURL - New valid URL. If the URL was already valid then it just have the original URL\n * @return {string} \tresponse.simulatedURL - Simulated URL\n */\n\nexport function parseURL( url, attributes = { supportsTokens: false } ){\n\t// Create response object\n\tlet response = {\n\t\tchanged: false,\n\t\tisValid: false,\n\t\tnewURL: null,\n\t\tsimulatedURL: null\n\t}\n\n\t// Replace all spaces with %20\n\turl = url.replace( / /g, '%20' );\n\n\t// Create regular expression to be used to check if an URL is valid\n\t// https://regex101.com/r/0TFlPM/1/\n\tlet regexURL = new RegExp( \"^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?\" );\n\n\t// Get tokens. Read getTokensFromString comments for more information\n\tlet tokensInValue = getTokensFromString( url );\n\n\t// Create variable that will store the new URL. The default value is the original URL because we're going to compare\n\t// this variable with the \"url\" variable. If both are the same then we know that the original value wasn't modified and it was already valid\n\tlet newURL = url;\n\n\t// Check if it supports tokens and has tokens\n\tif ( attributes.supportsTokens && tokensInValue.hasTokens ){\n\t\t// Replace tokens in string with dummy values. Read replaceTokensInString comments for more information\n\t\tlet simulate_url = replaceTokensInString( url );\n\t\tresponse.simulatedURL = simulate_url;\n\n\t\t// Check if it's a valid URL\n\t\tif ( regexURL.test( simulate_url ) ){\n\t\t\tresponse.isValid = true;\n\t\t}\n\t\telse {\n\t\t\t// It's not valid, so now we have to create a valid one\n\t\t\t// Check if it starts with /\n\t\t\tif ( url[0] == '/' ){\n\t\t\t\t// In that case we only have to prepend the site URL to it\n\t\t\t\tnewURL = UncannyAutomator.siteURL + url;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If it doesn't start with / then add it\n\t\t\t\tnewURL = UncannyAutomator.siteURL + '/' + url;\n\t\t\t}\n\n\t\t\t// Check if it's a valid URL now\n\t\t\tif ( regexURL.test( newURL ) ){\n\t\t\t\tresponse.isValid = true;\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// URL without tokens, check if it's a valid\n\t\tif ( regexURL.test( url ) ){\n\t\t\tresponse.isValid = true;\n\t\t}\n\t\telse {\n\t\t\t// It's not valid, so now we have to create a valid one\n\t\t\t// Check if it starts with /\n\t\t\tif ( url[0] == '/' ){\n\t\t\t\t// In that case we only have to prepend the site URL to it\n\t\t\t\tnewURL = UncannyAutomator.siteURL + url;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If it doesn't start with / then add it\n\t\t\t\tnewURL = UncannyAutomator.siteURL + '/' + url;\n\t\t\t}\n\n\t\t\t// Check if it's a valid URL now\n\t\t\tif ( regexURL.test( newURL ) ){\n\t\t\t\tresponse.isValid = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tresponse.newURL = newURL;\n\n\t// Check if the newURL it's the same as the original URL. \n\t// If both are the same then we know that the original value wasn't modified and it was already valid\n\tif ( response.newURL != url ){\n\t\tresponse.changed = true;\n\t}\n\n\treturn response;\n}\n\n/**\n * jQuery plugin used to validate the URL fields while user writes a value (input event)\n * If the value is not valid then it shows to the user how the URL is going to be converted\n * in the plugin to make it valid. Check parseURL comments to learn more about how a URL can be changed.\n *\n * @since 0.1\n *\n * @return {object} jQuery Object\n */\n\n(function ($){\n\t$.fn.checkURL = function ( options ){\n\t\treturn this.each( function (){\n\t\t\t// Just for version 0.1 and 0.2 we are not fixing the URL, instead we're only checking if the original value is a valid URL\n\t\t\t// This has to be uncommented\n\n\t\t\t// Get current jQuery object\n\t\t\tlet $this = $(this);\n\n\t\t\t// Overwrite default settings with the ones given by the user\n\t\t\tlet settings = $.extend({\n\t\t\t\t'preURL': 'Final URL: '\n\t\t\t}, options);\n\n\t\t\t// Create object with useful jQuery objects\n\t\t\tlet elements = {\n\t\t\t\tcontainer:  $this,\n\t\t\t\tinput: \t\t$this.find( '.form-element__input' ),\n\t\t\t}\n\n\t\t\t// Get input attributes\n\t\t\tlet input_attributes = {\n\t\t\t\trequired: \t\t\telements.input.data( 'required' ),\n\t\t\t\tsupportsTokens: \telements.input.data( 'supportstokens' )\n\t\t\t}\n\n\t\t\t// Create DOM elements that will show the final URL to the user\n\t\t\tlet validationNotice = $( '<div/>', { 'class': 'form-input-url-notice' });\n\t\t\tlet validationNoticeHeader = $( '<div/>', { 'class': 'form-input-url-notice__header' });\n\t\t\tlet validationNoticeURL = $( '<div/>', { 'class': 'form-input-url-notice__url' });\n\n\t\t\tvalidationNoticeHeader.text( settings.preURL );\n\t\t\tvalidationNoticeHeader.appendTo( validationNotice );\n\t\t\tvalidationNoticeURL.appendTo( validationNotice );\n\t\t\tvalidationNotice.appendTo( elements.container );\n\n\t\t\t// Function to check if the URL is valid\n\t\t\tfunction validate( value ){\n\t\t\t\tlet url = parseURL( value, input_attributes );\n\n\t\t\t\t// If the URL is different then show the \"Final URL\" container\n\t\t\t\tif ( value != '' && url.isValid && url.changed ){\n\t\t\t\t\tvalidationNotice.addClass( 'form-input-url-notice--show' );\n\t\t\t\t\tvalidationNoticeURL.text( url.newURL );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalidationNotice.removeClass( 'form-input-url-notice--show' );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check on page load to verify if the default value will be converted\n\t\t\tif ( elements.input.val() != '' ){\n\t\t\t\tvalidate( elements.input.val() );\n\t\t\t}\n\n\t\t\t// Bind input event and invoke validate\n\t\t\telements.container.on( 'automator:field:change', function(){\n\t\t\t\tvalidate( elements.input.val() );\n\t\t\t});\n\n\t\t\treturn this;\n\t\t});\n\t}\n}(jQuery));\n\n/**\n * Call checkURL jQuery plugin in each URL field\n *\n * @since 0.1\n *\n * @param {...objects} \tfields - jQuery objects \n *\n * @return {object} jQuery object\n */\n\nexport function initURLChecker( fields ){\n\tfields.checkURL();\n}","import $ from 'jquery';\n\nimport {\n\titemsObject,\n\tgetGlobalItem,\n\tparseStringWithTokens,\n\tisEmpty,\n\tisDefined,\n\tisObject,\n\tvsprintf\n} from '../Utilities';\n\nexport default class Tokens {\n\tconstructor( itemType, fieldType = 'text', options = {} ){\n\t\t// Save data\n\t\tthis.saveData( itemType, fieldType, options );\n\n\t\t// Get data\n\t\tthis.getData();\n\t}\n\n\tsaveData( itemType, fieldType, options ){\n\t\tthis.itemType  = itemType;\n\t\tthis.fieldType = fieldType;\n\n\t\tthis.options = Object.assign( {\n\t\t\tincludeGroupName:   true,\n\t\t\tincludeGroupIcon:   true,\n\t\t\tincludeGroupTokens: true,\n\t\t}, options );\n\n\t\tthis.tokensRegEx = new RegExp( /\\{\\{(.*?)\\}\\}/gm );\n\n\t\tthis.tokensThatRequireUser = [];\n\t}\n\n\tgetData(){\n\t\t// Get all tokens\n\t\tthis.tokens = this.getAllTokens();\n\t}\n\n\t/**\n\t * Get all the tokens that can be used a given item\n\t * These are also going to be filtered by the fieldType\n\t *\n\t * @since 3.0\n\t * \n\t * @return Array  Groups of tokens\n\t */\n\tgetAllTokens(){\n\t\tlet tokensList = [];\n\n\t    // Get the common tokens\n\t\tconst commonTokens = this.getCommonTokens();\n\t\t// Add tokens to the main array\n\t\tif ( commonTokens.tokens.length > 0 ){\n\t\t\ttokensList.push( commonTokens );\n\t\t}\n\n\t    // Get the advanced tokens\n\t\tconst advancedTokens = this.getAdvancedTokens();\n\t\t// Add tokens to the main array\n\t\tif ( advancedTokens.tokens.length > 0 ){\n\t\t\ttokensList.push( advancedTokens );\n\t\t}\n\n\t\t// Get the items tokens\n\t\tconst itemsTokens = this.getItemsTokens();\n\t\t// Add tokens to the main array\n\t\ttokensList = [ ...tokensList, ...itemsTokens ];\n\n\t\treturn tokensList;\n\t}\n\n\t/**\n\t * Get all the common tokens that can be used a given item\n\t * These tokens are independent of the items in the recipe\n\t * They are hardcoded, and vary depending on the characteristics\n\t * of the recipe itself (for example, if the recipe is anon or logged-in)\n\t * These are also going to be filtered by the fieldType\n\t *\n\t * @since 3.0\n\t * \n\t * @return Object  Group of tokens\n\t */\n\tgetCommonTokens(){\n\t\t// Create common tokens\n\t\tconst commonTokens = {\n\t\t\tid:     'common',\n\t\t}\n\n\t\t// Add the name\n\t\tif ( this.options.includeGroupName ){\n\t\t\tcommonTokens.name = UncannyAutomator.i18n.tokens.global.common;\n\t\t}\n\n\t\t// Add the icon\n\t\tif ( this.options.includeGroupIcon ){\n\t\t\tcommonTokens.icon = $( `\n                <i class=\"uo-icon uo-icon--bolt\"></i>\n            ` );\n\t\t}\n\n\t\t// Add the tokens\n\t\tif ( this.options.includeGroupTokens ){\n\t\t\tcommonTokens.tokens = [\n\t\t\t\t{\n\t\t\t\t\tid:   'site_name',\n\t\t\t\t\ttype: 'text',\n\t\t\t\t\tname:  UncannyAutomator.i18n.tokens.global.siteName,\n\t\t\t\t\tcacheable: true\n\t\t\t\t},\n\t\t\t];\n\n\t\t\t// Check if it's a field in a trigger or user-selector section,\n\t\t\t// in an anonymous recipe then don't add user related tokens\n\t\t\tif ( \n\t\t\t\t! ( \n\t\t\t\t\tUncannyAutomator.recipe.type == 'anonymous' \n\t\t\t\t\t&& ( this.itemType == 'trigger' || this.itemType == 'user-selector' )\n\t\t\t\t)\n\t\t\t){\n\t\t\t    // Add user related tokens\n\t\t\t    commonTokens.tokens.push(\n\t\t\t        {\n\t\t\t            id:   'user_id',\n\t\t\t            type: 'int',\n\t\t\t            name:  UncannyAutomator.i18n.tokens.global.userID,\n\t\t\t            cacheable: true,\n\t\t\t            requiresUser: true,\n\t\t\t        },\n\t\t\t        {\n\t\t\t            id:   'user_username',\n\t\t\t            type: 'text',\n\t\t\t            name:  UncannyAutomator.i18n.tokens.global.userUsername,\n\t\t\t            cacheable: true,\n\t\t\t            requiresUser: true,\n\t\t\t        },\n\t\t\t        {\n\t\t\t            id:   'user_firstname',\n\t\t\t            type: 'text',\n\t\t\t            name:  UncannyAutomator.i18n.tokens.global.userFirstName,\n\t\t\t            cacheable: true,\n\t\t\t            requiresUser: true,\n\t\t\t        },\n\t\t\t        {\n\t\t\t            id:   'user_lastname',\n\t\t\t            type: 'text',\n\t\t\t            name:  UncannyAutomator.i18n.tokens.global.userLastName,\n\t\t\t            cacheable: true,\n\t\t\t            requiresUser: true,\n\t\t\t        },\n\t\t\t        {\n\t\t\t            id:   'user_email',\n\t\t\t            type: 'email',\n\t\t\t            name:  UncannyAutomator.i18n.tokens.global.userEmail,\n\t\t\t            cacheable: true,\n\t\t\t            requiresUser: true,\n\t\t\t        },\n\t\t\t        {\n\t\t\t            id:   'user_displayname',\n\t\t\t            type: 'text',\n\t\t\t            name:  UncannyAutomator.i18n.tokens.global.userDisplay,\n\t\t\t            cacheable: true,\n\t\t\t            requiresUser: true,\n\t\t\t        },\n\t\t\t        {\n\t\t\t            id:   'reset_pass_link',\n\t\t\t            type: 'url',\n\t\t\t            name:  UncannyAutomator.i18n.tokens.global.userResetPassLink,\n\t\t\t            cacheable: true,\n\t\t\t            requiresUser: true,\n\t\t\t        }\n\t\t\t    );\n\t\t\t}\n\n\t\t\t// Add other common tokens\n\t\t\tcommonTokens.tokens.push(\n\t\t\t\t{\n\t\t\t\t    id:   'admin_email',\n\t\t\t\t    type: 'email',\n\t\t\t\t    name:  UncannyAutomator.i18n.tokens.global.adminEmail,\n\t\t\t\t    cacheable: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t    id:   'site_url',\n\t\t\t\t    type: 'url',\n\t\t\t\t    name:  UncannyAutomator.i18n.tokens.global.siteUrl,\n\t\t\t\t    cacheable: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t    id:   'recipe_name',\n\t\t\t\t    type: 'text',\n\t\t\t\t    name:  UncannyAutomator.i18n.tokens.global.recipeName,\n\t\t\t\t    cacheable: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t    id:   'current_date',\n\t\t\t\t    type: 'text',\n\t\t\t\t    name:  UncannyAutomator.i18n.tokens.global.currentDate,\n\t\t\t\t    cacheable: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t    id:   'current_time',\n\t\t\t\t    type: 'text',\n\t\t\t\t    name:  UncannyAutomator.i18n.tokens.global.currentTime,\n\t\t\t\t    cacheable: true\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// Filter tokens\n\t\t\t// commonTokens.tokens = this.filterTokensByType( commonTokens.tokens, this.fieldType );\n\t\t}\n\n\t\t// Check what tokens require user data\n\t\tcommonTokens.tokens.forEach(( token ) => {\n\t\t\t// Check if it requires user data\n\t\t\tif ( token.requiresUser ){\n\t\t\t\tthis.tokensThatRequireUser.push( token.id );\n\t\t\t}\n\t\t});\n\n\t\treturn commonTokens;\n\t}\n\n\t/**\n\t * Get all the advanced tokens that can be used a given item\n\t * These tokens are independent of the items in the recipe\n\t * They are hardcoded, and vary depending on the characteristics\n\t * of the recipe itself (for example, if the recipe is anon or logged-in)\n\t * These are also going to be filtered by the fieldType\n\t *\n\t * @since 3.0\n\t * \n\t * @return Object  Group of tokens\n\t */\n\tgetAdvancedTokens(){\n\t\t// Create common tokens\n\t\tconst advancedTokens = {\n\t\t\tid:     'advanced',\n\t\t\ttokens: []\n\t\t}\n\n\t\t// Add the name\n\t\tif ( this.options.includeGroupName ){\n\t\t\tadvancedTokens.name = UncannyAutomator.i18n.tokens.global.advanced;\n\t\t}\n\n\t\t// Add the icon\n\t\tif ( this.options.includeGroupIcon ){\n\t\t\tadvancedTokens.icon = $( `\n                <i class=\"uo-icon uo-icon--bolt\"></i>\n            ` );\n\t\t}\n\n\t\t// Add the tokens\n\t\tif ( this.options.includeGroupTokens ){\n\t\t\t// Check if it's a field in a trigger or user-selector section,\n\t\t    // in an anonymous recipe then don't add user related tokens\n\t\t    if (\n\t\t    \t! ( \n\t\t    \t\tUncannyAutomator.recipe.type == 'anonymous' \n\t\t    \t\t&& ( this.itemType == 'trigger' || this.itemType == 'user-selector' ) \n\t\t    \t)\n\t\t    ){\n\t\t\t\tadvancedTokens.tokens.push({\n\t\t\t\t\tid:   'USERMETA:KEY',\n\t\t\t\t\ttype: 'text',\n\t\t\t\t\tname:  UncannyAutomator.i18n.tokens.global.userMetaKey,\n\t\t\t\t\tcacheable: false,\n\t\t\t        requiresUser: true,\n\t\t\t\t});\n\n\t\t\t\tif ( \n\t\t\t\t\tisDefined( UncannyAutomator.wp ) \n\t\t\t\t\t&& '1' === UncannyAutomator.wp\n\t\t\t\t){\n\t\t\t\t\tadvancedTokens.tokens.push({\n\t\t\t\t\t\tid:   'AUTOLOGINLINK',\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\tname:  UncannyAutomator.i18n.tokens.global.autoLoginLink,\n\t\t\t\t\t\tcacheable: true,\n\t\t\t            requiresUser: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t    }\n\n\t\t    // Filter tokens\n\t\t\t// advancedTokens.tokens = this.filterTokensByType( advancedTokens.tokens, this.fieldType );\n\t\t}\n\n\t\t// Check what tokens require user data\n\t\tadvancedTokens.tokens.forEach(( token ) => {\n\t\t\t// Check if it requires user data\n\t\t\tif ( token.requiresUser ){\n\t\t\t\tthis.tokensThatRequireUser.push( token.id );\n\t\t\t}\n\t\t});\n\n\t    return advancedTokens;\n\t}\n\n\t/**\n\t * Get all the item tokens that can be used a given item\n\t * This method just iterates all the items and calls \"getItemTokens\"\n\t * to get the tokens of each item in the recipe\n\t *\n\t * @since 3.0\n\t * \n\t * @return Object  Groups of tokens\n\t */\n\tgetItemsTokens(){\n\t\tlet itemsTokens = [];\n\n\t\t// Get all the recipe items, by item type\n\t\t// If this.itemType is not defined, all items are going to be returned\n\t\tlet items = UncannyAutomator.recipe.items;\n\t\tif ( isDefined( this.itemType ) ){\n\t\t\t// Remove all the items, we're going to filter them\n\t\t\titems = {};\n\n\t\t    if ( [ 'action', 'closure', 'user-selector' ].includes( this.itemType ) ){\n\t\t        items = $.extend( {}, items, itemsObject( 'get', {\n\t\t            filter: {\n\t\t                itemType: 'trigger'\n\t\t            }\n\t\t        }));\n\t\t    }\n\n\t\t    if ( this.itemType == 'closure' ){\n\t\t        items = $.extend( {}, items, itemsObject( 'get', {\n\t\t            filter: {\n\t\t                itemType: 'action'\n\t\t            }\n\t\t        }));\n\t\t    }\n\t\t}\n\n\t\t// Iterate items\n\t\tObject.entries( items ).forEach( ( [ itemID, item ] ) => {\n\t\t\t// Get the item tokens\n\t\t\tconst itemTokens = this.getItemTokens( item );\n\n\t\t\t// Check if it has tokens\n\t\t\tif ( \n\t\t\t\titemTokens.tokens.length > 0\n\t\t\t\t|| ! this.options.includeGroupTokens\n\t\t\t){\n\t\t\t\titemsTokens.push( itemTokens );\n\t\t\t}\n\t\t});\n\n\t\treturn itemsTokens;\n\t}\n\n\t/**\n\t * Get all the tokens generated by a given item\n\t * The tokens added by this method can be divided into two groups:\n\t * - Automatic tokens: These are created using the fields of\n\t *   the trigger/action. For example, if the item has a dropdown\n\t *   to select a page, with the label \"Page\", then this method will\n\t *   create a text token called \"Page\".\n\t * - Custom dynamic tokens: These are created dynamically with PHP.\n\t *   For example, a trigger that lets you select a Gravity Form would\n\t *   have the fields as tokens.\n\t *\n\t * @since 3.0\n\t * \n\t * @param  Object  item  The item\n\t * \n\t * @return Object         Groups of tokens\n\t */\n\tgetItemTokens( item ){\n\t\t// Create the tokens group\n\t\tlet tokensGroup = {\n            id:             item.itemCode,\n            integrationId:  item.integrationCode,\n        }\n\n        // Add the name\n\t\tif ( this.options.includeGroupName ){\n\t\t\t// Get the name of the groups of tokens\n\t        // For this, we will use the item sentence\n\t\t\tlet itemSentence = item.sentence;\n\t\t\tif ( ! item.isMissing ){\n\t\t\t    itemSentence = getGlobalItem( item.integrationCode, item.itemType, item.itemCode ).sentence;\n\t\t\t}\n\n\t\t\t// Get or create the parsed item sentence\n\t\t\ttokensGroup.name = parseStringWithTokens(\n            \titem, \n            \titemSentence, \n            \tUncannyAutomator.recipe.items[ item.id ].meta,\n            \tfalse\n            ).html;\n\t\t}\n\n\t\t// Add the icon\n\t\tif ( this.options.includeGroupIcon ){\n\t\t\t// Create the icon\n\t        let $icon;\n\n\t        if ( isDefined( UncannyAutomator.integrations[ item.integrationCode ] ) ){\n\t            // Search for an icon\n\t            const integration = UncannyAutomator.integrations[ item.integrationCode ];\n\n\t            // Check if it has a svg image\n\t            if ( isDefined( integration.icon_svg ) ){\n\t                $icon = $( `\n\t                    <img \n\t                        src=\"${ integration.icon_svg }\" \n\t                        alt=\"${ integration.name }\"\n\t                    >\n\t                ` );\n\t            }\n\t            // Check if it has a png image\n\t            else if ( isDefined( integration.icon_16 ) && isDefined( integration.icon_32 ) ){\n\t                $icon = $( `\n\t                    <img \n\t                        src=\"${ integration.icon_16 }\" \n\t                        srcset=\"${ vsprintf( '%s 1x, %s 2x', [ integration.icon_16, integration.icon_32 ]) }\"\n\t                        alt=\"${ integration.name }\"\n\t                    >\n\t                ` );\n\t            }\n\t        }\n\n\t        // Add the icon\n\t        tokensGroup.icon = $icon;\n\t\t}\n\n\t\t// Add the tokens\n\t\tif ( this.options.includeGroupTokens ){\n\t\t\tlet itemTokens = [];\n\n\t\t\t// FIELD tokens\n\t\t\t// Create tokens using the fields\n\t        // Iterate the groups of options\n\t        Object.entries( item.options ).forEach( ( [ optionsGroupID, optionsGroup ] ) => {\n\t        \t// Iterate each field\n\t        \toptionsGroup.fields.forEach( ( Field ) => {\n\t        \t\t// Get the field attributes\n\t        \t\tconst fieldAttributes = Field.getAttributes();\n\n\t        \t\t// Check the field type\n\t        \t\t// Check if it's a repeater field\n\t        \t\t// Check the field type\n\t                if ( fieldAttributes.fieldType == 'repeater' ){\n\t                    // Iterate the rows\n\t                    Field.fieldRows.forEach(( row, index ) => {\n\t                        // Get the row index\n\t                        const rowIndex = index;\n\n\t                        // Iterate the row fields\n\t                        row.forEach(( Field ) => {\n\t                            // Add field\n\t                            itemTokens.push({\n\t                                // Create the token\n\t                                // ITEM_ID : ITEM_CODE : REPEATER_FIELD_ID : ROW_INDEX : FIELD_ID\n\t                                id:      `${ item.id }:${ item.itemCode }:${ fieldAttributes.optionCode }:${ rowIndex }:${ Field.getAttributes().optionCode }`,\n\t                                // Field name:\n\t                                // REPEATER_FIELD_NAME - \"Row\" ROW_INDEX - FIELD_NAME\n\t                                name:    `${ fieldAttributes.tokenName } - ${ vsprintf( UncannyAutomator.i18n.rowNumber, [ ( rowIndex + 1 ) ] ) } - ${ Field.getAttributes().tokenName }`,\n\t                                type:    Field.getAttributes().fieldType == 'select' || Field.getAttributes().fieldType == 'textarea' ? 'text' : Field.getAttributes().fieldType,\n\t                                value:   Field.getValue(),\n\t                                fieldId: Field.getAttributes().optionCode,\n\t                                itemID:  item.id,\n\t                                cacheable: false\n\t                            });\n\t                        });\n\t                    });\n\t                }\n\t                else if ( fieldAttributes.fieldType == 'group' ){\n\t                \t// Nothing here yet\n\t                }\n\t                else {\n\t                \t// Check if it has custom field tokens, also called\n\t                \t// \"relevant tokens\"\n\t                \tif ( \n\t                \t\tisDefined( fieldAttributes.customFieldTokens )\n\t                \t\t&& isObject( fieldAttributes.customFieldTokens )\n\t                \t){\n\t                \t\t// Iterate the relevant tokens\n\t                \t\tObject.entries( fieldAttributes.customFieldTokens ).forEach(( [ tokenId, tokenName ] ) => {\n\t                \t\t\titemTokens.push({\n\t                                id:       `${ item.id }:${ item.itemCode }:${ tokenId }`,\n\t                                name:      tokenName,\n\t                                type:      fieldAttributes.fieldType == 'select' || fieldAttributes.fieldType == 'textarea' ? 'text' : fieldAttributes.fieldType,\n\t                                value:     Field.getValue(),\n\t                                fieldId:   fieldAttributes.optionCode,\n\t                                itemID:    item.id,\n\t                                cacheable: true\n\t                            });\n\t                \t\t});\n\t                \t}\n\t                \telse {\n\t                \t\t// Create a token using the field label\n\t                \t\titemTokens.push({\n\t                            id:      `${ item.id }:${ item.itemCode }:${ fieldAttributes.optionCode }`,\n\t                            name:    fieldAttributes.tokenName,\n\t                            type:    fieldAttributes.fieldType == 'select' || fieldAttributes.fieldType == 'textarea' ? 'text' : fieldAttributes.fieldType,\n\t                            value:   Field.getValue(),\n\t                            fieldId: fieldAttributes.optionCode,\n\t                            itemID:  item.id,\n\t                            cacheable: true\n\t                        });\n\t                \t}\n\t                }\n\t        \t});\n\t        });\n\n\t        // Custom ITEM tokens\n\t        // These are dynamic tokens, for example, the fields of a form\n\t        item.tokens.forEach(( token ) => {\n\t        \titemTokens.push({\n\t                id:   `${ item.id }:${ token.tokenIdentifier }:${ token.tokenId }`,\n\t                name: token.tokenName,\n\t                type: isDefined( token.tokenType ) ? token.tokenType : 'text',\n\t                itemID: item.id,\n\t                cacheable: true\n\t            });\n\t        });\n\n\t        // Add the tokens to the group\n\t        tokensGroup.tokens = itemTokens;\n\n\t        // Filter tokens using a custom function (if it has one)\n\t        if ( ! isEmpty( item.filterTokens ) ){\n\t            // Try to overwrite empty function\n\t            try {\n\t                // Try to convert the string to function, but first remove the <script> tags and trim the string\n\t                const filterTokens = eval( `(${ item.filterTokens.replace( '<script>', '' ).replace( '</script>', '' ).trim() })` ); \n\n\t                // Filter the tokens\n\t                itemTokens = filterTokens( tokensGroup, item );\n\t            } catch ( e ){\n\t            \tconsole.log( e );\n\t            \tconsole.log( item.filterTokens );\n\t            }\n\t        }\n\n\t        // Filter tokens with the global filter\n\t        // This will filter the tokens by type\n        \t/*\n        \ttokensGroup.tokens = this.filterTokensByType(\n        \t\ttokensGroup.tokens,\n        \t\tthis.fieldType\n        \t);\n        \t*/\n\t\t}\n\n        // Add the group of tokens\n        return tokensGroup;\n\t}\n\n\t/**\n\t * Filters the tokens based on the field type\n\t *\n\t * @since  3.0\n\t * \n\t * @param  Array  tokens  The tokens to be filtered\n\t * \n\t * @return Array  tokens  The tokens, filtered\n\t */\n\tfilterTokensByType( tokens ){\n\t\t// Check if the field type is defined\n\t\t// Otherwise, don't filter the tokens\n\t\tif ( isDefined( this.fieldType ) ){\n\t\t\t// Check if it's NOT a text, textarea or url field\n\t\t\t// We don't have to filter tokens for those\n\t\t\tif ( ! [ 'text', 'textarea', 'url' ].includes( this.fieldType ) ){\n\t\t\t\t// Iterate the tokens\n\t\t\t\ttokens = tokens.filter(( token ) => {\n\t\t\t\t\t// Get the token type\n\t\t\t\t\tlet tokenType = token.type;\n\n\t\t\t\t\t// Check if the field is a \"float\" field. In that case,\n\t\t\t\t\t// promote all the \"int\" tokens to \"float\". All integers\n\t\t\t\t\t// are floats\n\t\t\t\t\tif ( \n\t\t\t\t\t\tthis.fieldType == 'float' \n\t\t\t\t\t\t&& tokenType == 'int'\n\t\t\t\t\t){\n\t\t\t\t\t\ttokenType = 'float';\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if the token type matches the field type\n\t\t\t\t\treturn this.fieldType == tokenType;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn tokens;\n\t}\n\n\t/**\n\t * Creates a DOM node with the token data\n\t *\n\t * @since  3.0\n\t * \n\t * @param  String  tokenID  A token ID\n\t * \n\t * @return String           The HTML\n\t */\n\tcreateTokenDOMNode( tokenID ){\n\t\t// Default response\n\t\tlet $tokenNode = null;\n\n\t\t// Get more information about the token\n\t\tconst token = this.getTokenDataByID( tokenID );\n\n\t\t// Check if the token is valid\n\t\tif ( isDefined( token ) ){\n\t\t\t// Check if we already created this element\n\t\t\tif ( isDefined( UncannyAutomator.cache.tokens[ token.id ] ) ){\n\t\t\t\t$tokenNode = UncannyAutomator.cache.tokens[ token.id ];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Create the token node\n\t\t\t\t// VanillaJS because of the performance, this might be heavy\n\t\t\t\t$tokenNode = document.createElement( 'span' );\n\t\t\t\t$tokenNode.classList.add( 'uap-token' );\n\n\t\t\t\t// Insert the icon\n\t\t\t\t$tokenNode.appendChild( token.group.icon[0].cloneNode() );\n\n\t\t\t\t// Insert the name\n\t\t\t\tconst $tokenName = document.createElement( 'span' );\n\t\t\t\t$tokenName.classList.add( 'uap-token__name' );\n\t\t\t\t$tokenName.innerHTML = token.name;\n\t\t\t\t$tokenNode.appendChild( $tokenName );\n\n\t\t\t\t// Check if we can save the token in the cache\n\t\t\t\tif ( token.cacheable ){\n\t\t\t\t\t// Save node in the cache\n\t\t\t\t\tUncannyAutomator.cache.tokens[ token.id ] = $tokenNode;\n\t\t\t\t}\t\n\t\t\t}\n\n\t\t\t// Clone the node\n\t\t\t$tokenNode = $tokenNode.cloneNode( true );\n\t\t}\n\t\telse {\n\t\t\t// Create the token node\n\t\t\t// VanillaJS because of the performance, this might be heavy\n\t\t\t$tokenNode = document.createElement( 'span' );\n\t\t\t$tokenNode.classList.add( 'uap-token', 'uap-token--invalid' );\n\n\t\t\t// Insert the icon\n\t\t\tconst $tokenIcon = document.createElement( 'i' );\n\t\t\t$tokenIcon.classList.add( 'uo-icon', 'uo-icon--exclamation' );\n\t\t\t$tokenNode.appendChild( $tokenIcon );\n\n\t\t\t// Insert the name\n\t\t\tconst $tokenName = document.createElement( 'span' );\n\t\t\t$tokenName.classList.add( 'uap-token__name' );\n\t\t\t$tokenName.innerHTML = tokenID;\n\t\t\t$tokenNode.appendChild( $tokenName );\n\t\t}\n\n\t\treturn $tokenNode;\n\t}\n\n\t/**\n\t * Returns more data about a token by just using the token ID\n\t *\n\t * @since  3.0\n\t * \n\t * @param  String  tokenID  A token ID\n\t * \n\t * @return Object           [description]\n\t */\n\tgetTokenDataByID( tokenID = '' ){\n\t\t// Create a copy of the parameter\n\t\t// We might change the parameter value later\n\t\tconst originalTokenID = tokenID;\n\n\t\t// Default response\n\t\tlet token = null;\n\n\t\t// Add exception for special tokens\n\t\tif ( tokenID.startsWith( 'USERMETA:' ) ){\n\t\t\t// Change the token ID so we can get the required data\n\t\t\ttokenID = 'USERMETA:KEY';\n\t\t}\n\n\t\t// Check if the tokenID is not empty\n\t\tif ( ! isEmpty( tokenID ) ){\n\t\t\t// Iterate the groups of tokens\n\t\t\tthis.tokens.some(( tokensGroup ) => {\n\t\t\t\t// Get the token using the tokenID\n\t\t\t\ttoken = tokensGroup.tokens.reduce(( locatedToken, currentToken ) => {\n\t\t\t\t\treturn currentToken.id == tokenID ? currentToken : locatedToken;\n\t\t\t\t}, null );\n\n\t\t\t\t// Check if we found a token\n\t\t\t\tif ( isDefined( token ) ){\n\t\t\t\t\t// Add more data to the token\n\t\t\t\t\ttoken.group = {\n\t\t\t\t\t\tid:   tokensGroup.id,\n\t\t\t\t\t\tname: tokensGroup.name,\n\t\t\t\t\t\ticon: tokensGroup.icon,\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Add exception for special tokens\n\t\tif ( isDefined( token ) && tokenID.startsWith( 'USERMETA:' ) ){\n\t\t\t// Clone the token, don't modify the original\n            token = $.extend( true, {}, token );\n\n\t\t\t// Get the key the user wants to get\n\t\t\tconst key  = originalTokenID.replace( 'USERMETA:', '' );\n\n\t\t\t// Change ID of the token\n            token.id   = token.id.replace( 'KEY', key );\n\n            // Change name of the token\n            token.name = vsprintf( UncannyAutomator.i18n.tokens.global.userMetaKeyTemplate, [ key ] ); \n\t\t}\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Render text that has tokens\n\t *\n\t * @since 3.0\n\t * \n\t * @param  String   textWithTokens  The text\n\t * @return Node                     Node with the text + tokens rendered\n\t */\n\trenderTextWithTokens( textWithTokens, options = {}){\n\t\t// Get the options\n\t\toptions = Object.assign({\n\t\t\ttemplate: '',\n\t\t}, options );\n\n\t\t// Check if it has a template\n\t\tconst hasTemplate = ! isEmpty( options.template );\n\n\t\t// Create the container\n\t\tconst $container = document.createElement( 'span' );\n\n\t\t// Replace the tokens in the text with tokens\n\t\ttextWithTokens = textWithTokens.replace(\n\t\t\tthis.tokensRegEx,\n\t\t\t( fullMatch, token ) => {\n\t\t\t\t// Get token node\n\t\t\t\tconst $token = this.createTokenDOMNode( token );\n\n\t\t\t\t// Get the token node HTML\n\t\t\t\tlet tokenHTML = $token.outerHTML;\n\n\t\t\t\t// Check if we have to add a wrapper to it\n\t\t\t\tif ( hasTemplate ){\n\t\t\t\t\t// Add the variable data to the template\n\t\t\t\t\ttokenHTML = vsprintf( options.template, [\n\t\t\t\t\t\ttokenHTML,\n\t\t\t\t\t\ttoken\n\t\t\t\t\t]);\n\t\t\t\t}\n\n\t\t\t\t// Replace the content with the HTML of the token node\n\t\t\t\treturn tokenHTML;\n\t\t\t}\n\t\t);\n\n\t\t// Add the text, now with the tokens rendered, to the container\n\t\t$container.innerHTML = textWithTokens;\n\n\t\treturn $container;\n\t}\n}","\"use strict\";\nif (typeof Object.assign !== \"function\") {\n    Object.assign = function (target, ...args) {\n        if (!target) {\n            throw TypeError(\"Cannot convert undefined or null to object\");\n        }\n        for (const source of args) {\n            if (source) {\n                Object.keys(source).forEach((key) => (target[key] = source[key]));\n            }\n        }\n        return target;\n    };\n}\n","/*\n * HTML5Sortable package\n * https://github.com/lukasoppermann/html5sortable\n *\n * Maintained by Lukas Oppermann <lukas@vea.re>\n *\n * Released under the MIT license.\n */\n'use strict';\n\n/**\n * Get or set data on element\n * @param {HTMLElement} element\n * @param {string} key\n * @param {any} value\n * @return {*}\n */\nfunction addData(element, key, value) {\n    if (value === undefined) {\n        return element && element.h5s && element.h5s.data && element.h5s.data[key];\n    }\n    else {\n        element.h5s = element.h5s || {};\n        element.h5s.data = element.h5s.data || {};\n        element.h5s.data[key] = value;\n    }\n}\n/**\n * Remove data from element\n * @param {HTMLElement} element\n */\nfunction removeData(element) {\n    if (element.h5s) {\n        delete element.h5s.data;\n    }\n}\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {NodeList|HTMLCollection|Array} nodes\n * @param {String} selector\n * @returns {Array}\n */\nvar filter = (function (nodes, selector) {\n    if (!(nodes instanceof NodeList || nodes instanceof HTMLCollection || nodes instanceof Array)) {\n        throw new Error('You must provide a nodeList/HTMLCollection/Array of elements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return Array.from(nodes);\n    }\n    return Array.from(nodes).filter(function (item) { return item.nodeType === 1 && item.matches(selector); });\n});\n\n/* eslint-env browser */\n/* eslint-disable no-use-before-define */\nvar stores = new Map();\n/* eslint-enable no-use-before-define */\n/**\n * Stores data & configurations per Sortable\n * @param {Object} config\n */\nvar Store = /** @class */ (function () {\n    function Store() {\n        this._config = new Map(); // eslint-disable-line no-undef\n        this._placeholder = undefined; // eslint-disable-line no-undef\n        this._data = new Map(); // eslint-disable-line no-undef\n    }\n    Object.defineProperty(Store.prototype, \"config\", {\n        /**\n         * get the configuration map of a class instance\n         * @method config\n         * @return {object}\n         */\n        get: function () {\n            // transform Map to object\n            var config = {};\n            this._config.forEach(function (value, key) {\n                config[key] = value;\n            });\n            // return object\n            return config;\n        },\n        /**\n         * set the configuration of a class instance\n         * @method config\n         * @param {object} config object of configurations\n         */\n        set: function (config) {\n            if (typeof config !== 'object') {\n                throw new Error('You must provide a valid configuration object to the config setter.');\n            }\n            // combine config with default\n            var mergedConfig = Object.assign({}, config);\n            // add config to map\n            this._config = new Map(Object.entries(mergedConfig));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * set individual configuration of a class instance\n     * @method setConfig\n     * @param  key valid configuration key\n     * @param  value any value\n     * @return void\n     */\n    Store.prototype.setConfig = function (key, value) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Trying to set invalid configuration item: \" + key);\n        }\n        // set config\n        this._config.set(key, value);\n    };\n    /**\n     * get an individual configuration of a class instance\n     * @method getConfig\n     * @param  key valid configuration key\n     * @return any configuration value\n     */\n    Store.prototype.getConfig = function (key) {\n        if (!this._config.has(key)) {\n            throw new Error(\"Invalid configuration item requested: \" + key);\n        }\n        return this._config.get(key);\n    };\n    Object.defineProperty(Store.prototype, \"placeholder\", {\n        /**\n         * get the placeholder for a class instance\n         * @method placeholder\n         * @return {HTMLElement|null}\n         */\n        get: function () {\n            return this._placeholder;\n        },\n        /**\n         * set the placeholder for a class instance\n         * @method placeholder\n         * @param {HTMLElement} placeholder\n         * @return {void}\n         */\n        set: function (placeholder) {\n            if (!(placeholder instanceof HTMLElement) && placeholder !== null) {\n                throw new Error('A placeholder must be an html element or null.');\n            }\n            this._placeholder = placeholder;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * set an data entry\n     * @method setData\n     * @param {string} key\n     * @param {any} value\n     * @return {void}\n     */\n    Store.prototype.setData = function (key, value) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        this._data.set(key, value);\n    };\n    /**\n     * get an data entry\n     * @method getData\n     * @param {string} key an existing key\n     * @return {any}\n     */\n    Store.prototype.getData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.get(key);\n    };\n    /**\n     * delete an data entry\n     * @method deleteData\n     * @param {string} key an existing key\n     * @return {boolean}\n     */\n    Store.prototype.deleteData = function (key) {\n        if (typeof key !== 'string') {\n            throw new Error('The key must be a string.');\n        }\n        return this._data.delete(key);\n    };\n    return Store;\n}());\n/**\n * @param {HTMLElement} sortableElement\n * @returns {Class: Store}\n */\nvar store = (function (sortableElement) {\n    // if sortableElement is wrong type\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('Please provide a sortable to the store function.');\n    }\n    // create new instance if not avilable\n    if (!stores.has(sortableElement)) {\n        stores.set(sortableElement, new Store());\n    }\n    // return instance\n    return stores.get(sortableElement);\n});\n\n/**\n * @param {Array|HTMLElement} element\n * @param {Function} callback\n * @param {string} event\n */\nfunction addEventListener(element, eventName, callback) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addEventListener(element[i], eventName, callback);\n        }\n        return;\n    }\n    element.addEventListener(eventName, callback);\n    store(element).setData(\"event\" + eventName, callback);\n}\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} eventName\n */\nfunction removeEventListener(element, eventName) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeEventListener(element[i], eventName);\n        }\n        return;\n    }\n    element.removeEventListener(eventName, store(element).getData(\"event\" + eventName));\n    store(element).deleteData(\"event\" + eventName);\n}\n\n/**\n * @param {Array<HTMLElement>|HTMLElement} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction addAttribute(element, attribute, value) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            addAttribute(element[i], attribute, value);\n        }\n        return;\n    }\n    element.setAttribute(attribute, value);\n}\n/**\n * @param {Array|HTMLElement} element\n * @param {string} attribute\n */\nfunction removeAttribute(element, attribute) {\n    if (element instanceof Array) {\n        for (var i = 0; i < element.length; ++i) {\n            removeAttribute(element[i], attribute);\n        }\n        return;\n    }\n    element.removeAttribute(attribute);\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {Object}\n */\nvar offset = (function (element) {\n    if (!element.parentElement || element.getClientRects().length === 0) {\n        throw new Error('target element must be part of the dom');\n    }\n    var rect = element.getClientRects()[0];\n    return {\n        left: rect.left + window.pageXOffset,\n        right: rect.right + window.pageXOffset,\n        top: rect.top + window.pageYOffset,\n        bottom: rect.bottom + window.pageYOffset\n    };\n});\n\n/**\n * Creates and returns a new debounced version of the passed function which will postpone its execution until after wait milliseconds have elapsed\n * @param {Function} func to debounce\n * @param {number} time to wait before calling function with latest arguments, 0 - no debounce\n * @returns {function} - debounced function\n */\nvar debounce = (function (func, wait) {\n    if (wait === void 0) { wait = 0; }\n    var timeout;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        clearTimeout(timeout);\n        timeout = setTimeout(function () {\n            func.apply(void 0, args);\n        }, wait);\n    };\n});\n\n/* eslint-env browser */\n/**\n * Get position of the element relatively to its sibling elements\n * @param {HTMLElement} element\n * @returns {number}\n */\nvar getIndex = (function (element, elementList) {\n    if (!(element instanceof HTMLElement) || !(elementList instanceof NodeList || elementList instanceof HTMLCollection || elementList instanceof Array)) {\n        throw new Error('You must provide an element and a list of elements.');\n    }\n    return Array.from(elementList).indexOf(element);\n});\n\n/* eslint-env browser */\n/**\n * Test whether element is in DOM\n * @param {HTMLElement} element\n * @returns {boolean}\n */\nvar isInDom = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('Element is not a node element.');\n    }\n    return element.parentNode !== null;\n});\n\n/* eslint-env browser */\n/**\n * Insert node before or after target\n * @param {HTMLElement} referenceNode - reference element\n * @param {HTMLElement} newElement - element to be inserted\n * @param {String} position - insert before or after reference element\n */\nvar insertNode = function (referenceNode, newElement, position) {\n    if (!(referenceNode instanceof HTMLElement) || !(referenceNode.parentElement instanceof HTMLElement)) {\n        throw new Error('target and element must be a node');\n    }\n    referenceNode.parentElement.insertBefore(newElement, (position === 'before' ? referenceNode : referenceNode.nextElementSibling));\n};\n/**\n * Insert before target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertBefore = function (target, element) { return insertNode(target, element, 'before'); };\n/**\n * Insert after target\n * @param {HTMLElement} target\n * @param {HTMLElement} element\n */\nvar insertAfter = function (target, element) { return insertNode(target, element, 'after'); };\n\n/* eslint-env browser */\n/**\n * Filter only wanted nodes\n * @param {HTMLElement} sortableContainer\n * @param {Function} customSerializer\n * @returns {Array}\n */\nvar serialize = (function (sortableContainer, customItemSerializer, customContainerSerializer) {\n    if (customItemSerializer === void 0) { customItemSerializer = function (serializedItem, sortableContainer) { return serializedItem; }; }\n    if (customContainerSerializer === void 0) { customContainerSerializer = function (serializedContainer) { return serializedContainer; }; }\n    // check for valid sortableContainer\n    if (!(sortableContainer instanceof HTMLElement) || !sortableContainer.isSortable === true) {\n        throw new Error('You need to provide a sortableContainer to be serialized.');\n    }\n    // check for valid serializers\n    if (typeof customItemSerializer !== 'function' || typeof customContainerSerializer !== 'function') {\n        throw new Error('You need to provide a valid serializer for items and the container.');\n    }\n    // get options\n    var options = addData(sortableContainer, 'opts');\n    var item = options.items;\n    // serialize container\n    var items = filter(sortableContainer.children, item);\n    var serializedItems = items.map(function (item) {\n        return {\n            parent: sortableContainer,\n            node: item,\n            html: item.outerHTML,\n            index: getIndex(item, items)\n        };\n    });\n    // serialize container\n    var container = {\n        node: sortableContainer,\n        itemCount: serializedItems.length\n    };\n    return {\n        container: customContainerSerializer(container),\n        items: serializedItems.map(function (item) { return customItemSerializer(item, sortableContainer); })\n    };\n});\n\n/* eslint-env browser */\n/**\n * create a placeholder element\n * @param {HTMLElement} sortableElement a single sortable\n * @param {string|undefined} placeholder a string representing an html element\n * @param {string} placeholderClasses a string representing the classes that should be added to the placeholder\n */\nvar makePlaceholder = (function (sortableElement, placeholder, placeholderClass) {\n    var _a;\n    if (placeholderClass === void 0) { placeholderClass = 'sortable-placeholder'; }\n    if (!(sortableElement instanceof HTMLElement)) {\n        throw new Error('You must provide a valid element as a sortable.');\n    }\n    // if placeholder is not an element\n    if (!(placeholder instanceof HTMLElement) && placeholder !== undefined) {\n        throw new Error('You must provide a valid element as a placeholder or set ot to undefined.');\n    }\n    // if no placeholder element is given\n    if (placeholder === undefined) {\n        if (['UL', 'OL'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('li');\n        }\n        else if (['TABLE', 'TBODY'].includes(sortableElement.tagName)) {\n            placeholder = document.createElement('tr');\n            // set colspan to always all rows, otherwise the item can only be dropped in first column\n            placeholder.innerHTML = '<td colspan=\"100\"></td>';\n        }\n        else {\n            placeholder = document.createElement('div');\n        }\n    }\n    // add classes to placeholder\n    if (typeof placeholderClass === 'string') {\n        (_a = placeholder.classList).add.apply(_a, placeholderClass.split(' '));\n    }\n    return placeholder;\n});\n\n/* eslint-env browser */\n/**\n * Get height of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar getElementHeight = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // get only height if element has box-sizing: border-box specified\n    if (style.getPropertyValue('box-sizing') === 'border-box') {\n        return parseInt(style.getPropertyValue('height'), 10);\n    }\n    // pick applicable properties, convert to int and reduce by adding\n    return ['height', 'padding-top', 'padding-bottom']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * Get width of an element including padding\n * @param {HTMLElement} element an dom element\n */\nvar getElementWidth = (function (element) {\n    if (!(element instanceof HTMLElement)) {\n        throw new Error('You must provide a valid dom element');\n    }\n    // get calculated style of element\n    var style = window.getComputedStyle(element);\n    // pick applicable properties, convert to int and reduce by adding\n    return ['width', 'padding-left', 'padding-right']\n        .map(function (key) {\n        var int = parseInt(style.getPropertyValue(key), 10);\n        return isNaN(int) ? 0 : int;\n    })\n        .reduce(function (sum, value) { return sum + value; });\n});\n\n/* eslint-env browser */\n/**\n * get handle or return item\n * @param {Array<HTMLElement>} items\n * @param {string} selector\n */\nvar getHandles = (function (items, selector) {\n    if (!(items instanceof Array)) {\n        throw new Error('You must provide a Array of HTMLElements to be filtered.');\n    }\n    if (typeof selector !== 'string') {\n        return items;\n    }\n    return items\n        // remove items without handle from array\n        .filter(function (item) {\n        return item.querySelector(selector) instanceof HTMLElement ||\n            (item.shadowRoot && item.shadowRoot.querySelector(selector) instanceof HTMLElement);\n    })\n        // replace item with handle in array\n        .map(function (item) {\n        return item.querySelector(selector) || (item.shadowRoot && item.shadowRoot.querySelector(selector));\n    });\n});\n\n/**\n * @param {Event} event\n * @returns {HTMLElement}\n */\nvar getEventTarget = (function (event) {\n    return (event.composedPath && event.composedPath()[0]) || event.target;\n});\n\n/* eslint-env browser */\n/**\n * defaultDragImage returns the current item as dragged image\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {object} elementOffset - an object with the offsets top, left, right & bottom\n * @param {Event} event - the original drag event object\n * @return {object} with element, posX and posY properties\n */\nvar defaultDragImage = function (draggedElement, elementOffset, event) {\n    return {\n        element: draggedElement,\n        posX: event.pageX - elementOffset.left,\n        posY: event.pageY - elementOffset.top\n    };\n};\n/**\n * attaches an element as the drag image to an event\n * @param {Event} event - the original drag event object\n * @param {HTMLElement} draggedElement - the item that the user drags\n * @param {Function} customDragImage - function to create a custom dragImage\n * @return void\n */\nvar setDragImage = (function (event, draggedElement, customDragImage) {\n    // check if event is provided\n    if (!(event instanceof Event)) {\n        throw new Error('setDragImage requires a DragEvent as the first argument.');\n    }\n    // check if draggedElement is provided\n    if (!(draggedElement instanceof HTMLElement)) {\n        throw new Error('setDragImage requires the dragged element as the second argument.');\n    }\n    // set default function of none provided\n    if (!customDragImage) {\n        customDragImage = defaultDragImage;\n    }\n    // check if setDragImage method is available\n    if (event.dataTransfer && event.dataTransfer.setDragImage) {\n        // get the elements offset\n        var elementOffset = offset(draggedElement);\n        // get the dragImage\n        var dragImage = customDragImage(draggedElement, elementOffset, event);\n        // check if custom function returns correct values\n        if (!(dragImage.element instanceof HTMLElement) || typeof dragImage.posX !== 'number' || typeof dragImage.posY !== 'number') {\n            throw new Error('The customDragImage function you provided must return and object with the properties element[string], posX[integer], posY[integer].');\n        }\n        // needs to be set for HTML5 drag & drop to work\n        event.dataTransfer.effectAllowed = 'copyMove';\n        // Firefox requires it to use the event target's id for the data\n        event.dataTransfer.setData('text/plain', getEventTarget(event).id);\n        // set the drag image on the event\n        event.dataTransfer.setDragImage(dragImage.element, dragImage.posX, dragImage.posY);\n    }\n});\n\n/**\n * Check if curList accepts items from destList\n * @param {sortable} destination the container an item is move to\n * @param {sortable} origin the container an item comes from\n */\nvar listsConnected = (function (destination, origin) {\n    // check if valid sortable\n    if (destination.isSortable === true) {\n        var acceptFrom = store(destination).getConfig('acceptFrom');\n        // check if acceptFrom is valid\n        if (acceptFrom !== null && acceptFrom !== false && typeof acceptFrom !== 'string') {\n            throw new Error('HTML5Sortable: Wrong argument, \"acceptFrom\" must be \"null\", \"false\", or a valid selector string.');\n        }\n        if (acceptFrom !== null) {\n            return acceptFrom !== false && acceptFrom.split(',').filter(function (sel) {\n                return sel.length > 0 && origin.matches(sel);\n            }).length > 0;\n        }\n        // drop in same list\n        if (destination === origin) {\n            return true;\n        }\n        // check if lists are connected with connectWith\n        if (store(destination).getConfig('connectWith') !== undefined && store(destination).getConfig('connectWith') !== null) {\n            return store(destination).getConfig('connectWith') === store(origin).getConfig('connectWith');\n        }\n    }\n    return false;\n});\n\n/**\n * default configurations\n */\nvar defaultConfiguration = {\n    items: null,\n    // deprecated\n    connectWith: null,\n    // deprecated\n    disableIEFix: null,\n    acceptFrom: null,\n    copy: false,\n    placeholder: null,\n    placeholderClass: 'sortable-placeholder',\n    draggingClass: 'sortable-dragging',\n    hoverClass: false,\n    dropTargetContainerClass: false,\n    debounce: 0,\n    throttleTime: 100,\n    maxItems: 0,\n    itemSerializer: undefined,\n    containerSerializer: undefined,\n    customDragImage: null,\n    orientation: 'vertical'\n};\n\n/**\n * make sure a function is only called once within the given amount of time\n * @param {Function} fn the function to throttle\n * @param {number} threshold time limit for throttling\n */\n// must use function to keep this context\nfunction throttle (fn, threshold) {\n    var _this = this;\n    if (threshold === void 0) { threshold = 250; }\n    // check function\n    if (typeof fn !== 'function') {\n        throw new Error('You must provide a function as the first argument for throttle.');\n    }\n    // check threshold\n    if (typeof threshold !== 'number') {\n        throw new Error('You must provide a number as the second argument for throttle.');\n    }\n    var lastEventTimestamp = null;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var now = Date.now();\n        if (lastEventTimestamp === null || now - lastEventTimestamp >= threshold) {\n            lastEventTimestamp = now;\n            fn.apply(_this, args);\n        }\n    };\n}\n\n/* eslint-env browser */\n/**\n * enable or disable hoverClass on mouseenter/leave if container Items\n * @param {sortable} sortableContainer a valid sortableContainer\n * @param {boolean} enable enable or disable event\n */\nvar enableHoverClass = (function (sortableContainer, enable) {\n    if (typeof store(sortableContainer).getConfig('hoverClass') === 'string') {\n        var hoverClasses_1 = store(sortableContainer).getConfig('hoverClass').split(' ');\n        // add class on hover\n        if (enable === true) {\n            addEventListener(sortableContainer, 'mousemove', throttle(function (event) {\n                // check of no mouse button was pressed when mousemove started == no drag\n                if (event.buttons === 0) {\n                    filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                        var _a, _b;\n                        if (item === event.target || item.contains(event.target)) {\n                            (_a = item.classList).add.apply(_a, hoverClasses_1);\n                        }\n                        else {\n                            (_b = item.classList).remove.apply(_b, hoverClasses_1);\n                        }\n                    });\n                }\n            }, store(sortableContainer).getConfig('throttleTime')));\n            // remove class on leave\n            addEventListener(sortableContainer, 'mouseleave', function () {\n                filter(sortableContainer.children, store(sortableContainer).getConfig('items')).forEach(function (item) {\n                    var _a;\n                    (_a = item.classList).remove.apply(_a, hoverClasses_1);\n                });\n            });\n            // remove events\n        }\n        else {\n            removeEventListener(sortableContainer, 'mousemove');\n            removeEventListener(sortableContainer, 'mouseleave');\n        }\n    }\n});\n\n/* eslint-env browser */\n/*\n * variables global to the plugin\n */\nvar dragging;\nvar draggingHeight;\nvar draggingWidth;\n/*\n * Keeps track of the initialy selected list, where 'dragstart' event was triggered\n * It allows us to move the data in between individual Sortable List instances\n */\n// Origin List - data from before any item was changed\nvar originContainer;\nvar originIndex;\nvar originElementIndex;\nvar originItemsBeforeUpdate;\n// Previous Sortable Container - we dispatch as sortenter event when a\n// dragged item enters a sortableContainer for the first time\nvar previousContainer;\n// Destination List - data from before any item was changed\nvar destinationItemsBeforeUpdate;\n/**\n * remove event handlers from items\n * @param {Array|NodeList} items\n */\nvar removeItemEvents = function (items) {\n    removeEventListener(items, 'dragstart');\n    removeEventListener(items, 'dragend');\n    removeEventListener(items, 'dragover');\n    removeEventListener(items, 'dragenter');\n    removeEventListener(items, 'drop');\n    removeEventListener(items, 'mouseenter');\n    removeEventListener(items, 'mouseleave');\n};\n// Remove container events\nvar removeContainerEvents = function (originContainer, previousContainer) {\n    if (originContainer) {\n        removeEventListener(originContainer, 'dragleave');\n    }\n    if (previousContainer && (previousContainer !== originContainer)) {\n        removeEventListener(previousContainer, 'dragleave');\n    }\n};\n/**\n * getDragging returns the current element to drag or\n * a copy of the element.\n * Is Copy Active for sortable\n * @param {HTMLElement} draggedItem - the item that the user drags\n * @param {HTMLElement} sortable a single sortable\n */\nvar getDragging = function (draggedItem, sortable) {\n    var ditem = draggedItem;\n    if (store(sortable).getConfig('copy') === true) {\n        ditem = draggedItem.cloneNode(true);\n        addAttribute(ditem, 'aria-copied', 'true');\n        draggedItem.parentElement.appendChild(ditem);\n        ditem.style.display = 'none';\n        ditem.oldDisplay = draggedItem.style.display;\n    }\n    return ditem;\n};\n/**\n * Remove data from sortable\n * @param {HTMLElement} sortable a single sortable\n */\nvar removeSortableData = function (sortable) {\n    removeData(sortable);\n    removeAttribute(sortable, 'aria-dropeffect');\n};\n/**\n * Remove data from items\n * @param {Array<HTMLElement>|HTMLElement} items\n */\nvar removeItemData = function (items) {\n    removeAttribute(items, 'aria-grabbed');\n    removeAttribute(items, 'aria-copied');\n    removeAttribute(items, 'draggable');\n    removeAttribute(items, 'role');\n};\n/**\n * find sortable from element. travels up parent element until found or null.\n * @param {HTMLElement} element a single sortable\n * @param {Event} event - the current event. We need to pass it to be able to\n * find Sortable whith shadowRoot (document fragment has no parent)\n */\nfunction findSortable(element, event) {\n    if (event.composedPath) {\n        return event.composedPath().find(function (el) { return el.isSortable; });\n    }\n    while (element.isSortable !== true) {\n        element = element.parentElement;\n    }\n    return element;\n}\n/**\n * Dragging event is on the sortable element. finds the top child that\n * contains the element.\n * @param {HTMLElement} sortableElement a single sortable\n * @param {HTMLElement} element is that being dragged\n */\nfunction findDragElement(sortableElement, element) {\n    var options = addData(sortableElement, 'opts');\n    var items = filter(sortableElement.children, options.items);\n    var itemlist = items.filter(function (ele) {\n        return ele.contains(element) || (ele.shadowRoot && ele.shadowRoot.contains(element));\n    });\n    return itemlist.length > 0 ? itemlist[0] : element;\n}\n/**\n * Destroy the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar destroySortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts') || {};\n    var items = filter(sortableElement.children, opts.items);\n    var handles = getHandles(items, opts.handle);\n    // disable adding hover class\n    enableHoverClass(sortableElement, false);\n    // remove event handlers & data from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'dragstart');\n    removeEventListener(sortableElement, 'dragend');\n    removeEventListener(sortableElement, 'drop');\n    // remove event data from sortable\n    removeSortableData(sortableElement);\n    // remove event handlers & data from items\n    removeEventListener(handles, 'mousedown');\n    removeItemEvents(items);\n    removeItemData(items);\n    removeContainerEvents(originContainer, previousContainer);\n    // clear sortable flag\n    sortableElement.isSortable = false;\n};\n/**\n * Enable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar enableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = filter(sortableElement.children, opts.items);\n    var handles = getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'move');\n    addData(sortableElement, '_disabled', 'false');\n    addAttribute(handles, 'draggable', 'true');\n    // enable hover class\n    enableHoverClass(sortableElement, true);\n    // @todo: remove this fix\n    // IE FIX for ghost\n    // can be disabled as it has the side effect that other events\n    // (e.g. click) will be ignored\n    if (opts.disableIEFix === false) {\n        var spanEl = (document || window.document).createElement('span');\n        if (typeof spanEl.dragDrop === 'function') {\n            addEventListener(handles, 'mousedown', function () {\n                if (items.indexOf(this) !== -1) {\n                    this.dragDrop();\n                }\n                else {\n                    var parent = this.parentElement;\n                    while (items.indexOf(parent) === -1) {\n                        parent = parent.parentElement;\n                    }\n                    parent.dragDrop();\n                }\n            });\n        }\n    }\n};\n/**\n * Disable the sortable\n * @param {HTMLElement} sortableElement a single sortable\n */\nvar disableSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = filter(sortableElement.children, opts.items);\n    var handles = getHandles(items, opts.handle);\n    addAttribute(sortableElement, 'aria-dropeffect', 'none');\n    addData(sortableElement, '_disabled', 'true');\n    addAttribute(handles, 'draggable', 'false');\n    removeEventListener(handles, 'mousedown');\n    enableHoverClass(sortableElement, false);\n};\n/**\n * Reload the sortable\n * @param {HTMLElement} sortableElement a single sortable\n * @description events need to be removed to not be double bound\n */\nvar reloadSortable = function (sortableElement) {\n    var opts = addData(sortableElement, 'opts');\n    var items = filter(sortableElement.children, opts.items);\n    var handles = getHandles(items, opts.handle);\n    addData(sortableElement, '_disabled', 'false');\n    // remove event handlers from items\n    removeItemEvents(items);\n    removeContainerEvents(originContainer, previousContainer);\n    removeEventListener(handles, 'mousedown');\n    // remove event handlers from sortable\n    removeEventListener(sortableElement, 'dragover');\n    removeEventListener(sortableElement, 'dragenter');\n    removeEventListener(sortableElement, 'drop');\n};\n/**\n * Public sortable object\n * @param {Array|NodeList} sortableElements\n * @param {object|string} options|method\n */\nfunction sortable(sortableElements, options) {\n    // get method string to see if a method is called\n    var method = String(options);\n    options = options || {};\n    // check if the user provided a selector instead of an element\n    if (typeof sortableElements === 'string') {\n        sortableElements = document.querySelectorAll(sortableElements);\n    }\n    // if the user provided an element, return it in an array to keep the return value consistant\n    if (sortableElements instanceof HTMLElement) {\n        sortableElements = [sortableElements];\n    }\n    sortableElements = Array.prototype.slice.call(sortableElements);\n    if (/serialize/.test(method)) {\n        return sortableElements.map(function (sortableContainer) {\n            var opts = addData(sortableContainer, 'opts');\n            return serialize(sortableContainer, opts.itemSerializer, opts.containerSerializer);\n        });\n    }\n    sortableElements.forEach(function (sortableElement) {\n        if (/enable|disable|destroy/.test(method)) {\n            return sortable[method](sortableElement);\n        }\n        // log deprecation\n        ['connectWith', 'disableIEFix'].forEach(function (configKey) {\n            if (Object.prototype.hasOwnProperty.call(options, configKey) && options[configKey] !== null) {\n                console.warn(\"HTML5Sortable: You are using the deprecated configuration \\\"\" + configKey + \"\\\". This will be removed in an upcoming version, make sure to migrate to the new options when updating.\");\n            }\n        });\n        // merge options with default options\n        options = Object.assign({}, defaultConfiguration, store(sortableElement).config, options);\n        // init data store for sortable\n        store(sortableElement).config = options;\n        // set options on sortable\n        addData(sortableElement, 'opts', options);\n        // property to define as sortable\n        sortableElement.isSortable = true;\n        // reset sortable\n        reloadSortable(sortableElement);\n        // initialize\n        var listItems = filter(sortableElement.children, options.items);\n        // create element if user defined a placeholder element as a string\n        var customPlaceholder;\n        if (options.placeholder !== null && options.placeholder !== undefined) {\n            var tempContainer = document.createElement(sortableElement.tagName);\n            if (options.placeholder instanceof HTMLElement) {\n                tempContainer.appendChild(options.placeholder);\n            }\n            else {\n                tempContainer.innerHTML = options.placeholder;\n            }\n            customPlaceholder = tempContainer.children[0];\n        }\n        // add placeholder\n        store(sortableElement).placeholder = makePlaceholder(sortableElement, customPlaceholder, options.placeholderClass);\n        addData(sortableElement, 'items', options.items);\n        if (options.acceptFrom) {\n            addData(sortableElement, 'acceptFrom', options.acceptFrom);\n        }\n        else if (options.connectWith) {\n            addData(sortableElement, 'connectWith', options.connectWith);\n        }\n        enableSortable(sortableElement);\n        addAttribute(listItems, 'role', 'option');\n        addAttribute(listItems, 'aria-grabbed', 'false');\n        /*\n         Handle drag events on draggable items\n         Handle is set at the sortableElement level as it will bubble up\n         from the item\n         */\n        addEventListener(sortableElement, 'dragstart', function (e) {\n            // ignore dragstart events\n            var target = getEventTarget(e);\n            if (target.isSortable === true) {\n                return;\n            }\n            e.stopImmediatePropagation();\n            if ((options.handle && !target.matches(options.handle)) || target.getAttribute('draggable') === 'false') {\n                return;\n            }\n            var sortableContainer = findSortable(target, e);\n            var dragItem = findDragElement(sortableContainer, target);\n            // grab values\n            originItemsBeforeUpdate = filter(sortableContainer.children, options.items);\n            originIndex = originItemsBeforeUpdate.indexOf(dragItem);\n            originElementIndex = getIndex(dragItem, sortableContainer.children);\n            originContainer = sortableContainer;\n            // add transparent clone or other ghost to cursor\n            setDragImage(e, dragItem, options.customDragImage);\n            // cache selsection & add attr for dragging\n            draggingHeight = getElementHeight(dragItem);\n            draggingWidth = getElementWidth(dragItem);\n            dragItem.classList.add(options.draggingClass);\n            dragging = getDragging(dragItem, sortableContainer);\n            addAttribute(dragging, 'aria-grabbed', 'true');\n            // dispatch sortstart event on each element in group\n            sortableContainer.dispatchEvent(new CustomEvent('sortstart', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging,\n                    originalTarget: target\n                }\n            }));\n        });\n        /*\n         We are capturing targetSortable before modifications with 'dragenter' event\n        */\n        addEventListener(sortableElement, 'dragenter', function (e) {\n            var target = getEventTarget(e);\n            var sortableContainer = findSortable(target, e);\n            if (sortableContainer && sortableContainer !== previousContainer) {\n                destinationItemsBeforeUpdate = filter(sortableContainer.children, addData(sortableContainer, 'items'))\n                    .filter(function (item) { return item !== store(sortableElement).placeholder; });\n                if (options.dropTargetContainerClass) {\n                    sortableContainer.classList.add(options.dropTargetContainerClass);\n                }\n                sortableContainer.dispatchEvent(new CustomEvent('sortenter', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer\n                        },\n                        destination: {\n                            container: sortableContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate\n                        },\n                        item: dragging,\n                        originalTarget: target\n                    }\n                }));\n                addEventListener(sortableContainer, 'dragleave', function (e) {\n                    // TODO: rename outTarget to be more self-explanatory\n                    // e.fromElement for very old browsers, similar to relatedTarget\n                    var outTarget = e.relatedTarget || e.fromElement;\n                    if (!e.currentTarget.contains(outTarget)) {\n                        if (options.dropTargetContainerClass) {\n                            sortableContainer.classList.remove(options.dropTargetContainerClass);\n                        }\n                        sortableContainer.dispatchEvent(new CustomEvent('sortleave', {\n                            detail: {\n                                origin: {\n                                    elementIndex: originElementIndex,\n                                    index: originIndex,\n                                    container: sortableContainer\n                                },\n                                item: dragging,\n                                originalTarget: target\n                            }\n                        }));\n                    }\n                });\n            }\n            previousContainer = sortableContainer;\n        });\n        /*\n         * Dragend Event - https://developer.mozilla.org/en-US/docs/Web/Events/dragend\n         * Fires each time dragEvent end, or ESC pressed\n         * We are using it to clean up any draggable elements and placeholders\n         */\n        addEventListener(sortableElement, 'dragend', function (e) {\n            if (!dragging) {\n                return;\n            }\n            dragging.classList.remove(options.draggingClass);\n            addAttribute(dragging, 'aria-grabbed', 'false');\n            if (dragging.getAttribute('aria-copied') === 'true' && addData(dragging, 'dropped') !== 'true') {\n                dragging.remove();\n            }\n            if (dragging.oldDisplay !== undefined) {\n                dragging.style.display = dragging.oldDisplay;\n                delete dragging.oldDisplay;\n            }\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) { return data.placeholder; })\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                .filter(isInDom)[0];\n            if (visiblePlaceholder) {\n                visiblePlaceholder.remove();\n            }\n            // dispatch sortstart event on each element in group\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            previousContainer = null;\n            dragging = null;\n            draggingHeight = null;\n            draggingWidth = null;\n        });\n        /*\n         * Drop Event - https://developer.mozilla.org/en-US/docs/Web/Events/drop\n         * Fires when valid drop target area is hit\n         */\n        addEventListener(sortableElement, 'drop', function (e) {\n            if (!listsConnected(sortableElement, dragging.parentElement)) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            addData(dragging, 'dropped', 'true');\n            // get the one placeholder that is currently visible\n            var visiblePlaceholder = Array.from(stores.values()).map(function (data) {\n                return data.placeholder;\n            })\n                // filter only HTMLElements\n                .filter(function (placeholder) { return placeholder instanceof HTMLElement; })\n                // only elements in DOM\n                .filter(isInDom)[0];\n            if (visiblePlaceholder) {\n                visiblePlaceholder.replaceWith(dragging);\n                // to avoid flickering restoring element display immediately after replacing placeholder\n                if (dragging.oldDisplay !== undefined) {\n                    dragging.style.display = dragging.oldDisplay;\n                    delete dragging.oldDisplay;\n                }\n            }\n            else {\n                // set the dropped value to 'false' to delete copied dragging at the time of 'dragend'\n                addData(dragging, 'dropped', 'false');\n                return;\n            }\n            /*\n             * Fires Custom Event - 'sortstop'\n             */\n            sortableElement.dispatchEvent(new CustomEvent('sortstop', {\n                detail: {\n                    origin: {\n                        elementIndex: originElementIndex,\n                        index: originIndex,\n                        container: originContainer\n                    },\n                    item: dragging\n                }\n            }));\n            var placeholder = store(sortableElement).placeholder;\n            var originItems = filter(originContainer.children, options.items)\n                .filter(function (item) { return item !== placeholder; });\n            var destinationContainer = this.isSortable === true ? this : this.parentElement;\n            var destinationItems = filter(destinationContainer.children, addData(destinationContainer, 'items'))\n                .filter(function (item) { return item !== placeholder; });\n            var destinationElementIndex = getIndex(dragging, Array.from(dragging.parentElement.children)\n                .filter(function (item) { return item !== placeholder; }));\n            var destinationIndex = getIndex(dragging, destinationItems);\n            if (options.dropTargetContainerClass) {\n                destinationContainer.classList.remove(options.dropTargetContainerClass);\n            }\n            /*\n             * When a list item changed container lists or index within a list\n             * Fires Custom Event - 'sortupdate'\n             */\n            if (originElementIndex !== destinationElementIndex || originContainer !== destinationContainer) {\n                sortableElement.dispatchEvent(new CustomEvent('sortupdate', {\n                    detail: {\n                        origin: {\n                            elementIndex: originElementIndex,\n                            index: originIndex,\n                            container: originContainer,\n                            itemsBeforeUpdate: originItemsBeforeUpdate,\n                            items: originItems\n                        },\n                        destination: {\n                            index: destinationIndex,\n                            elementIndex: destinationElementIndex,\n                            container: destinationContainer,\n                            itemsBeforeUpdate: destinationItemsBeforeUpdate,\n                            items: destinationItems\n                        },\n                        item: dragging\n                    }\n                }));\n            }\n        });\n        var debouncedDragOverEnter = debounce(function (sortableElement, element, pageX, pageY) {\n            if (!dragging) {\n                return;\n            }\n            // set placeholder height if forcePlaceholderSize option is set\n            if (options.forcePlaceholderSize) {\n                store(sortableElement).placeholder.style.height = draggingHeight + 'px';\n                store(sortableElement).placeholder.style.width = draggingWidth + 'px';\n            }\n            // if element the draggedItem is dragged onto is within the array of all elements in list\n            // (not only items, but also disabled, etc.)\n            if (Array.from(sortableElement.children).indexOf(element) > -1) {\n                var thisHeight = getElementHeight(element);\n                var thisWidth = getElementWidth(element);\n                var placeholderIndex = getIndex(store(sortableElement).placeholder, element.parentElement.children);\n                var thisIndex = getIndex(element, element.parentElement.children);\n                // Check if `element` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n                if (thisHeight > draggingHeight || thisWidth > draggingWidth) {\n                    // Dead zone?\n                    var deadZoneVertical = thisHeight - draggingHeight;\n                    var deadZoneHorizontal = thisWidth - draggingWidth;\n                    var offsetTop = offset(element).top;\n                    var offsetLeft = offset(element).left;\n                    if (placeholderIndex < thisIndex &&\n                        ((options.orientation === 'vertical' && pageY < offsetTop) ||\n                            (options.orientation === 'horizontal' && pageX < offsetLeft))) {\n                        return;\n                    }\n                    if (placeholderIndex > thisIndex &&\n                        ((options.orientation === 'vertical' && pageY > offsetTop + thisHeight - deadZoneVertical) ||\n                            (options.orientation === 'horizontal' && pageX > offsetLeft + thisWidth - deadZoneHorizontal))) {\n                        return;\n                    }\n                }\n                if (dragging.oldDisplay === undefined) {\n                    dragging.oldDisplay = dragging.style.display;\n                }\n                if (dragging.style.display !== 'none') {\n                    dragging.style.display = 'none';\n                }\n                // To avoid flicker, determine where to position the placeholder\n                // based on where the mouse pointer is relative to the elements\n                // vertical center.\n                var placeAfter = false;\n                try {\n                    var elementMiddleVertical = offset(element).top + element.offsetHeight / 2;\n                    var elementMiddleHorizontal = offset(element).left + element.offsetWidth / 2;\n                    placeAfter = (options.orientation === 'vertical' && (pageY >= elementMiddleVertical)) ||\n                        (options.orientation === 'horizontal' && (pageX >= elementMiddleHorizontal));\n                }\n                catch (e) {\n                    placeAfter = placeholderIndex < thisIndex;\n                }\n                if (placeAfter) {\n                    insertAfter(element, store(sortableElement).placeholder);\n                }\n                else {\n                    insertBefore(element, store(sortableElement).placeholder);\n                }\n                // get placeholders from all stores & remove all but current one\n                Array.from(stores.values())\n                    // remove empty values\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    // foreach placeholder in array if outside of current sorableContainer -> remove from DOM\n                    .forEach(function (data) {\n                    if (data.placeholder !== store(sortableElement).placeholder) {\n                        data.placeholder.remove();\n                    }\n                });\n            }\n            else {\n                // get all placeholders from store\n                var placeholders = Array.from(stores.values())\n                    .filter(function (data) { return data.placeholder !== undefined; })\n                    .map(function (data) {\n                    return data.placeholder;\n                });\n                // check if element is not in placeholders\n                if (placeholders.indexOf(element) === -1 && sortableElement === element && !filter(element.children, options.items).length) {\n                    placeholders.forEach(function (element) { return element.remove(); });\n                    element.appendChild(store(sortableElement).placeholder);\n                }\n            }\n        }, options.debounce);\n        // Handle dragover and dragenter events on draggable items\n        var onDragOverEnter = function (e) {\n            var element = e.target;\n            var sortableElement = element.isSortable === true ? element : findSortable(element, e);\n            element = findDragElement(sortableElement, element);\n            if (!dragging || !listsConnected(sortableElement, dragging.parentElement) || addData(sortableElement, '_disabled') === 'true') {\n                return;\n            }\n            var options = addData(sortableElement, 'opts');\n            if (parseInt(options.maxItems) && filter(sortableElement.children, addData(sortableElement, 'items')).length > parseInt(options.maxItems) && dragging.parentElement !== sortableElement) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            e.dataTransfer.dropEffect = store(sortableElement).getConfig('copy') === true ? 'copy' : 'move';\n            debouncedDragOverEnter(sortableElement, element, e.pageX, e.pageY);\n        };\n        addEventListener(listItems.concat(sortableElement), 'dragover', onDragOverEnter);\n        addEventListener(listItems.concat(sortableElement), 'dragenter', onDragOverEnter);\n    });\n    return sortableElements;\n}\nsortable.destroy = function (sortableElement) {\n    destroySortable(sortableElement);\n};\nsortable.enable = function (sortableElement) {\n    enableSortable(sortableElement);\n};\nsortable.disable = function (sortableElement) {\n    disableSortable(sortableElement);\n};\n/* START.TESTS_ONLY */\nsortable.__testing = {\n    // add internal methods here for testing purposes\n    data: addData,\n    removeItemEvents: removeItemEvents,\n    removeItemData: removeItemData,\n    removeSortableData: removeSortableData,\n    removeContainerEvents: removeContainerEvents\n};\n\nmodule.exports = sortable;\n","/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n","module.exports = jQuery;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import $ from 'jquery';\n\nimport {\n\tisDefined,\n\tvsprintf\n} from './Utilities.js';\n\nclass SendFeedback {\n\n\tconstructor(){\n\t\tthis.build();\n\t}\n\n\tbuild(){\n\t\tlet sendFeedbackContainer = $( '<div/>', { 'class': 'uap-report-bug' });\n\n\t\t// Temporal\n\n\t\t/*\n\t\tif ( this.showAgain() ){\n\t\t\tsendFeedbackContainer.addClass( 'uap-report-bug--open' );\n\n\t\t\tlet sendFeedbackOverlay = $( '<div/>', { 'class': 'uap-report-bug__overlay' });\n\t\t\tlet sendFeedbackCircle = $( '<div/>', { 'class': 'uap-report-bug-circle' });\n\t\t\tlet sendFeedbackCircleContainer = $( '<div/>', { 'class': 'uap-report-bug-circle__container' });\n\n\t\t\tlet sendFeedbackCircleText = $( '<div/>', { 'class': 'uap-report-bug-circle__text' });\n\t\t\tsendFeedbackCircleText.text( vsprintf( UncannyAutomator.i18n.sendFeedback.message, [ 'Uncanny Automator' ] ) );\n\t\t\tsendFeedbackCircleText.appendTo( sendFeedbackCircleContainer );\n\n\t\t\tlet sendFeedbackDontShowContainer = $( '<div/>', { 'class': 'uap-report-bug-circle__dont-show' });\n\t\t\tlet sendFeedbackDontShowLabel = $( '<label/>', { 'class': 'uap-report-bug-circle-checkbox' });\n\t\t\tlet sendFeedbackDontShowSpan = $( '<span/>', { 'class': 'uap-report-bug-circle__span' });\n\t\t\tsendFeedbackDontShowSpan.text( UncannyAutomator.i18n.sendFeedback.dontShowAgain );\n\t\t\tsendFeedbackDontShowSpan.appendTo( sendFeedbackDontShowLabel );\n\t\t\tlet sendFeedbackDontShowInput = $( '<input/>', { 'class': 'uap-report-bug-circle-checkbox__input', 'type': 'checkbox' });\n\t\t\tlet sendFeedbackDontShowInputRender = $( '<div/>', { 'class': 'uap-report-bug-circle-checkbox__render' });\n\t\t\tsendFeedbackDontShowInputRender.prependTo( sendFeedbackDontShowLabel );\n\t\t\tsendFeedbackDontShowInput.prependTo( sendFeedbackDontShowLabel );\n\t\t\tsendFeedbackDontShowLabel.appendTo( sendFeedbackDontShowContainer );\n\t\t\tsendFeedbackDontShowContainer.appendTo( sendFeedbackCircleContainer );\n\n\t\t\tlet sendFeedbackFooter = $( '<div/>', { 'class': 'uap-report-bug-circle__footer' });\n\t\t\tlet sendFeedbackFooterBtn = $( '<div/>', { 'class': 'uap-report-bug-circle__btn' });\n\t\t\tsendFeedbackFooterBtn.text( UncannyAutomator.i18n.sendFeedback.gotIt );\n\t\t\tsendFeedbackFooterBtn.appendTo( sendFeedbackFooter );\n\t\t\tsendFeedbackFooter.appendTo( sendFeedbackCircleContainer );\n\n\t\t\tsendFeedbackCircleContainer.appendTo( sendFeedbackCircle );\n\t\t\tsendFeedbackCircle.appendTo( sendFeedbackOverlay );\n\t\t\tsendFeedbackOverlay.appendTo( sendFeedbackContainer );\n\n\t\t\t// Bind\n\t\t\tthis.bind( sendFeedbackFooterBtn, sendFeedbackDontShowInput, sendFeedbackOverlay, sendFeedbackContainer );\n\t\t}\n\t\t*/\n\n\t\t// Check version\n\t\tlet version,\n\t\t\tutmSource;\n\n\t\tif ( ! isDefined( UncannyAutomator.wp ) || ! UncannyAutomator.wp ){\n\t\t\tversion   = vsprintf( 'Uncanny Automator %s', [ UncannyAutomator.version ] );\n\t\t\tutmSource = 'uncanny_automator';\n\t\t}\n\t\telse {\n\t\t\tversion   = vsprintf( 'Uncanny Automator %s %s', [ 'Pro', UncannyAutomator.version ] );\n\t\t\tutmSource = vsprintf( 'uncanny_automator_%s', [ 'pro' ] );\n\t\t}\n\n\t\tlet sendFeedbackButton = $( '<a/>', {\n\t\t\t'class': 'uap-report-bug__btn',\n\t\t\t'uap-tooltip': UncannyAutomator.i18n.sendFeedback.title,\n\t\t\t'uap-flow': 'left',\n\t\t\t'href': vsprintf( 'https://automatorplugin.com/feedback/?version=%s&utm_source=%s&utm_medium=%s&utm_content=%s', [ version, utmSource, 'send_feedback', 'bulb_icon' ] ),\n\t\t\t'target': '_blank'\n\t\t});\n\n\t\tlet sendFeedbackButtonIcon = $( '<span/>', { 'class': 'uap-report-bug__icon' });\n\t\tsendFeedbackButton.append( sendFeedbackButtonIcon );\n\t\tsendFeedbackButton.appendTo( sendFeedbackContainer );\n\n\t\t// Append to the body\n\n\t\t$('body').append( sendFeedbackContainer );\n\t}\n\n\tbind( close_btn, dont_show_again_checkbox, overlay, mainContainer ){\n\n\t\tclose_btn.on( 'click', function(){\n\t\t\t// Storage\n\t\t\tif ( dont_show_again_checkbox.is(':checked') ){\n\t\t\t\tlocalStorage.uapSendFeedbackWelcome = 'hide';\n\t\t\t}\n\n\t\t\t// Hide\n\t\t\toverlay.fadeOut(150);\n\t\t\tmainContainer.removeClass( 'uap-report-bug--open' );\n\t\t});\n\n\t}\n\n\tshowAgain(){\n\t\t/**\n\t\t * Version 2.0 introduced the recipe selector, which is\n\t\t * shown as an overlay on page load. As having two overlays\n\t\t * is bad for UX, we will hide this one\n\t\t */\n\t\t\n\t\tlet output = false;\n\n\t\t/*\n\t\tlet output = true;\n\n\t\tif ( localStorage.uapSendFeedbackWelcome && localStorage.uapSendFeedbackWelcome == 'hide' ){\n\t\t\toutput = false;\n\t\t}\n\t\t*/\n\n\t\treturn output;\n\t}\n}\n\nexport default SendFeedback;","import $ from 'jquery';\n\nimport {\n    restCall\n} from './Utilities.js';\n\nclass RecipeTitle {\n    constructor(){\n        this.elements = {\n            container: $( '#titlediv' ),\n            input:     $( '#titlediv #title' ),\n            status:    {}\n        }\n\n        this.publishedTitle = this.elements.input.val();\n\n        // Create DOM elements\n        this.createStatus();\n\n        // Bind changes\n        this.bindChanges();\n\n        // Unbind beforeunload.edit-post\n        this.notSavedAlert();\n    }\n\n    createStatus(){\n        let container    = $( '<div/>', { 'class': 'uap-title-status' }),\n            uapContainer = $( '<div/>', { 'class': 'uap' });\n\n        // Saving\n        let saving       = $( '<div/>', { 'class': 'uo-status uo-status--saving' }),\n            savingIcon   = $( '<span/>', { 'class': 'uo-status-icon uo-icon uo-icon--loading uo-icon--rotate' }),\n            savingText   = $( '<span/>', { 'class': 'uo-status__text' }).text( UncannyAutomator.i18n.title.saving );\n\n        saving.append( savingIcon );\n        saving.append( savingText );\n\n        this.elements.status.saving = saving;\n\n        // Saved\n        let saved        = $( '<div/>', { 'class': 'uo-status uo-status--saved' }),\n            savedIcon    = $( '<span/>', { 'class': 'uo-status-icon uo-icon uo-icon--check' }),\n            savedText    = $( '<span/>', { 'class': 'uo-status__text' }).text( UncannyAutomator.i18n.title.saved );\n\n        saved.append( savedIcon );\n        saved.append( savedText );\n\n        this.elements.status.saved = saved;\n\n        uapContainer.append( saving );\n        uapContainer.append( saved );\n        container.append( uapContainer );\n\n        // Append to the WP container\n        this.elements.container.append( container );\n    }\n\n    setStatusSaving(){\n        this.elements.status.saving.stop().fadeIn( 150 );\n    }\n\n    setStatusSaved(){\n        this.elements.status.saving.stop().fadeOut( 150 );\n\n        this.elements.status.saved.stop().fadeIn( 150, () => {\n            setTimeout( () => {\n                this.elements.status.saved.fadeOut( 150 );\n            }, 3000 );\n        });\n    }\n\n    revertChanges(){\n        // Revert the title\n        this.elements.input.val( this.publishedTitle );\n\n        // Stop the saving animation\n        this.elements.status.saving.stop().fadeOut( 150 );\n    }\n\n    bindChanges(){\n        let typingTimeout;\n\n        // Bind\n        this.elements.input.on( 'input', () => {\n            // Clear the timeout if it has already been set.\n            // This will prevent the previous task from executing\n            clearTimeout( typingTimeout );\n\n            // Wait 1.5 seconds\n            typingTimeout = setTimeout( () => {\n                // Set status saving\n                this.setStatusSaving();\n\n                // Update title\n                this.updateTitle();\n            }, 1500 );\n        });\n    }\n\n    getTitle(){\n        return this.elements.input.val();\n    }\n\n    updateTitle(){\n        restCall( 'change_post_title', {\n            post_ID:    UncannyAutomator.recipe.id,\n            post_title: this.getTitle()\n        }, () => {\n            this.setStatusSaved();\n\n            // Update the published title\n            this.publishedTitle = this.getTitle();\n        }, () => {\n            console.log( '‼️ ERROR-TODO. Couldn\\'t save the title' );\n\n            // Revert the changes\n            this.revertChanges();\n        });\n    }\n\n    notSavedAlert(){\n        $(document).ready( () => {\n            $( window ).off( 'beforeunload.edit-post' );\n        });\n    }\n}\n\nexport default RecipeTitle;","import $ from 'jquery';\n\nimport {\n\trestCall\n} from './Utilities.js';\n\nclass Taxonomies {\n\tconstructor(){\n\t\t// Save categories\n\t\tnew Categories();\n\n\t\t// Save tags\n\t\tnew Tags();\n\t}\n}\n\nclass Categories {\n\tconstructor(){\n\t\t// Get elements\n\t\tthis.getElements();\n\n\t\t// Check if the required element exist before adding\n\t\t// the event listeners\n\t\tif ( this.$elements.allCategories.length == 1 ){\n\t\t\t// Listen changes to the checkboxes\n\t\t\tthis.listenCheckboxes();\n\t\t}\n\t}\n\n\tgetElements(){\n\t\tthis.$elements = {\n\t\t\tcontainer:     $( '#recipe_categorydiv' ),\n\t\t\tallCategories: $( '#recipe_categorychecklist' )\n\t\t}\n\t}\n\n\tlistenCheckboxes(){\n\t\t// Listen changes to each checkbox\n\t\tthis.$elements.container.on( 'change', 'input[type=\"checkbox\"][name=\"tax_input[recipe_category][]\"], .popular-category input[type=\"checkbox\"]', ( event ) => {\n\t\t\t// Get checkbox\n\t\t\tconst $checkbox = $( event.currentTarget );\n\n\t\t\t// Save category\n\t\t\tthis.saveCategory( $checkbox );\n\t\t});\n\n\t\t// Listen when the user adds a new category. This will be\n\t\t// triggered when WP creates a new category after the user\n\t\t// used the \"+ Add New Category\" form\n\t\tnew MutationObserver(( mutations ) => {\n\t\t\t// Iterate mutations\n\t\t\tmutations.forEach( ( mutation ) => {\n\t\t\t\t// Iterate new categories\n\t\t\t\tmutation.addedNodes.forEach(( addedNode ) => {\n\t\t\t\t\t// Get the checkbox of the new category\n\t\t\t\t\tconst $checkbox = $( addedNode ).find( 'input[type=\"checkbox\"][name=\"tax_input[recipe_category][]\"]' );\n\n\t\t\t\t\t// Save category\n\t\t\t\t\tthis.saveCategory( $checkbox );\n\t\t\t\t});\n\t\t\t});\n\t\t}).observe( this.$elements.allCategories[0], {\n\t\t\tchildList: true\n\t\t});\n\t}\n\n\tgetCheckboxData( $checkbox ){\n\t\treturn {\n\t\t\tid:        $checkbox.val(),\n\t\t\tisChecked: $checkbox.is( ':checked' ),\n\t\t}\n\t}\n\n\tsaveCategory( $checkbox ){\n\t\t// Get the data\n\t\tlet checkboxData = this.getCheckboxData( $checkbox );\n\n\t\t// Set checkbox as loading\n\t\tthis.setStatus( 'loading', true, $checkbox );\n\n\t\t// Do call\n\t\trestCall( 'set_recipe_terms', {\n\t\t\tterm_id:      'recipe_category',\n\t\t\trecipe_id:    UncannyAutomator.recipe.id,\n\t\t\tcategory_id:  checkboxData.id,\n\t\t\tset_category: checkboxData.isChecked\n\t\t}, ( response ) => {\n\t\t\t// If the call (not necessarily the task) was successful...\n\n\t\t\tif ( response.success ){\n\t\t\t\t// If everything went well...\n\t\t\t\t// Show a green check icon\n\t\t\t\tthis.setStatus( 'success', true, $checkbox );\n\n\t\t\t\t// Remove it after 2 seconds\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// Remove the green check icon\n\t\t\t\t\tthis.setStatus( 'success', false, $checkbox );\n\t\t\t\t}, 2000 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log( '‼️ ERROR-TODO. Couldn\\'t change the status of the recipe category' );\n\n\t\t\t\t// If something went wrong,\n\t\t\t\t// revert the value of the checkbox\n\t\t\t\tthis.revertCheckboxValue( $checkbox );\n\n\t\t\t\t// Show an error icon\n\t\t\t\tthis.setStatus( 'error', true, $checkbox );\n\t\t\t\t// Remove it after 2 seconds\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// Remove the error icon\n\t\t\t\t\tthis.setStatus( 'error', false, $checkbox );\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Remove loading animation\n\t\t\tthis.setStatus( 'loading', false, $checkbox );\n\t\t}, ( response ) => {\n\t\t\t// On error...\n\n\t\t\t// Revert the value of the checkbox\n\t\t\tthis.revertCheckboxValue( $checkbox );\n\n\t\t\t// Remove loading animation\n\t\t\tthis.setStatus( 'loading', false, $checkbox );\n\n\t\t\t// Show an error icon\n\t\t\tthis.setStatus( 'error', true, $checkbox );\n\t\t\t// Remove it after 2 seconds\n\t\t\tsetTimeout(() => {\n\t\t\t\t// Remove the error icon\n\t\t\t\tthis.setStatus( 'error', false, $checkbox );\n\t\t\t});\n\t\t}, {\n\t\t\trequiresRecipesObject: false,\n\t\t\trenderUI:              false\n\t\t});\n\t}\n\n\trevertCheckboxValue( $checkbox ){\n\t\t// Revert the value of the checkbox\n\t\t$checkbox.prop( 'checked', ! $checkbox.is( ':checked' ) );\n\t}\n\n\tsetStatus( status = '', enable = true, $checkbox ){\n\t\t// Get label container\n\t\tconst $label = $checkbox.closest( '.selectit' );\n\n\t\t// Check what status we have to set or unset\n\t\tif ( status == 'loading' ){\n\t\t\t// Check if we have to add or remove the loading status\n\t\t\tif ( enable ){\n\t\t\t\t// Add loading animation\n\t\t\t\t$label.addClass( 'uap-taxonomy-loading' );\n\n\t\t\t\t// Disable checkbox\n\t\t\t\t$checkbox.prop( 'disabled', true );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Remove loading animation\n\t\t\t\t$label.removeClass( 'uap-taxonomy-loading' );\n\n\t\t\t\t// Enable checkbox\n\t\t\t\t$checkbox.prop( 'disabled', false );\n\t\t\t}\n\t\t}\n\t\telse if ( status == 'success' ){\n\t\t\t// Check if we have to add or remove the loading status\n\t\t\tif ( enable ){\n\t\t\t\t// Add loading animation\n\t\t\t\t$label.addClass( 'uap-taxonomy-success' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Remove loading animation\n\t\t\t\t$label.removeClass( 'uap-taxonomy-success' );\n\t\t\t}\n\t\t}\n\t\telse if ( status == 'error' ){\n\t\t\t// Check if we have to add or remove the loading status\n\t\t\tif ( enable ){\n\t\t\t\t// Add loading animation\n\t\t\t\t$label.addClass( 'uap-taxonomy-error' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Remove loading animation\n\t\t\t\t$label.removeClass( 'uap-taxonomy-error' );\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass Tags {\n\tconstructor(){\n\t\t// Get elements\n\t\tthis.getElements();\n\n\t\t// Check if the required elements exist before adding\n\t\t// the event listeners\n\t\tif ( this.$elements.tagsTextarea.length == 1 ){\n\t\t\t// Listen modifications to the textarea\n\t\t\tthis.listenModificationsToTags();\n\t\t}\n\t}\n\n\tgetElements(){\n\t\tthis.$elements = {\n\t\t\tcontainer:    $( '#tagsdiv-recipe_tag' ),\n\t\t\ttagsTextarea: $( 'textarea#tax-input-recipe_tag' ),\n\t\t\ttagsList:     $( '#tagsdiv-recipe_tag .tagchecklist' )\n\t\t}\n\t}\n\n\tlistenModificationsToTags(){\n\t\t// Listen when the user adds a new tag. This will be\n\t\t// triggered when the user uses the input to add tags\n\t\tnew MutationObserver(( mutations ) => {\n\t\t\t// Save tags\n\t\t\tthis.saveTags();\n\t\t}).observe( this.$elements.tagsList[0], {\n\t\t\tchildList: true\n\t\t});\n\t}\n\n\tsaveTags(){\n\t\t// Get tags\n\t\tconst tags = this.getTags();\n\n\t\t// Set checkbox as loading\n\t\tthis.setStatus( 'loading', true );\n\n\t\t// Do call\n\t\trestCall( 'set_recipe_terms', {\n\t\t\tterm_id:      'recipe_tag',\n\t\t\trecipe_id:    UncannyAutomator.recipe.id,\n\t\t\ttags:         tags,\n\t\t}, ( response ) => {\n\t\t\t// If the call (not necessarily the task) was successful...\n\n\t\t\tif ( response.success ){\n\t\t\t\t// If everything went well...\n\t\t\t\t// Show a green check icon\n\t\t\t\tthis.setStatus( 'success', true );\n\n\t\t\t\t// Remove it after 2 seconds\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// Remove the green check icon\n\t\t\t\t\tthis.setStatus( 'success', false );\n\t\t\t\t}, 2000 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Reload\n\t\t\t\t// location.reload();\n\t\t\t}\n\n\t\t\t// Remove loading animation\n\t\t\tthis.setStatus( 'loading', false );\n\t\t}, ( response ) => {\n\t\t\t// On error...\n\n\t\t\t// Reload\n\t\t\tlocation.reload();\n\t\t}, {\n\t\t\trequiresRecipesObject: false,\n\t\t\trenderUI:              false\n\t\t});\n\t}\n\n\tsetStatus( status = '', enable = true ){\n\t\t// Check what status we have to set or unset\n\t\tif ( status == 'loading' ){\n\t\t\t// Check if we have to add or remove the loading status\n\t\t\tif ( enable ){\n\t\t\t\t// Add loading animation\n\t\t\t\tthis.$elements.container.addClass( 'uap-tags-loading' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Remove loading animation\n\t\t\t\tthis.$elements.container.removeClass( 'uap-tags-loading' );\n\t\t\t}\n\t\t}\n\t\telse if ( status == 'success' ){\n\t\t\t// Check if we have to add or remove the loading status\n\t\t\tif ( enable ){\n\t\t\t\t// Add loading animation\n\t\t\t\tthis.$elements.container.addClass( 'uap-tags-success' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Remove loading animation\n\t\t\t\tthis.$elements.container.removeClass( 'uap-tags-success' );\n\t\t\t}\n\t\t}\n\t\telse if ( status == 'error' ){\n\t\t\t// Check if we have to add or remove the loading status\n\t\t\tif ( enable ){\n\t\t\t\t// Add loading animation\n\t\t\t\tthis.$elements.container.addClass( 'uap-tags-error' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Remove loading animation\n\t\t\t\tthis.$elements.container.removeClass( 'uap-tags-error' );\n\t\t\t}\n\t\t}\n\t}\n\n\tgetTags(){\n\t\t// Get tags separated by comma\n\t\tconst tagsCommaSeparated = this.$elements.tagsTextarea.val();\n\n\t\t// Create array\n\t\tconst tagsArray = tagsCommaSeparated.split( ',' );\n\n\t\t// Return both\n\t\treturn {\n\t\t\tasArray:        tagsArray,\n\t\t\tcommaSeparated: tagsCommaSeparated\n\t\t}\n\t}\n}\n\nexport default Taxonomies;","// Load static resources\nimport './css/main.scss';\n\nimport $ from 'jquery';\n\n// Create JS cache object\nUncannyAutomator.cache = {\n\ttokens: {},\n};\n\nimport {\n\tcreateDataOnLoad,\n\tconsoleLogLabel,\n\treplaceCurlyBraces,\n\thandleFatalError\n}   from './components/Utilities.js';\n\nimport Publish            from './components/Publish.js';\nimport Triggers           from './components/Triggers.js';\nimport Actions            from './components/Actions.js';\nimport SendFeedback       from './components/SendFeedback.js';\nimport RecipeTypeSelector from './components/RecipeTypeSelector.js';\nimport RecipeTitle        from './components/RecipeTitle.js';\nimport Taxonomies         from './components/Taxonomies.js';\n\n// Create the data required to render Automator\ntry {\n\tcreateDataOnLoad(() => {\n\t\tconsoleLogLabel( 'Render the UI', false, { bgColor: '#579f49' });\n\n\t\t// Once ready, render the UI\n\t\tnew Triggers();\n\t\tnew Actions();\n\t\tnew Publish();\n\t\tnew SendFeedback();\n\t\tnew RecipeTitle();\n\t\tnew Taxonomies();\n\t});\n} catch ( error ){\n\t// Show a modal with data in case the UI couldn't load\n\thandleFatalError({\n\t\ttitle:   UncannyAutomator.i18n.debugging.uiCantLoad.title,\n\t\twarning: UncannyAutomator.i18n.debugging.uiCantLoad.warning,\n\t\tcontent: UncannyAutomator.i18n.debugging.uiCantLoad.content,\n\t\tconsole: error\n\t});\n}"],"names":["UserSelector","UncannyAutomator","recipe","userSelector","step","userSelectorObject","this","render","$content","isValid","recipeObject","getSelectSourceNodes","getOptionsNodes","errorMode","RecipeNotices","getSentenceNodes","$metabox","getDOMElements","type","console","log","prepend","$userSelector","$","requiresUserData","i18n","userType","existing","find","getHeaderNodes","on","event","userSource","currentTarget","data","source","Actions","$optionsContainer","append","getOptionsFields","$container","$fields","optionsFields","roles","resources","administrator","$groupOfFields","uniqueField","Field","itemType","optionCode","label","existingUser","uniqueFieldLabel","currentValue","isRequired","options","value","text","uniqueFieldOptionEmail","uniqueFieldOptionId","uniqueFieldOptionUsername","push","valueField","uniqueFieldValue","valueFieldLabel","supportsTokens","$uniqueFieldFormElement","getFormElement","initTokenSelector","initCodeMirror","$valueFieldFormElement","fallbackField","name","createNewUserFieldLabel","fallback","createNewUserFieldOptionCreateUser","createNewUserFieldOptionDoNothing","$fallbackFieldFormElement","getValue","$doNothingNotice","doNothingMessage","$subOptionsContainer","fieldType","firstName","newUser","lastName","email","username","displayName","password","description","passwordDescription","isEmpty","role","Object","keys","map","key","index","canLogNewUserIn","logUserIn","isHidden","yes","no","forEach","fieldObject","field","$fieldFormElement","newUserFallbackField","existingUserFieldLabel","existingUserFieldOptionExisting","existingUserFieldOptionDoNothing","$newUserfallbackFieldFormElement","fieldsValues","getAttributes","prioritizedField","prioritizedFieldLabel","defaultValue","prioritizedFieldDescription","$prioritizedField","fields","$buttonsContainer","$saveButton","save","$cancelButton","cancel","areAllFieldsValid","isFieldValid","validate","addClass","restCall","recipeId","id","response","$summaryContainer","$sourceRow","$sourceRowToken","$dataRowSentence","$dataRow","vsprintf","summary","matches","withEmail","$fallbackRow","otherwiseText","createNewUser","doNothing","selectExistingUser","$fallbackRowSentence","otherwise","title","sentenceTitle","setOptions","$output","addParametersToURL","support","$itemActions","hasClass","removeClass","document","off","is","target","has","length","$icon","$containerBox","$button","trigger","add","action","ItemCreatorIntegrations","Closures","elements","closures","closure","createClosure","wasAdded","checkboxAttributes","formElementClass","closureInRecipe","getClosureByCodeFromItemsObject","code","isDefined","itemid","checkboxField","$checkbox","isChecked","startLoadingAnimation","recipePostID","item_code","default_meta","integration_name","integrations","integration","sentence","post_ID","item","first","stopLoadingAnimation","setValue","ID","$toggleContent","$item","$itemHeader","createHeader","items","integrationCode","$itemContent","itemCode","itemId","$title","$actions","ItemHeaderMenu","ItemHeaderIcon","$itemTag","ItemHeaderTag","$titleSentence","ItemHeaderSentence","theItem","itemID","empty","actions","itemsObject","filter","wp","instantActions","filterMeta","delayedActions","filterMetaValue","scheduledActions","MetaboxItems","MetaboxFooter","isContinuingIntegrationConnection","asyncActions","closuresLabelAsyncOnly","ItemCreatorAdd","getURLParameter","HOOKS","defaults","_disable","allowInput","allowInvalidPreload","altFormat","altInput","altInputClass","animate","window","navigator","userAgent","indexOf","ariaDateFormat","autoFillDefaultTime","clickOpens","closeOnSelect","conjunction","dateFormat","defaultHour","defaultMinute","defaultSeconds","disable","disableMobile","enableSeconds","enableTime","errorHandler","err","warn","getWeek","givenDate","date","Date","getTime","setHours","setDate","getDate","getDay","week1","getFullYear","Math","round","hourIncrement","ignoredFocusElements","inline","locale","minuteIncrement","mode","monthSelectorType","nextArrow","noCalendar","now","onChange","onClose","onDayCreate","onDestroy","onKeyDown","onMonthChange","onOpen","onParseConfig","onReady","onValueUpdate","onYearChange","onPreCalendarPosition","plugins","position","positionElement","undefined","prevArrow","shorthandCurrentMonth","showMonths","static","time_24hr","weekNumbers","wrap","english","weekdays","shorthand","longhand","months","daysInMonth","firstDayOfWeek","ordinal","nth","s","rangeSeparator","weekAbbreviation","scrollTitle","toggleTitle","amPM","yearAriaLabel","monthAriaLabel","hourAriaLabel","minuteAriaLabel","pad","number","slice","bool","debounce","fn","wait","t","clearTimeout","setTimeout","apply","arguments","arrayify","obj","Array","toggleClass","elem","className","classList","remove","createElement","tag","content","e","textContent","clearNode","node","firstChild","removeChild","findParent","condition","parentNode","createNumberInput","inputClassName","opts","wrapper","numInput","arrowUp","arrowDown","pattern","setAttribute","appendChild","getEventTarget","composedPath","error","monthToStr","monthNumber","revFormat","D","F","dateObj","monthName","setMonth","G","hour","parseFloat","H","J","day","K","getHours","RegExp","test","M","shortMonth","S","seconds","setSeconds","U","_","unixSeconds","W","weekNum","weekNumber","parseInt","Y","year","setFullYear","Z","ISODate","d","h","i","minutes","setMinutes","j","l","m","month","n","u","unixMillSeconds","w","y","tokenRegex","formats","toISOString","getMonth","getSeconds","getMinutes","String","substring","createDateFormatter","config","l10n","isMobile","frmt","overrideLocale","formatDate","split","c","arr","join","createDateParser","givenFormat","timeless","customLocale","parsedDate","dateOrig","toFixed","format","datestr","trim","parseDate","matched","ops","matchIndex","regexStr","token","isBackSlash","escaped","match","exec","val","isNaN","Error","compareDates","date1","date2","getDefaultHours","hours","minDate","minHour","minMinutes","minSeconds","maxDate","maxHr","maxMinutes","min","FlatpickrInstance","element","instanceConfig","self","assign","flatpickr","defaultConfig","bindToInstance","bind","setCalendarWidth","requestAnimationFrame","calendarContainer","style","visibility","display","daysContainer","daysWidth","days","offsetWidth","width","weekWrapper","removeProperty","updateTime","selectedDates","defaultDate","getMilliseconds","latestSelectedDateObj","preventDefault","isKeyDown","eventTarget","input","getAttribute","max","curValue","newValue","delta","which","isHourElem","hourElement","isMinuteElem","minuteElement","incrementNumInput","abs","timeWrapper","prevValue","_input","setHoursFromInputs","updateValue","_debouncedChange","secondElement","limitMinHours","minTime","minDateHasTime","maxTime","maxDateHasTime","setHoursFromDate","onYearInput","toString","changeYear","handler","ev","el","addEventListener","_handlers","removeEventListener","triggerChange","triggerEvent","jumpToDate","jumpDate","jumpTo","oldYear","currentYear","oldMonth","currentMonth","message","buildMonthSwitch","redraw","timeIncrement","contains","inputElem","createEvent","dispatchEvent","createDay","dayNumber","dateIsEnabled","isEnabled","dayElement","$i","todayDateElem","tabIndex","isDateSelected","selectedDateElem","isDateInRange","insertAdjacentHTML","focusOnDayElem","targetNode","focus","onMouseOver","getFirstAvailableDay","startMonth","endMonth","children","startIndex","endIndex","focusOnDay","current","offset","dayFocused","isInView","activeElement","body","startElem","givenMonth","loopDelta","numMonthDays","changeMonth","getNextAvailableDay","buildMonthDays","firstOfMonth","prevMonthDays","utils","getDaysInMonth","createDocumentFragment","isMultiMonth","prevMonthDayClass","nextMonthDayClass","dayIndex","dayNum","dayContainer","buildDays","frag","shouldBuildMonth","monthsDropdownContainer","innerHTML","selected","buildMonth","container","monthNavFragment","monthElement","selectedMonth","yearInput","tabindex","yearElement","getElementsByTagName","disabled","buildMonths","monthNav","prevMonthNav","yearElements","monthElements","nextMonthNav","buildWeekdays","weekdayContainer","updateWeekdays","splice","isOffset","_hidePrevMonthArrow","_hideNextMonthArrow","updateNavigationCurrentMonth","isCalendarElem","appendTo","documentClick","isOpen","isCalendarElement","isInput","path","lostFocus","relatedTarget","isIgnored","some","timeContainer","close","clear","newYear","newYearNum","isNewYear","_a","dateToCheck","enable","array","parsed","from","to","onBlur","allowKeydown","allowInlineKeydown","keyCode","blur","open","isTimeObj","focusAndClose","selectDate","ctrlKey","stopPropagation","currentYearElement","elems","concat","pluginElements","x","shiftKey","charAt","toLowerCase","hoverDate","firstElementChild","initialDate","rangeStartDate","rangeEndDate","containsDisabled","minRange","maxRange","dayElem","timestamp","outOfRange","ts1","ts2","ts","onResize","positionCalendar","minMaxDateSetter","inverseDateObj","removeAttribute","getInputElem","querySelector","setupLocale","l10ns","default","JSON","parse","stringify","dataset","customPositionElement","_positionElement","calendarHeight","prototype","reduce","call","acc","child","offsetHeight","calendarWidth","configPos","configPosVertical","configPosHorizontal","inputBounds","getBoundingClientRect","distanceFromBottom","innerHeight","bottom","showOnTop","top","pageYOffset","left","pageXOffset","isCenter","isRight","right","rightMost","centerMost","doc","editableSheet","styleSheets","sheet","cssRules","head","createStyleSheet","getDocumentStyleSheet","bodyWidth","centerLeft","centerBefore","centerAfter","centerIndex","centerStyle","insertRule","msMaxTouchPoints","selectedDate","shouldChangeMonth","selectedIndex","sort","a","b","single","range","loadedPlugins","_bind","_setHoursFromDate","_positionCalendar","triggerChangeEvent","toInitial","mobileInput","_initialDate","_createElement","destroy","lastChild","insertBefore","_type","k","click","wasOpen","select","set","option","CALLBACKS","setSelectedDate","toggle","inputDate","dates","parseDateRules","rule","hooks","initEvent","getDateStr","dObj","mobileFormatStr","onMonthNavClick","isPrevMonth","isNextMonth","boolOpts","userConfig","defineProperty","get","_enable","timeMode","defaultDateFormat","defaultAltFormat","_minDate","_maxDate","minMaxTimeSetter","_minTime","_maxTime","hook","pluginConf","parseConfig","nodeName","placeholder","required","nextSibling","preloadedDate","setupDates","yr","fragment","__hidePrevMonthArrow","__hideNextMonthArrow","innerContainer","buildWeeks","rContainer","separator","hourInput","minuteInput","military2ampm","secondInput","buildTime","customAppend","nodeType","build","evt","querySelectorAll","inputType","setupMobile","debouncedResize","ontouchstart","capture","selText","bindEvents","isSafari","init","_flatpickr","nodeList","nodes","HTMLElement","instances","HTMLCollection","NodeList","selector","Node","en","localize","setDefaults","jQuery","fp_incr","TokenSelector","attributes","TokenSelectorTextarea","TokenSelectorInput","setData","getField","getCodeMirrorEditor","editor","renderTokens","handleAddTokens","renderTokensInRealTime","RenderTokenSelector","tokens","tokenRenderingDebounce","fieldCM","includes","insertTextAtCursor","ignoreRequiresUserModal","replaceRange","getCursor","querySearchTokens","getSearchCursor","tokenId","getRange","replace","$tokenNode","createTokenDOMNode","widget","markText","replacedWith","tokensThatRequireUser","startsWith","tokenNeedsUserModal","removeToken","widgetPosition","isReadOnly","onFocusOut","onClickOutside","onCopy","onDelete","onNavigation","copyToClipboard","charCode","setCursor","findNext","modal","callbacks","actionWillSetRecipeToDraft","isLive","Modal","userDataModal","allowed","proOnly","pro","mustRunOnUser","outerHTML","buttons","cancelButton","confirm","confirmButton","size","setEvents","onConfirm","modalElements","getElements","box","prop","recipeSetRequiresUser","publish","statusToggle","allowedConfirm","onCancel","allowedCancel","forbidden","uncannyAutomatorPro","upgradeNow","upgradeLater","learnMore","openInNewTab","forbiddenConfirm","forbiddenCancel","Tokens","supportsTinyMCE","getTinyMCEEditor","addStylesToEditor","parsePlainTokensInTinyMCE","parseHTMLTokensInPlainTextarea","handleHTMLTokensInPlainTextarea","handlePlainTokensInTinyMCE","tokenCSSClass","tinyMCEeditor","hidden","execCommand","fieldTinyMCE","dom","addStyle","editorContent","getContent","editorContentWithTokens","renderTextWithTokens","template","setContent","$temporalContainer","$tokens","tokenID","getData","createWrapper","createFilter","createGroupsOfTokens","listenToggleButton","resizeDropdownOnWindowResize","resizeDropdownOnWindowScroll","refreshOnFieldChange","search","shouldSupportFilters","setFilter","$elements","toggleButton","searchField","dropdown","allGroups","dropdownGroupsContainer","dropdownTokens","noResultsOption","$wrapper","$fieldsToMove","getFieldCM","$field","insertAfter","renderContainer","searchFieldContainer","fieldTypeHumanReadable","tokenType","$filterContainer","filterToggle","$filterFormElement","createFormElement","filterContainer","groupOfTokens","createIndividualGroupOfTokens","noResults","noResultsDescriptionWithFilter","noResultsDescription","$group","groupName","html","clone","icon","$tokensListContainer","tokenName","$token","requiresUser","needsUserData","$modalContent","metaKeyField","specialTokens","userMeta","userMetaKey","userMetaKeyDescription","afterSetEvents","show","fieldValidation","fieldValue","global","userMetaKeyTemplate","afterHide","throttle","query","updateGroupsOfTokensVisibility","filterByType","$tokensByType","hasResults","group","flatpickrInstance","closeWhenClickedOutside","css","outerWidth","setDropdownDirection","setDropdownHeight","$window","above","scrollTop","below","height","outerHeight","dropdownHeight","hasSpaceBelow","getDropdownPosition","maxHeight","formElement","createDOMelements","customValidationFunction","setAttributes","initLibraries","inArray","getFieldTypes","fieldContainer","fieldLabel","fieldAttributes","uniqueFieldID","isAjax","targetField","integrationID","endPoint","groupId","isChildField","supportsCustomValue","supportsMultipleValues","defaultOptionExists","hasSelectedOption","numberOfOptions","hasDefaultValue","option_value","option_name","$normalOptions","option_data","selectOption","compareStrings","hasValue","defaultOption","prependTo","hasPlaceholder","customFieldValue","customValue","$otherOptions","validation","otherOptions","attr","customValueField","supportsCopyToClipboard","hasCustomValueDescription","customValueDescription","customValueToken","parentOptionCode","selectHasSelectedOption","$noResults","Option","customData","fieldContainerClass","$fakeCodemirrorField","maxLength","$clearButton","clearValue","checkboxLabel","checkboxPseudo","hasLabel","isToggle","checkboxToggleOn","checkboxToggleOff","color","align","$fieldContainers","$formRadioContainer","$fakeRadio","fieldLabelAsterisk","fieldError","hasDescription","fieldDescription","customValueFieldContainer","onFocus","getUniqueId","dateAltFormat","supportsRange","timeFormat","timeAltFormat","renderError","getFieldContainer","validateField","onChangeAJAXCallback","doAJAX","parentField","completedFirstLoad","setCustomValue","onChangeTimeout","ready","getMetaValue","integrationId","endpoint","parentFieldValue","targetFieldValue","AJAXRequest","recipe_id","integration_id","item_id","group_id","field_id","target_field","values","getCurrentFieldsValues","getSelectCustomValue","setSelectOptions","isReady","isTargetField","accumulator","manuallySet","replaceAll","optionValue","itemSeparator","getSelectOptionByValue","trueLabel","falseLabel","$checkedRadio","closest","meta","metaValue","doTrigger","updateCodemirror","allOptions","optionID","wantsToCheck","removeSelectOptions","optionsDOM","optionDOM","rerenderSelect2","CSSclass","initSelect2","initURLChecker","initFlatpickr","settings","theme","searchInputPlaceholder","language","templateResult","Number","isInteger","postIDPlaceholder","templateSelection","escapeMarkup","markUp","customClass","getSelect2Settings","select2","getElementById","sunday","monday","tuesday","wednesday","thursday","friday","saturday","january","february","march","april","may","june","july","august","september","october","november","december","scrollToIncrement","clickToToggle","am","pm","minute","dateStr","instance","formatCodemirrorDate","setCodemirrorValue","manTime","destroyCodeMirror","initialValue","CodeMirror","lineNumbers","tabSize","dragDrop","viewportMargin","Infinity","lineWrapping","autoRefresh","noNewlines","scrollbarStyle","extraKeys","Tab","nextField","getNextField","readOnly","setOption","groupOfFields","fieldPosition","getWrapperElement","destroyTokenSelector","tokenSelector","fieldId","tinymce","initialize","mediaButtons","toolbar1","toolbar2","quicktags","Defaults","amd","require","extend","SearchDropdown","_renderSearchDropdown","decorated","$rendered","$search","itemCreatorTaskSelector","$currentItem","createItemsList","removeConnectingIntegrationsParameters","replaceWith","$header","$itemIcon","$integrationTag","searchPlaceholder","getItemsByIntegration","unlockTriggers","unlockActions","$taskSelector","$searchField","$itemsList","available","unavailable","list","hasAvailableItems","itemsThatRequireUserData","itemsThatDontRequireUserData","requires_user","isPro","is_pro","cannotAddRequiresUserData","select_option_name","replaceCurlyBraces","restRequestCode","defaultMeta","default_value","option_code","can_log_in_new_user","addItemREST","onSuccess","onFail","Triggers","$newItem","success","hasUnavailableItems","utm_medium","$items","createCancelButton","location","href","ua_connecting_integration","ua_connecting_integration_id","ua_connecting_integration_context","setAsURL","refresh","handleContinueIntegrationConnection","header","itemContent","createIntegrations","discoverMore","createDiscoverMoreIntegrations","lastItem","titleContainer","titleContent","filterByNonEmptyIntegrations","sortIntegrationsAlphabetically","integrationElement","createIntegration","onClick","connected","integrationModalCurrentStep","connectIntegrationModal","currentStep","connectApiUrl","redirect_url","dashboardUrl","ua_close_window","modalFirstStep","apiIntegrations","instructionsToConnect","step1Pro","activate","step1","uncannyAutomator","signUp","connectIntegration","stepCounter","step2","getIntegrationIcon","completePrevious","connectAccount","openCenteredWindow","url","reload","licenseUrl","settings_url","minimal","hide_settings_tabs","$logoImg","logo","isProOnly","isAvailable","hasAccountConnected","integrationNotConnected","notConnected","allActionsRequireUserData","requiresPro","icon_svg","icon_32","icon_64","dontSeeTrigger","entries","hasItems","filterDeprecatedItems","triggers","hasTriggers","allItemsArePro","hasActions","sortArrayOfObjectsAlphabetically","hasValidProLicense","createItemIcon","createItemActions","btn","btnIcon","dropdownUl","deleteAction","deleteText","isMissing","globalItemData","getGlobalItem","support_link","utmContent","supportAction","supportText","confirmationModal","warning","deleteWarning","createItemSentence","itemSentence","globalItem","parseStringWithTokens","parents","optionsID","groupID","ItemOptions","status","itemToggle","liveRecipeItem","draftRecipeItem","itemStatusToggle","makeLive","isValidItem","validateItem","post_status","statusWarning","itemSentenceHTML","sentence_human_readable","brackets","sentence_human_readable_html","integrationName","createItemTag","optionId","create","initTinyMCE","contentContainer","itemOptions","createButtons","createFields","fieldsContainer","noticeContainer","saveButton","fieldRows","row","automatorButtons","developerButtons","button","$buttonElement","css_classes","doOnClick","on_click","eval","modules","Markdown","validateItemFields","getOptionValue","hasSelect","hasRepeater","getReadableValue","escapeHTML","parseItalicsAndBold","parseAnchors","wholeMatch","m1","m2","m3","m4","m5","m6","m7","linkText","linkId","result","encodeURI","shouldCreateMetaboxFooter","createFooter","recipeActions","addAnother","$anonymousNotice","createAnonymousNotice","recipeType","everyoneOnlyOneTrigger","ItemHeaderAsync","asyncMode","async_mode","proVersion","createAsyncButton","async_delay_number","async_delay_unit","async_schedule_time","async_schedule_date","hasSchedule","async_sentence","delay","buttonContainer","buttonIcon","getButtonText","createRemoveButton","isNew","createBadge","showModal","pleaseSave","removeAttr","buttonBadge","removeButton","removeButtonIcon","removeSchedule","modalContent","asyncModeHTML","createAsyncModeHTML","after","createDelayOptions","createScheduleOptions","attachModeChangeEvent","modalNoticeHTML","modalNoticeIcon","scheduleNotice2","confirmButtonText","schedule","createModalContent","modalEvents","submitModal","validateForm","asyncModeField","delayNumber","delayNumberField","delayUnit","delayUnitField","scheduleTime","scheduleTimeField","scheduleDate","scheduleDateField","delaySentence","scheduleSentence","saveSchedule","multiplier","unit","timeZoneLink","timezoneLink","timeZoneHelpIcon","timeZoneDesc","timezone","timezoneString","selectedAsyncMode","scheduleNoticeHTML","scheduleOptions","scheduleDesc","scheduleFields","scheduleNotice1","createScheduleDateHTML","createScheduleTimeHTML","createTimeZone","delayOptions","delayDesc","delayFields","delayNumberHTML","createDelayNumberHTML","delayUnitHTML","createDelayUnitHTML","delayFieldsDesc","validateDelayNumber","$delayNumberField","years","today","$scheduleDateField","selectTime","$scheduleTimeField","validSchedule","validateScheduleFields","unsupported","simulate_int","positiveNumber","createItem","inlineCss","notice","createNotice","asyncButtons","itemTag","titleSentence","asyncButton","itemMissing","automatorContainer","isVisible","fadeDuration","warningFirst","modalWarning","modalBox","modalTitle","modalButtons","events","emptyFunction","afterShow","hide","thisModal","unbind","callback","fadeIn","fadeOut","Publish","metabox","timesPerUser","editLink","hiddenBox","timesPerRecipe","createMetabox","class","footer","timesRow","timesRowVisible","timesRowIconBox","timesRowIcon","timesRowName","timesValue","unlimited","timesRowValue","timesRowEdit","edit","timesRowHidden","timesRowHiddenBox","timesRowField","leaveEmpty","simulatedValue","oneOrBigger","timesField","timesRowButtons","timesRowSaveBtn","timesRowCancelBtn","recipeTypeRow","recipeTypeRowVisible","recipeTypeRowIconBox","recipeTypeRowIcon","recipeTypeRowName","recipeTypeRowValue","recipeTypeLearnMore","userRecipeName","everyoneRecipeName","createdRow","createdRowVisible","createdRowIconBox","createdRowIcon","createdRowName","createdOn","createdRowValue","copyRecipeRow","copyRecipeRowVisible","copyRecipeRowName","copyToDraft","copyRecipe","footerRow","footerRowLeft","footerMoveToDraft","moveToTrash","footerRowRight","recipeStatusToggle","liveRecipe","draftRecipe","recipeStatusToggleDOM","validateStatus","timesRecipeRow","timesRecipeRowVisible","timesRecipeRowIconBox","timesRecipeRowIcon","timesRecipeRowName","timesRecipeValue","timesRecipeRowValue","timesRecipeRowEdit","timesRecipeRowHidden","timesRecipeRowHiddenBox","timesRecipeRowField","timesRecipeField","timesRecipeRowButtons","timesRecipeRowSaveBtn","timesRecipeRowCancelBtn","$element","$fieldValue","$timeField","slideToggle","numberOfTimes","recipe_completions_allowed","validateTimesPerFields","postStatus","createContainer","emptyContainer","createWarning","createError","RecipeTypeSelector","doWhenReady","listenSubmission","$recipeTypeSelector","userRecipeDescription","everyoneRecipeDescription","cantChangeLaterNotice","form","submitButton","showError","errorDidNotSelectType","saveRecipeType","errorTryingToSaveOtherValue","recipe_type","$triggersMetaboxTitle","triggersMetaboxTitle","userTriggers","everyoneTrigger","errorSomethingWentWrong","errorMessage","$error","$oldErrorContainer","FieldsGroup","fieldData","$label","$formGroup","$fieldElement","$description","fieldsValue","getFieldID","validationObject","sortable","FieldsRepeater","rowFieldsTemplate","fieldsRows","isArray","rowFields","emptyRow","$table","getFieldsTable","makeRowsSortable","listenSave","updateAttributesFieldsFromRow","forcePlaceholderSize","handle","itemSerializer","serializedItem","sortableContainer","newOrder","detail","destination","newFieldRowsOrder","oldIndex","reRender","heading","$heading","headingColumn","$headingColumn","$rows","numberOfRows","$row","$fieldCell","fieldAtts","removeRowLabel","removeRowButtonLabel","removeRow","$removeRowButton","deleteRow","hideActions","$addRowButton","addRow","addRowButtonLabel","fieldsData","focusFirstFieldOfLastRow","$currentFormElement","$newFormElement","lastRow","firstField","rowsValidation","rowValidation","createDataOnLoad","consoleLogLabel","completeProcess","filterAutomatorItemsByRecipeType","groupItemsByIntegration","allRecipes","recipes_object","validActions","requiredData","theRecipe","recipeIsAnonymous","itemToAdd","options_group","groupsOfOptions","groupKey","allFieldsOnThisGroup","hasMoreThanOneOption","fieldInstance","sanitizeFieldData","isGroup","read_only","supports_tinymce","copy_to_clipboard","is_ajax","input_type","is_hidden","token_name","customFieldTokens","relevant_tokens","max_length","date_format","date_alt_format","supports_range","min_date","max_date","time_format","time_alt_format","min_time","max_time","supports_tokens","supports_custom_value","custom_value_description","supports_multiple_values","fill_values_in","hide_actions","add_row_button","remove_row_button","show_in","inline_css","filterTokens","filter_tokens","optionKey","recipeTriggers","missingAttributes","arrayDifference","isRecipeValid","hasLive","itemData","itemIsValid","optionsGroupID","optionsGroupData","groupIsValid","liveItems","oneAction","oneTrigger","matchFilters","proFeatures","every","propertyToCompare","compare","valueA","valueB","localeCompare","addDeprecatedItems","is_deprecated","dev","debugMode","collapseGroup","consoleLogResult","groupEnd","validEndpoints","method","restURL","doing_rest","dataType","beforeSend","xhr","setRequestHeader","nonce","requiresRecipesObject","renderUI","statusCode","jqXHR","textStatus","errorThrown","fail","ajaxurl","bgColor","optionsGroupId","optionsGroup","integrationItems","requires","validElements","cssSelector__metabox","cssSelector","$contentContainer","cssSelector__tokenInSentence","cssSelector__fieldsContainer","$tokenInSentence","$fieldsContainer","tokenInSentence","optionsContainer","last","icon_16","string","plain","normal","parts","tokensRegex","normals","mappedString","tokenNumber","stringParts","full_match","readableText","tokenParts","tokenPlaceholderText","tokenValueID","hasFields","originalText","normalNumber","sentenceSection","part","itemTokens","elementAttributes","contentIsNode","tagNodeContent","includeGroupName","abbreviatedText","abbreviateText","isAbbreviated","decodeEntities","dualScreenLeft","screenLeft","screenX","dualScreenTop","screenTop","screenY","innerWidth","documentElement","clientWidth","screen","clientHeight","systemZoom","availWidth","newWindow","wasWindowClosed","closed","variable","isObject","string1","string2","caseSensitive","needle","haystack","array1","array2","not","arguments_array","isString","start","end","labelStyle","groupCollapsed","tagsToReplace","replaceTag","partLengths","floor","textParts","random","substr","parameters","URL","urlParameters","parameter","parameterParts","pageTitle","history","pushState","searchParams","encodedString","$textarea","func","interval","lastCall","args","$tempTextarea","handleFatalError","debugging","fatalErrorHandler","debuggingURL","buttonGoBack","recipesUrl","recipeData","reportLog","logRecipe","recipeTitle","recipeTypeUser","recipeTypeAnonymous","recipeStatus","recipeStatusDraft","recipeStatusLive","logRecipeItems","recipeItemsTitle","cleanItemData","itemStatusLive","itemStatusDraft","hasClosures","triggersTitle","noTriggers","actionsTitle","noActions","closuresTitle","noClosures","noRecipeItemsFound","jsConsole","stack","siteURL","$modal","$debuggingConsole","createRange","selectNodeContents","getSelection","removeAllRanges","addRange","itemsWithMeta","exist","filteredItems","itemElement","optionsGroupElements","validateChildren","isFormValid","each","radioInput","selectedRadio","field_type","fieldTypes","messages","invalid","textarea","int","multipleTokens","float","multiple","checkbox","radio","time","invalidType","$formElement","tokensInString","$childrenFields","customValidation","int_regex","getTokensFromString","hasTokens","simulate_float","float_regex","simulate_email","email_regex","emails","allEmailsAreValid","hasMultipleEmails","hasMultipleVariables","validateURL","parseURL","simulatedURL","$error_container","regex","allTokens","includeGroupIcon","matchedToken","tokenGroup","replaceTokensInString","output","regexCondition","getExampleValueByFieldType","changed","newURL","regexURL","tokensInValue","simulate_url","checkURL","$this","input_attributes","validationNotice","validationNoticeHeader","validationNoticeURL","preURL","saveData","includeGroupTokens","tokensRegEx","getAllTokens","tokensList","commonTokens","getCommonTokens","advancedTokens","getAdvancedTokens","itemsTokens","getItemsTokens","common","siteName","cacheable","userID","userUsername","userFirstName","userLastName","userEmail","userDisplay","userResetPassLink","adminEmail","siteUrl","recipeName","currentDate","currentTime","advanced","autoLoginLink","getItemTokens","tokensGroup","rowIndex","rowNumber","tokenIdentifier","getTokenDataByID","cache","cloneNode","$tokenName","$tokenIcon","originalTokenID","locatedToken","currentToken","textWithTokens","hasTemplate","fullMatch","tokenHTML","TypeError","addData","h5s","stores","Map","Store","_config","_placeholder","_data","mergedConfig","enumerable","configurable","setConfig","getConfig","deleteData","delete","store","sortableElement","eventName","addAttribute","attribute","dragging","draggingHeight","draggingWidth","originContainer","originIndex","originElementIndex","originItemsBeforeUpdate","previousContainer","destinationItemsBeforeUpdate","parentElement","getClientRects","rect","getIndex","elementList","isInDom","insertNode","referenceNode","newElement","nextElementSibling","getElementHeight","getComputedStyle","getPropertyValue","sum","getElementWidth","getHandles","shadowRoot","defaultDragImage","draggedElement","elementOffset","posX","pageX","posY","pageY","listsConnected","origin","isSortable","acceptFrom","sel","defaultConfiguration","connectWith","disableIEFix","copy","placeholderClass","draggingClass","hoverClass","dropTargetContainerClass","throttleTime","maxItems","containerSerializer","customDragImage","orientation","enableHoverClass","hoverClasses_1","threshold","_this","lastEventTimestamp","_i","_b","removeItemEvents","removeContainerEvents","removeSortableData","removeItemData","findSortable","findDragElement","itemlist","ele","enableSortable","handles","parent","sortableElements","customItemSerializer","customContainerSerializer","serializedContainer","serializedItems","itemCount","serialize","configKey","hasOwnProperty","reloadSortable","customPlaceholder","listItems","tempContainer","tagName","makePlaceholder","stopImmediatePropagation","dragItem","Event","dataTransfer","setDragImage","dragImage","effectAllowed","draggedItem","ditem","oldDisplay","getDragging","CustomEvent","elementIndex","originalTarget","itemsBeforeUpdate","outTarget","fromElement","visiblePlaceholder","originItems","destinationContainer","destinationItems","destinationElementIndex","destinationIndex","timeout","debouncedDragOverEnter","thisHeight","thisWidth","placeholderIndex","thisIndex","deadZoneVertical","deadZoneHorizontal","offsetTop","offsetLeft","placeAfter","elementMiddleVertical","elementMiddleHorizontal","placeholders","onDragOverEnter","dropEffect","destroySortable","disableSortable","__testing","module","exports","re","not_string","not_bool","not_type","not_primitive","numeric_arg","json","not_json","modulo","key_access","index_access","sign","sprintf","sprintf_format","sprintf_parse","fmt","argv","parse_tree","arg","ph","pad_character","pad_length","is_positive","cursor","tree_length","param_no","Function","fromCharCode","precision","toExponential","toPrecision","valueOf","toUpperCase","pad_char","repeat","sprintf_cache","_fmt","arg_names","SyntaxError","field_list","replacement_field","field_match","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","definition","o","SendFeedback","version","utmSource","sendFeedbackContainer","sendFeedbackButton","sendFeedback","sendFeedbackButtonIcon","close_btn","dont_show_again_checkbox","overlay","mainContainer","localStorage","uapSendFeedbackWelcome","RecipeTitle","publishedTitle","createStatus","bindChanges","notSavedAlert","uapContainer","saving","savingIcon","savingText","saved","savedIcon","savedText","stop","typingTimeout","setStatusSaving","updateTitle","post_title","getTitle","setStatusSaved","revertChanges","Categories","allCategories","listenCheckboxes","saveCategory","MutationObserver","mutations","mutation","addedNodes","addedNode","observe","childList","checkboxData","getCheckboxData","setStatus","term_id","category_id","set_category","revertCheckboxValue","Tags","tagsTextarea","listenModificationsToTags","tagsList","saveTags","tags","getTags","tagsCommaSeparated","asArray","commaSeparated","Taxonomies","uiCantLoad"],"sourceRoot":""}